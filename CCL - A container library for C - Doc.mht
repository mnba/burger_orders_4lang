From: <Saved by UnMHT Ver.7.3.0.5>
Subject: {A container library for C}
Date: Tue, 29 Sep 2015 08:40:00 +0400
MIME-Version: 1.0
X-UnMHT-Save-State: Current-State
Content-Type: multipart/related;
	boundary="----=_Part_6A83C3BB_548A619B.15017666E41";
	type="text/html"

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/ccl.html
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset="windows-1252"

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w=
3.org/TR/REC-html40/loose.dtd">
<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3Dwindows-1252"><meta content=3D"TtHgold 4.05 (hacked by jacob navia)" nam=
e=3D"GENERATOR">
 <style type=3D"text/css"> div.p { margin-top: 7pt;}</style>
 <style type=3D"text/css"><!--
 td div.comp { margin-top: -0.6ex; margin-bottom: -1ex;}
 td div.comb { margin-top: -0.6ex; margin-bottom: -.6ex;}
 td div.hrcomp { line-height: 0.9; margin-top: -0.8ex; margin-bottom: -1ex;}
 td div.norm {line-height:normal;}
 span.roman {font-family: serif; font-style: normal; font-weight: normal;}=
=20
 span.overacc2 {position: relative;  left: .8em; top: -1.2ex;}
 span.overacc1 {position: relative;  left: .6em; top: -1.2ex;} --></style>

       =20
<title> {A container library for C}</title>
=20
<base href=3D"http://www.cs.virginia.edu/~lcc-win32/ccl/"></head><body><h1 =
align=3D"center"><i>A container library for C</i> </h1>

<h3 align=3D"center">Jacob Navia </h3>

<h3 align=3D"center"> </h3>=20




<div class=3D"p"><!----></div>
 <br clear=3D"LEFT"><br><br>
<img alt=3D"Figure" src=3D"Containers.png">

<div class=3D"p"><!----></div>
<br clear=3D"LEFT"><br><br>
<h1>Contents </h1>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.1">1.1&#xa0; Design goals</a><=
br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.1.1">1=
.1.1&#xa0; Error analysis</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.1.2">1=
.1.2&#xa0; Full feature set</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.1.3">1=
.1.3&#xa0; Abstraction</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.1.4">1=
.1.4&#xa0; Performance</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc1.2">1.2&#xa0; How the functions=
 are specified in this document.</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.1">2.1&#xa0; Containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.2">2.2&#xa0; The two types of =
interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.3">2.3&#xa0; The interface con=
cept</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.4">2.4&#xa0; Error handling</a=
><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.4.1">2=
.4.1&#xa0; Return code</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.5">2.5&#xa0; Naming convention=
s</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.5.1">2=
.5.1&#xa0; Container Names</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.5.2">2=
.5.2&#xa0; Interface object name</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6">2.6&#xa0; The different con=
tainers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.1">2=
.6.1&#xa0;  Single and double linked lists</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.2">2=
.6.2&#xa0; Flexible arrays (vector)</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.3">2=
.6.3&#xa0; ValArray: Arrays of numbers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.4">2=
.6.4&#xa0; String collection</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.5">2=
.6.5&#xa0; Bit-string</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.6">2=
.6.6&#xa0; Dictionary</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.7">2=
.6.7&#xa0; Hash Table</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.8">2=
.6.8&#xa0; AVL trees</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.9">2=
.6.9&#xa0; Scapegoat trees</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.10">=
2.6.10&#xa0; Bloom Filter</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.11">=
2.6.11&#xa0; Queue</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.12">=
2.6.12&#xa0; Deque</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.13">=
2.6.13&#xa0; Buffers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.14">=
2.6.14&#xa0; Priority Queues</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.6.15">=
2.6.15&#xa0; At a glance</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7">2.7&#xa0; Types used by the=
 library</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.1">2=
.7.1&#xa0; CompareInfo</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.2">2=
.7.2&#xa0; CompareFunction</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.3">2=
.7.3&#xa0; Save function</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.4">2=
.7.4&#xa0; Read function</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.5">2=
.7.5&#xa0; Error function</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc2.7.6">2=
.7.6&#xa0; Destructor function</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.1">3.1&#xa0; Creation of a con=
tainer: Create</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.2">3.2&#xa0; Destruction of a =
container: Clear and Finalize</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.2.1">3=
.2.1&#xa0; Other creation functions</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.3">3.3&#xa0; Adding an element=
 to a container: Add and AddRange</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.4">3.4&#xa0; Removing elements=
 from a container</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.4.1">3=
.4.1&#xa0; Using an element as key</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.4.2">3=
.4.2&#xa0; Removing at a given position</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.4.3">3=
.4.3&#xa0; Using a container as a stack</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.4.4">3=
.4.4&#xa0; Batch removing</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.5">3.5&#xa0; Retrieving elemen=
ts</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.6">3.6&#xa0; Using masks</a><b=
r>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.7">3.7&#xa0; Sorting a sequent=
ial container: Sort</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.8">3.8&#xa0; Copying a contain=
er: Copy</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.9">3.9&#xa0; Saving and loadin=
g a container to or from disk: Save and Load</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.10">3.10&#xa0; Inserting a con=
tainer into another</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.10.1">=
3.10.1&#xa0; Sequential containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.10.2">=
3.10.2&#xa0; Associative containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.11">3.11&#xa0; Replace an elem=
ent with another</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.11.1">=
3.11.1&#xa0; Sequential containers: ReplaceAt</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.11.2">=
3.11.2&#xa0; Associative containers: Replace</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.12">3.12&#xa0; Looping through=
 all elements of a container</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.12.1">=
3.12.1&#xa0; Using a simple loop to iterate a container</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.12.2">=
3.12.2&#xa0; Using the Apply function.</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.12.3">=
3.12.3&#xa0; Using iterators</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.13">3.13&#xa0; Setting and ret=
rieving the state: GetFlags and SetFlags</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.14">3.14&#xa0; Retrieving the =
number of elements stored: Size</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.15">3.15&#xa0; Sizes</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.15.1">=
3.15.1&#xa0; Sizeof</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.15.2">=
3.15.2&#xa0; SizeofIterator</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16">3.16&#xa0; Memory manageme=
nt</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16.1">=
3.16.1&#xa0; Memory manager objects</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16.2">=
3.16.2&#xa0; Pooled memory management</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16.3">=
3.16.3&#xa0; Heap of same size objects</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16.4">=
3.16.4&#xa0; Garbage collection</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.16.5">=
3.16.5&#xa0; Multi-threading</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc3.17">3.17&#xa0; At a glance</a>=
<br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.1">4.1&#xa0; Masks</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.1.1">4=
.1.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.1.2">4=
.1.2&#xa0; The API</a><br>












&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.2">4.2&#xa0; Memory management=
</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.2.1">4=
.2.1&#xa0; The default memory manager</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.2.2">4=
.2.2&#xa0; The Heap interface: iHeap</a><br>







&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.3">4.3&#xa0; Pooled memory int=
erface: iPool</a><br>





&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.4">4.4&#xa0; Error handling In=
terface: iError</a><br>





&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.5">4.5&#xa0; The iterator inte=
rface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.5.1">4=
.5.1&#xa0; The interface</a><br>







&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.6">4.6&#xa0; The observer inte=
rface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.6.1">4=
.6.1&#xa0; Caveats</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.6.2">4=
.6.2&#xa0; The interface</a><br>




&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc4.6.3">4=
.6.3&#xa0; Notifications messages</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.1">5.1&#xa0; The List interfac=
es: iList, iDlist</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.1.1">5=
.1.1&#xa0; General remarks</a><br>

























































&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.1.2">5=
.1.2&#xa0; Specializations of linked lists</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.2">5.2&#xa0; Double linked lis=
ts: iDlist</a><br>





&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.3">5.3&#xa0; The Vector interf=
ace: iVector</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.3.1">5=
.3.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.3.2">5=
.3.2&#xa0; The API</a><br>





















































&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.4">5.4&#xa0; The bit-string co=
ntainer: iBitString</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.4.1">5=
.4.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.4.2">5=
.4.2&#xa0; API</a><br>





















&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.5">5.5&#xa0; The string collec=
tion container: istrCollection, iWstrCollection</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.5.1">5=
.5.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.5.2">5=
.5.2&#xa0; API</a><br>















&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.6">5.6&#xa0; The dictionary co=
ntainer: iDictionary</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.6.1">5=
.6.1&#xa0; The dictionary interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.6.2">5=
.6.2&#xa0; The API</a><br>































&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.7">5.7&#xa0; The TreeMap inter=
face: iTreeMap</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.7.1">5=
.7.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.8">5.8&#xa0; Hash Table: iHash=
Table</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.8.1">5=
.8.1&#xa0; The interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.8.2">5=
.8.2&#xa0; The API</a><br>



















&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.9">5.9&#xa0; Queues: iQueue</a=
><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.9.1">5=
.9.1&#xa0; Interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.9.2">5=
.9.2&#xa0; The API</a><br>



&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.10">5.10&#xa0; Deque: iDeque</=
a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.10.1">=
5.10.1&#xa0; Interface</a><br>

















&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.11">5.11&#xa0; Priority queues=
</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.11.1">=
5.11.1&#xa0; Interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.11.2">=
5.11.2&#xa0; A complete example</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.11.3">=
5.11.3&#xa0; The API</a><br>












&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.12">5.12&#xa0; Bloom filters</=
a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.12.1">=
5.12.1&#xa0; The interface: iBloomFilter</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.12.2">=
5.12.2&#xa0; The API</a><br>






&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.13">5.13&#xa0; Value arrays</a=
><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.13.1">=
5.13.1&#xa0; Operations</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.13.2">=
5.13.2&#xa0; Slices and masks</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.13.3">=
5.13.3&#xa0; The interface</a><br>







































































&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.14">5.14&#xa0; Buffers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.14.1">=
5.14.1&#xa0; Stream buffers</a><br>
















&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.14.2">=
5.14.2&#xa0; Circular buffers</a><br>











&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.15">5.15&#xa0; The generic int=
erfaces</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.15.1">=
5.15.1&#xa0; Generic containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.15.2">=
5.15.2&#xa0; Sequential containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc5.15.3">=
5.15.3&#xa0; Associative containers</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc6.1">6.1&#xa0; Adding conversion=
s between containers</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc6.2">6.2&#xa0; Infinite arrays</=
a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc6.2.1">6=
.2.1&#xa0; Zero extensible arrays</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc6.2.2">6=
.2.2&#xa0; Arrays extensible by insert</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc6.2.3">6=
.2.3&#xa0; Pitfalls</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc7.1">7.1&#xa0; Unique</a><br>





&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc7.2">7.2&#xa0; Paste</a><br>



&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc7.3">7.3&#xa0; Mapcar</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.1">8.1&#xa0; The different sou=
rce files</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.1.1">8=
.1.1&#xa0; Building the software</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.2">8.2&#xa0; Partitioning</a><=
br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3">8.3&#xa0; Data structures</=
a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.1">8=
.3.1&#xa0; The generic part</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.2">8=
.3.2&#xa0; Lists</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.3">8=
.3.3&#xa0; Source files</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.4">8=
.3.4&#xa0; Double linked lists</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.5">8=
.3.5&#xa0; Vector</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.6">8=
.3.6&#xa0; Dictionary</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.7">8=
.3.7&#xa0; String collection</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.8">8=
.3.8&#xa0; Masks</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.9">8=
.3.9&#xa0; Bit strings</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.10">=
8.3.10&#xa0; The iterator implementation</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.3.11">=
8.3.11&#xa0; The timestamp field</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4">8.4&#xa0; The code</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.1">8=
.4.1&#xa0; List</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.2">8=
.4.2&#xa0; Queues</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.3">8=
.4.3&#xa0; The dictionary</a><br>




&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.4">8=
.4.4&#xa0; The bloom filter</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.5">8=
.4.5&#xa0; Debugging malloc</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.6">8=
.4.6&#xa0; The observer interface</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc8.4.7">8=
.4.7&#xa0; ValArrays</a><br>

&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc9.1">9.1&#xa0; Pre processing a =
generic file</a><br>
&#xa0;&#xa0;&#xa0;&#xa0;<a href=3D"#tth_sEc9.2">9.2&#xa0; Using the pre-pro=
cessor</a><br>




<a href=3D"#tth_sEcindex">Index</a><br>*=20

 <h1><a name=3D"tth_chAp1">
Chapter 1 </a><br>Introduction</h1>
The objective of this proposal is to standardize the usage of common data s=
tructures within the context of the C language. The existence of a common s=
tandard interface for lists, hash tables, flexible arrays, and other contai=
ners has several advantages:

<ul>
<li>User code remains portable across different projects. In C, we all use =
the FILE abstraction, for instance. This abstraction allows software to be=
=20
compatible across a large spectrum of machines and operating systems. Imagi=
ne what would happen if each project had to develop a file stream
abstraction again and again. This is the case when using lists, for instanc=
e. Today, we have in all significant projects written in C a list
module, and probably other ones like hash tables, etc.
<div class=3D"p"><!----></div>
</li>

<li> Avoid duplication of effort. Most of the list or hash tables modules c=
an&#x27;t be debugged completely and are the source of never ending problem=
s.
<div class=3D"p"><!----></div>
</li>

<li> Lack of standards makes the merging of two projects very difficult sin=
ce in most cases the interfaces and data structures are slightly
different. This leads to a complete rewrite of one of the modules, or to =
=E4dapter&quot; software that will translate from one list implementation
to the other, adding yet another layer of complexity to the merged project.
<div class=3D"p"><!----></div>
</li>

<li> The language becomes more expressive since it becomes possible to reas=
on within a high level environment. The lack of operations for
handling advanced data structures conditions programmers to use low level s=
olutions like making an array with a fixed maximum size instead of a
list even if the programmer would agree that a list would be a more adequat=
e solution to the problem. Confronted to the alternative of
developing yet another list module or opting for a low level solution many =
time constrained programmers will opt for the second solution.
<div class=3D"p"><!----></div>
</li>

<li>
The portable specifications provide a common framework for library writers =
and compiler/system designers to build compatible yet strongly specialized =
implementations.
<div class=3D"p"><!----></div>
</li>

<li>
The language becomes easier to analyze mathematically.
In their very interesting paper &quot;Precise reasoning for programs using =
containers&quot;, Dillig, Dillig and Aiken
<a href=3D"#tthFtNtAAB" name=3D"tthFrefAAB"><sup>1</sup></a> enumerate thre=
e main points that make program analysis easier using containers:

<ol type=3D"1">
<li> Understanding the contents of a container doesn&#x27;t require underst=
anding the container&#x27;s implementation
<div class=3D"p"><!----></div>
</li>

<li> Verifying container implementations requires different techniques and =
degrees of automation than verifying their clients. Hence, separating
these two tasks allows us to choose the verification techniques best suited=
 for each purpose.
<div class=3D"p"><!----></div>
</li>

<li> There are orders of magnitude more clients of a container than there a=
re container implementations. This fact makes it possible to annotate
a handful of library interfaces in order to analyze many programs using the=
se containers.
<div class=3D"p"><!----></div>
</li>
</ol>
<div class=3D"p"><!----></div>
</li>

<li> It is possible to abstract from the nature of any container (using the=
 <font size=3D"+1"><tt>iterator</tt></font> construct) what allows a series=
 of algorithms to
be written without having to bind them to a precise data structure. Contain=
ers present a uniform interface to the rest of the program.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"AbstractIterator.png">

<div class=3D"p"><!----></div>
The big innovation of C in the eighties was its standard library, that made=
 input/output portable across machines and implementations. The container l=
ibrary would replicate again that idea, at a higher level.

<div class=3D"p"><!----></div>
The specifications presented here are completely scoped by the C99 specific=
ations, and can be implemented even in compilers that do not implement C99 =
and remained within the C94 context. No language extensions are needed nor =
any are proposed.

<div class=3D"p"><!----></div>
The interfaces proposed try to present complete packages, i.e. interfaces w=
ith all the necessary functions to allow the widest usage: Serialization, s=
earching, and many other functionalities are included in the proposed stand=
ard to allow for maximum code portability. It can be argued that this makes=
  for &quot;fat&quot; containers, but if you read carefully you will notice=
 that many things can be left out in systems that run in low memory or with=
 feeble computing power.

<div class=3D"p"><!----></div>
This documentation is composed of several parts:

<ol type=3D"1">
<li> An introductory part where the general lines of the library are explai=
ned.
<div class=3D"p"><!----></div>
</li>

<li> A specifications part where each function of the library is fully spec=
ified. This is the proposal for the next C standard.
<div class=3D"p"><!----></div>
</li>

<li> An =EBxamples&quot; part that shows the uses of the library and allows=
 you to have a better idea of how the usage of the library looks like.
<div class=3D"p"><!----></div>
</li>

<li> An implementation part where the code of the sample implementation is =
discussed. This is designed as a guide for implementors to give them a basi=
s to start with.
<div class=3D"p"><!----></div>
</li>
</ol>

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Design goals</h2>

     <h3><a name=3D"tth_sEc1.1">
1.1</a>&#xa0;&#xa0;Error analysis</h3>
It has been a  tradition in C to place raw performance as the most importan=
t quality of specifications. To follow this sacred cow, C specifications
ignored any error analysis arguing that any specification of failure modes =
would damage &quot;performance&quot;. No matter that raw machine performance
increased by several orders of magnitude, the cost of  a check for NULL was=
 always &quot;too expensive&quot; to afford.

<div class=3D"p"><!----></div>
This kind of mental framework was described by one of the people in the dis=
cussion group &quot;comp.lang.c++&quot; as follows:<a href=3D"#tthFtNtAAC" =
name=3D"tthFrefAAC"><sup>2</sup></a>

<blockquote>
 In C++, the program is responsible for ensuring that <b>all</b> parameters=
 to
 the standard library functions are valid, not only the third parameter of
 <font size=3D"+1"><tt>std::mismatch()</tt></font>. For example, also the f=
irst range for <font size=3D"+1"><tt>std:mismatch()</tt></font>
 must be valid, one may not pass a start iterator from one container and
 end iterator from another, for example. However, STL does not guarantee
 any protection against such errors, this is just UB.
</blockquote>
These specifications try to break away from that frame of thought. Each fun=
ction specifies a minimal subset of failure modes as a consequence of its=20
error analysis. This allows user code to:

<ul>
<li> Detect and handle errors better. Error detection is simple: All functi=
ons return a negative
error code when they detect an error condition. Error detection can always =
test for the result
of any API with:

<font size=3D"+1"><pre>if&#xa0;(SomeCclApi(arg1,arg2)&#xa0;&lt;&#xa0;0)&#xa=
0;{
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;error&#xa0;handling&#xa0;here
}

</pre></font>
<div class=3D"p"><!----></div>
</li>

<li> Ensure that errors will always have the <b>same</b> consequences. One =
of the worst consequences of undefined behavior is that the same error can=
=20
have completely different consequences depending on apparently random facto=
rs like previous contents of memory or previous allocation pattern.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
At the same time, the mandatory error checking consists mainly of checks th=
at can be implemented with a few integer comparisons. For instance a check=
=20
for zero is a single instruction in most processors. If implemented correct=
ly the conditional jump after the comparison with zero is not taken in the=
=20
normal case and correctly predicted by the processor. This means that the p=
ipeline is not disturbed and the cost for the whole operation is much less =
than a cycle.

<div class=3D"p"><!----></div>
Why is error analysis an essential part of any program specifications?

<div class=3D"p"><!----></div>
Because <b>mistakes are a fact of life</b>. Good programmers are good most =
of the time only. Even very good programmers <i>do make mistakes<a href=3D"=
#tthFtNtAAD" name=3D"tthFrefAAD"><sup>3</sup></a>.</i> Software
must be prepared to cope with this fact in an orderly fashion because if fa=
ilure modes are not specified they have catastrophic consequences and lead
to brittle software that crashes randomly.

<div class=3D"p"><!----></div>
Note that error <i>analysis</i> is not error <i>handling</i>. Error handlin=
g is taking an action after an error, a task only the application can do.
What the library can do is to establish a framework where a user defined pr=
ocedure receives enough information about the specific problem at hand.

<div class=3D"p"><!----></div>
Error analysis means that for each function and each API:

<ul>
<li> An analysis is performed of what are the consequences of any error in =
its inputs. Error codes are used to pass detailed error information
to the error procedure.
<div class=3D"p"><!----></div>
</li>

<li> During its execution, an analysis is done of each step that can fail.
<div class=3D"p"><!----></div>
</li>

<li> The outputs of the function are left in a consistent state, errors pro=
voking the undo of the previous steps in most cases, leaving the inputs
as they were before the function was called. This feature allows library fu=
nctions to be restartable after an error. For instance an out of memory
condition can be corrected by freeing memory and retrying.
<div class=3D"p"><!----></div>
</li>
</ul>
The library provides hooks for the users that can control each step and pro=
vide functions that can do the error handling, for instance logging the
error and jumping to a pre-established recovery point.

     <h3><a name=3D"tth_sEc1.2">
1.2</a>&#xa0;&#xa0;Full feature set</h3>
Another design goal is to offer to the user a full feature set, complete wi=
th serializing, iterators, search, read-only containers and all the feature=
s=20
needed in most
situations. Other features are planned for later like multi-threading suppo=
rt. The objective here is to avoid incompatible and non portable extensions
because some essential feature is missing.

     <h3><a name=3D"tth_sEc1.3">
1.3</a>&#xa0;&#xa0;Abstraction</h3>
The library is designed with the possibility of implementing abstraction li=
ke serial and associative containers that allow software to treat several=20
containers in a way that abstract most of their features, improving code re=
use by allowing to implement algorithms for a class of objects. This is
specially true in the iterators feature.

<div class=3D"p"><!----></div>
It can be argued that the C language lacks many of the abstractions constru=
cts of other languages like templates, inheritance, and many others.
All that is true, but the objective of this proposal is to show that those =
constructs are just an aid to developing abstractions, an aid that
is paid in added complexity for the resulting language, and in a limitation=
 of what is feasible within a given framework. Since C has no=20
framework, no preferred inheritance model, it is possible to create abstrac=
tions that are quite unconstrained: there is no framework precisely.

     <h3><a name=3D"tth_sEc1.4">
1.4</a>&#xa0;&#xa0;Performance</h3> Even with all the tests, the performanc=
e of the library has been maintained at a high level compared to similar li=
braries
in other languages. The performance should improve if standardized because =
compiler writers could specialize their optimizations targeting this
code.

 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;How the functions are specified in this document.</h2>
The specifications part of the proposal uses the same building blocks for e=
ach of the functions proposed.
<div class=3D"p"><!----></div>
<b>Name</b>

<div class=3D"p"><!----></div>
 The name of the function. Note that when using this name, the container in=
terface should be always before:=20
iList.Add, iDictionary.Add, etc.

<div class=3D"p"><!----></div>
 The name is followed by the prototype defined as a function pointer. For t=
he function <font size=3D"+1"><tt>Add</tt></font> of the container <font si=
ze=3D"+1"><tt>List</tt></font> we have

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(List&#xa0;*l=
ist,const&#xa0;void&#xa0;*data);

</pre></font>=20
This means that <font size=3D"+1"><tt>Add</tt></font> is a function pointer=
 in the interface iList. It would be used as:
<font size=3D"+1"><tt>iList.Add(list,data)</tt></font>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
The minimal set of errors that can appear during the execution of the funct=
ion is listed. Each implementation is free to add implementation specific e=
rrors to this list. Note that how the library behaves after an error is def=
ined by the current error function in the container (if any), then by the b=
ehavior of the error function in the iError interface. This can be changed =
by the user by using the iError interface.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The return value of the operation. Normally, negative values are error code=
s, positive values means success, and zero means non fatal errors, more in =
the sense of a warning.

<div class=3D"p"><!----></div>
 <h1><a name=3D"tth_chAp2">
Chapter 2 </a><br>Overview</h1>

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Containers</h2>
In the context of this library, a container is a data structure used to org=
anize data within a single logical object that allows for adding, searching=
=20
and removing data. In most containers the data is not further specified, bu=
t the library assumes that all elements of a container have the same type.=
=20
The data can be anything, images, numbers, text, whatever. The only thing t=
hat the container knows is the size of the data, if we store a series of=20
objects of the same size, or its address, if we store objects of different =
sizes. In the later case we store just a pointer in the=20
container<a href=3D"#tthFtNtAAE" name=3D"tthFrefAAE"><sup>4</sup></a>.

<div class=3D"p"><!----></div>
A special kind of containers, ValArrays, contain the basic types of the C l=
anguage and the library treats them specially. There is one ValArray
for each elementary type. For character strings they are stored in =DFtring=
 collections&quot;, a term borrowed from the C# language.

<div class=3D"p"><!----></div>
Each container has a way of iterating through all its elements by using an =
=EFterator&quot; auxiliary object, that returns each stored object in seque=
nce. In=20
sequential containers you can also iterate using an index variable, what ca=
n be cheaper than using iterators for arrays but very expensive in lists.

<div class=3D"p"><!----></div>
All objects stored by the library are copied into the library, and the libr=
ary is responsible for the management of the associated storage. If you do =
not want this, just store a pointer to the data and manage the data yoursel=
f.

<div class=3D"p"><!----></div>
A container has a set of functions for accessing the elements it stores, ca=
lled its <i>interface</i>. This object is a collection of function
pointers that provide the functionality of the container.  The interfaces a=
re stored in writable memory and the user can, at run time, change the
behavior of a class of containers by changing the function pointer. This op=
eration is called =DFubclassing&quot; in this document.

<div class=3D"p"><!----></div>
Subclassing allows the user to modify the behavior of a container, maybe ad=
ding some functionality, without having to write all the container from
scratch. The user of the library can:

<ul>
<li> Use the stored pointer to the original function to call the original f=
unctionality, and add some functionality after that call.
<div class=3D"p"><!----></div>
</li>

<li> Add some functionality and call the stored pointer afterwards.
<div class=3D"p"><!----></div>
</li>

<li> Replace completely the functionality by its own without calling any of=
 the former functions.
<div class=3D"p"><!----></div>
</li>
</ul>
Subclassing adds enormous flexibility to this design, since it makes possib=
le to add functionality in a transparent way.

<div class=3D"p"><!----></div>
Using the organization of the data as a classification criteria we have bas=
ically two different kinds of containers

<ul>
<li>1. Sequential containers
<div class=3D"p"><!----></div>
</li>

<li>
2. Associative containers
<div class=3D"p"><!----></div>
</li>

<li>
3. Statistical Containers
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
A sequential container is organized in a linear order. We have a sequence s=
tarting at index zero up to the number of elements stored. Data items can b=
e=20
retrieved by index, and it makes sense to speak of a &quot;next&quot; and a=
 &quot;previous&quot; element.

<div class=3D"p"><!----></div>
Sequential containers can be contiguous (arrays) or disjoint (lists). In th=
e first case access is very fast since it implies multiplying the index by=
=20
the size of each element to get to any position in the data. In the second =
case access the nth element can be a lengthy operation since the chain of=20
&quot;next&quot; or &quot;previous&quot; pointers must be followed for each=
 access to a given position.

<div class=3D"p"><!----></div>
An associative container stores an object divided in two parts: a key, that=
 is used as a token for the data, and the data itself. It associates=20
key/value pairs. Speed of access is fast, but not linear, and can degrade a=
s new items are stored in it.

<div class=3D"p"><!----></div>
Statistical containers are containers that return the probability of an ite=
m being found in them. See the bloom filter as an example.

<div class=3D"p"><!----></div>
In all cases, we have some basic properties of an abstract container that a=
re common to all of them.=20

<ul>
<li> Functions to implement the life-cycle of the object: creation, mainten=
ance and destruction.
<div class=3D"p"><!----></div>
</li>

<li> Functions to add, replace and remove elements from the container.
<div class=3D"p"><!----></div>
</li>

<li> A function that returns the number of objects stored in the container.
<div class=3D"p"><!----></div>
</li>

<li>
A function to report errors. This function (like all other function pointer=
s) can be changed by the user of the library. In the sample implementation=
=20
it defaults to a simple function that prints the error in the standard erro=
r stream.
<div class=3D"p"><!----></div>
</li>

<li>
Each change in a container is recorded. This permits to validate pointers t=
o a container: if the container has changed after the creation of the point=
er, the pointer could be invalid.
<div class=3D"p"><!----></div>
</li>

<li>
All containers use a standard object to allocate and manage memory. The lib=
rary provides a default allocator that contains the standard C functions ma=
lloc, free, realloc and calloc. Each container class can contain an allocat=
or pointer, or each container can contain an allocator. The provided
sample implementation has a per container allocator, but in many applicatio=
ns a per class allocator could be enough, or even a single global allocator
that would be used by the whole library.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
Managing a sequence involves trade offs what performance is concerned. If t=
he usage will involve frequent insertion and deletion of objects you will=20
prefer a container that handles those operations in constant time: the time=
 to add or delete an object doesn&#x27;t increase with the number of elemen=
ts in=20
the container. Such a container will be unlikely to provide also access to =
a given element in constant time. Access is likely to be much slower, and=20
what you gain in flexibility you loose in another dimension. It is the user=
 of the library, the programmer, that decides what container fits best the=
=20
intended usage.

<div class=3D"p"><!----></div>
Since usage patterns change, however, the library tries to ensure that you =
can change the container you are using with minimal effort. If at the=20
beginning of an application a list looked like a good solution but later an=
 array, that provides constant time access is better suited, you can change=
=20
the type of container without changing every line that uses it. The common =
vocabulary of the library makes this possible.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;The two types of interface</h2>
The library proposes two types of access:

<ul>
<li> A generic approach using <font size=3D"+1"><tt>void&#xa0;*</tt></font>=
. This interface allows you to pass a pointer to the data and specify at cr=
eation time the size of the=20
object you want to store in the container. There is no checking at compile-=
time of the validity of the pointer and the associated data. There is no=20
checking at run time either since the software has no information to check =
something.
<div class=3D"p"><!----></div>
</li>

<li> A templated generic approach where at compile time a <i>templated</i> =
file is specialized for a concrete type by writing a parameter file
where some macros are defined that are used by the templated file as argume=
nts. The user of the library is required to write that file, compile
it, and adding the resulting object files to a user-specific library (or to=
 the general containers library if he/she wishes) so that the linker finds=
=20
them when needed.
<div class=3D"p"><!----></div>
</li>
</ul>
The functions to call, their names, etc, are the same in both approaches wi=
th one important exception: the templated approach needs an object instead=
=20
of a <font size=3D"+1"><tt>void&#xa0;*</tt></font> to the data as parameter=
, and returns an object instead of a void pointer to the data.

<div class=3D"p"><!----></div>
For instance, when writing for the generic interface you use:

<font size=3D"+1"><pre>double&#xa0;MyDouble;
List&#xa0;*myList;
myList&#xa0;=3D&#xa0;iList.Create(sizeof(double));
//&#xa0;...
iList.Add(myList,&amp;myDouble);

</pre></font>

<div class=3D"p"><!----></div>
For the templated interface you use:

<font size=3D"+1"><pre>double&#xa0;MyDouble;
doubleList&#xa0;*myList;
myList&#xa0;=3D&#xa0;idoubleList.Create();
//&#xa0;...
idoubleList.Add(myList,myDouble);

</pre></font>

<div class=3D"p"><!----></div>
Naming rules allow the user of the templated library to easily add
the required names to its program and use them. The naming rules are explai=
ned further down.

<div class=3D"p"><!----></div>
The drawback of the second approach is a bigger complexity of the compilati=
on process. When using a template container the user must:

<ul>
<li> Give the parameters that the templated file needs. In most cases the m=
inimum requirements are that the data type is specified:

<font size=3D"+1"><pre>#undef&#xa0;DATA_TYPE
#define&#xa0;DATA_TYPE&#xa0;Customer
#include&#xa0;&quot;listgen.h&quot;

</pre></font>

<div class=3D"p"><!----></div>
This will produce the definitions of the following types:

<ul>
<li> The <font size=3D"+1"><tt>CustomerList</tt></font> container and its <=
font size=3D"+1"><tt>iCustomerList</tt></font> interface.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>iCustomerListIterator</tt></font>: an iterat=
or type ready to be used with any <font size=3D"+1"><tt>CustomerList</tt></=
font> containers.
<div class=3D"p"><!----></div>
</li>
</ul>
<div class=3D"p"><!----></div>
</li>

<li> Include the type specific header. For instance <font size=3D"+1"><tt>#=
include&#xa0;&quot;Customerlist.h&quot;</tt></font>. All client code that u=
ses the derived container must
include that header.
<div class=3D"p"><!----></div>
</li>

<li> Compile the instantiation of the template:

<font size=3D"+1"><pre>#undef&#xa0;DATA_TYPE
#define&#xa0;DATA_TYPE&#xa0;Customer
#include&#xa0;&quot;listgen.c&quot;

</pre></font>

<div class=3D"p"><!----></div>
The resulting object file must be present at link time, either stand alone =
or within a library.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;The interface concept</h2>
Each container is defined by its interface, i.e. the table of functions it =
supports. For each interface, its name is composed of a lower case =EF&quot=
; followed by the container name: <font size=3D"+1"><tt>iList</tt></font>, =
<font size=3D"+1"><tt>iVector</tt></font>, <font size=3D"+1"><tt>istrCollec=
tion</tt></font>, etc.

<div class=3D"p"><!----></div>
Each function of the interface receives always the container as its first a=
rgument. Obviously, the big exception is the creation function, that receiv=
es various arguments depending of which container or from what input, the c=
ontainer is to be created.

<div class=3D"p"><!----></div>
For each container interface a global object exists that allows direct acce=
ss to the function table without the need of creating a container to access=
 it.

<div class=3D"p"><!----></div>
This interface allows for simple access to each container using a very simi=
lar vocabulary:

<font size=3D"+1"><pre>iList.Add(list,object);
istrCollection.Add(strcol,object);

</pre></font>
The objects stored in a container have always the same size. When storing o=
bjects of different sizes just store a pointer to the objects, since pointe=
rs have always the same size.

 <h2><a name=3D"tth_sEc4">
4</a>&#xa0;&#xa0;Error handling</h2>
This specification describes the basic error handling that each function of=
 the library must do. Other errors can appear in different implementations.

<div class=3D"p"><!----></div>
Error handling has three different phases:

<ol type=3D"1">
<li> <b>Detection</b>. All library functions detect blatantly wrong argumen=
ts, for instance a &#xa0;NULL pointer when an object is expected, or argume=
nts out of their valid range, etc.
<div class=3D"p"><!----></div>
</li>

<li> <b>Reporting.</b> When an error is detected the library calls the corr=
esponding error function that receives a character string with the name of =
the=20
function where the error was detected, and an integer error code. Error cod=
es are always negative constants.
<div class=3D"p"><!----></div>
</li>

<li> <b>Response.</b> The library&#x27;s default response to an error is to=
 print it in the standard error stream. This can be modified by the user at=
 any time by calling the <font size=3D"+1"><tt>SetErrorFunction</tt></font>=
 API, replacing the default behavior with its own.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
At each error, the library should call the container instance specific erro=
r handling when there is one, or call the general error handling function i=
n the iError interface. When it is not possible to call the instance specif=
ic error function, for instance when the instance parameter is &#xa0;NULL ,=
 the library calls the general error handling function in the iError interf=
ace<a href=3D"#tthFtNtAAF" name=3D"tthFrefAAF"><sup>5</sup></a>.

<div class=3D"p"><!----></div>
The user of the library can either replace the default iError interface wit=
h a function that handles the error with a jump to a previously set recover=
y point, or treat the error locally using the return code.=20

     <h3><a name=3D"tth_sEc4.1">
4.1</a>&#xa0;&#xa0;Return code</h3>
All errors are negative constants, it suffices to test if the result is les=
s than zero. In general we have:

<center>
<img alt=3D"Figure" src=3D"Returncodes.png">
</center>
In the positive return code some implementations may encode additional info=
rmation. The sample implementation returns always 1
<a href=3D"#tthFtNtAAG" name=3D"tthFrefAAG"><sup>6</sup></a>. The zero retu=
rn value means that nothing was done: it isn&#x27;t an error but the contai=
ner was empty for instance, or nothing was written to a=20
file, etc.=20

<div class=3D"p"><!----></div>
<a name=3D"errorcodes">
</a> The error codes defined by this specification are:
<a name=3D"error-codes41"></a>

<ul>
<li>
CONTAINER_ERROR_BADARG

 One of the parameters passed to a function is invalid. This is the same as=
 the <font size=3D"-2">EDOM</font> error code used by the function errno. I=
f an implementation uses the <font size=3D"+1"><tt>errno</tt></font> mechan=
ism it can set at each occurrence of this error also <font size=3D"+1"><tt>=
errno</tt></font> to <font size=3D"-2">EDOM</font>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation<a href=3D"#tthFtNtAAH=
" name=3D"tthFrefAAH"><sup>7</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The index is out of bounds. If an implementation uses the <font size=3D"+1=
"><tt>errno</tt></font> mechanism it can set <font size=3D"+1"><tt>errno</t=
t></font> to <font size=3D"-2">ERANGE</font>.
The library passes extra parameters when this error is invoked: the <font s=
ize=3D"+1"><tt>container</tt></font> pointer, and a <font size=3D"+1"><tt>s=
ize_t</tt></font> containing the
the out of bounds index.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The object is read-only and the operation would modify it <a href=3D"#tthF=
tNtAAI" name=3D"tthFrefAAI"><sup>8</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INTERNAL

 Unspecified error provoked by a problem in the implementation.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 A change in the underlying object has invalidated an iterator. If an imple=
mentation uses <font size=3D"+1"><tt>errno</tt></font> it can set=20
<font size=3D"+1"><tt>errno</tt></font> to <font size=3D"-2">EILSEQ</font><=
a href=3D"#tthFtNtAAJ" name=3D"tthFrefAAJ"><sup>9</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_FILE_READ

 Input error in a stream<a href=3D"#tthFtNtABA" name=3D"tthFrefABA"><sup>10=
</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_FILE_WRITE

 Output error in a stream.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_CONTAINER_FULL

 Implementations can limit the maximum number of elements a container can h=
old. This error indicates that the limit is reached.
<a href=3D"#tthFtNtABB" name=3D"tthFrefABB"><sup>11</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADPOINTER

 The debug implementation of <font size=3D"+1"><tt>free()</tt></font> has d=
iscovered an incorrect pointer attempting to be freed<a href=3D"#tthFtNtABC=
" name=3D"tthFrefABC"><sup>12</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BUFFEROVERFLOW

 The debug implementation of <font size=3D"+1"><tt>free()</tt></font> disco=
vered a buffer overflow.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_WRONGFILE

 You are trying to read a container from a stream that has no such containe=
r saved
<a href=3D"#tthFtNtABD" name=3D"tthFrefABD"><sup>13</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>=20

<div class=3D"p"><!----></div>
CONTAINER_ERROR_DIVISION_BY_ZERO

 The library has detected an attempt to divide by zero<a href=3D"#tthFtNtAB=
E" name=3D"tthFrefABE"><sup>14</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OVERFLOW

 An overflow was detected in an arithmetic operation. Implementations are e=
ncouraged to detect overflow in all operations that
can generate one and report it through this error.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADMASK

 The mask given to a <font size=3D"+1"><tt>Select</tt></font> or <font size=
=3D"+1"><tt>SelectCopy</tt></font> operation is of a different length than =
the length of the associated
container. The library passes two pointers to the error function: The first=
 to the container and the second to the mask.
<div class=3D"p"><!----></div>
</li>

<li>

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOENT

 The library wants to open a file that doesn&#x27;t exist or is not readabl=
e. A pointer to the name of the file is passed to the error function
<a href=3D"#tthFtNtABF" name=3D"tthFrefABF"><sup>15</sup></a>.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
Other errors can be defined by each implementation.

<div class=3D"p"><!----></div>
The treatment of each error is done in the object defined by the <font size=
=3D"+1"><tt>iError</tt></font> interface.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc5">
5</a>&#xa0;&#xa0;Naming conventions</h2>

     <h3><a name=3D"tth_sEc5.1">
5.1</a>&#xa0;&#xa0;Container Names</h3>
The basic container names are:

<center>

<table border=3D"1"><tbody><tr><td></td></tr>
<tr><td align=3D"center">AssociativeContainer</td><td align=3D"center">BitS=
tring</td><td align=3D"center">BloomFilter</td></tr>
<tr><td align=3D"center">CircularBuffer</td><td align=3D"center">Dictionary=
</td><td align=3D"center">Dlist</td></tr>
<tr><td align=3D"center">Deque</td><td align=3D"center">HashTable</td><td a=
lign=3D"center">List</td></tr>
<tr><td align=3D"center">Mask</td><td align=3D"center">PQueue</td><td align=
=3D"center">Queue</td></tr>
<tr><td align=3D"center">SequentialContainer</td><td align=3D"center">strCo=
llection</td><td align=3D"center">StreamBuffer</td></tr>
<tr><td align=3D"center">TreeMap</td><td align=3D"center">Vector</td><td al=
ign=3D"center">WstrCollection</td></tr><tr><td></td></tr></tbody></table>

</center>

     <h3><a name=3D"tth_sEc5.2">
5.2</a>&#xa0;&#xa0;Interface object name</h3>
All APIs of the library begin with the composite name formed by the letter =
<font size=3D"+1"><tt>i</tt></font>, followed by the element type name in t=
he templated versions,
then the container name. This builds the interface name, i.e. the name of t=
he function table object. This object is indexed by the name of the specifi=
c API being called.=20

<div class=3D"p"><!----></div>
For calling the <font size=3D"+1"><tt>Add</tt></font> API of the <font size=
=3D"+1"><tt>List</tt></font> container you would write:=20
<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>iList.Add</tt></font>. This uses the generic implemen=
tation with <font size=3D"+1"><tt>void&#xa0;*</tt></font>.

<div class=3D"p"><!----></div>
For calling the <font size=3D"+1"><tt>Add</tt></font> API of the <font size=
=3D"+1"><tt>Vector</tt></font> container built from <font size=3D"+1"><tt>d=
ouble</tt></font> objects you would write:

<div class=3D"p"><!----></div>
 <font size=3D"+1"><tt>idoubleVector.Add</tt></font>. This uses the templat=
e implementation with a specific type, in this case the <font size=3D"+1"><=
tt>double</tt></font> type.

<div class=3D"p"><!----></div>
The interface object <font size=3D"+1"><tt>idoubleVector</tt></font> has on=
e field for each API it supports. The same for the interface object <font s=
ize=3D"+1"><tt>iVector</tt></font> that is
a generic interface objects (uses and returns <font size=3D"+1"><tt>void&#x=
a0;*</tt></font> instead of specific types).=20

<div class=3D"p"><!----></div>
Other containers like the list container would have the equivalent API name=
d as:=20

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>idoubleList.Add</tt></font>, or <font size=3D"+1"><tt=
>iList.Add</tt></font>.

<div class=3D"p"><!----></div>
The following drawing tries to make this clear:

<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"NamingConventions.png">

<div class=3D"p"><!----></div>
The different containers built from a basic container (say <font size=3D"+1=
"><tt>List</tt></font>) are named by concatenating the name of the type and=
 the name of the container:
<font size=3D"+1"><tt>intList</tt></font>, <font size=3D"+1"><tt>doubleList=
</tt></font> etc.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc6">
6</a>&#xa0;&#xa0;The different containers</h2>
All data structures in this section are known and used for several decades.=
 Lists are a common feature of any data processing task since the sixties f=
or instance.=20
The library provides for abstract containers, and some examples of concrete=
 ones for the elementary types.
We have:

<ul>
<li>Vectors. The general abstract vector container is implemented in the &q=
uot;Vector&quot; container. This is a flexible array that allows for insert=
ion/deletions,=20
with no cost for insertion at the end in most cases. Concrete implementatio=
ns for the elementary types are provided for bits (bit-strings), strings=20
(null terminated), int/double/long double numeric data in the form of templ=
ates.
<div class=3D"p"><!----></div>
</li>

<li>
Lists. Single linked lists (List) and double linked lists (Dlist) are provi=
ded. Lists of strings and wide character strings are specified too.
<div class=3D"p"><!----></div>
</li>

<li>
Queue, Deque, Priority Queue
<div class=3D"p"><!----></div>
</li>

<li>
Trees (red/black trees, AVL trees)
<div class=3D"p"><!----></div>
</li>

<li>
Dictionary. This is a simple implementation of a hash table with character =
keys. It comes in two flavours<a href=3D"#tthFtNtABG" name=3D"tthFrefABG"><=
sup>16</sup></a>
:=20

<ol type=3D"1">
<li> Single byte character keys
<div class=3D"p"><!----></div>
</li>

<li> Wide character keys
<div class=3D"p"><!----></div>
</li>
</ol>
<div class=3D"p"><!----></div>
</li>

<li>
Hash Table. More complex implementation of a hash table with arbitrary (bin=
ary) keys, and automatic hash table resizing.
<div class=3D"p"><!----></div>
</li>

<li> Buffers. Stream buffers (linear buffers that resize to accommodate mor=
e data) and circular buffers are provided.
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc6.1">
6.1</a>&#xa0;&#xa0; Single and double linked lists</h3>
This containers consist of a header and a list of elements containing each =
a pointer to the next element in the chain, and a pointer to the data item=
=20
stored. The end of the list is marked by a node that contains a &#xa0;NULL =
&quot;next&quot; pointer. Double linked lists contain an additional pointer=
 to the previous=20
element.

<div class=3D"p"><!----></div>
This is a very flexible container, allowing you to add and delete elements =
easily just by rewriting some pointers. You can even split them in two=20
sublists just by zeroing somewhere the &quot;next&quot; pointer.

<div class=3D"p"><!----></div>
The price you pay for this flexibility is that sequential access is expensi=
ve, the cost of accessing the nth element increases linearly with n.

<div class=3D"p"><!----></div>
Storage overhead is one or two pointers per element stored in the list for =
single/double linked lists..

<div class=3D"p"><!----></div>
The data is stored directly after the pointer, there is no pointer to the d=
ata. This is a variable length structure with a fixed and a variable part.=
=20
To avoid using a standard C99 feature that could be absent in older compile=
rs, we use a semi-generic pointer indexed either by one (for older compiler=
s) or by nothing (standard C).

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc6.1.1">
6.1.1</a>&#xa0;&#xa0;Single linked lists of byte or wide character strings<=
/h4>
A specialization of the single linked list is provided for multibyte or wid=
e character strings. The rationale for this specialization is that
zero terminated strings are variable length records what would make them im=
possible to store into a standard list that needs records of the
same size.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc6.2">
6.2</a>&#xa0;&#xa0;Flexible arrays (vector)</h3>
This container is an array with added operations that allow the user to ins=
ert and delete elements easily. It will resize itself if needed.

<div class=3D"p"><!----></div>
The access time is essentially the same as with a normal array. Insertion a=
nd deletion are possible but they are in general more expensive than with l=
ists since the container must copy the elements to make place for a new ele=
ment or to delete an element. An exception to this rule is the deletion of =
the last element that will be done in constant time since it implies only d=
ecrementing the number of elements in the container.

<div class=3D"p"><!----></div>
The storage overhead for each element is zero since this container doesn&#x=
27;t require any pointers per object stored.

<div class=3D"p"><!----></div>
This container uses a reserve storage to avoid allocating new memory for ea=
ch addition operation. This allows the <font size=3D"+1"><tt>Add</tt></font=
> operation to be done in constant time in most occasions.

<div class=3D"p"><!----></div>
Comparing vectors with plain arrays, there are following points to be made:

<ul>
<li> With plain arrays, a program cannot determine the array&#x27;s capacit=
y, which is to say, its dimension when it was allocated. =20
The program code must supply this information independently, and must maint=
ain that information always current.
<div class=3D"p"><!----></div>
</li>

<li> There isn&#x27;t any simple way to increase the size of our array, onc=
e it=E2=80=99s been allocated.  We often need to do that, rather than try t=
o figure out=20
in advance how large it should be.
<div class=3D"p"><!----></div>
</li>

<li> When accessing the array there is no automatic way to check if the ind=
ex is within bounds. We have to program all array access specially
if we want to make sure there are no index errors.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc6.3">
6.3</a>&#xa0;&#xa0;ValArray: Arrays of numbers</h3>
This group is an specialization of flexible array. It features objects that=
 contain numbers in different formats designed to facilitate operations
in numerical programming. There are ValArrays for the types <font size=3D"+=
1"><tt>short</tt></font>, <font size=3D"+1"><tt>int</tt></font>, <font size=
=3D"+1"><tt>long</tt></font>, <font size=3D"+1"><tt>float</tt></font>, <fon=
t size=3D"+1"><tt>double</tt></font>,
<font size=3D"+1"><tt>long double</tt></font>, <font size=3D"+1"><tt>size_t=
</tt></font> and <font size=3D"+1"><tt>long long</tt></font>. Each <font si=
ze=3D"+1"><tt>ValArray</tt></font> has the same basic operations (addition,=
 subtraction, etc)
but some members have specialized operations: trigonometric operations are =
defined only in floating point ValArrays, boolean operations only in the un=
signed versions of the <font size=3D"+1"><tt>int/short</tt></font> and the =
<font size=3D"+1"><tt>long long</tt></font> types.

<div class=3D"p"><!----></div>
ValArray functions come often in two flavors: The first uses two arrays whe=
re the left argument is both source and destination, and a second form where
a number is applied to the whole array. For instance we have <font size=3D"=
+1"><tt>AddTo(leftArray</tt></font><b>,</b><font size=3D"+1"><tt>rightArray=
)</tt></font> and <font size=3D"+1"><tt>AddToScalar(Array</tt></font><b>,</=
b><font size=3D"+1"><tt>number)</tt></font>.

     <h3><a name=3D"tth_sEc6.4">
6.4</a>&#xa0;&#xa0;String collection</h3>
This container is designed to handle a collection of C strings. It is essen=
tially an application of the flexible array container with some extra funct=
ionality to handle strings. It comes in two flavors, as strings in C: multi=
-byte and wide character strings.

     <h3><a name=3D"tth_sEc6.5">
6.5</a>&#xa0;&#xa0;Bit-string</h3>
This container is designed to handle arbitrary sequences of bits. Some algo=
rithms that are easy to program with strings are much more complicated for =
bit-strings, like to one that mimics =DFtrstr&quot; (&quot;bit-strstr&quot;=
).=20

<div class=3D"p"><!----></div>
The bits are packed with 8 bits per character unit. The overhead per bit is=
 the size of the bit-string header only. No pointers are associated with ea=
ch bit.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc6.6">
6.6</a>&#xa0;&#xa0;Dictionary</h3>
This is an associative container based on a hash table. It associates a tex=
t key with some arbitrary data. This container is not ordered. Access time =
to each element depends on how much elements are stored in it and on the ef=
ficacy of the hash function to maintain elements in different slots. Storag=
e overhead per element is one pointer each, plus the size of the slot table=
. This is for a hash table with linked lists in each slot for managing coll=
isions. Other implementations exist of course.

     <h3><a name=3D"tth_sEc6.7">
6.7</a>&#xa0;&#xa0;Hash Table</h3>
This is a more sophisticated version of the dictionary hash table. It allow=
s for keys of binary data and it has automatic resizing in case the table g=
ets too crowded.

     <h3><a name=3D"tth_sEc6.8">
6.8</a>&#xa0;&#xa0;AVL trees</h3>
This data structure allows for fast searching for data. You can store milli=
ons of records and find a given record with a few comparisons.

     <h3><a name=3D"tth_sEc6.9">
6.9</a>&#xa0;&#xa0;Scapegoat trees</h3>
This is another form of trees. They can be more efficient than AVL trees, b=
ut from a container perspective they share the same characteristics.

     <h3><a name=3D"tth_sEc6.10">
6.10</a>&#xa0;&#xa0;Bloom Filter</h3>
This is a probabilistic data structure used to quickly check if an element =
is not in a larger set of elements. It returns false positives with a given=
 probability set when the container is built. Elements can be added to it b=
ut they can&#x27;t be removed from the container. It stores no data, just a=
 key.

     <h3><a name=3D"tth_sEc6.11">
6.11</a>&#xa0;&#xa0;Queue</h3>
Queues are designed to operate in a FIFO context (first-in first-out), wher=
e elements are inserted into one end of the container and extracted from th=
e other. This container can be implemented as an adaptor using a single lin=
ked list as its base container. The sample implementation uses this strateg=
y to show how adapters can look like. Other implementations can implement t=
his container directly presenting the same interface.

     <h3><a name=3D"tth_sEc6.12">
6.12</a>&#xa0;&#xa0;Deque</h3>
This is a linear container that allows for cheap insertions/deletions at bo=
th ends.

     <h3><a name=3D"tth_sEc6.13">
6.13</a>&#xa0;&#xa0;Buffers</h3>
Buffers are containers used to hold data temporarily, either to be transmit=
ted or stored into some medium, or to be filtered and used later
by other parts of the application. The library provides two types of buffer=
s:

<ul>
<li> Stream buffers. They are a linear sequence of bytes, like a file. They=
 resize automatically if they need to, and they have a <i>cursor</i>
that points to the position where the next item will be stored.
<div class=3D"p"><!----></div>
</li>

<li> Circular buffers. They store the last <i>n</i> items of a stream. They=
 can contain any item as in the vector container, or they can contain=20
character strings, as in the string collection.
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc6.14">
6.14</a>&#xa0;&#xa0;Priority Queues</h3>
This container stores data associated with an integer &quot;priority&quot;.=
 The meaning of this integer is not further specified and defined by the ap=
plication.
The <font size=3D"+1"><tt>Pop</tt></font> operation retrieves the data asso=
ciated with the <i>lowest</i> priority.=20

     <h3><a name=3D"tth_sEc6.15">
6.15</a>&#xa0;&#xa0;At a glance</h3>
<font size=3D"-2">

<div class=3D"p"><!----></div>
<a name=3D"tth_tAb1">
</a>=20
<center>     =20
<table border=3D"1">
<tbody><tr><td width=3D"98"><b>Name</b></td><td width=3D"118"><b>Type</b></=
td><td width=3D"118"><b>Interface</b></td><td width=3D"177"><b>Description =
</b></td></tr><tr><td></td></tr>
<tr><td width=3D"98">BitString</td><td width=3D"118">Sequential</td><td wid=
th=3D"118">iBitString</td><td width=3D"177">Sequence of bits </td></tr>
<tr><td width=3D"98">BloomFilter</td><td width=3D"118">Statistical</td><td =
width=3D"118">iBloomFilter</td><td width=3D"177">Statistical container </td=
></tr>
<tr><td width=3D"98">CircularBuffer</td><td width=3D"118">Sequential </td><=
td width=3D"118">iCircularBuffer</td><td width=3D"177">Circular buffer </td=
></tr>
<tr><td width=3D"98">Deque</td><td width=3D"118">Sequential</td><td width=
=3D"118">iDeque</td><td width=3D"177">Double ended queue </td></tr>
<tr><td width=3D"98">Dictionary</td><td width=3D"118">Associative</td><td w=
idth=3D"118">iDictionary</td><td width=3D"177">Hash table with character ke=
ys </td></tr>
<tr><td width=3D"98">Dlist</td><td width=3D"118">Sequential. No random acce=
ss</td><td width=3D"118">iDlist</td><td width=3D"177">Double linked list </=
td></tr>
<tr><td width=3D"98">HashTable</td><td width=3D"118">Associative</td><td wi=
dth=3D"118">iHashTable</td><td width=3D"177">Hash tables with arbitrary bin=
ary keys </td></tr>
<tr><td width=3D"98">List</td><td width=3D"118">Sequential. No random acces=
s</td><td width=3D"118">iList</td><td width=3D"177">Single linked list </td=
></tr>
<tr><td width=3D"98">Queue</td><td width=3D"118">Sequential</td><td width=
=3D"118">iQueue</td><td width=3D"177">Queue </td></tr>
<tr><td width=3D"98">PQueue</td><td width=3D"118">Associative.</td><td widt=
h=3D"118">iPriorityQueue</td><td width=3D"177">Priority queue. </td></tr>
<tr><td width=3D"98">StreamBuffer</td><td width=3D"118">Sequential</td><td =
width=3D"118">iStreamBuffer</td><td width=3D"177">Stream buffer </td></tr>
<tr><td width=3D"98">strCollection</td><td width=3D"118">Sequential</td><td=
 width=3D"118">istrCollection</td><td width=3D"177">Flexible string arrays.=
 </td></tr>
<tr><td width=3D"98">TreeMap</td><td width=3D"118">Associative</td><td widt=
h=3D"118">iTreeMap</td><td width=3D"177">Scapegoat trees </td></tr>
<tr><td width=3D"98">Value array</td><td width=3D"118">Sequential. Random a=
ccess</td><td width=3D"118">iValArrayXXX</td><td width=3D"177">Growable arr=
ay of numbers </td></tr>
<tr><td width=3D"98">Vector</td><td width=3D"118">Sequential. Random access=
</td><td width=3D"118">iVector</td><td width=3D"177">Growable array of obje=
cts </td></tr>
<tr><td width=3D"98">WstrCollection</td><td width=3D"118">Sequential</td><t=
d width=3D"118">iWstrCollection</td><td width=3D"177">Flexible array of wid=
e character strings</td></tr>
<tr><td width=3D"98"></td></tr></tbody></table>
</center>
<div class=3D"p"><!----></div>
</font>=20
 <h2><a name=3D"tth_sEc7">
7</a>&#xa0;&#xa0;Types used by the library</h2>
Here is a complete list of all the auxiliary data types defined by the libr=
ary.

     <h3><a name=3D"tth_sEc7.1">
7.1</a>&#xa0;&#xa0;CompareInfo</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagCompareInfo&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs;
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*ContainerLeft;
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*ContainerRight;
}&#xa0;CompareInfo;

</pre></font>
This structure will be passed to the comparison functions. The <font size=
=3D"+1"><tt>ExtraArgs</tt></font> pointer will receive the pointer that was=
 passed to the calling function. If both elements being compared are member=
s of a single container, the <font size=3D"+1"><tt>ContainerRight</tt></fon=
t> member will be &#xa0;NULL .

     <h3><a name=3D"tth_sEc7.2">
7.2</a>&#xa0;&#xa0;CompareFunction</h3>
<a name=3D"CompareFunction72"></a>

<font size=3D"+1"><pre>typedef&#xa0;int&#xa0;(*CompareFunction)(const&#xa0;=
void&#xa0;*elem1,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*elem2,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CompareInfo&#xa0;*ExtraArgs);

</pre></font>
This type defines the function used to compare two elements.
The result should be less than zero if elem1 is less than elem2, zero if th=
ey are equal, and bigger than zero if elem1 is bigger than element 2.

<div class=3D"p"><!----></div>
The default comparison function is <font size=3D"+1"><tt>memcmp</tt></font>=
. This function will compare all the object&#x27;s area, including eventual=
ly padding bytes added by
compilers for alignment reasons. To minimize this problem always zero the o=
bjects before assigning the values. For instance:

<font size=3D"+1"><pre>struct&#xa0;Data&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;Age;&#xa0;//&#xa0;Here&#xa0;the&#xa0;compi=
ler&#xa0;can&#xa0;introduce&#xa0;padding&#xa0;bytes
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;Weight;
};

int&#xa0;fn(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;Data&#xa0;m;
&#xa0;&#xa0;&#xa0;&#xa0;memset(&amp;m,0,sizeof(m));
&#xa0;&#xa0;&#xa0;&#xa0;m.Age&#xa0;=3D&#xa0;23;
&#xa0;&#xa0;&#xa0;&#xa0;m.Weight&#xa0;=3D&#xa0;76;
&#xa0;&#xa0;&#xa0;&#xa0;iVector.Add(DataCollection,&amp;m);
}

</pre></font>
By zeroing the structure before making the assignments, we have a known val=
ue in the padding bytes. If we make comparisons with memcmp, they will
work correctly.

<div class=3D"p"><!----></div>
Obviously the best way to avoid this problem is to avoid any default compar=
ison function by defining one.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc7.3">
7.3</a>&#xa0;&#xa0;Save function</h3>
<a name=3D"SaveFunction73"></a>

<font size=3D"+1"><pre>typedef&#xa0;int&#xa0;(*SaveFunction)(const&#xa0;voi=
d&#xa0;*element,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArg,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*OutputStream);

</pre></font>
This function should save the given element into the given stream.  The <fo=
nt size=3D"+1"><tt>ExtraArg</tt></font> argument receives any argument pass=
ed to the Save function.
The result should be bigger than zero if the operation completed successful=
ly, zero or less than zero otherwise.

<div class=3D"p"><!----></div>
What the save function does is unknown to the rest of the library, basicall=
y the only requirement is that its output should be understood by the
read function, when called to read each element. The size of the written da=
ta can be bigger (or smaller) than the size of each stored element,
according to the specific requirements of the application data. This allows=
 to write save functions tha would write a complete data set, including
embedded objects into the stream. For instance a save function can save the=
 contents pointed by a character pointer instead of the pointer value=20
that would be meaningless when read again.

<div class=3D"p"><!----></div>
The default save function provided by the implementation just writes the co=
ntents of each element into the stream. Embedded pointers aren&#x27;t follo=
wed.

     <h3><a name=3D"tth_sEc7.4">
7.4</a>&#xa0;&#xa0;Read function</h3>
<a name=3D"ReadFunction74"></a>

<font size=3D"+1"><pre>typedef&#xa0;int&#xa0;(*ReadFunction)(void&#xa0;*ele=
ment,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArg,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*InputStream);

</pre></font>
This function should read into the given element from the given stream. The=
 <font size=3D"+1"><tt>ExtraArg</tt></font> argument is passed to the conta=
iner read function and allows to pass an argument to the user defined save =
function. The amount of data read is unknown to the rest of the software an=
d the only requirement
is that it should reverse the work of the save function.

<div class=3D"p"><!----></div>
The default read function provided by the implementation should read the co=
ntents of one element from the stream and add it to the result container.

<div class=3D"p"><!----></div>
The result is bigger than zero if the operation completed successfully, zer=
o or less than zero otherwise.

     <h3><a name=3D"tth_sEc7.5">
7.5</a>&#xa0;&#xa0;Error function</h3>
<a name=3D"ErrorFunction75"></a>

<font size=3D"+1"><pre>typedef&#xa0;void&#xa0;*(*ErrorFunction)(const&#xa0;=
char&#xa0;*functionName,int&#xa0;code,...);

</pre></font>
This function type is used to handle errors in each container. The first ar=
gument is the name of the function where the error occurred, the second is =
a=20
negative error code. No checks are performed on the function name argument,=
 and other information or messages could be included in the message.

<div class=3D"p"><!----></div>
Note that this function is roughly compatible with the prototype of snprint=
f, and could be used with a format string, a buffer size, and a series of=20
arguments corresponding to the arguments the format requires. The only prob=
lem is the conversion between <font size=3D"+1"><tt>int</tt></font> and <fo=
nt size=3D"+1"><tt>size_t</tt></font>.

<div class=3D"p"><!----></div>
The result value of the default error function is always &#xa0;NULL . This =
result will be in most cases ignored, except in the vector container where
it can be used to return special values in the case of the <font size=3D"+1=
"><tt>INDEX</tt></font> error.

<div class=3D"p"><!----></div>
When <font size=3D"+1"><tt>iVector</tt></font> interface detects an index e=
rror, it will pass in the extra arguments the array pointer and a <font siz=
e=3D"+1"><tt>size_t</tt></font> containing=20
the out of bounds index.

     <h3><a name=3D"tth_sEc7.6">
7.6</a>&#xa0;&#xa0;Destructor function</h3>
<a name=3D"DestructorFunction76"></a>

<font size=3D"+1"><pre>typedef&#xa0;int&#xa0;(*DestructorFunction)(void&#xa=
0;*object);

</pre></font>
This function is called when an object is being destroyed. An object is des=
troyed when:

<ul>
<li> An <font size=3D"+1"><tt>Erase</tt></font> call is done.
<div class=3D"p"><!----></div>
</li>

<li> A <font size=3D"+1"><tt>Replace</tt></font> call is done.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>Clear</tt></font> call is done.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>Select</tt></font> call is done with some el=
ement of the mask to zero.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>Resize</tt></font> function is called with a=
n argument less than the size of the container.
<div class=3D"p"><!----></div>
</li>
</ul>
This function should free any memory used by pointers within the object <b>=
without</b> freeing the object memory itself. In most cases the memory
used by the library is <b>not</b> allocated with malloc. Its result type is=
 less than zero when an error occurred or greater than zero when
it finished successfully. It is implementation defined what happens if a de=
structor encounters an error.

 <h1><a name=3D"tth_chAp3">
Chapter 3 </a><br>The common vocabulary: iGenericContainer</h1>
The library uses always the same words to represent similar actions in all =
containers. In addition, each container can use specific words to name acti=
ons that are specific to it. In this section only the common actions will b=
e documented, to give an overview of the common vocabulary available.

<div class=3D"p"><!----></div>
At the end of this documentation you will find a complete table that lists =
each action supported by the library and marks which container supports it.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Creation of a container: Create</h2>
<a name=3D"Create10"></a>
Containers are created with a call to their &quot;Create&quot; function.  T=
he first argument is the size of the objects that will be stored in the con=
tainer. The second is optional and is a hint to the number of elements that=
 will be stored in the container.
Note that if you want to store objects of different sizes you just store a =
pointer to those objects instead of the objects themselves.
The creation functions can have several arguments, the first being always t=
he size of the elements that the container will hold. The prototype can be:

<font size=3D"+1"><pre>Container&#xa0;*&#xa0;iContainer.Create(size_t&#xa0;=
elementsize,...);

</pre></font>
The creation function needs to allocate memory to hold the container. This =
memory will be allocated using the current memory manager that is always an=
 implicit argument to all creation functions. The rationale behind this des=
ign decision is that you don&#x27;t change your memory allocation strategy =
at each call to a container creation function. This simplifies the interfac=
e at the expense of making the change of allocation strategy more expensive.

<div class=3D"p"><!----></div>
There is an abstract class of objects called &quot;Generic container&quot; =
that has all functions that are common to all containers. This is an abstra=
ction,
and as such, it can&#x27;t have any concrete examples: there is no creation=
 function for a generic container. You can only create a concrete container=
, a list, a vector, etc.=20

<div class=3D"p"><!----></div>
Once created, and if the created container supports the generic interface, =
you can make a cast and treat the concrete container as an abstract member
of a mythical &quot;generic&quot; container. This can save you a lot of red=
undant code since your code is independent of the type of container and wil=
l run
with any object (even future objects) that support the generic container in=
terface.

<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"Vocabulary.png">
<div class=3D"p"><!----></div>
As everything, there is no free lunch. Precisely because of its generality =
the generic interface is missing a lot of functionality that you will find
in the concrete containers interfaces.=20

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Destruction of a container: Clear and Finalize</h2>
<a name=3D"Clear20"></a><a name=3D"Finalize20"></a>
All containers support two cleanup functions:

<ol type=3D"1">
<li>Clear: remove all elements. The header structure remains untouched. Thi=
s can be used to free the memory when the container was created with the <f=
ont size=3D"+1"><tt>Init</tt></font> function.
<div class=3D"p"><!----></div>
</li>

<li>
Finalize: Remove all elements and the memory used by the container object u=
sing the allocator for this container. The container should NOT have been c=
reated using the <font size=3D"+1"><tt>Init</tt></font> function.
<div class=3D"p"><!----></div>
</li>
</ol>
The syntax is:

<ol type=3D"1">
<li> <font size=3D"+1"><tt>int iContainer.Clear(Container *);</tt></font>
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>int iContainer.Finalize(Container *);</tt></font>
<div class=3D"p"><!----></div>
</li>
</ol>
The result of those functions is less than zero when something goes wrong, =
greater than zero otherwise.

     <h3><a name=3D"tth_sEc2.1">
2.1</a>&#xa0;&#xa0;Other creation functions</h3>

<ol type=3D"1">
<li>An implicit argument to all the creation functions is the current alloc=
ator, that is used to retrieve space for the container being built. To avoi=
d changing the current allocator, what in multi-threaded environment would =
need acquiring a lock to that global variable, some containers support a cr=
eation function that receives an extra argument: a custom allocator.

<font size=3D"+1"><pre>Container&#xa0;*&#xa0;iContainer.CreateWithAllocator=
(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllo=
cator&#xa0;*allocator,&#xa0;...);

</pre></font>
<div class=3D"p"><!----></div>
</li>

<li>
Sometimes it can be useful for some containers (specially lists) to create =
the  header structure using an already existing space, for instance in the =
space for local variables. For this an &#x27;Init&#x27; function can exist,=
 that initializes a container within an existing space.
Since normally the detailed structure (and the size of course) of each cont=
ainer header is implementation dependent, you use the Sizeof function with =
an argument of &#xa0;NULL to get the size of the header. This can be used w=
ithin a C99 compiler environment to allocate the space for that variable.
<a href=3D"#tthFtNtABH" name=3D"tthFrefABH"><sup>17</sup></a>
The declaration of the container header in C99 would be:

<font size=3D"+1"><pre>int&#xa0;function(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;listSpace[iList.Sizeof(NULL)];
&#xa0;&#xa0;&#xa0;&#xa0;iList.Init(listSpace);
}

</pre></font>
If C99 is not available, the best way is to just print the size of the cont=
ainer you are interested in, and then use that value that should stay fixed=
=20
for a given version. This can be automated and you can find in the Appendix=
 1, a small program that generates a series of <font size=3D"+1"><tt>#defin=
es</tt></font> with the=20
values of the sizes of the containers described in this documentation
<a href=3D"#tthFtNtABI" name=3D"tthFrefABI"><sup>18</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li> Initializing with existing data
All containers support the <font size=3D"+1"><tt>InitializeWith</tt></font>=
 function. It will create a container using a table of elements to store. I=
ts arguments are the size of=20
the objects to be stored, the number of those objects, and a pointer to the=
 table. The table should be a contiguous memory area.

<font size=3D"+1"><pre>/*&#xa0;For&#xa0;sequential&#xa0;containers&#xa0;and=
&#xa0;TreeMap&#xa0;*/
Container&#xa0;*&#xa0;iContainer.InitializeWith(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;n,&#xa0;void&#xa0;*data);
/*&#xa0;For&#xa0;Dictionary&#xa0;*/
Container&#xa0;*&#xa0;iContainer.InitializeWith(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;n,&#xa0;char&#xa0;**&#xa0;Keys,vo=
id&#xa0;*data;

</pre></font>
<div class=3D"p"><!----></div>
</li>
</ol>

 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;Adding an element to a container: Add and AddRange</h2>
This operation adds the given element to a container. In sequential contain=
ers it is added at the end, in associative containers it is added at an uns=
pecified position.

<font size=3D"+1"><pre>int&#xa0;iContainer.Add(Container&#xa0;*,const&#xa0;=
&#xa0;void&#xa0;*element);

</pre></font>
The result of this operation is a positive integer if success, or an error =
code less than zero if the operation fails.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input data is not modified in any way, it is copied into the container.

<div class=3D"p"><!----></div>
Sequential containers support also the <font size=3D"+1"><tt>AddRange</tt><=
/font> API:

<font size=3D"+1"><pre>int&#xa0;iContainer.AddRange(Container&#xa0;*,size_t=
&#xa0;n,const&#xa0;void&#xa0;*elements[]);

</pre></font>
This API allows you to pass a table of elements into a sequential container=
 and add it with a single call.

 <h2><a name=3D"tth_sEc4">
4</a>&#xa0;&#xa0;Removing elements from a container</h2>

     <h3><a name=3D"tth_sEc4.1">
4.1</a>&#xa0;&#xa0;Using an element as key</h3>
The functions <font size=3D"+1"><tt>Erase</tt></font> and <font size=3D"+1"=
><tt>EraseAll</tt></font> remove the given element from the container.=20
The result is an integer greater or equal to zero or an error code less tha=
n zero if the element couldn&#x27;t be added
<a href=3D"#tthFtNtABJ" name=3D"tthFrefABJ"><sup>19</sup></a>=20
.

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>EraseAll</tt></font> function is not needed for a=
ssociative containers since each element in those data structures is unique.

<font size=3D"+1"><pre>int&#xa0;iContainer.Erase(Container&#xa0;*,const&#xa=
0;void&#xa0;*element);
int&#xa0;iContainer.EraseAll(Container&#xa0;*,const&#xa0;void&#xa0;*element=
);

</pre></font>

     <h3><a name=3D"tth_sEc4.2">
4.2</a>&#xa0;&#xa0;Removing at a given position</h3>
 The <font size=3D"+1"><tt>Erase/EraseAt</tt></font> functions need to sear=
ch for the given element before erasing it. For sequential containers you c=
an use the =CBraseAt&quot; function, that will remove an element at a given=
 position.

<font size=3D"+1"><pre>int&#xa0;iContainer.EraseAt(Container&#xa0;*,size_t&=
#xa0;idx);

</pre></font>

For associative containers you use a different argument set:

<font size=3D"+1"><pre>int&#xa0;iContainer.Erase(Container&#xa0;*,const&#xa=
0;char&#xa0;*Key);

</pre></font>

     <h3><a name=3D"tth_sEc4.3">
4.3</a>&#xa0;&#xa0;Using a container as a stack</h3>
Elements can be removed from the front or the back in sequential containers=
 using it like a stack:

<font size=3D"+1"><pre>int&#xa0;iContainer.PopBack(Container&#xa0;*d,void&#=
xa0;*outbuf);
int&#xa0;iContainer.PopFront(Container&#xa0;*d,void&#xa0;*outbuf);

</pre></font>
These functions copy the contents of the last or the first element into the=
 given buffer. If the buffer is NULL, nothing is copied, but the
container is modified: the first or the last element is removed.

     <h3><a name=3D"tth_sEc4.4">
4.4</a>&#xa0;&#xa0;Batch removing</h3>
Several elements can be removed at once from a container using the <font si=
ze=3D"+1"><tt>RemoveRange</tt></font> function. This function is implemente=
d in sequential
containers only.

<font size=3D"+1"><pre>int&#xa0;iContainer.RemoveRange(Container&#xa0;*c,si=
ze_t&#xa0;start,&#xa0;size_t&#xa0;end);

</pre></font>
This function removes the elements whose index is greater or equal than <i>=
start</i> and less than <i>end</i>. If <i>start</i> equals <i>end</i>
nothing is removed and the result is zero. If <i>end</i> is greater than th=
e length of the container it will be adjusted to 1 element past the
end. If no elements are removed the result is zero, positive when one or mo=
re elements are removed. The result is a negative error code when an
error occurs.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc5">
5</a>&#xa0;&#xa0;Retrieving elements</h2>
The GetElement function retrieves an element from a container. It comes in =
two different flavors, one for sequential containers, and another for assoc=
iative ones.

<font size=3D"+1"><pre>const&#xa0;void&#xa0;*iContainer.GetElement(const&#x=
a0;Container&#xa0;*,size_t&#xa0;index);
const&#xa0;void&#xa0;*iContainer.GetElement(const&#xa0;Container&#xa0;*,con=
st&#xa0;void&#xa0;*Key);

</pre></font>
These functions return a pointer to the requested element or &#xa0;NULL if =
the element can&#x27;t be retrieved. The resulting pointer points directly =
to the data=20
stored in the container. This could be used to bypass all the flags that co=
ntrol the access to the container. For read-only containers, use the=20
<font size=3D"+1"><tt>CopyElement</tt></font> function that returns a copy =
of the requested data into a buffer.

<div class=3D"p"><!----></div>
The function <font size=3D"+1"><tt>GetRange</tt></font> retrieves a slice o=
f a container returning a container of the same type with a copy of the ele=
ments storeds in the
given range: <a name=3D"GetRange50"></a>

<font size=3D"+1"><pre>Container&#xa0;*iContainer.GetRange(const&#xa0;Conta=
iner&#xa0;*src,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;start,&#xa0;size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
The pointer returned can be invalidated by some operations done to the cont=
ainer. For instance if you reverse the order of the elements in a container=
,=20
a pointer to the element zero will point to something else than when you ob=
tained it. If a container needs reallocating its data space because you
added an element, all the pointers that point to data elements of the conta=
iner can be invalidated. In general <b>it is a bad idea to keep pointers=20
to elements in a container that is being modified</b>


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given container is not modified in any way.

 <h2><a name=3D"tth_sEc6">
6</a>&#xa0;&#xa0;Using masks</h2>
A <font size=3D"+1"><tt>mask</tt></font> is a sequence of boolean elements =
that contains zeroes or some value different from zero. They are used to se=
lect elements from a sequential container: for each element of the mask dif=
ferent from zero the corresponding value is selected, for all elements that=
 contain a zero, that value is eliminated.

<div class=3D"p"><!----></div>
The selection operation can be destructive, reusing a container by eliminat=
ing from it all elements not selected by the mask, or can be a copy operati=
on where the copy contains only the selected elements.

<div class=3D"p"><!----></div>
In the case of a destructive operation, the destructor functions are called=
 for each element destroyed.

<font size=3D"+1"><pre>int&#xa0;(*Select)(Container&#xa0;*,const&#xa0;mask&=
#xa0;*);
Container&#xa0;*(*SelectCopy)(const&#xa0;Container&#xa0;*,const&#xa0;mask&#=
xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
The functions <font size=3D"+1"><tt>CompareEqual</tt></font> and <font size=
=3D"+1"><tt>CompareEqualScalar</tt></font> produce a mask using two contain=
ers as input. Those masks can be used with the selection functions. It is p=
ossible of course, to create masks from completely different sources, eithe=
r directly or by copying. See the <font size=3D"+1"><tt>iMask</tt></font> i=
nterface for further details.

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>Mask&#xa0;*(*CompareEqual)(const&#xa0;Container&#xa0=
;*,const&#xa0;Mask&#xa0;*);
Mask&#xa0;*(*CompareEqualScalar)(const&#xa0;Container&#xa0;*,&#xa0;const&#x=
a0;Mask&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>CompareEqual</tt></font> function compares two se=
quential containers of the same type and length, producing a mask containin=
g a value different from zero at each element position where the pair of el=
ements from each container is equal, zero otherwise.

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>CompareEqualScalar</tt></font> function compares =
each element of the given sequential container with a single elemnt, produc=
ing a mask with a value=20
different from zero<a href=3D"#tthFtNtACA" name=3D"tthFrefACA"><sup>20</sup=
></a> for each element that is equal to the given element.

 <h2><a name=3D"tth_sEc7">
7</a>&#xa0;&#xa0;Sorting a sequential container: Sort</h2>
The &quot;Sort&quot; function will sort a container in place. To keep the o=
ld, unsorted contents, make a copy of the container first.

<font size=3D"+1"><pre>int&#xa0;iContainer.Sort(Container&#xa0;*);

</pre></font>

 <h2><a name=3D"tth_sEc8">
8</a>&#xa0;&#xa0;Copying a container: Copy</h2>
 The &quot;Copy&quot; function will make a fresh copy of a container. Some =
fields of the header are copied: the error and compare functions, the flags=
, and others. Memory will be allocated withe the source container allocator.

<font size=3D"+1"><pre>newContainer&#xa0;*&#xa0;iContainer.Copy(const&#xa0;=
Container&#xa0;*);

</pre></font>


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input container is not modified.

 <h2><a name=3D"tth_sEc9">
9</a>&#xa0;&#xa0;Saving and loading a container to or from disk: Save and L=
oad</h2>
The functions &quot;Save&quot; and &quot;Load&quot; will save / load the co=
ntents, state, and characteristics of a container into / from disk. They ne=
ed an open file stream, open in binary mode, and in the correct direction: =
saving needs a stream open in the write direction, loading needs a stream o=
pen in the read direction.

<font size=3D"+1"><pre>int&#xa0;Save(const&#xa0;Container&#xa0;*c,FILE&#xa0=
;*stream,&#xa0;SaveFunction&#xa0;fn,void&#xa0;*arg);
Container&#xa0;*Load(FILE&#xa0;*stream,ReadGunction&#xa0;fn,void&#xa0;*arg);

</pre></font>
Both <font size=3D"+1"><tt>Save</tt></font> and <font size=3D"+1"><tt>Load<=
/tt></font> provide default functions to save and load an element but they =
do a <i>shallow</i> save: pointers aren&#x27;t followed=20
to save the data they point to <a href=3D"#tthFtNtACB" name=3D"tthFrefACB">=
<sup>21</sup></a>.

 <h2><a name=3D"tth_sEc10">
10</a>&#xa0;&#xa0;Inserting a container into another</h2>

     <h3><a name=3D"tth_sEc10.1">
10.1</a>&#xa0;&#xa0;Sequential containers</h3>


<font size=3D"+1"><pre>int&#xa0;(*InsertIn)(Container&#xa0;*destination,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;position,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;Container&#xa0;*source);
int&#xa0;(*Append)(SequentialContainer&#xa0;*&#xa0;SC1,SequentialContainer&=
#xa0;*&#xa0;SC2);

</pre></font>
The <font size=3D"+1"><tt>InsertIn</tt></font> function will insert into th=
e &quot;destination&quot; container the contents of the <font size=3D"+1"><=
tt>source</tt></font> container at the given position. The source is not mo=
dified in any way, and a copy of its data will be used. Both containers mus=
t be of the same type and store elements of  the same type. The library onl=
y tests the element size of each one.

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>Append</tt></font> function is similar to InsertI=
n: the elements of the second container are appended at the end of the firs=
t one. The big difference=20
is that the second container is destroyed. It is absorbed into the first: i=
ts elements are not copied but inserted. This means that a requirement is
that the allocator be the same in both containers.

     <h3><a name=3D"tth_sEc10.2">
10.2</a>&#xa0;&#xa0;Associative containers</h3>

<font size=3D"+1"><pre>int&#xa0;(*InsertIn)(Container&#xa0;*destination,&#x=
a0;Container&#xa0;*source);

</pre></font>
This function will insert into the destination container the source contain=
er using the source container keys. Otherwise the same conditions apply as =
to the sequential containers: the containers must be of the same type and s=
tore elements of the same type.

 <h2><a name=3D"tth_sEc11">
11</a>&#xa0;&#xa0;Replace an element with another</h2>

     <h3><a name=3D"tth_sEc11.1">
11.1</a>&#xa0;&#xa0;Sequential containers: ReplaceAt</h3>

<font size=3D"+1"><pre>int&#xa0;(*ReplaceAt)(Container&#xa0;*dst,size_t&#xa=
0;position,void&#xa0;*newData);

</pre></font>
Replaces the element at the given position with the new data.=20

     <h3><a name=3D"tth_sEc11.2">
11.2</a>&#xa0;&#xa0;Associative containers: Replace</h3>

<font size=3D"+1"><pre>int&#xa0;(*Replace)(Dictionary&#xa0;*Dict,&#xa0;cons=
t&#xa0;char&#xa0;*Key,void&#xa0;*Value);

</pre></font>
Replaces the element with the given key. If the element is absent nothing i=
s done.

 <h2><a name=3D"tth_sEc12">
12</a>&#xa0;&#xa0;Looping through all elements of a container</h2>
The user has  three methods for looping through all elements:

<ol type=3D"1">
<li> Using a simple loop construct
<div class=3D"p"><!----></div>
</li>

<li> Using the <font size=3D"+1"><tt>Apply</tt></font> function
<div class=3D"p"><!----></div>
</li>

<li> Using an iterator
<div class=3D"p"><!----></div>
</li>
</ol>
One the most familiar design patterns  is the ITERATOR pattern, which =E2=
=80=98provides a way to access the elements of an aggregate object sequenti=
ally without exposing its underlying representation.=20

<div class=3D"p"><!----></div>
Traditionally, this is achieved by identifying an ITERATOR interface that p=
resents operations to initialize an iteration, to access the current elemen=
t, to advance to the next element, and to test for completion; collection o=
bjects are expected to implement this interface, usually indirectly via an =
auxiliary object.=20

<div class=3D"p"><!----></div>
This is exactly the case in the iterator proposal here. Essential to the pa=
ttern is the idea that elements are accessed sequentially, but independentl=
y of their position in the collection; for example, labeling each element o=
f a tree with its index in left-to-right order fits the pattern, but labeli=
ng each element with its depth does not. This traditional version of the pa=
ttern is sometimes called an EXTERNAL ITERATOR.=20

<div class=3D"p"><!----></div>
An alternative INTERNAL ITERATOR approach assigns responsibility for managi=
ng the traversal to the collection instead of the client: the client needs =
only to provide an operation, which the collection applies to each of its e=
lements. The latter approach is simpler to use, but less flexible; for exam=
ple, it is not possible for the iteration to affect the order in which elem=
ents are accessed, nor to terminate the iteration early. This is the algori=
thm followed by the <font size=3D"+1"><tt>Apply</tt></font> function.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc12.1">
12.1</a>&#xa0;&#xa0;Using a simple loop to iterate a container</h3>

<div class=3D"p"><!----></div>
You can iterate any sequential container with a simple loop. You use the &q=
uot;Size&quot; function to limit the loop. At each loop step you get the co=
rresponding=20
element with the &quot;GetElement&quot; function, present in this form in a=
ll containers.

<font size=3D"+1"><pre>//&#xa0;&quot;Container&quot;&#xa0;is&#xa0;a&#xa0;po=
inter&#xa0;to&#xa0;some&#xa0;container
for&#xa0;(size_t&#xa0;i=3D0;&#xa0;i&lt;iContainer.Size(Container);&#xa0;i++=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;someType&#xa0;*element&#xa0;=3D&#xa0;iContainer.Get=
Element(Container,i);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Use&#xa0;&quot;element&quot;&#xa0;here.
}

</pre></font>
For associative containers you retrieve first a strCollection containing al=
l keys using the <font size=3D"+1"><tt>GetKeys</tt></font> function, presen=
t in all associative=20
containers. Then, you retrieve each element by looping through the string c=
ollection that you have obtained in a similar manner to the sequential=20
containers.=20

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc12.2">
12.2</a>&#xa0;&#xa0;Using the Apply function.</h3>
<a name=3D"Apply+general122"></a>
The <font size=3D"+1"><tt>Apply</tt></font> function will iterate through a=
ll elements calling a given function for each one.1 Its prototype is:

<font size=3D"+1"><pre>void&#xa0;iContainer.Apply(Container,&#xa0;//pointer=
&#xa0;to&#xa0;some&#xa0;container
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int(*Applyfn)(void=
&#xa0;*elem,void&#xa0;*arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);

</pre></font>
This function receives three arguments:

<ol type=3D"1">
<li> A pointer to the container. <a href=3D"#tthFtNtACC" name=3D"tthFrefACC=
"><sup>22</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li> A function pointer that should point to a function that receives two a=
rguments: the element of the container, and an extra argument where it can=
=20
receive (and write to) global information about the search.  This extra arg=
ument is
<div class=3D"p"><!----></div>
</li>

<li> The third one passed to the <font size=3D"+1"><tt>Apply</tt></font> fu=
nction. <font size=3D"+1"><tt>Apply</tt></font> will pass this argument to =
the given function together with a pointer to the=20
element retrieved from the container.
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc12.3">
12.3</a>&#xa0;&#xa0;Using iterators</h3>
<a name=3D"Iterators+General123"></a>
Iterators are objects returned by each container that allow you to iterate =
(obviously) through all elements of a container.
You use iterators like this:

<font size=3D"+1"><pre>Iterator&#xa0;*it&#xa0;=3D&#xa0;iContainer.NewIterat=
or(someContainer);
Mytype&#xa0;*Myobject;
for&#xa0;(myobject&#xa0;=3D&#xa0;it-&gt;GetFirst(it);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myobject!=3D&#xa0;NULL;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;myobject&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#x=
a0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Work&#xa0;with&#xa0;&quot;myobject&qu=
ot;&#xa0;here
}
iContainer.DeleteIterator(it);&#xa0;//&#xa0;dispose&#xa0;the&#xa0;iterator&=
#xa0;object

</pre></font>
Iterators provide a container-independent way of iterating that will work w=
ith any container, both sequential or associative. In associative container=
s=20
the specific sequence is implementation defined, and in sequential containe=
rs is the natural sequence.

<div class=3D"p"><!----></div>
The main objective for iterators is to break a dependence between an algori=
thm and the type of container it is working with. Since all containers
support iterators, you can write your code independently (to a great extent=
) from which specific iterator you are using.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input container could be modified in some implementations. A list of ex=
isting iterators is possible, to allow invalidating them in case of
modifications to the container for example.

<div class=3D"p"><!----></div>
Iterators always support at least the following functions:

<font size=3D"+1"><pre>void&#xa0;*iterator-&gt;GetFirst(iterator);
void&#xa0;*iterator-&gt;GetNext(iterator);
void&#xa0;*iterator-&gt;GetCurrent(iterator);

</pre></font>
All containers support the &quot;NewIterator&quot;  and &quot;deleteIterato=
r&quot; methods:

<font size=3D"+1"><pre>iterator&#xa0;*iContainer.NewIterator(Container);&#x=
a0;
int&#xa0;iContainer.deleteIterator(iterator);

</pre></font>
Iterators must be destroyed since they are allocated using the containers a=
llocator.

<div class=3D"p"><!----></div>
Sequential containers can support additional functions:

<font size=3D"+1"><pre>void&#xa0;*iterator-&gt;GetLast(iterator);
void&#xa0;*iterator-&gt;GetPrevious(iterator);
void&#xa0;*iterator-&gt;Seek(iterator&#xa0;i,&#xa0;size_t&#xa0;position);

</pre></font>
This interface allows users to write fully general algorithms that will wor=
k with any container, independently of its internal structure. Obviously th=
e=20
performance can differ from container to container depending on usage.

<div class=3D"p"><!----></div>
All iterators will become invalid if the underlying container changes in an=
y way, except through the iterator itself.<a href=3D"#tthFtNtACD" name=3D"t=
thFrefACD"><sup>23</sup></a>
Each container can conceptually be seen as a sequence of <i>generations</i>=
, or <i>states</i>. Beginning with the fresh constructed state, the contain=
er
evolves until it reaches the destroyed state after the execution of the <fo=
nt size=3D"+1"><tt>Finalize</tt></font> function. This sequence of states i=
nteracts with an
iterator as follows: An iterator applies only to a <b>single</b> container =
state. Any modification of the container state, directly or
indirectly moves the state and invalidates the iterator.

<div class=3D"p"><!----></div>
An implementation may catch some of the movements of the container in the s=
tate space and report an error when an iterator is used that belongs to=20
a different container state. But not all access can be catched. If the user=
 has pointers to an iterator&#x27;s data and modifies this data without
using the container API an implementation may not catch this error.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc13">
13</a>&#xa0;&#xa0;Setting and retrieving the state: GetFlags and SetFlags</=
h2>
Each container has a set of flags that can be read and written to change th=
e container&#x27;s behavior. The only flag that is defined by all containers
is the read-only flag. Implementations can extend this to offer different s=
ervices like copy-on-write, or other applications.=20

<div class=3D"p"><!----></div>
The read-only flag means that no direct pointers to an element or to the wh=
ole data are returned, no functions that modify the
container are allowed to proceed and that the <font size=3D"+1"><tt>Clear()=
</tt></font>
and <font size=3D"+1"><tt>Finalize()</tt></font> APIs will not work. You mu=
st unset this flag to allow for destruction of the object.
<a href=3D"#tthFtNtACE" name=3D"tthFrefACE"><sup>24</sup></a>

<div class=3D"p"><!----></div>
Using the state space concept introduced above, this flag freezes the state=
 of a container disallowing any further evolution. The only API that
can modify the state is the <font size=3D"+1"><tt>SetFlags</tt></font> API =
that can reset the state to a read/write state again.

 <h2><a name=3D"tth_sEc14">
14</a>&#xa0;&#xa0;Retrieving the number of elements stored: Size</h2>
<a name=3D"Size140"></a>
All containers support querying the number of elements stored. The prototyp=
e is:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;iContainer.Size(=
const&#xa0;Container&#xa0;*);

</pre></font>
There is no error return. If a &#xa0;NULL pointer is given to those functio=
ns the result is zero.

 <h2><a name=3D"tth_sEc15">
15</a>&#xa0;&#xa0;Sizes</h2>

     <h3><a name=3D"tth_sEc15.1">
15.1</a>&#xa0;&#xa0;Sizeof</h3>
This computes the total size used by the container in bytes, including the =
header structure and the data stored in the container. Any other overhead=20
must be accounted for.

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;iContainer.Sizeo=
f(const&#xa0;Container&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
If its argument is &#xa0;NULL , <font size=3D"+1"><tt>Sizeof</tt></font> re=
turns the size of the container header. This can be used to allocate space =
for a container as a local variable for instance.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc15.2">
15.2</a>&#xa0;&#xa0;SizeofIterator</h3>
<a name=3D"SizeofIterator152"></a>
Computes the size of the iterator for the given container. The objective he=
re is to allow the declaration of the iterator as a local variable
to avoid having to free the iterator at the exit of the function.

<font size=3D"+1"><pre>int&#xa0;Fn(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[iList.SizeofIterator(NULL)];
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;(Iterator&#xa0;*)bu=
f;
&#xa0;&#xa0;&#xa0;&#xa0;iList.InitIterator(it);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Use&#xa0;iterator&#xa0;&quot;it&quot;&#xa0;=
here
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;No&#xa0;need&#xa0;to&#xa0;call&#xa0;deleteI=
terator&#xa0;at&#xa0;exit
}

</pre></font>

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc16">
16</a>&#xa0;&#xa0;Memory management</h2>
<a name=3D"Allocator160"></a>
All containers have a pointer to their allocator object. An allocator objec=
t is a simple interface that provides 4 functions:

<ol type=3D"1">
<li> malloc: A function that receives a <font size=3D"+1"><tt>size_t</tt></=
font> and returns a <font size=3D"+1"><tt>void *</tt></font> pointing to a =
memory block of the requested size, or &#xa0;NULL if no more memory is avai=
lable. Note that this function receives the number of <b>bytes</b> to alloc=
ate, not the number of items.<a href=3D"#tthFtNtACF" name=3D"tthFrefACF"><s=
up>25</sup></a>
<div class=3D"p"><!----></div>
</li>

<li> realloc: A function that will resize a previously allocated block.
<div class=3D"p"><!----></div>
</li>

<li> free: A function that will release the memory allocated previously wit=
h malloc/realloc.
<div class=3D"p"><!----></div>
</li>

<li> calloc: a function that will allocate <font size=3D"+1"><tt>n</tt></fo=
nt> objects of <font size=3D"+1"><tt>m</tt></font> size and clear the memor=
y block to zero before returning it.
<div class=3D"p"><!----></div>
</li>
</ol>
At the start of the library runtime a default allocator object exists that =
uses the four functions of the standard C library. Other allocator objects =
can be used, and the user can change the global allocator at any time. Each=
 container retrieves the default allocator object when created, and stores =
it in the container descriptor. Any further change to the default allocator=
 will not affect existing containers that have already an allocator. When c=
hanging the allocator you should do that before creating the container.

<div class=3D"p"><!----></div>
Some containers are created without any heap management by default. You can=
 introduce heap management by calling the <font size=3D"+1"><tt>UseHeap</tt=
></font> function, that will install a new heap in the container. Other con=
tainers are always created with a heap, and you should pass them an allocat=
or object for object creation.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc16.1">
16.1</a>&#xa0;&#xa0;Memory manager objects</h3>
The library provides two memory manager objects:

<ol type=3D"1">
<li> The default memory manager, that receives the standard C library funct=
ions; malloc, free, realloc and calloc.
<div class=3D"p"><!----></div>
</li>

<li> The debug memory manager that implements the same functions with added=
 functionality designed to:

<ul>
<li>Catch the &quot;double free&quot; problem.
<div class=3D"p"><!----></div>
</li>

<li>
Catch the overflow of a memory block
<div class=3D"p"><!----></div>
</li>

<li>
Catch freeing a block that wasn&#x27;t allocated
<div class=3D"p"><!----></div>
</li>
</ul>
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc16.2">
16.2</a>&#xa0;&#xa0;Pooled memory management</h3>
The problem with the traditional C memory management is that it requires th=
at the programmer cares about each piece of RAM that is allocated by the pr=
ogram and follows the lifetime of each piece to ensure that it gets returne=
d to the system for reuse. In today&#x27;s software world, this is just imp=
ractical.

<div class=3D"p"><!----></div>
A better strategy is to use a pool of memory where related memory allocatio=
ns can b e done from a common pool. When the module finishes, all the alloc=
ated pool is freed just by destroying the whole pool. This is much easier t=
o manage, and in many cases more efficient.
The proposed interface has the following functionalities:

<ol type=3D"1">
<li> Creation. The creation function receives a memory allocator to use for=
 this pool.
<div class=3D"p"><!----></div>
</li>

<li> Alloc. This function receives a pool and a size and returns a memory b=
lock, or &#xa0;NULL if there is no more memory.
<div class=3D"p"><!----></div>
</li>

<li> Clear. This erases all objects allocated in the pool without returning=
 the memory to the system.
<div class=3D"p"><!----></div>
</li>

<li> Finalize. This releases all memory and destroys all objects.
<div class=3D"p"><!----></div>
</li>
</ol>
Note that there is no realloc, and that the &quot;Clear&quot; function is o=
ptional. Not all pools support it. The rationale for these decisions being =
that realloc would need to store the size of each block, what in a pool mai=
ntained by a single stack like pointer would be very expensive.

     <h3><a name=3D"tth_sEc16.3">
16.3</a>&#xa0;&#xa0;Heap of same size objects</h3>
Many containers are used to store sets of objects of the same size. The lib=
rary provides a specialized heap management software for this application. =
It stores vectors of objects of the same size. The interface provided is as=
 follows:

<ul>
<li> Create. This function receives as an argument a memory manager object =
that will be used to allocate memory.
<div class=3D"p"><!----></div>
</li>

<li> NewObject: returns an object to the application
<div class=3D"p"><!----></div>
</li>

<li> FreeObject: Adds an object to the list of available objects
<div class=3D"p"><!----></div>
</li>

<li> Size: Returns the size of the heap in bytes
<div class=3D"p"><!----></div>
</li>

<li> Clear: reclaims memory used by the free list
<div class=3D"p"><!----></div>
</li>

<li> Finalize: Reclaims all memory used by the heap and the heap object
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc16.4">
16.4</a>&#xa0;&#xa0;Garbage collection</h3>
Automatic garbage collection is offered by some compiler systems as an alte=
rnative to traditional memory management. This solution is
not compatible with real time requirements, and is not practical in machine=
s with very low memory configurations.

<div class=3D"p"><!----></div>
In other cases however, it can be a real simplification since the programme=
r is relieved from the huge task of taking care of each
piece of memory and to cater its disposal. A simple memory model is propose=
d: you program as if the amount of memory was infinite
and never worry about freeing the memory you use. Periodically the collecto=
r starts collecting unused memory chunks and adds them
to the pool of available memory or releases it to the underlying operating =
system.

<div class=3D"p"><!----></div>
This model is not the solution to all memory management problems. It can be=
 a solution to some situations, specially when developing
in workstation environments where memory is freely available. The bugs that=
 can appear are also very difficult to solve. One of the
most difficult is when you keep by mistake some reference to a large piece =
of memory making the recycling of the memory impossible.
In that case you have to search in all the code of the application for the =
reference that keeps the memory block marked as used, and that can
be very difficult in large applications.

     <h3><a name=3D"tth_sEc16.5">
16.5</a>&#xa0;&#xa0;Multi-threading</h3>
In environments where multi-threading or other parallel programming constru=
cts are possible, the implementation must provide for sequential
semantics, i.e. each operation should perform as described in this document=
ation with the additional caveat that any operation that modifies
a container must be <font size=3D"+1"><tt>atomic</tt></font>, i.e. it can&#=
x27;t be interrupted leaving the container in an unstable or incoherent sta=
te. It is up to the
implementation to ensure that if an atomic operation is interrupted, the in=
consistent container state will be invisible to other processes
or threads accessing the container.

 <h2><a name=3D"tth_sEc17">
17</a>&#xa0;&#xa0;At a glance</h2>
For a more detailed description see =A7<a href=3D"#APIOverview"> 10API Over=
view</a> on page&#xa0;<a href=3D"#APIOverview">pageref</a>

<div class=3D"p"><!----></div>
<font size=3D"-2">
<div class=3D"p"><!----></div>
<a name=3D"tth_tAb1">
</a>=20
<center>     =20
<table border=3D"1">
<tbody><tr><td width=3D"138"><b>Operation</b></td><td width=3D"414"><b>Desc=
ription</b></td></tr>
<tr><td width=3D"138">Add</td><td width=3D"414">Adds a single element at th=
e end of the container</td></tr>
<tr><td width=3D"138">AddRange</td><td width=3D"414">Adds a sequence of ele=
ments</td></tr>
<tr><td width=3D"138">Append</td><td width=3D"414">Adds a container after a=
 first one </td></tr>
<tr><td width=3D"138">Apply</td><td width=3D"414">Calls a function with eac=
h element of the container in  sequence.</td></tr>
<tr><td width=3D"138">Clear</td><td width=3D"414">Erases all elements </td>=
</tr>
<tr><td width=3D"138">Contains</td><td width=3D"414">Searches for an elemen=
t in a container</td></tr>
<tr><td width=3D"138">Copy</td><td width=3D"414">Copies a container </td></=
tr>
<tr><td width=3D"138">Create</td><td width=3D"414">Creates a container that=
 will use the current allocator.</td></tr>
<tr><td width=3D"138">CreateWithAllocator</td><td width=3D"414">Creates a c=
ontainer that will use a given allocator.</td></tr>
<tr><td width=3D"138">deleteIterator</td><td width=3D"414">Disposes of the =
storage used by the iterator object </td></tr>
<tr><td width=3D"138">Equal</td><td width=3D"414">Compares two containers o=
f the same type </td></tr>
<tr><td width=3D"138">Erase</td><td width=3D"414">Removes an element from t=
he container</td></tr>
<tr><td width=3D"138">EraseAt</td><td width=3D"414">Erases an element at a =
given position </td></tr>
<tr><td width=3D"138">Finalize</td><td width=3D"414">Destroys all storage u=
sed </td></tr>
<tr><td width=3D"138">GetElement</td><td width=3D"414">Retrieves one elemen=
t from a container </td></tr>
<tr><td width=3D"138">GetFlags</td><td width=3D"414">Returns the flags</td>=
</tr>
<tr><td width=3D"138">GetAllocator</td><td width=3D"414">Retrieves the allo=
cator used by the container</td></tr>
<tr><td width=3D"138">GetRange</td><td width=3D"414">Retrieves several elem=
ents</td></tr>
<tr><td width=3D"138">IndexOf</td><td width=3D"414">Retrieves the position =
of an element </td></tr>
<tr><td width=3D"138">InsertAt</td><td width=3D"414">Inserts an element at =
a given position </td></tr>
<tr><td width=3D"138">InsertIn</td><td width=3D"414">Inserts a container in=
to another </td></tr>
<tr><td width=3D"138">Load</td><td width=3D"414">Retrieves a container from=
 disk </td></tr>
<tr><td width=3D"138">NewIterator</td><td width=3D"414">Returns an iterator=
 object </td></tr>
<tr><td width=3D"138">PopFront </td><td width=3D"414">Retrieves the first e=
lement and removes it</td></tr>
<tr><td width=3D"138">PopBack</td><td width=3D"414">Retrieves the last elem=
ent and removes it</td></tr>
<tr><td width=3D"138">PushFront </td><td width=3D"414">Stores an element at=
 the start of a container</td></tr>
<tr><td width=3D"138">PushBack</td><td width=3D"414">Stores an element at t=
he end </td></tr>
<tr><td width=3D"138">RemoveRange</td><td width=3D"414">Erases a range of e=
lements </td></tr>
<tr><td width=3D"138">Replace </td><td width=3D"414">Replaces one element (=
Associative containers)</td></tr>
<tr><td width=3D"138">ReplaceAt </td><td width=3D"414">Replaces one element=
 (Sequential containers) </td></tr>
<tr><td width=3D"138">Save</td><td width=3D"414">Stores the container to di=
sk </td></tr>
<tr><td width=3D"138">SetCompareFunction</td><td width=3D"414">Sets or retr=
ieves the function used for comparisons </td></tr>
<tr><td width=3D"138">SetErrorFunction</td><td width=3D"414">Sets or retrie=
ves the function used to report errors</td></tr>
<tr><td width=3D"138">SetDestructor</td><td width=3D"414">Sets or retrieves=
 the function called when an element is destroyed </td></tr>
<tr><td width=3D"138">Select</td><td width=3D"414">Selects elements using a=
 mask </td></tr>
<tr><td width=3D"138">SelectCopy</td><td width=3D"414">Select elements to c=
opy using a mask.</td></tr>
<tr><td width=3D"138">SetFlags</td><td width=3D"414">Sets the flags</td></t=
r>
<tr><td width=3D"138">Size</td><td width=3D"414">Returns the number of elem=
ents stored in the container </td></tr>
<tr><td width=3D"138">Sizeof</td><td width=3D"414">Returns the number of by=
tes used </td></tr>
<tr><td width=3D"138">SizeofIterator</td><td width=3D"414">Returns the size=
 of the iterator object for a container </td></tr>
<tr><td width=3D"138">Sort</td><td width=3D"414">Sorts the contents </td></=
tr>
<tr><td align=3D"center" colspan=3D"2"> <b>Iterator vocabulary</b> </td></t=
r>
<tr><td width=3D"138">GetFirst </td><td width=3D"414">Retrieves a pointer t=
o the first element</td></tr>
<tr><td width=3D"138">GetNext </td><td width=3D"414">Retrieves a pointer to=
 the next element </td></tr>
<tr><td width=3D"138">GetPrevious </td><td width=3D"414">Retrives a pointer=
 to the previous element if the container supports bidirectional seek.</td>=
</tr>
<tr><td width=3D"138">GetCurrent</td><td width=3D"414">Retrieves a pointer =
to the current element </td></tr>
<tr><td width=3D"138">GetLast </td><td width=3D"414">Retrieves a pointer to=
 the last element </td></tr>
<tr><td width=3D"138">Replace </td><td width=3D"414">Replaces the current e=
lement with a different element. If the given pointer to the replacement is=
 &#xa0;NULL=20
it will delete the current element.</td></tr>
<tr><td width=3D"138">Seek</td><td width=3D"414">Sequential containers only=
. Positions the cursor at a given position.</td></tr>
<tr><td width=3D"138"></td></tr></tbody></table>
</center>
<div class=3D"p"><!----></div>
</font>=20
 <h1><a name=3D"tth_chAp4">
Chapter 4 </a><br>The auxiliary interfaces</h1>
These interfaces are used by all the containers in the rest of the library.=
 They provide basically three functions

<ul>
<li> Memory management with the <font size=3D"+1"><tt>Allocator</tt></font>=
 object.
<div class=3D"p"><!----></div>
</li>

<li> Observer and circulation of notifications with <font size=3D"+1"><tt>i=
Observer</tt></font>.
<div class=3D"p"><!----></div>
</li>

<li> Error handling with the <font size=3D"+1"><tt>iError</tt></font> inter=
face.
<div class=3D"p"><!----></div>
</li>

<li> Masks used to select items
<div class=3D"p"><!----></div>
</li>
</ul>
<img alt=3D"Figure" src=3D"Basic.png">

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Masks</h2>
A mask is a sequence that contains boolean data used for selection of items=
 in a sequential container.=20
It is not specified if a mask is a bit string (i.e. a
strictly boolean array) or an array of chars or other integers used to hold=
 the binary data. In all cases a value of the mask at a given position=20
means <i>select</i> if it is different than zero, or <i>do not select</i> i=
f it is zero.

<div class=3D"p"><!----></div>
The interface offered by the mask object is very small. Masks can&#x27;t be=
 resized but they have an allocator to be able to reclaim the
memory they use when created. This allocator will be initialized to the cur=
rent allocator when the mask is created.

     <h3><a name=3D"tth_sEc1.1">
1.1</a>&#xa0;&#xa0;The interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_Mask&#xa0;Mask;
typedef&#xa0;struct&#xa0;tagMaskInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*And)(Mask&#xa0;*src1,Mask&#xa0;*src2);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*Copy)(Mask&#xa0;*src);
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*Create)(size_t&#xa0;length);
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CreateFromMask)(size_t&#xa0;length,cha=
r&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Or)(Mask&#xa0;*src1,Mask&#xa0;*src2);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*PopulationCount)(const&#xa0;Mask&#xa0=
;*m);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Set)(Mask&#xa0;*m,size_t&#xa0;idx,int&#x=
a0;val);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(Mask&#xa0;*);
}&#xa0;iMask;

</pre></font>

     <h3><a name=3D"tth_sEc1.2">
1.2</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"And+\container12"></a> <font size=3D"+1"><b>And</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*And)(Mask&#xa0;*src1,Mask&#xa0;*src2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Stores into src1 the result of a logical AND operation between each element=
 of src1 with the corresponding element of src2.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The masks are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation was performed, a negative error code if =
an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container12"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets all elements of the mask to zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the mask was cleared, a negative error code if an erro=
r occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container12"></a> <font size=3D"+1"><b>Copy</b></font>=
 <hr>


<font size=3D"+1"><pre>
Mask&#xa0;*(*Copy)(Mask&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates a new mask and copies the contents of the given one into it.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new mask or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CreateFromMask+\container12"></a> <font size=3D"+1"><b>Creat=
eFromMask</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CreateFromMask)(size_t&#xa0;length,cha=
r&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new mask with the specified length and copies the given data into=
 the mask. Each character in the input data is transformed into the
mask internal representation. The storage is obtained using the CurrentAllo=
cator pointer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The data pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 No memory is available to perform the allocation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new mask or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Create+\container12"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*Create)(size_t&#xa0;length);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new mask with the specified length. The storage is obtained using=
 the CurrentAllocator pointer. The data is initialized to zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 No memory is available to perform the allocation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new mask or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Finalize+\container12"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The memory used by the mask is reclaimed.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the memory was reclaimed, or a negative=
 error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Not+\container12"></a> <font size=3D"+1"><b>Not</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Not)(Mask&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Stores into src the result of a logical NOT operation: each bit is inverted.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation was performed, a negative error code if =
an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Or+\container12"></a> <font size=3D"+1"><b>Or</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Or)(Mask&#xa0;*src1,Mask&#xa0;*src2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Stores into src1 the result of a logical OR operation between each element =
of src1 with the corresponding element of src2.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The masks are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation was performed, a negative error code if =
an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"PopulationCount+\container12"></a> <font size=3D"+1"><b>Popu=
lationCount</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*PopulationCount)(const&#xa0;Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Counts the number of entries different from zero in the given mask, returni=
ng the sum.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number or zero.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Set+\container12"></a> <font size=3D"+1"><b>Set</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Set)(Mask&#xa0;*m,size_t&#xa0;idx,int&#x=
a0;val);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the given position to the given value if the value fits in the interna=
l representation of the mask. If not, an implementation defined
conversion occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The index given is out of bounds.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the value was set or a negative error c=
ode.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Size+\container12"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(Mask&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The number of elements in the mask is returned.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The mask pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of elements. If the mask pointer is &#xa0;NULL , =
the result is zero.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Sizeof+\container12"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(Mask&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The number of bytes used by the given mask. If the argument is &#xa0;NULL t=
he number of bytes of the header structure is returned.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of bytes.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Memory management</h2>
Several interfaces implement different memory allocation strategies. This s=
hould give flexibility to the implementations, allowing it to use several m=
emory allocation strategies within the same container.
<div class=3D"p"><!----></div>
The library starts with the <font size=3D"+1"><tt>default</tt></font> memor=
y manager, that contains pointers to the default C memory management functi=
ons: malloc, free, realloc and calloc. Another memory manager is the <font =
size=3D"+1"><tt>debug</tt></font> memory manager that should implement more=
 checking and=20
maybe offer hooks to the debugger. The sample
implementation shows how to implement several simple checks, but other impl=
ementations can extend this simple interface providing=20
much more sophisticated controls<a href=3D"#tthFtNtACG" name=3D"tthFrefACG"=
><sup>26</sup></a>.

<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"MemoryManagement.png">
<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc2.1">
2.1</a>&#xa0;&#xa0;The default memory manager</h3>
The C language provides several functions to manage memory. The default All=
ocator object is built from the standard C memory allocation functions.

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagAllocator&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*malloc)(size_t);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;(*free)(void&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*realloc)(void&#xa0;*,size_t);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*calloc)(size_t,size_t);
}&#xa0;ContainerAllocator;
extern&#xa0;ContainerAllocator&#xa0;*&#xa0;CurrentAllocator;

</pre></font>
At startup, the CurrentAllocator points to an object constructed with the f=
unctions of the C standard library. This is a required interface.
The user can change at any time the current allocator by making the <font s=
ize=3D"+1"><tt>CurrentAllocator</tt></font> point to a different object. No=
te that this change
does <b>not</b> change the allocators of the containers already created but=
 the allocators of the new containers allocated after the
change is made.

<div class=3D"p"><!----></div>
This is the established procedure to build custom memory allocators to prov=
ide for special alignment requirements, improve speed, allocate objects
from the stack instead of the heap, and many other usages.

<div class=3D"p"><!----></div>
The library can also include a debug version on top of the standard C funct=
ions, offering the same interface. Changing the CurrentAllocator to point t=
o that object allows to switch to the debug version. The debug version of t=
he sample implementation offers:

<ul>
<li>Detection of free() of a memory block not allocated by malloc().
<div class=3D"p"><!----></div>
</li>

<li>
Detection of  writing past the end of the block in some cases.
<div class=3D"p"><!----></div>
</li>

<li>
Detection of freeing a memory block twice.
<div class=3D"p"><!----></div>
</li>
</ul>

<font size=3D"+1"><pre>extern&#xa0;ContainerAllocator&#xa0;iDebugMalloc;

</pre></font>
This interface is optional. The sample implementation documents a possible =
implementation, see =A7<a href=3D"#Malloc"> 8.4.5Debugging malloc</a> on pa=
ge&#xa0;<a href=3D"#Malloc">pageref</a>
.

     <h3><a name=3D"tth_sEc2.2">
2.2</a>&#xa0;&#xa0;The Heap interface: iHeap</h3>
Some containers can benefit from a cacheing memory manager that manages a s=
tock of objects of the same size. This is not required and not all implemen=
tations may provide it. If they do, the interface is:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*UseHeap)(Containe=
r&#xa0;*c);
&#xa0;&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*(*GetHeap)(Container&#xa0;*c);

</pre></font>
In the sample implementation, many complex data structures are implemented =
using a heap. This allows automatically to have an iterator, since for=20
looping all elements of the container it suffices to iterate the underlying=
 heap.
The standard interface for the heap is:<a name=3D"iHeap22"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagContainerHeapInterface&#=
xa0;{
&#xa0;&#xa0;&#xa0;void&#xa0;(*Clear)(ContainerHeap&#xa0;*heap);
&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*(*Create)(size_t&#xa0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*m);
&#xa0;&#xa0;&#xa0;void&#xa0;(*Finalize)(ContainerHeap&#xa0;*heap);
&#xa0;&#xa0;&#xa0;int&#xa0;(*FreeObject)(ContainerHeap&#xa0;*heap,void&#xa0=
;*element);
&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*(*InitHeap)(void&#xa0;*heap,size_t&#x=
a0;nbElements,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*alloca=
tor);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(ContainerHeap&#xa0;*);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*NewObject)(ContainerHeap&#xa0;*heap);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(ContainerHeap&#xa0;*heap);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*it);
}&#xa0;ContainerHeapInterface;

</pre></font>

=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container22"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
ContainerHeap&#xa0;*iHeap.Create(size_t&#xa0;elementSize,&#xa0;Allocator&#x=
a0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new heap object that will use the given memory manager to allocat=
e memory. All elements will have the given size. If the memory manager obje=
ct pointer is &#xa0;NULL , the object pointed by CurrentAllocator will be u=
sed.

<div class=3D"p"><!----></div>
<b>Returns:</b>a pointer to the new heap object or &#xa0;NULL , if an error=
 occurred.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The element size is bigger than what the heap implementation can support..

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitHeap+\container22"></a> <font size=3D"+1"><b>InitHeap</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*&#xa0;(*InitHeap)(void&#xa0;*heap,siz=
e_t&#xa0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the given buffer to a heap header object designed to hold objec=
ts of <font size=3D"+1"><tt>ElementSize</tt></font> bytes. The heap will us=
e the given memory
manager. If the memory manager parameter is &#xa0;NULL the default memory m=
anager is used.

<div class=3D"p"><!----></div>
This function supposes that the <font size=3D"+1"><tt>heap</tt></font> para=
meter points to a contiguous memory space at least enough to hold a <font s=
ize=3D"+1"><tt>ContainerHeap</tt></font> object.
The size of this object can be obtainer by using the <font size=3D"+1"><tt>=
iHeap.Size</tt></font> API with a &#xa0;NULL parameter.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new ContainerHeap object or &#xa0;NULL if there is an erro=
r. Note that the pointer returned can be different from the passed in
pointer due to alignment requirements.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"newObject+\container22"></a> <font size=3D"+1"><b>newObject<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;void&#xa0;*iHeap.newObject(ContainerHeap&#xa0;*heap);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The heap returns a pointer to a new object or &#xa0;NULL if no more memory =
is left.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to an object or &#xa0;NULL if there is not enough =
memory to complete the operation.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"FreeObject+\container22"></a> <font size=3D"+1"><b>FreeObjec=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;size_t&#xa0;iHeap.FreeObject(ContainerHeap&#xa0;*heap,voi=
d&#xa0;*element);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given object to the list of free objects, allowing for recycling o=
f memory without new allocations. The element pointer can be &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The heap pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of objects in the free list.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container22"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;void&#xa0;iHeap.Clear(ContainerHeap&#xa0;*heap);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Releases all memory used by the free list and resets the heap object to its=
 state as it was when created.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The heap pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container22"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;iHeap.Finalize(ContainerHeap&#xa0;*heap);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Destroys all memory used by the indicated heap and frees the heap object it=
self.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The heap pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sizeof+\container22"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;iHeap.Sizeof(ContainerHeap&#xa0;*heap);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of bytes used by the given heap, including the size of t=
he free list. If the argument <font size=3D"+1"><tt>&quot;heap&quot;</tt></=
font> is &#xa0;NULL , the result is the size of the heap header structure (=
i.e. <font size=3D"+1"><tt>sizeof(ContainerHeap)</tt></font>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
void&#xa0;SomeFunction(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buffer[iHeap.Sizeof(NULL)];
&#xa0;&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*ch;

&#xa0;&#xa0;&#xa0;&#xa0;ch&#xa0;=3D&#xa0;iHeap.InitHeap(buffer,200,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...
&#xa0;&#xa0;&#xa0;&#xa0;iHeap.Clear(ch);
}

</pre></font>
This example uses the variable length arrays that have been introduced in t=
he C language by the latest standard (C99). The <font size=3D"+1"><tt>Sizeo=
f</tt></font> function
returns the size of the header object that is used to specify the size of t=
he buffer. The buffer is passed to the <font size=3D"+1"><tt>InitHeap</tt><=
/font> function using
a number of objects of 200 and the default memory allocator.

 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;Pooled memory interface: iPool</h2>
<a name=3D"iPool30"></a>
<img alt=3D"Figure" src=3D"Pool.png">
<div class=3D"p"><!----></div>
Many containers could benefit from a memory pool. A memory pool groups all =
allocations done in a specific context and can be released in a single call=
. This allows the programmer to avoid having to manage each single piece of=
 memory like the basic interface.

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_tagPoolAllocatorInterface&=
#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;Pool&#xa0;&#xa0;*(*Create)(ContainerAllocator&#xa0;=
*m);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;*(*Alloc)(Pool&#xa0;*pool,size_t&#x=
a0;size);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;*(*Calloc)(Pool&#xa0;*pool,size_t&#=
xa0;size);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;&#xa0;(*Clear)(Pool&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;&#xa0;(*Finalize)(Pool&#xa0;*);
}&#xa0;PoolAllocatorInterface;

</pre></font>
Note that there is no realloc function. Pooled memory is often implemented =
without storing the size of the block to cut overhead. Since a realloc func=
tion could be expensive, implementations are not required to provide it.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container30"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Pool&#xa0;*iPool.Create(ContainerAllocator&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new pool object that will use the given memory manager. If m is n=
ull, the object pointed by the CurrentAllocator will be used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new object or &#xa0;NULL if the operation couldn&#x27;t be=
 completed.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Alloc+\container30"></a> <font size=3D"+1"><b>Alloc</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;*iPool.Alloc(Pool&#xa0;*pool,size_t=
&#xa0;size);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Allocates size bytes from the pool pool. If there isn=
&#x27;t enough memory to resize the pool  the result is &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the allocated memory or &#xa0;NULL if error.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Calloc+\container30"></a> <font size=3D"+1"><b>Calloc</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;*iPool.Calloc(Pool&#xa0;*pool,size_=
t&#xa0;n,size_t&#xa0;size);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates n objects of size =DFize&quot; in a single block. All memory is i=
nitialized to zero. If there is no memory left it returns &#xa0;NULL ;

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the allocated memory or &#xa0;NULL if error.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Clear+\container30"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;iPool.Clear(Pool&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the pool and leaves the object as it was when c=
reated.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The pool pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Finalize+\container30"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;&#xa0;iPool.Finalize(Pool&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the pool and destroys the pool object itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The pool pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc4">
4</a>&#xa0;&#xa0;Error handling Interface: iError</h2>
<a name=3D"iError40"></a>
The =EFError&quot; interface provides a default strategy for handling error=
s. The &quot;RaiseError&quot; function will be used as the default error fu=
nction within the creation function for all containers that support a per c=
ontainer instance error function.

<font size=3D"+1"><pre>typedef&#xa0;(*ErrorFunction)(const&#xa0;char&#xa0;*=
,int,...);
typedef&#xa0;struct&#xa0;{
&#xa0;&#xa0;void&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(*RaiseErro=
r)(const&#xa0;char&#xa0;*fname,int&#xa0;code,...);
&#xa0;&#xa0;void&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(*EmptyErro=
rFunction)(const&#xa0;char&#xa0;*fname,int&#xa0;code,...);
&#xa0;&#xa0;const&#xa0;char&#xa0;*(*StrError)(int&#xa0;errorCode);
&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(ErrorFunction);
&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(*Null=
PtrError)(const&#xa0;char&#xa0;*);
}&#xa0;ErrorInterface;

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"RaiseError+\container40"></a> <font size=3D"+1"><b>RaiseErro=
r</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;void&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(const&#xa0;=
char&#xa0;*fname,int&#xa0;errcode,...);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The parameter &quot;fname&quot; should be the name of the function where th=
e error occurs. The =EBrrcode&quot; parameter is a negative error code. The=
 actual value of the code is defined for the cases mentioned in the section=
 <a href=3D"#errorcodes"> 2.4.1Return code</a>. Other negative values can b=
e defined by the implementation.

<div class=3D"p"><!----></div>
Other parameters can be passed depending on the error. The sample implement=
ation never passes anything else but the name of the function where the
error occurs and the error code.

<div class=3D"p"><!----></div>
The behavior of the default error function is implementation specific. In t=
he sample code this function will just print the error message in the stand=
ard error stream. Other implementations could end the program, log the erro=
r into a error stream, or do nothing.

<div class=3D"p"><!----></div>
<b>Returns:</b>No return value

<div class=3D"p"><!----></div>
=20
<br><a name=3D"EmptyErrorFunction+\container40"></a> <font size=3D"+1"><b>E=
mptyErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;void&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.EmptyErrorFunction(con=
st&#xa0;char&#xa0;*fname,int&#xa0;errcode,...);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function can be used to ignore all errors within the library. It does =
nothing.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"StrError+\container40"></a> <font size=3D"+1"><b>StrError</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;const&#xa0;char&#xa0;*iError.StrError(int&#xa0;errorCode);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Converts the given error code in a character string. If the error code does=
n&#x27;t correspond to any error defined by the implementation a character =
string=20
with an implementation defined value is returned.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetErrorFunction+\container40"></a> <font size=3D"+1"><b>Set=
ErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;ErrorFunction&#xa0;iError.SetErrorFunction(ErrorFunction);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Changes the value of the default error function. If its argument is &#xa0;N=
ULL , nothing is done, and the call is interpreted as a query of the curren=
t value.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the default error function.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"NullPtrError+\container40"></a> <font size=3D"+1"><b>NullPtr=
Error</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*NullPtrError)(const&#xa0;char&#xa0;*msg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This is a utility function equivalent to:

<font size=3D"+1"><pre>int&#xa0;NullPtrError(const&#xa0;char&#xa0;*fname)
{
&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(fname,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_BADARG;
}

</pre></font>

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc5">
5</a>&#xa0;&#xa0;The iterator interface</h2>
<img alt=3D"Figure" src=3D"Iterator.png">
<div class=3D"p"><!----></div>
The iterator object exposes at least the functions &quot;GetFirst&quot;, fo=
r initializing the loop, and &quot;GetNext&quot;, for getting the next elem=
ent in the sequence.=20
The functions &quot;NewIterator&quot; and &quot;deleteIterator&quot; are sp=
ecific to each container interface even if they all have the same syntax.

     <h3><a name=3D"tth_sEc5.1">
5.1</a>&#xa0;&#xa0;The interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_Iterator&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetNext)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetPrevious)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetFirst)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetCurrent)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetLast)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*Seek)(Iterator&#xa0;*it,size_t&#xa0;po=
s);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Replace)(Iterator&#xa0;*it,&#xa0;void&#x=
a0;*data,&#xa0;int&#xa0;drection);
}&#xa0;Iterator;

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetCurrent+\container51"></a> <font size=3D"+1"><b>GetCurren=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetCurrent)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Returns the element at the cursor position.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the current element or &#xa0;NULL , if the container is empty =
or an error occurs. If the container is read-only, a pointer to a copy of t=
he element is returned. This pointer is valid only until the next iterator =
function is called.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetFirst+\container51"></a> <font size=3D"+1"><b>GetFirst</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetFirst)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function initializes the given iterator to the first element in the co=
ntainer. For sequential operators this is the element with index zero. In=20
associative operators which element is the first is implementation defined =
and can change if elements are added or removed from the container.

<div class=3D"p"><!----></div>
If the container is empty the result is &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the first element or &#xa0;NULL , if the container is empty or=
 an error occurs. If the container is read-only, a pointer to a copy of the=
 element=20
is returned. This pointer is valid only until the next iterator function is=
 called.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Iterator&#xa0;*myIterator;
List&#xa0;*myList;
myType&#xa0;*obj;&#xa0;//&#xa0;&quot;myList&quot;&#xa0;stores&#xa0;objects&=
#xa0;of&#xa0;type&#xa0;&quot;myType&quot;
myIterator&#xa0;=3D&#xa0;iList.NewIterator(myList);&#xa0;//&#xa0;Request&#x=
a0;iterator
for&#xa0;(obj&#xa0;=3D&#xa0;myIterator-&gt;GetFirst(myIterator);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;obj&#xa0;!=3D&#xa0;NULL;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;obj&#xa0;=3D&#xa0;myIterator-&gt;GetNext(myIt=
erator))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//Use&#xa0;obj&#xa0;here
}
iList.deleteIterator(myIterator);&#xa0;//&#xa0;Reclaim&#xa0;memory

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetNext+\container51"></a> <font size=3D"+1"><b>GetNext</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetNext)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Positions de cursor at the next element and returns a pointer to its conten=
ts. If the iterator is at the end of the container the result is &#xa0;NULL=
=20
and the iterator remains at the last position, a subsequent call to GetCurr=
ent returns the last element.

<div class=3D"p"><!----></div>
If the container is read-only, a pointer to a copy of the object is returne=
d. This pointer is valid only until the next iterator function is called.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 The container has been modified and the iterator is invalid. Further calls=
 always return &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the next element or &#xa0;NULL , if the cursor reaches the las=
t element. If the container is read-only, a pointer to a copy of the elemen=
t is=20
returned, valid until the next element is retrieved
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetPrevious+\container51"></a> <font size=3D"+1"><b>GetPrevi=
ous</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetPrevious)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Positions de cursor at the previous element and returns a pointer to its co=
ntents. If the pointer is at the beginning of the container the
result is &#xa0;NULL and the iterator remains at the beginning, a subsequen=
t call to GetCurrent will return the first element of the container.

<div class=3D"p"><!----></div>
This function is meaningful only in sequential containers. Its existence in=
 associative containers is implementation defined. Even in sequential=20
containers, it can be very expensive to find a previous element, for instan=
ce in single linked lists. In those cases it can always return &#xa0;NULL .

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 The container has been modified and the iterator is invalid. Further calls=
 always return &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the previous element or &#xa0;NULL , if the cursor reached the=
 first element already. If the container is read-only, a pointer to a copy =
of the=20
element is returned.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Iterator&#xa0;*myIterator;
List&#xa0;*myList;
myType&#xa0;*obj;&#xa0;//&#xa0;&quot;myList&quot;&#xa0;stores&#xa0;objects&=
#xa0;of&#xa0;type&#xa0;&quot;myType&quot;
myIterator&#xa0;=3D&#xa0;iList.NewIterator(myList);&#xa0;//&#xa0;Request&#x=
a0;iterator
for&#xa0;(obj&#xa0;=3D&#xa0;myIterator-&gt;GetLast(myIterator);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;obj&#xa0;!=3D&#xa0;NULL;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;obj&#xa0;=3D&#xa0;myIterator-&gt;GetPrevious(=
myIterator))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//Use&#xa0;obj&#xa0;here
}
iList.deleteIterator(myIterator);&#xa0;//&#xa0;Reclaim&#xa0;memory

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetLast+\container51"></a> <font size=3D"+1"><b>GetLast</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetLast)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Positions the cursor at the last element and returns a pointer to it. Retur=
ns &#xa0;NULL if the container is empty.  If the container is read-only, a =
pointer=20
to a copy of the element is returned.

<div class=3D"p"><!----></div>
This function is meaningful only in sequential containers. Its existence in=
 associative containers is implementation defined. Even in sequential=20
containers, it can be very expensive to find the last element, for instance=
 in single linked lists. In those cases it can always return &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 The container has been modified and the iterator is invalid. Further calls=
 always return &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Seek+\container51"></a> <font size=3D"+1"><b>Seek</b></font>=
 <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*Seek)(Iterator&#xa0;*it,size_t&#xa0;pos);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Positions the given iterator at the indicated position and then returns a p=
ointer to the element&#x27;s data at that position.=20
If the position is bigger than the last element of the container, the last =
element position will be used.

<div class=3D"p"><!----></div>
This function is supported in sequential containers only.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 The container has been modified and the iterator is invalid. Further calls=
 always return &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the data of the given element or &#xa0;NULL if an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Replace+\container51"></a> <font size=3D"+1"><b>Replace</b><=
/font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Replace)(Iterator&#xa0;*it,void&#xa0;*data,&#xa0;int&#xa0;direct=
ion);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the current object pointed by the given iterator with the new data=
. If the
<font size=3D"+1"><tt><i>data</i></tt></font>
 argument is &#xa0;NULL the element is erased from the
container. If the=20
<font size=3D"+1"><tt><i>direction</i></tt></font>
 parameter is different from zero, in sequential containers the iterator wi=
ll point to the next element,
otherwise it will point to the previous element. In associative containers =
this parameter is ignored and the iterator is always set to the next
element, if any.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_OBJECT_CHANGED

 The container has been modified and the iterator is invalid. Further calls=
 always return &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The container is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if the element was changed or erased, zero =
if the container was empty, or a negative error code if an error occurred.

<div class=3D"p"><!----></div>

 <h2><a name=3D"tth_sEc6">
6</a>&#xa0;&#xa0;The observer interface</h2>
<a name=3D"observer60"></a>
In its general form, the observer design pattern can be defined as a one-to=
-many dependency between objects so that when one object=20
changes state, all its dependents are notified and updated automatically.=20

<div class=3D"p"><!----></div>
When a container changes its state, specifically when elements are added or=
 removed, it is sometimes necessary to update relationships that=20
can be very complex.
The observer interface is designed to simplify this operation by allowing t=
he container to emit <i>notifications</i> to other objects that have=20
previously manifested interest in receiving them by <i>subscribing</i> to t=
hem. In general notifications are sent only when one of the defined
operations for a container occur, mostly operations that change the number =
of elements.

<div class=3D"p"><!----></div>
This interface then, establishes a relationship between two software entiti=
es:

<ol type=3D"1">
<li> The container, that is responsible for sending the notifications when =
appropriate
<div class=3D"p"><!----></div>
</li>

<li> The receiver, that is an unspecified object represented by its callbac=
k function that is called when a change occurs that matches the
notifications specified in the subscription.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
Since this relationship needs both objects, it will be finished when either=
 object goes out of scope or breaks the relationship for whatever=20
reason. Both objects can unsubscribe (terminate) their relationship.

     <h3><a name=3D"tth_sEc6.1">
6.1</a>&#xa0;&#xa0;Caveats</h3>

<ul>
<li>It is in general a bad idea to modify the object being observed during =
a notification since this could trigger other notification
messages. Implementations are not required to avoid this situation that is =
the responsability of the programmer. Contrary to the iterator interface
no error is issued when a possible infinite loop is started. Implementation=
s may catch the error by limiting the number of recursive
invocations of this interface but they are not required to do so.
<div class=3D"p"><!----></div>
</li>

<li>
Since all messages sent by the containers have different type of informatio=
n in the same two arguments that each message is associated with,
there is no possible compile time control of the usage of the received poin=
ters or numbers. The observer function must correctly=20
discriminate between the different messages it can receive<a href=3D"#tthFt=
NtACH" name=3D"tthFrefACH"><sup>27</sup></a>.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc6.2">
6.2</a>&#xa0;&#xa0;The interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;void&#xa0;(*ObserverFunction)(const&#xa=
0;void&#xa0;*ObservedObject,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Operation,&#x=
a0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraInfo[]);

typedef&#xa0;struct&#xa0;tagObserverInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Subscribe)(void&#xa0;*ObservedObject,&#x=
a0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ObserverFunction&#xa0;ca=
llback,&#xa0;unsigned&#xa0;Operations);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Notify)(const&#xa0;void&#xa0;*ObservedOb=
ject,unsigned&#xa0;operation,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraInfo1,void&#xa0;*ExtraInfo=
2);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Unsubscribe)(void&#xa0;*ObservedObjec=
t,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;ObserverFunction&#xa0;callback);
}&#xa0;ObserverInterface;
extern&#xa0;ObserverInterface&#xa0;iObserver;

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"ObserverFunction+\container62"></a> <font size=3D"+1"><b>Obs=
erverFunction</b></font> <hr>


<font size=3D"+1"><pre>
typedef&#xa0;void&#xa0;(*ObserverFunction)(void&#xa0;*ObservedObject,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Operation,&#x=
a0;void&#xa0;*ExtraInfo[]);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function will be called by the interface when a notification is receiv=
ed for an observed object.  The call happens after all arguments have been =
processed, the actual work of the function is finished (when adding an obje=
ct) or not yet done (when destroying an object).=20
The container is in a consistent state. For the callbacks that are called w=
hen an object is deleted from a
container the call happens before any call to <font size=3D"+1"><tt>free()<=
/tt></font> and before any call to a destructor (if any) is done. For the c=
alls that add an object
the callback is called after the container has been modified.=20

<div class=3D"p"><!----></div>
Arguments:

<ol type=3D"1">
<li> <font size=3D"+1"><tt>ObservedObject</tt></font>: Specifies the object=
 that sends the notification, i.e. the container
that has the subscription. It is assumed that this container conforms to th=
e <font size=3D"+1"><tt>iGeneric</tt></font> interface.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Operation</tt></font>: The operation that provok=
ed the notification. Since it is possible to subscribe to several operation=
s with only one callback function,
this argument allows the callback to discriminate between the operation not=
ifications.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>ExtraInfo</tt></font>: This argument is specific=
 to each operation and conveys further information<a href=3D"#tthFtNtACI" n=
ame=3D"tthFrefACI"><sup>28</sup></a> for each operation.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
None of the arguments will be ever &#xa0;NULL or zero.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Subscribe+\container62"></a> <font size=3D"+1"><b>Subscribe<=
/b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Subscribe)(void&#xa0;*ObservedObject,&#xa0;ObserverFunction&#xa0=
;callback,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Operations);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function establishes the relationship between the observed object (arg=
ument 1) and the observer, represented by its callback (argument 2).
The third argument establishes which operations are to be observed.
This operation performs an allocation to register the relationship in the o=
bserver interface tables, therefore it can fail with an out of memory condi=
tion.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The observed object pointer is &#xa0;NULL , the callback function pointer =
is &#xa0;NULL , or the operations argument is zero.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to proceed.

<div class=3D"p"><!----></div>
<b>Returns:</b>An integer greater than zero if the relationship was establi=
shed, a negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Notify+\container62"></a> <font size=3D"+1"><b>Notify</b></f=
ont> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Notify)(void&#xa0;*ObservedObject,unsigned&#xa0;Operation,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraInfo1,void&#xa0;*ExtraInfo=
2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function will be used by the container to send a message to the receiv=
er callback. The arguments correspond roughly to the arguments the callback
function will receive. &quot;Notify&quot; will call all the objects that ar=
e observing <font size=3D"+1"><tt>ObservedObject</tt></font> and that have =
subscribed to one of the=20
operations
specified in the <font size=3D"+1"><tt>Operation</tt></font> argument. This=
 implies a search through the observer interface table, and possibly severa=
l calls, making
this function quite expensive. The time needed is roughly proportional to t=
he number of registered callbacks and the complexity of the callbacks
themselves.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The ObservedObject pointer is &#xa0;NULL or the Operation argument is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number with the number of objects that received t=
he notifications, zero if there was no match for the combination of observe=
d object and operations specified, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Unsubscribe+\container62"></a> <font size=3D"+1"><b>Unsubscr=
ibe</b></font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Unsubscribe)(void&#xa0;*ObservedObject,&#xa0;ObserverFunction=
&#xa0;callback);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function breaks the relationship between the observed object and the o=
bserver. There are several combinations of both arguments:

<ul>
<li> The <font size=3D"+1"><tt>ObservedObject</tt></font> argument is &#xa0=
;NULL . This means that the <font size=3D"+1"><tt>callback</tt></font> obje=
ct wants to break its relationship to all objects it is
observing. The observer interface will remove all relationships that contai=
n this callback from its tables.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>callback</tt></font> argument is &#xa0;NULL =
. This means that the given <font size=3D"+1"><tt>ObservedObject</tt></font=
> is going out of scope and wants to break all
relationships to all its observers. The interface removes from its tables a=
ll relationships that have this object as the observed object.
This happens normally immediately after the notification <font size=3D"+1">=
<tt>FINALIZE</tt></font> is sent.
<div class=3D"p"><!----></div>
</li>

<li> If both <font size=3D"+1"><tt>callback</tt></font> and <font size=3D"+=
1"><tt>ObservedObject</tt></font> are non &#xa0;NULL , only the matching re=
lationships will be removed from the tables.
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc6.3">
6.3</a>&#xa0;&#xa0;Notifications messages</h3>

<div class=3D"p"><!----></div>
<a name=3D"tth_tAb1">
</a>=20
<center>     =20
<table>
<tbody><tr><td width=3D"98"><b>Operation</b> </td><td width=3D"197"><b>Argu=
ment 1</b> </td><td width=3D"177"><b>Argument 2</b></td></tr>
<tr><td width=3D"98"></td></tr>

<tr><td width=3D"98">
<div class=3D"p"><!----></div>

<div class=3D"p"><!----></div>
 </td></tr>
<tr><td width=3D"98"><b>Operation</b> </td><td width=3D"197"><b>Argument 1<=
/b> </td><td width=3D"177"><b>Argument 2</b></td></tr>
<tr><td width=3D"98"></td></tr>

<tr><td width=3D"98">Add</td><td width=3D"197">Pointer to the new object</t=
d><td width=3D"177">&#xa0;NULL or slice specs if any</td></tr>
<tr><td width=3D"98">AddRange</td><td width=3D"197">A <font size=3D"+1"><tt=
>size_t</tt></font> with the number of objects added</td><td width=3D"177">=
Pointer to a table of <i>n</i> elements that were added</td></tr>
<tr><td width=3D"98">Append</td><td width=3D"197">A pointer to the object b=
eing appended. It is of the same type as the object emitting the notificati=
on</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Clear</td><td width=3D"197">Pointer to the container b=
eing cleared</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Copy</td><td width=3D"197">Pointer to the copy of the =
container</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Erase</td><td width=3D"197">Pointer to the object bein=
g deleted. The object is still valid</td><td width=3D"177">&#xa0;NULL </td>=
</tr>
<tr><td width=3D"98">EraseAt</td><td width=3D"197">Pointer to object being =
deleted</td><td width=3D"177">Position (as size_t)</td></tr>
<tr><td width=3D"98">Finalize</td><td width=3D"197">&#xa0;NULL </td><td wid=
th=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Insert</td><td width=3D"197">Pointer to the new object=
 being inserted</td><td width=3D"177">A <font size=3D"+1"><tt>size_t</tt></=
font> with the position of the object being inserted if applicable</td></tr>
<tr><td width=3D"98">InsertIn</td><td width=3D"197">Pointer to the object b=
eing inserted, that has the same type as the object sending the notificatio=
n</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Pop</td><td width=3D"197">Pointer to the object being =
popped</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">Push</td><td width=3D"197">Pointer to the object being=
 pushed</td><td width=3D"177">&#xa0;NULL </td></tr>
<tr><td width=3D"98">ReplaceAt</td><td width=3D"197">Pointer to the old val=
ue</td><td width=3D"177">Pointer to the new value</td></tr>
<tr><td width=3D"98"></td></tr></tbody></table>
</center>
<div class=3D"p"><!----></div>
Here is a complete example that demonstrates some of the above functions.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
include&#xa0;&quot;containers.h&quot;
static&#xa0;void&#xa0;fn(void&#xa0;*ObservedObject,&#xa0;unsigned&#xa0;oper=
ation,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;void&#xa0;*extraInfo[])
{
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Object&#xa0;is&#xa0;%p,&#xa0;operation=
&#xa0;is&#xa0;%d\n&quot;,ObservedObject,operation);
}
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;ValArrayInt&#xa0;*&#xa0;vInt&#xa0;=3D&#xa0;iValArra=
yInt.CreateSequence(24,0,1);

&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original&#xa0;array:&#xa0;\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,stdout,&quot;%d&#xa0;&quo=
t;);
&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Subscribe(vInt,fn,CCL_ADD|CCL_FINALIZE);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Adding&#xa0;an&#xa0;integer\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Add(vInt,4096);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,stdout,&quot;%d&#xa0;&quo=
t;);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Finalize(vInt);
}
OUTPUT:
Original&#xa0;array:&#xa0;
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#x=
a0;11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;=
20&#xa0;21&#xa0;22&#xa0;23&#xa0;
Adding&#xa0;an&#xa0;integer
Object&#xa0;is&#xa0;0x100100080,&#xa0;operation&#xa0;is&#xa0;1
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#x=
a0;11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;=
20&#xa0;21&#xa0;22&#xa0;23&#xa0;4096&#xa0;
Object&#xa0;is&#xa0;0x100100080,&#xa0;operation&#xa0;is&#xa0;16

</pre></font>
We setup our observer function calling the Subscribe API. We request to be =
notified when there is an addition and when the object
finalizes. Our callback function does nothing but print some of its argumen=
ts. We see that we get called when the requested operations are performed.

 <h1><a name=3D"tth_chAp5">
Chapter 5 </a><br>The containers</h1>
<a name=3D"List03"></a>
 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;The List interfaces: iList, iDlist</h2>
The list container appears in two flavors:=20

<ul>
<li>single linked lists: the iList type
<div class=3D"p"><!----></div>
</li>

<li>
double linked lists the iDlist type
<div class=3D"p"><!----></div>
</li>
</ul>
The space overhead of single linked lists is smaller at the expense of more=
 difficult access to the elements. It is up to the application programmer t=
o decide which container fits best in his/her application
<a href=3D"#tthFtNtACJ" name=3D"tthFrefACJ"><sup>29</sup></a>.

<div class=3D"p"><!----></div>
It is often more efficient to get the next element from a list starting wit=
h the previous element instead of searching the whole list starting from th=
e beginning. For this, the list and the Dlist containers provide:


<ul>     =20
<li> <font size=3D"+1"><tt>FirstElement</tt></font> Start of the list
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>LastElement</tt></font> End of the list
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>NextElement</tt></font> Returns a pointer to the=
 next element
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>PreviousElement</tt></font> Only in double linke=
d lists. Returns a pointer to the previous element.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>ElementData</tt></font> Extracts a pointer to th=
e element data
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>SetElementData</tt></font> Modifies one element =
of the list.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Advance</tt></font> Returns the data of an eleme=
nt and advances the given pointer in one operation.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>MoveBack</tt></font> Returns the data of an elem=
ent and moves back the pointer one element. This operation is available onl=
y in double linked lists.

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
These operations can&#x27;t be done in a read-only list.

<div class=3D"p"><!----></div>
The exact layout of the <font size=3D"+1"><tt>ListElement</tt></font> struc=
ture is undefined and private to each implementation. This is the reason fo=
r providing the <font size=3D"+1"><tt>ElementData</tt></font> function: it =
hides the exact position and layout of the data from user code, that remain=
s independent from implementation details.

<div class=3D"p"><!----></div>
The interfaces of both containers are very similar. Double linked lists sup=
port all functions in single linked ones, and add a few more. To avoid unne=
cessary repetition we document here all the single linked list interface, t=
hen only the functions that the Dlist interface adds to it.
<a name=3D"iList10"></a><a name=3D"lists+single linked10"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagListInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(List&#xa0;*L,const&#xa0;void&#xa0;*newval=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(List&#xa0;*L,&#xa0;size_t&#xa0;n,con=
st&#xa0;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Advance)(ListElement&#xa0;**pListElement);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(List&#xa0;*l1,List&#xa0;*l2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(List&#xa0;*L,int(Applyfn)(void&#xa0;*,v=
oid&#xa0;*),void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Back)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(List&#xa0;*L);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;List&#xa0;*L,const&#xa0;v=
oid&#xa0;*element);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*Copy)(const&#xa0;List&#xa0;*L);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;List&#xa0;*list,size_t=
&#xa0;idx,void&#xa0;*OutBuffer);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*Create)(size_t&#xa0;element_size);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerA=
llocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*ElementData)(ListElement&#xa0;*le);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;List&#xa0;*l1,const&#xa0;Lis=
t&#xa0;*l2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(List&#xa0;*L,const&#xa0;void&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(List&#xa0;*l,const&#xa0;void&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(List&#xa0;*L,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseRange)(List&#xa0;*L,size_t&#xa0;start,siz=
e_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(List&#xa0;*L);
&#xa0;&#xa0;&#xa0;ListElement&#xa0;*(*FirstElement)(List&#xa0;*l);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Front)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;List&#xa0;*list);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;List&#xa0;*L,size_t&#=
xa0;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;List&#xa0;*L);
&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*(*GetHeap)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*GetRange)(const&#xa0;List&#xa0;*l,size_t&#xa=
0;start,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(const&#xa0;List&#xa0;*L,const&#xa0;vo=
id&#xa0;*SearchedElement,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs,size_t=
&#xa0;*result);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*Init)(List&#xa0;*aList,size_t&#xa0;element_s=
ize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(List&#xa0;*L,void&#xa0;*buf);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*InitWithAllocator)(List&#xa0;*aList,size_t&#=
xa0;element_size,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerA=
llocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*InitializeWith)(size_t&#xa0;elementSize,size=
_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;=
*data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(List&#xa0;*L,size_t&#xa0;idx,const&#=
xa0;void&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(List&#xa0;*l,&#xa0;size_t&#xa0;idx,L=
ist&#xa0;*newData);
&#xa0;&#xa0;&#xa0;ListElement&#xa0;*(*LastElement)(List&#xa0;*l);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunction&#=
xa0;loadFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(List&#xa0;*L);
&#xa0;&#xa0;&#xa0;ListElement&#xa0;*(*NextElement)(ListElement&#xa0;*le);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopFront)(List&#xa0;*L,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(List&#xa0;*L,const&#xa0;void&#xa0;*=
str);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveRange)(List&#xa0;*l,size_t&#xa0;start,&#=
xa0;size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(List&#xa0;*L,size_t&#xa0;idx,const&=
#xa0;void&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(List&#xa0;*l);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(List&#xa0;*l,&#xa0;size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(List&#xa0;*l,size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;List&#xa0;*L,FILE&#xa0;*strea=
m,&#xa0;SaveFunction&#xa0;saveFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Select)(List&#xa0;*src,const&#xa0;Mask&#xa0;*m=
);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*SelectCopy)(const&#xa0;List&#xa0;*src,const&=
#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;(*SetCompareFunction)(List&#xa0;*l,C=
ompareFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(List&#xa0;*v,Des=
tructorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetElementData)(List&#xa0;*l,&#xa0;ListElement=
&#xa0;*le,void&#xa0;*data);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(List&#xa0;*L,Error=
Function);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(List&#xa0;*L,unsigned&#xa0;flag=
s);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;List&#xa0;*L);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;List&#xa0;*);
&#xa0;&#xa0;&#xa0;ListElement&#xa0;*(*Skip)(ListElement&#xa0;*l,size_t&#xa0=
;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(List&#xa0;*l);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*SplitAfter)(List&#xa0;*l,&#xa0;ListElement&#=
xa0;*pt);
&#xa0;&#xa0;&#xa0;int&#xa0;(*UseHeap)(List&#xa0;*L,&#xa0;const&#xa0;Contain=
erAllocator&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;ListInterface;

</pre></font>


<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"ListVocabulary.png">

     <h3><a name=3D"tth_sEc1.1">
1.1</a>&#xa0;&#xa0;General remarks</h3>
Lists are containers that store each element in a sequence, unidirectionall=
y (single linked lists) or bidirectionally (double linked lists).
The advantage of linked lists is their flexibility. You can easily and with=
 a very low cost remove or add elements by manipulating the links between t=
he elements. Single linked lists have less overhead than their double linke=
d counterparts (one pointer less in each node), but they tend to use a lot =
of computer power when inserting elements near the end of the list: you hav=
e to follow all links from the beginning until you find the right one.

<div class=3D"p"><!----></div>
The list nodes themselves do not move around, only their links are changed.=
 This can be important if you maintain pointers to those elements. Obviousl=
y, if you delete a node, its contents (that do not move) could be recycled =
to contain something else than what you expect.

<div class=3D"p"><!----></div>
The iList interface consists (as all other interfaces) of a table of functi=
on pointers. The interface describes the behavior of the List container.

<div class=3D"p"><!----></div>
The stack operations push and pop are provided with PushFront and PopFront =
because they have a very low cost, insertion at the start of a single linke=
d list is very fast. PushBack is the equivalent of the <font size=3D"+1"><t=
t>Add</tt></font> operation, but PopBack would have a very high cost since =
it would need going through all the list.=20

<div class=3D"p"><!----></div>
The list container features in some implementations a per list error functi=
on.  This is the function that will be called for any errors, except in =20
cases where no list object exists: the creation function, or the error of g=
etting a &#xa0;NULL pointer instead of a list pointer. In those cases the g=
eneral=20
iError interface is used, and iError.RaiseError is called. The default valu=
e of the list error function is the function iError.RaiseError at the momen=
t=20
the list is created.

<div class=3D"p"><!----></div>
Other implementations of this interface may specialize list for a certain c=
ategory of uses: lists of a few elements would try to reduce overhead by=20
eliminating a per list error function and replace it with the standard erro=
r function in iError, for instance, eliminating their fields in the header.=
=20
If the read-only flag support is dropped, the whole &quot;Flags&quot; field=
 can be eliminated. In such an implementation, the SetFlags primitive would=
 always=20
return an error code.

<div class=3D"p"><!----></div>
The sample implementation of the list container supports the following stat=
e flags:

<font size=3D"+1"><pre>#define&#xa0;CONTAINER_READONLY&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;1

</pre></font>
If this flag is set, no modifications to the container are allowed, and the=
 Clear and Finalize functions will not work. Only copies of the data are=20
handed out, no direct pointers to the data are available.

<font size=3D"+1"><pre>#define&#xa0;CONTAINER_SORTED_FRONT&#xa0;&#xa0;&#xa0=
;&#xa0;&#xa0;&#xa0;2
#define&#xa0;CONTAINER_SORTED_BACK&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0=
;4

</pre></font>
If this flag is set, the container is maintained always in sorted order, wi=
th the biggest element at the index zero for <font size=3D"+1"><tt>CONTAINE=
R_SORTED_FRONT</tt></font>
or with the biggest element at the end if <font size=3D"+1"><tt>CONTAINER_S=
ORTED_BACK</tt></font> is set. It is an error if both flags are set, and th=
e results in that  case
are implementation defined.

      <h4><a name=3D"tth_sEc1.1.1">
1.1.1</a>&#xa0;&#xa0;Specializations</h4>
All =DFpecialized&quot; containers share the same interface with the follow=
ing exceptions:


<ul>     =20
<li> The functions where a <font size=3D"+1"><tt>void&#xa0;*</tt></font> to=
 the element data is passed or where a <font size=3D"+1"><tt>void&#xa0;*</t=
t></font> is the result of the operation are replaced with the=20
actual data type of the specialization. For instance the <font size=3D"+1">=
<tt>GetElement</tt></font> API instead of returning a void pointer returns =
a pointer to the specific=20
data type: an=20
integer for <font size=3D"+1"><tt>intList</tt></font>, a double for <font s=
ize=3D"+1"><tt>doubleList</tt></font> etc.
<div class=3D"p"><!----></div>
</li>

<li> The creation and initialization functions that construct a new contain=
er receive one argument less than its generic counterparts since the
size of each element is fixed.

<div class=3D"p"><!----></div>
To make things clear and to save work from the library user some specializa=
tions are delivered with the sample implementation to show how a
<i>file templated</i> container looks like.

<div class=3D"p"><!----></div>
</li>
</ul>


<center>
<img alt=3D"Figure" src=3D"ListContainerSpecializations.png">
</center>
In the right side of the drawing we see the generic list container using ge=
neric pointers (<font size=3D"+1"><tt>void&#xa0;*</tt></font>) and the stri=
nglist container. Strings are=20
special because in C their length is the result of a function call instead =
of being fixed like other data types.

<div class=3D"p"><!----></div>
In the left side, we see three specialized containers for some numeric data=
 types. Those containers are generated using two types of source files:


<ul>     =20
<li> Parameter files: They define the data type and some other parameters l=
ike the comparison expression.
<div class=3D"p"><!----></div>
</li>

<li> Templated files: They implement the specialized container. The pre-pro=
cessor does the editing work on the templated file to yield several=20
different type definitions. Using this interface has the advantage of ensur=
ing compile time checking of the arguments to the API, what is not
possible using generic pointers.

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container11"></a> <font size=3D"+1"><b>Add</b></font> <=
hr>


<font size=3D"+1"><pre>
int&#xa0;(*Add)(List&#xa0;*l,const&#xa0;void&#xa0;*data);
int&#xa0;(*Add)(TYPEList&#xa0;*l,&#xa0;TYPE&#xa0;data);

</pre></font>

<div class=3D"p"><!----></div>

  <b>Description:</b>=20
Adds the given element to the container. In its generic form it is assumed =
that &quot;data&quot; points to a contiguous memory area of at least Elemen=
tSize=20
bytes. Inits specialized form the data is passed by value. Returns a value =
greater than zero if the addition of the element to the list completed=20
successfully, a negative error code otherwise.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the data pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input data is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the element was added or a negative error code otherwi=
se.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
/*&#xa0;This&#xa0;example&#xa0;shows&#xa0;how&#xa0;to:&#xa0;
(1)&#xa0;Create&#xa0;a&#xa0;linked&#xa0;list&#xa0;of&#xa0;&quot;double&quot=
;&#xa0;data
(2)&#xa0;Fill&#xa0;it&#xa0;using&#xa0;the&#xa0;&quot;Add&quot;&#xa0;function
(3)&#xa0;Print&#xa0;it&#xa0;using&#xa0;the&#xa0;GetElement&#xa0;function&#x=
a0;*/
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;PrintList(List&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iList.Size(AL);i++)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,*(double&#xa0;*)iList.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
static&#xa0;void&#xa0;FillList(List&#xa0;*&#xa0;AL,size_t&#xa0;siz)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;siz;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(AL,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;}
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*AL&#xa0;=3D&#xa0;iList.Create(sizeof(dou=
ble));
&#xa0;&#xa0;&#xa0;&#xa0;FillList(AL,10);
&#xa0;&#xa0;&#xa0;&#xa0;PrintList(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9

</pre></font>
Using the templated container implementation:

<font size=3D"+1"><pre>#include&#xa0;&lt;containers.h&gt;
#include&#xa0;&lt;doublelist.h&gt;
static&#xa0;void&#xa0;PrintList(doubleList&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;idoubleList.Size(AL);i++=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,idoubleList.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
static&#xa0;void&#xa0;FillList(doubleList&#xa0;*&#xa0;AL,size_t&#xa0;siz)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;siz;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleList.Add(AL,(double)=
i);
&#xa0;&#xa0;&#xa0;&#xa0;}
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*AL&#xa0;=3D&#xa0;idoubleList.Creat=
e();
&#xa0;&#xa0;&#xa0;&#xa0;FillList(AL,10);
&#xa0;&#xa0;&#xa0;&#xa0;PrintList(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Advance+\container11"></a> <font size=3D"+1"><b>Advance</b><=
/font> <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*Advance)(ListElement&#xa0;**ppElement);
TYPE&#xa0;*(*Advance)(TYPEListElement&#xa0;**ppElement);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Given the address of a pointer to an element, it returns a pointer to the d=
ata stored into that element and writes the address of the next element
into its argument <font size=3D"+1"><tt>ppElement</tt></font>. If ppElement=
 is&#xa0;NULL it returns&#xa0;NULL . If <font size=3D"+1"><tt>*ppElement</t=
t></font> is&#xa0;NULL it also returns&#xa0;NULL , and obviously there=20
is no advancing done.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the data stored in the given element or&#xa0;NU=
LL if the data can&#x27;t be retrieved.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"AddRange+\container11"></a> <font size=3D"+1"><b>AddRange</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(List&#xa0;*&#xa0;AL,size_t&#xa=
0;n,&#xa0;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(TYPEList&#xa0;*&#xa0;AL,size_t=
&#xa0;n,&#xa0;TYPE&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the n given elements to the end of the container. It is the same opera=
tions as the PushBack operation. It is assumed that &quot;data&quot; points=
 to a=20
contiguous memory area of at least n*ElementSize bytes. If <i>n</i> is zero=
 no error is issued even if the array pointer or the data pointer are=20
&#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the data pointers are &#xa0;NULL , and n is not zero.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Append+\container11"></a> <font size=3D"+1"><b>Append</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(List&#xa0;*list1,List&#xa0;*list=
2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Appends the contents of list2 to list1 and destroys list2.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either list1 or list2 are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 One or both lists are read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The size of the elements in the lists differ, or the lists allocators are =
different <a href=3D"#tthFtNtADA" name=3D"tthFrefADA"><sup>30</sup></a>.=20

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code other=
wise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;PrintList(List&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iList.Size(AL);i++)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,*(double&#xa0;*)iList.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
static&#xa0;void&#xa0;FillList(List&#xa0;*&#xa0;AL,size_t&#xa0;siz)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;siz;i++)&#xa0;{&#xa0;dou=
ble&#xa0;d&#xa0;=3D&#xa0;i;&#xa0;iList.Add(AL,&amp;d);}
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L1&#xa0;=3D&#xa0;iList.Create(sizeof(dou=
ble));
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L2&#xa0;=3D&#xa0;iList.Create(sizeof(dou=
ble));
&#xa0;&#xa0;&#xa0;&#xa0;FillList(L1,10);
&#xa0;&#xa0;&#xa0;&#xa0;FillList(L2,10);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Append(L1,L2);
&#xa0;&#xa0;&#xa0;&#xa0;PrintList(L1);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;0&#xa=
0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Apply+\container11"></a> <font size=3D"+1"><b>Apply</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(List&#xa0;l,int&#xa0;(Applyfn)(vo=
id&#xa0;*,void&#xa0;*),void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(List&#xa0;l,int&#xa0;(Applyfn)(TY=
PE&#xa0;,void&#xa0;*),void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will call the given function for each element of the list. The first argume=
nt of the callback function receives an element of the list. The second arg=
ument of the callback is the arg argument that the Apply function receives =
and passes to  the callback. This way some context can be passed to the cal=
lback, and from one element to the next.
Note that the result of the callback is not used. This allows all kinds of =
result types to be accepted after a suitable cast.
If the list is read-only, a copy of the element will be passed to the callb=
ack function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either list or Applyfn are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

: The list is read-only and there is no more memory to allocate the buffer =
to copy each element.


<div class=3D"p"><!----></div>
  <b>Notes:</b>
<div class=3D"p"><!----></div>
The list container of C++ has no direct equivalent, but in the algorithm pa=
rt of the STL there is a &quot;for_each&quot; construct, that does essentia=
lly the same. Java and C# offer a similar &quot;ForEach&quot; functionality.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;int&#xa0;Callback(void&#xa0;*pElement,void&#xa0;*pResult)
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*p&#xa0;=3D&#xa0;pElement;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*result&#xa0;=3D&#xa0;pResult;
&#xa0;&#xa0;&#xa0;&#xa0;*result&#xa0;+=3D&#xa0;*p;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}
&#xa0;&#xa0;&#xa0;&#xa0;
void&#xa0;main(void)&#xa0;
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;sum&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*list&#xa0;=3D&#xa0;iList.Create(sizeof(d=
ouble));
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;2;
&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(list,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;3;
&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(list,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Apply(list,Callback,&amp;sum);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Here&#xa0;sum&#xa0;should&#xa0;be&#xa0;5.
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g\n&quot;,sum);
}

/*&#xa0;Template&#xa0;file&#xa0;example&#xa0;*/
#include&#xa0;&lt;containers.h&gt;
#include&#xa0;&quot;doublelist.h&quot;
static&#xa0;int&#xa0;Callback(double&#xa0;Element,void&#xa0;*pResult)
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*result&#xa0;=3D&#xa0;pResult;
&#xa0;&#xa0;&#xa0;&#xa0;*result&#xa0;+=3D&#xa0;Element;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}
&#xa0;&#xa0;&#xa0;&#xa0;
void&#xa0;main(void)&#xa0;
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;sum&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*list&#xa0;=3D&#xa0;idoubleList.Cre=
ate();
&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(list,2);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(list,3);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Apply(list,Callback,&amp;sum);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Here&#xa0;sum&#xa0;should&#xa0;be&#xa0;5.
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g\n&quot;,sum);
}

</pre></font>
The above example shows a function callback as used by =C4pply&quot;. It re=
ceives two pointers, one to the current element and another to an extra arg=
ument that in this case contains a pointer to the sum. For each call to the=
 callback, the function adds the contents of the element to the sum.

<div class=3D"p"><!----></div>
The main function creates a list, adds two elements with the values 2 and 3=
, and then calls =C4pply&quot; to get their sum using the callback.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Back+\container11"></a> <font size=3D"+1"><b>Back</b></font>=
 <hr>


<font size=3D"+1"><pre>
const&#xa0;void&#xa0;*(*Back)(const&#xa0;List&#xa0;*list);
const&#xa0;TYPE&#xa0;&#xa0;(*Back)(const&#xa0;TYPEList&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the last element of the given list or &#xa0;NULL if the list is emp=
ty.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The last element or &#xa0;NULL if the list is empty or an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container11"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(List&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all stored data and releases the memory associated with it. The list=
 header will not be destroyed, and its contents will be the same as when th=
e list was initially created. It is an error to use this function when ther=
e are still active iterators for the container.<a href=3D"#tthFtNtADB" name=
=3D"tthFrefADB"><sup>31</sup></a>

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is greater than zero if successful, or an error code if an error=
 occurs.=20

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*l;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;m&#xa0;=3D&#xa0;iList.Clear(l);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Contains+\container11"></a> <font size=3D"+1"><b>Contains</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(List&#xa0;*list,void&#xa0;*dat=
a);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(TYPEList&#xa0;*l,&#xa0;TYPE&#x=
a0;data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns one if the given data is stored in the list, zero otherwise. The &q=
uot;data&quot; argument is supposed to point to an element at least Element=
Size bytes. The list&#x27;s comparison function is used for determining if =
two elements are equal. This comparison function defaults to memcmp.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either list or data are &#xa0;NULL .


<div class=3D"p"><!----></div>
  <b>Notes:</b>
<div class=3D"p"><!----></div>
C++ has std::find that does essentially the same . Java and C# have a &quot=
;Contains&quot; method.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.Contains(list,&amp;d=
ata);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container11"></a> <font size=3D"+1"><b>Copy</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*Copy)(const&#xa0;List&#xa0;*L);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
A shallow copy of the given list is performed. Only ElementSize bytes will =
be copied for each element. If the element contains pointers, only the poin=
ters are copied, not the objects they point to. The new memory will be allo=
cated using the given list&#x27;s allocator.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified.


<div class=3D"p"><!----></div>
  <b>Notes:</b>
<div class=3D"p"><!----></div>
C++ has no direct equivalent but the assignment operator should work, Java =
and C# support a copy method.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*newList,*OldList;
&#xa0;&#xa0;&#xa0;&#xa0;newList&#xa0;=3D&#xa0;iList.Copy(OldList);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(newList&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0=
;/*&#xa0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CopyElement+\container11"></a> <font size=3D"+1"><b>CopyElem=
ent</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;List&#xa0;*list,=
size_t&#xa0;idx,void&#xa0;*outBuffer);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;TYPEList&#xa0;*l=
ist,size_t&#xa0;idx,TYPE&#xa0;*outBuffer);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the element data at the given position into the given buffer, assumi=
ng that at least ElementSize bytes of storage are available at the position=
 pointed by the output buffer. The main usage of this function is to access=
 data in a read only container for later modification.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer or the output buffer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if it=
 failed.

<div class=3D"p"><!----></div>

  <b>Notes:</b>
<div class=3D"p"><!----></div>
Neither C# nor Java provide this functionality because the treatment of poi=
nters in those languages makes the need for such a construct unnecessary.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;&#xa0;double&#xa0;d;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iList.CopyElement(list,3,&amp;d)&#xa0;&gt;=
&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;The&#xa0;value=
&#xa0;at&#xa0;position&#xa0;3&#xa0;is&#xa0;%g\n&quot;,d);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container11"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*Create)(size_t&#xa0;element_size);
&#xa0;&#xa0;&#xa0;&#xa0;TYPEList&#xa0;*(*Create)(void);&#xa0;//&#xa0;Templa=
te&#xa0;version

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The creation function returns an empty List container, initialized with all=
 the default values.
The current memory manager is used to allocate the space needed for the Lis=
t header. The list is supposed to contain elements of the same size. If the=
 elements you want to store are of different size, use a pointer to them, a=
nd create the list with sizeof(void *) as the size parameter.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a newly created List or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given element size is zero or greater than what the implementation all=
ows for maximum object size.

<div class=3D"p"><!----></div>
Errors provoke the call of the current default error function of the librar=
y since this is the creation function and there isn&#x27;t a container spec=
ific error function yet.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*ListOfDoubles&#xa0;=3D&#xa0;iList.Create(sizeof(double));
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*ListOfDoubles&#xa0;=3D&#xa0;idoubl=
eList.Create();

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CreateWithAllocator+\container11"></a> <font size=3D"+1"><b>=
CreateWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
List&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elem_size,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*allocator);
//&#xa0;Template&#xa0;file&#xa0;version
TYPEList&#xa0;*(*CreateWithAllocator)(ContainerAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The creation function returns an empty List container, initialized with all=
 the default values.
The given memory manager is used to allocate the space needed for the List =
header. The list is supposed to contain elements of the same size. If the e=
lements you want to store are of different size, use a pointer to them, and=
 create the list with sizeof(void *) as the size parameter.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a newly created List or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given element size is zero or greater than what the implementation all=
ows for maximum object size, or the given allocator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
Errors provoke the call of the current default error function of the librar=
y since this is the creation function and there isn&#x27;t a container spec=
ific error function yet.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
ContainerAllocator&#xa0;*myAllocator;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*ListOfDoubles&#xa0;=3D&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.CreateWit=
hAllocator(sizeof(double),myAllocator);
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*ListOfDoubles&#xa0;=3D&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleList.Cre=
ateWithAllocator(myAllocator);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"deleteIterator+\container11"></a> <font size=3D"+1"><b>delet=
eIterator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;deleteIterator(Iterator&#xa0;*it);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims the memory used by the given iterator object

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if successful or a negative error code.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Equal+\container11"></a> <font size=3D"+1"><b>Equal</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;List&#xa0;*list1,const=
&#xa0;List&#xa0;*list2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Compares the given lists using the list comparison function of either list1=
 or list2 that must compare equal. If the list differ in their length, flag=
s, or any other characteristic they compare unequal. If any of their elemen=
ts differ, they compare unequal.
If both list1 and list2 are &#xa0;NULL they compare equal. If both list1 an=
d list2 are empty they compare equal.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The two lists are not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is one if the lists are equal, zero otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container11"></a> <font size=3D"+1"><b>Erase</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(List&#xa0;*list,void&#xa0;*const&=
#xa0;data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the list the element that matches the given data, that is assu=
med to be a pointer to an element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that a match was found and the element was removed. If the element is n=
ot in the list the result is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.3;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.Erase(list,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;2.3&#xa0;erase=
d\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;CONTAINER_ERR=
OR_NOTFOUND)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;No&#xa0;elemen=
t&#xa0;with&#xa0;value&#xa0;2.3&#xa0;present\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;2.3&#xa0;not&#=
xa0;erased.&#xa0;Error&#xa0;is&#xa0;\%s\n&quot;,iError.StrError(r));

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"EraseAll+\container11"></a> <font size=3D"+1"><b>EraseAll</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(List&#xa0;*list,const&#xa0;voi=
d&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the list all elements that match the given data, that is assum=
ed to be a pointer to an element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that a match was found and the element was removed. If the element is n=
ot in the list the result is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"EraseAt+\container11"></a> <font size=3D"+1"><b>EraseAt</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(List&#xa0;*list,size_t&#xa0;idx=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the list the element at the given position.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred or a positive value that indicat=
es that the element was removed.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.EraseAt(list,2);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Element&#xa0;a=
t&#xa0;position&#xa0;2&#xa0;erased\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error&#xa0;cod=
e&#xa0;%d\n&quot;,r);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"EraseRange+\container11"></a> <font size=3D"+1"><b>EraseRang=
e</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;int&#xa0;(*EraseRange)(List&#xa0;*L,size_t&#xa0;start,size_t&#x=
a0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the list the given range, starting with the <font size=3D"+1">=
<tt>start</tt></font> index, until the element before the <font size=3D"+1"=
><tt>end</tt></font> index. If <font size=3D"+1"><tt>end</tt></font>
is greater than the length of the list, it will be &#x27;rounded&#x27; to t=
he length of the list.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number indicates success, zero means nothing was erased, and a n=
egative number an error.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;print_list(List&#xa0;*li)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;=
iList.Size(li);&#xa0;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;&#xa0;%d&quot;,*(int&#xa0;*)iList.GetElem=
ent(li,i));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*li&#xa0;=3D&#xa0;iList.Create(sizeof(int=
));
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(li,&amp;i);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;print_list(li);
&#xa0;&#xa0;&#xa0;&#xa0;iList.EraseRange(li,3,8);
&#xa0;&#xa0;&#xa0;&#xa0;print_list(li);
}
OUTPUT:
&#xa0;0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9
&#xa0;0&#xa0;1&#xa0;2&#xa0;8&#xa0;9

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container11"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the list, including the list header object itse=
lf.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value means the operation completed. A negative error code indic=
ates failure.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.Finalize(list);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;er=
ror&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"FirstElement+\container11"></a> <font size=3D"+1"><b>FirstEl=
ement</b></font> <hr>


<font size=3D"+1"><pre>
ListElement&#xa0;*(*FirstElement)(List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Finds the first element of the list and returns a pointer to it. This is a =
pointer to the element, <b>not</b> to the data stored at that element.
It is an error to attempt to use this function with a read-only list.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is&#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the element or&#xa0;NULL if the list is empty o=
r an error occurs.=20

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container11"></a> <font size=3D"+1"><b>Front</b></fon=
t> <hr>


<font size=3D"+1"><pre>
const&#xa0;void&#xa0;*(*Front)(const&#xa0;List&#xa0;*l);
TYPE&#xa0;*(*Front)(const&#xa0;TYPEList&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the first element of the given list or &#xa0;NULL if t=
he list is empty.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified. The resulting pointer is read-only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The first element or &#xa0;NULL if the list is empty or an error occurs.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetAllocator+\container11"></a> <font size=3D"+1"><b>GetAllo=
cator</b></font> <hr>


<font size=3D"+1"><pre>
ContainerAllocator&#xa0;*(*GetAllocator)(const&#xa0;List&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the list&#x27;s allocator object. If the list pointer is &#xa0;NULL=
 it returns &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElementSize+\container11"></a> <font size=3D"+1"><b>GetEl=
ementSize</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;List&#xa0;=
*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Retrieves the size of the elements stored in the given list. Note that this=
 value can be different than the value given to the creation function becau=
se of alignment requirements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The element size.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*l;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iList.GetElementSize(=
l);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElement+\container11"></a> <font size=3D"+1"><b>GetElemen=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*(*GetElement)(const&#xa0;List=
&#xa0;*list,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;TYPE&#xa0;*(*GetElement)(const&#xa0;TYPE=
List&#xa0;*list,size_t&#xa0;idx);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a read only pointer to the element at the given index, or &#xa0;NUL=
L if the operation failed.  This function will return &#xa0;NULL if the lis=
t is read only.

<div class=3D"p"><!----></div>
Use the CopyElement function to get a read/write copy of an element of the =
list.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified. The resulting pointer is read-only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*dlist;
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;*(double&#xa0;*)iList.G=
etElement(list,3);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;idoubleList.GetElement(=
dlist,3);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetFlags / SetFlags+\container11"></a> <font size=3D"+1"><b>=
GetFlags / SetFlags</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;List&#xa0;*l);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(List&#xa0;*l,unsigned&#xa=
0;newFlags);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
GetFlags returns the state of the container flags, SetFlags sets the flags =
to a new value and returns the old value.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The flags or zero if there was an error.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetRange+\container11"></a> <font size=3D"+1"><b>GetRange</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*GetRange)(const&#xa0;List&#xa0;*list,s=
ize_t&#xa0;start,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;&#xa0;TYPE&#xa0;*(*GetRange)(const&#xa0;TYPEList&#xa0;*l,=
size_t&#xa0;start,size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Selects a series of consecutive elements starting at position start and end=
ing at position end.  Both the elements at start and end are included in th=
e result.
If start is greater than end start and end are interchanged. If end is bigg=
er than the number of elements in list, only elements up to the number of e=
lements will be used. If both start and end are out of range an error is is=
sued and &#xa0;NULL is returned.
The selected elements are copied into a new list.=20


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The original list remains unchanged.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 Both start and end are out of range.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new list containing the selected elements or &#xa0;NULL if a=
n error occurs.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*range&#xa0;=3D&#xa0;iList.GetRange(list,=
2,5);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(range&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0;/=
*&#xa0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"IndexOf+\container11"></a> <font size=3D"+1"><b>IndexOf</b><=
/font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*IndexOf)(const&#xa0;List&#xa0;*l,const&#xa0;void&#xa0;*ElementTo=
Find,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*args,size_t&#xa0;*result);
int&#xa0;(*IndexOf)(const&#xa0;TYPEList&#xa0;*l,const&#xa0;TYPE&#xa0;Elemen=
tToFind,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*args,size_t&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches for an element in the list. If found its zero based index is retur=
ned in the passed pointer &quot;result&quot;.=20

<div class=3D"p"><!----></div>
Otherwise the result of the search is =20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
and the passed pointer will remain unmodified. The <font size=3D"+1"><tt>ar=
gs</tt></font> argument will be passed to the comparison function that is c=
alled by IndexOf.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer or element are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input list and the data to be searched are not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if element is found or a negative value if not found or an=
 error occurs.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.IndexOf(list,&amp;da=
ta,&amp;idx);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;CONTAINER_ERROR_NOTFOUN=
D)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Not&#xa0;found=
\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;printf(&quot;Found&#xa0;at&#xa0;position&=
#xa0;%ld\n&quot;,idx);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Init+\container11"></a> <font size=3D"+1"><b>Init</b></font>=
 <hr>


<font size=3D"+1"><pre>
List&#xa0;*(*Init)(List&#xa0;*aList,size_t&#xa0;element_size);
TYPEList&#xa0;*(*Init)(TYPEList&#xa0;*aList);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the memory pointed by the <font size=3D"+1"><tt>aList</tt></fon=
t> argument. The new list will use the allocator pointed by the current mem=
ory allocator.
It is assumed that the memory pointed by <font size=3D"+1"><tt>aList</tt></=
font> contains at least the size of the header object. This size can be obt=
ained by calling the Sizeof function with a &#xa0;NULL argument.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
//&#xa0;This&#xa0;example&#xa0;uses&#xa0;C99
void&#xa0;Example(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;aList[iList.Sizeof(NULL)];
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*list&#xa0;=3D&#xa0;iList.Init((List&#xa0=
;*)aList);
&#xa0;&#xa0;&#xa0;&#xa0;doubleList&#xa0;*l&#xa0;=3D&#xa0;idoubleList.Init((=
TYPEList&#xa0;*)aList);
}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitializeWith+\container11"></a> <font size=3D"+1"><b>Initi=
alizeWith</b></font> <hr>


<font size=3D"+1"><pre>
List&#xa0;*(*InitializeWith)(size_t&#xa0;elementSize,&#xa0;size_t&#xa0;n,co=
nst&#xa0;void&#xa0;*Data);
//&#xa0;Template&#xa0;file&#xa0;version
TYPEList&#xa0;*(*InitializeWith)(size_t&#xa0;n,const&#xa0;TYPE&#xa0;*Data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Construct a new list from the given data. It is assumed that
<font size=3D"+1"><tt><i>Data</i></tt></font>
 points to a memory area that contains at least
<font size=3D"+1"><tt><i>n</i></tt></font>
 items=20
of
<font size=3D"+1"><tt><i>elementSize</i></tt></font>
 bytes each.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The Data argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input data is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>The new list or &#xa0;NULL if an error occurs

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitWithAllocator+\container11"></a> <font size=3D"+1"><b>In=
itWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*InitWithAllocator)(List&#xa0;*aList,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;element_size,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
const&#xa0;ContainerAllocator&#xa0;*allocator);
&#xa0;&#xa0;&#xa0;&#xa0;TYPEList&#xa0;*(*InitWithAllocator)(TYPEList&#xa0;*=
aList,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
const&#xa0;ContainerAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the memory pointed by the <font size=3D"+1"><tt>aList</tt></fon=
t> argument. The new list will use the given allocator.
It is assumed that the memory pointed by <font size=3D"+1"><tt>aList</tt></=
font> contains at least the size of the header object. This size can be obt=
ained by calling the Sizeof function with a &#xa0;NULL argument.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given allocator is not modified.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InsertAt+\container11"></a> <font size=3D"+1"><b>InsertAt</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(List&#xa0;*L,size_t&#xa0;idx,c=
onst&#xa0;void&#xa0;*newData);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(TYPEList&#xa0;*L,size_t&#xa0;i=
dx,const&#xa0;TYPE&#xa0;newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the new element. The new element will have the given index, that ca=
n go from zero to the list count inclusive, i.e. one more than the number o=
f elements in the list. In single linked lists the cost for this operation =
is proportional to idx.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given list pointer or the element given are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The data is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if th=
e operation failed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
1&#xa0;#include&#xa0;&quot;containers.h&quot;
&#xa0;&#xa0;2&#xa0;static&#xa0;int&#xa0;PrintInt(void&#xa0;*pdata,void&#xa0=
;*extraArgs)
&#xa0;&#xa0;3&#xa0;{
&#xa0;&#xa0;4&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i&#xa0;=3D&#xa0;*(int&#=
xa0;*)pdata;
&#xa0;&#xa0;5&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(extraArgs,&quot;%d&#xa0;=
&quot;,i);
&#xa0;&#xa0;6&#xa0;}
&#xa0;&#xa0;7&#xa0;int&#xa0;main(void)
&#xa0;&#xa0;8&#xa0;{
&#xa0;&#xa0;9&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;
&#xa0;10&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;data;
&#xa0;11&#xa0;
&#xa0;12&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;iList.Create(sizeof(i=
nt));
&#xa0;13&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;data&#xa0;=3D&#xa0;0;
&#xa0;14&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(L,&amp;data);
&#xa0;15&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.PushFront(L,&amp;data);
&#xa0;16&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;data&#xa0;=3D&#xa0;2;
&#xa0;17&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.InsertAt(L,1,&amp;data);&#xa0;
&#xa0;18&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;data&#xa0;=3D&#xa0;5;
&#xa0;19&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(L,&amp;data);
&#xa0;20&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;data&#xa0;=3D&#xa0;6;
&#xa0;21&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(L,&amp;data);
&#xa0;22&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Apply(L,PrintInt,stdout);
&#xa0;23&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(L);
&#xa0;24&#xa0;}
OUTPUT:&#xa0;0&#xa0;2&#xa0;0&#xa0;5&#xa0;6

&#xa0;&#xa0;1&#xa0;#include&#xa0;&quot;containers.h&quot;
&#xa0;&#xa0;2&#xa0;#include&#xa0;&quot;intlist.h&quot;
&#xa0;&#xa0;3&#xa0;static&#xa0;int&#xa0;PrintInt(int&#xa0;data,void&#xa0;*e=
xtraArgs)
&#xa0;&#xa0;4&#xa0;{&#xa0;&#xa0;
&#xa0;&#xa0;5&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(extraArgs,&quot;%d&#xa0;=
&quot;,data);
&#xa0;&#xa0;6&#xa0;}
&#xa0;&#xa0;7&#xa0;int&#xa0;main(void)
&#xa0;&#xa0;8&#xa0;{
&#xa0;&#xa0;9&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;intList&#xa0;*L;
&#xa0;10&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;data;
&#xa0;11&#xa0;
&#xa0;12&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;iintList.Create();
&#xa0;13&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.Add(L,0);
&#xa0;14&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.PushFront(L,0);
&#xa0;15&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.InsertAt(L,1,2);&#xa0;
&#xa0;16&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.Add(L,5);
&#xa0;17&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.Add(L,6);
&#xa0;22&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.Apply(L,PrintInt,stdout);
&#xa0;23&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iintList.Finalize(L);
&#xa0;24&#xa0;}
OUTPUT:&#xa0;0&#xa0;2&#xa0;0&#xa0;5&#xa0;6


</pre></font>
We create a list of integers at line 12. We add zero to it, then again a ze=
ro at the first position.=20
Our list now is just <font size=3D"+1"><tt>0&#xa0;0</tt></font>. We insert =
at the
position 1 the value 2 in line 17. Then we add some data at the end. To pri=
nt the list we use <font size=3D"+1"><tt>Apply</tt></font> with a function =
that receives the
file where the data should be printed in the <font size=3D"+1"><tt>ExtraArg=
s</tt></font> parameter.=20
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InsertIn+\container11"></a> <font size=3D"+1"><b>InsertIn</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(List&#xa0;*Destination,&#xa0;s=
ize_t&#xa0;position,&#xa0;List&#xa0;*source);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the list given in  its third argument at the given position in the =
list pointed to by its first argument. The data is copied, and the source a=
rgument is not modified in any way. Both lists must have elements of the sa=
me type. The library only tests the size of each one.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The source or the destination lists are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The destination list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The lists store elements of different size.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if th=
e operation failed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
/*&#xa0;Prints&#xa0;the&#xa0;contents&#xa0;of&#xa0;a&#xa0;list&#xa0;*/
static&#xa0;void&#xa0;PrintList(List&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Count&#xa0;%ld\n&quot;,(long)iList.Siz=
e(AL));
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iList.Size(AL);i++)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,*(double&#xa0;*)iList.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
/*&#xa0;Fills&#xa0;a&#xa0;list&#xa0;with&#xa0;10&#xa0;numbers.&#xa0;The&#xa=
0;10&#xa0;is&#xa0;hardwired...&#xa0;*/
static&#xa0;void&#xa0;FillList(List&#xa0;*&#xa0;AL,int&#xa0;start)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;i+start;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(AL,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;}
}
/*&#xa0;Creates&#xa0;two&#xa0;lists:&#xa0;one&#xa0;with&#xa0;the&#xa0;numbe=
rs&#xa0;from&#xa0;0&#xa0;to&#xa0;9,&#xa0;another&#xa0;
&#xa0;&#xa0;&#xa0;with&#xa0;numbers&#xa0;100&#xa0;to&#xa0;109,&#xa0;then&#x=
a0;inserts&#xa0;the&#xa0;second&#xa0;into&#xa0;the&#xa0;
&#xa0;&#xa0;&#xa0;first&#xa0;at&#xa0;position&#xa0;5&#xa0;*/
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*AL&#xa0;=3D&#xa0;iList.Create(sizeof(dou=
ble));
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*AL1&#xa0;=3DiList.Create(sizeof(double));
&#xa0;&#xa0;&#xa0;&#xa0;FillList(AL,0);
&#xa0;&#xa0;&#xa0;&#xa0;FillList(AL1,100);
&#xa0;&#xa0;&#xa0;&#xa0;iList.InsertIn(AL,5,AL1);
&#xa0;&#xa0;&#xa0;&#xa0;PrintList(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Count&#xa0;20
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;100&#xa0;101&#xa0;102&#xa0;103&#xa0;104&=
#xa0;105&#xa0;106&#xa0;107&#xa0;108&#xa0;109&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#x=
a0;9

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"LastElement+\container11"></a> <font size=3D"+1"><b>LastElem=
ent</b></font> <hr>


<font size=3D"+1"><pre>
ListElement&#xa0;*(*LastElement)(List&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the last element stored in the given list or&#xa0;NULL=
 if the list is empty or an error occurs. It is an error to call this
function in a read-only list.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is&#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>The last element or&#xa0;NULL=20
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Load+\container11"></a> <font size=3D"+1"><b>Load</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*Load)(FILE&#xa0;*stream,ReadFunction&#=
xa0;readFn,void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads a list previously saved with the Save function from the stream pointe=
d to by stream. If readFn is not &#xa0;NULL , it will be used to read each =
element. The <font size=3D"+1"><tt>arg</tt></font> argument will be passed =
to the read function. If the read function is &#xa0;NULL , this argument is=
 ignored and a default read function is used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given stream pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A new list or &#xa0;NULL if the operation could not be completed. Note that=
 the function pointers in the list are NOT saved, nor any special allocator=
 that was in the original list. Those values will be the values by default.=
 To rebuild the original state the user should replace the pointers again w=
ith the new list.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"NewIterator+\container11"></a> <font size=3D"+1"><b>NewItera=
tor</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates and initializes a new iterator object to iterate this list.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 No more memory is available.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new iterator or &#xa0;NULL if there is no mor=
e memory left.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;iList.NewIterator(l=
ist);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(d=3Dit-&gt;GetFirst(it);&#xa0;d&#xa0;!=3D=
&#xa0;NULL;&#xa0;d&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;val&#xa0;=3D&#x=
a0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Work&#xa0;with&#xa0=
;the&#xa0;value&#xa0;here
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iList.deleteIterator(it);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"NextElement+\container11"></a> <font size=3D"+1"><b>NextElem=
ent</b></font> <hr>


<font size=3D"+1"><pre>
DlistElement&#xa0;*(*NextElement)(DlistElement&#xa0;*le);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the next element in the list. If the input list is&#xa=
0;NULL it returns&#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>The next element or&#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopFront+\container11"></a> <font size=3D"+1"><b>PopFront</b=
></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*PopFront)(List&#xa0;*L,void&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Pops the element at position zero copying it to the result pointer. If the =
&quot;result&quot; pointer is &#xa0;NULL , the first element is removed wit=
hout any copying. The library supposes that result points to at least Eleme=
ntSize bytes of contiguous storage.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the result pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if an element was popped, zero if the list was empty, or a=
 negative error code if an error occurred.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.PopFront(L,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r=3D=3D0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;List&#xa0;empt=
y\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error&#xa0;%d\=
n&quot;,r);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;OK,&#xa0;p=
opped&#xa0;value&#xa0;%g\n&quot;,d);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"PushFront+\container11"></a> <font size=3D"+1"><b>PushFront<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(List&#xa0;*L,void&#xa0;*eleme=
nt);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the given element at position zero.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the element pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, or a negative error code other=
wise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.3;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iList.PushFront(list,&amp;d)&#xa0;&lt;&#xa=
0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error\n&quot;);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RemoveRange+\container11"></a> <font size=3D"+1"><b>RemoveRa=
nge</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*RemoveRange)(List&#xa0;*l,size_t&#xa0;start,size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes all elements having an index equal or greater than
<font size=3D"+1"><tt><i>start</i></tt></font>
 and less than
<font size=3D"+1"><tt><i>end</i></tt></font>
. If
<font size=3D"+1"><tt><i>end</i></tt></font>
 is greater than the number of elements=20
in the collection it will be adjusted to one more than the number of elemen=
ts. If
<font size=3D"+1"><tt><i>start</i></tt></font>
 is bigger than
<font size=3D"+1"><tt><i>end</i></tt></font>
 the range is still valid and
starts with the value of
<font size=3D"+1"><tt><i>end</i></tt></font>
 and ends with the value of
<font size=3D"+1"><tt><i>start</i></tt></font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
Zero if no elements were removed. Otherwise returns a positive number for s=
uccess, a negative error code in case of an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"ReplaceAt+\container11"></a> <font size=3D"+1"><b>ReplaceAt<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(List&#xa0;*list,size_t&#xa0;i=
dx,const&#xa0;void&#xa0;*newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the list element at position idx with the new data starting at the=
 position pointed to by &quot;newData&quot; and extending ElementSize bytes.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the new element pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input data is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;6.7;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.ReplaceAt(list,2,&am=
p;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;Er=
ror&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Reverse+\container11"></a> <font size=3D"+1"><b>Reverse</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reverses the order of the given list: the head becomes the tail and the tai=
l becomes the head. The original order is lost.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;print_list(List&#xa0;*li)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;=
iList.Size(li);&#xa0;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;&#xa0;%d&quot;,*(int&#xa0;*)iList.GetElem=
ent(li,i));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*li&#xa0;=3D&#xa0;iList.Create(sizeof(int=
));
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(li,&amp;i);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;print_list(li);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Reverse(li);
&#xa0;&#xa0;&#xa0;&#xa0;print_list(li);
}
OUTPUT
&#xa0;0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9
&#xa0;9&#xa0;8&#xa0;7&#xa0;6&#xa0;5&#xa0;4&#xa0;3&#xa0;2&#xa0;1&#xa0;0

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RotateRight+\container11"></a> <font size=3D"+1"><b>RotateRi=
ght</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(List&#xa0;*src,size_t&#xa0;=
n);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates right the list by the indicated amount. The last n elements will be=
 written to the start of
the array, and the rest will be shifted right.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size).

<div class=3D"p"><!----></div>
=20
<br><a name=3D"RotateLeft+\container11"></a> <font size=3D"+1"><b>RotateLef=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(List&#xa0;*src,size_t&#xa0;n=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates left the list by the indicated amount. The first n elements will be=
 written to the end of
the list, and the rest will be shifted left to fill the empty n places.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size), or an error code less than zero if an error occu=
rs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Save+\container11"></a> <font size=3D"+1"><b>Save</b></font>=
 <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;List&#xa0;*l,&#xa0;FILE&#xa0;*stream,SaveFuncti=
on&#xa0;SaveFn,&#xa0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given list are saved into the given stream. If the save=
 function pointer is not &#xa0;NULL , it will be used to save the contents =
of each element and will receive the arg argument passed to Save. Otherwise=
 a default save function will be used and arg will be ignored.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer or the stream pointer are &#xa0;NULL .
EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Select+\container11"></a> <font size=3D"+1"><b>Select</b></f=
ont> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Select)(List&#xa0;*l,Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Uses the given mask to select elements from the given list. The list is mod=
ified: all elements that have a corresponding value of zero in the mask are=
=20
erased from the list. The length of the mask should be equal to the length =
of the list. If there is a destructor set up for the list, it is called for=
=20
all the elements that are eliminated.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The mask is not modified.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the mask are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The mask and the list have different lengths.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value for success, a negative error code otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
static&#xa0;void&#xa0;printList(List&#xa0;*v)
{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i,*pi;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iList.Size(v);i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pi&#xa0;=3D&#xa0;iList.GetE=
lement(v,i);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%2d&#xa0;&quot=
;,*pi);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*&#xa0;vInt&#xa0;=3D&#xa0;iList.Create(si=
zeof(int));
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*m;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D1;i&lt;=3D24;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(vInt,&amp;i);
&#xa0;&#xa0;&#xa0;&#xa0;m&#xa0;=3D&#xa0;iMask.Create(24);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original&#xa0;list:&#xa0;\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;printList(vInt);

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;i&lt;24;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iMask.Set(m,i,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%2d&#xa0;&quot=
;,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\nSelect&#xa0;of&#xa0;the&#xa0;list:\n=
&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;iList.Select(vInt,m);
&#xa0;&#xa0;&#xa0;&#xa0;printList(vInt);

&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(vInt);
&#xa0;&#xa0;&#xa0;&#xa0;iMask.Finalize(m);
}
OUTPUT:
Original&#xa0;list:&#xa0;
&#xa0;1&#xa0;&#xa0;2&#xa0;&#xa0;3&#xa0;&#xa0;4&#xa0;&#xa0;5&#xa0;&#xa0;6&#x=
a0;&#xa0;7&#xa0;&#xa0;8&#xa0;&#xa0;9&#xa0;10&#xa0;11&#xa0;12&#xa0;13&#xa0;1=
4&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;20&#xa0;21&#xa0;22&#xa0;23&#=
xa0;24&#xa0;
&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#x=
a0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1=
&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa=
0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&=
#xa0;1&#xa0;
Select&#xa0;of&#xa0;the&#xa0;list:
&#xa0;2&#xa0;&#xa0;4&#xa0;&#xa0;6&#xa0;&#xa0;8&#xa0;10&#xa0;12&#xa0;14&#xa0=
;16&#xa0;18&#xa0;20&#xa0;22&#xa0;24&#xa0;

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SelectCopy+\container11"></a> <font size=3D"+1"><b>SelectCop=
y</b></font> <hr>


<font size=3D"+1"><pre>
List&#xa0;*(*SelectCopy)(const&#xa0;List&#xa0;*l,const&#xa0;Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Uses the given mask to select elements from the given list. The list is not=
 modified: all elements that have a corresponding value different of zero
in the mask are copied to the new list. The length of the mask should be eq=
ual to the length of the list.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
Neither the input list nor the mask are modified.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the mask are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The mask and the list have different lengths.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Insufficient ressources to create the result list.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new list or &#xa0;NULL if there was an error.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
static&#xa0;void&#xa0;printList(List&#xa0;*v)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i,*pi;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;=
iList.Size(v);i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;pi&#xa0;=3D&#xa0;iList.GetElement(v,i);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;%2d&#xa0;&quot;,*pi);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*&#xa0;vInt&#xa0;=
=3D&#xa0;iList.Create(sizeof(int));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*copy;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*m;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D1;i&lt;=3D24;=
i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;iList.Add(vInt,&amp;i);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;m&#xa0;=3D&#xa0;iMask.Creat=
e(24);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original&#xa0;=
list:&#xa0;\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printList(vInt);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;i&lt;24;i++=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;iMask.Set(m,i,!(i&amp;1));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;%2d&#xa0;&quot;,!(i&amp;1));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\nSelect&#xa0;=
of&#xa0;the&#xa0;list:\n&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;copy&#xa0;=3D&#xa0;iList.Se=
lectCopy(vInt,m);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printList(copy);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(vInt);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(copy);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iMask.Finalize(m);
}
OUTPUT
Original&#xa0;list:&#xa0;
&#xa0;1&#xa0;&#xa0;2&#xa0;&#xa0;3&#xa0;&#xa0;4&#xa0;&#xa0;5&#xa0;&#xa0;6&#x=
a0;&#xa0;7&#xa0;&#xa0;8&#xa0;&#xa0;9&#xa0;10&#xa0;11&#xa0;12&#xa0;13&#xa0;1=
4&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;20&#xa0;21&#xa0;22&#xa0;23&#=
xa0;24&#xa0;
&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#x=
a0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0=
&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa=
0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&#xa0;0&#xa0;&#xa0;1&#xa0;&=
#xa0;0&#xa0;
Select&#xa0;of&#xa0;the&#xa0;list:
&#xa0;1&#xa0;&#xa0;3&#xa0;&#xa0;5&#xa0;&#xa0;7&#xa0;&#xa0;9&#xa0;11&#xa0;13=
&#xa0;15&#xa0;17&#xa0;19&#xa0;21&#xa0;23&#xa0;

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetCompareFunction+\container11"></a> <font size=3D"+1"><b>S=
etCompareFunction</b></font> <hr>


<font size=3D"+1"><pre>
CompareFunction&#xa0;(*SetCompareFunction)(List&#xa0;l,CompareFunction&#xa0=
;f);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
if the f argument is non &#xa0;NULL , it sets the list comparison function =
to f.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the comparison function.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
ErrorFunction&#xa0;fn,newfn;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;fn&#xa0;=3D&#xa0;iList.SetCompareFunction(list,newf=
n);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetDestructor+\container11"></a> <font size=3D"+1"><b>SetDes=
tructor</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;SetDestructor(List&#xa0;*l,=
DestructorFunction&#xa0;fn);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Sets the destructor function to its given argument. I=
f the function argument is &#xa0;NULL nothing is changed and the call is in=
terpreted as a query since the return value is the current value of the des=
tructor function. If the list argument is &#xa0;NULL , the result is &#xa0;=
NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The old value of the destructor.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetElementData+\container11"></a> <font size=3D"+1"><b>SetEl=
ementData</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*SetElementData)(List&#xa0;*l,&#xa0;ListElement&#xa0;*le,void&#xa=
0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies <font size=3D"+1"><tt>ElementSize</tt></font> bytes from its paramet=
er <font size=3D"+1"><tt>data</tt></font> into the given list element. The =
list is modified even if all pointers into it could=20
remain valid. Any iterators into the list will stop working.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any argument is&#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The old value of the error function, or &#xa0;NULL if there =
is an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetErrorFunction+\container11"></a> <font size=3D"+1"><b>Set=
ErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(List&#xa0;*L=
,ErrorFunction);&#xa0;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the current error function  for the given list with the new error =
function if the
<font size=3D"+1"><tt><i>ErrorFunction</i></tt></font>
parameter is different from &#xa0;NULL . If=20
the
<font size=3D"+1"><tt><i>List</i></tt></font>
parameter is &#xa0;NULL the function returns the value of the current defau=
lt error function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the error function, or &#xa0;NULL if there is an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Size+\container11"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;List&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements stored in the list.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
If the given list pointer is &#xa0;NULL , it returns  SIZE_MAX.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*li;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;bytes&#xa0;=3D&#xa0;iList.Size(li);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sizeof+\container11"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total size in bytes of the list, including the header, and all =
data stored in the list. If <font size=3D"+1"><tt>list</tt></font> is &#xa0=
;NULL , the result is the size of the <font size=3D"+1"><tt>List</tt></font=
> structure.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes used by the list or the size of the empty List containe=
r if the argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*l&#xa0;=3D&#xa0;iList.Create(sizeof(int)=
);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;&#xa0;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(l,&amp;i);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Queries&#xa0;for&#xa0;size&#xa0;of&#xa0;the=
&#xa0;list&#xa0;and&#xa0;for&#xa0;size&#xa0;of&#xa0;the&#xa0;list&#xa0;head=
er
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Size&#xa0;of&#xa0;list:&#xa0;%lu,&#xa0=
;sizeof&#xa0;list&#xa0;header&#xa0;%lu\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Sizeof(l),iList.Sizeo=
f(NULL));
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Prints&#xa0;the&#xa0;size&#xa0;of&#xa0;the&=
#xa0;data&#xa0;(int)&#xa0;and&#xa0;the&#xa0;size&#xa0;of&#xa0;a&#xa0;pointer
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Sizeof&#xa0;int&#xa0;%lu,&#xa0;sizeof&=
#xa0;void&#xa0;*&#xa0;%lu\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;sizeof(int),sizeof(void&#xa=
0;*));
&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(l);
}

OUTPUT&#xa0;(64&#xa0;bit&#xa0;system)
Size&#xa0;of&#xa0;list:&#xa0;208,&#xa0;sizeof&#xa0;list&#xa0;header&#xa0;88
Sizeof&#xa0;int&#xa0;4,&#xa0;sizeof&#xa0;void&#xa0;*&#xa0;8

</pre></font>

<div class=3D"p"><!----></div>
208&#x2212;88 is 120. There are 10 elements, so each element is 12 bytes: 8=
 for a pointer and 4 for an integer<a href=3D"#tthFtNtADC" name=3D"tthFrefA=
DC"><sup>32</sup></a>.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SizeofIterator+\container11"></a> <font size=3D"+1"><b>Sizeo=
fIterator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;List&#xa0;=
*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total size in bytes of the list iterator. =20

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes used by the list iterator.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;&#xa0;siz&#xa0;=3D&#xa0;iList.Sizeof(li=
st);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sort+\container11"></a> <font size=3D"+1"><b>Sort</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(List&#xa0;*list);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sorts the given list using the list comparison function. The order of the o=
riginal list is destroyed. You should copy it if you want to preserve it.=20

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if sorting succeeded, a negative error code if not.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
List&#xa0;*list;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iList.Sort(list)&#xa0;&lt;&#xa0;0)&#xa0;{&=
#xa0;/*&#xa0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SplitAfter+\container11"></a> <font size=3D"+1"><b>SplitAfte=
r</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*(*SplitAfter)(List&#xa0;*list,&#xa0;List=
Element&#xa0;*point);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Splits the source lost at the given element. This element <b>must</b> be an=
 element of the source list. Checking that this is actually
the case is very expensive and probably will be skipped in most implementat=
ions. An error here will have very serious consequences for
the integrity of the system.

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>SplitAfter</tt></font> builds a new list with all the=
 elements after the given element that becomes the last element of the sour=
ce list.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer or the element are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The source list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There aren&#x27;t enough ressources to create a new list.

<div class=3D"p"><!----></div>
<b>Returns:</b><br>
A pointer to the newly created list or &#xa0;NULL if an error occurs or the=
 given list element is the last element of the list.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
/*&#xa0;This&#xa0;example&#xa0;creates&#xa0;a&#xa0;list&#xa0;of&#xa0;16&#xa=
0;double&#xa0;precision&#xa0;numbers
&#xa0;&#xa0;&#xa0;and&#xa0;splits&#xa0;it&#xa0;after&#xa0;element&#xa0;4.&#=
xa0;It&#xa0;prints&#xa0;the&#xa0;lists&#xa0;before&#xa0;and&#xa0;after
&#xa0;&#xa0;&#xa0;the&#xa0;split,&#xa0;then&#xa0;exits
*/
static&#xa0;void&#xa0;Fprintf(List&#xa0;*v)&#xa0;//&#xa0;Prints&#xa0;a&#xa0=
;list&#xa0;of&#xa0;doubles
{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*pi;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iList.Size(v);i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pi&#xa0;=3D&#xa0;iList.GetE=
lement(v,i);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,*pi);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*l,*newList;
&#xa0;&#xa0;&#xa0;&#xa0;ListElement&#xa0;*le;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d;

&#xa0;&#xa0;&#xa0;&#xa0;l&#xa0;=3D&#xa0;iList.Create(sizeof(double));
&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;16;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(l,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;+=3D&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original&#xa0;list:\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;Fprintf(l);
&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;iList.FirstElement(l);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;4;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;iList.Next=
Element(le);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Element&#xa0;%g&#xa0;is&#xa0;at&#xa0;t=
he&#xa0;split\n&quot;,*(double&#xa0;*)iList.ElementData(le));
&#xa0;&#xa0;&#xa0;&#xa0;newList&#xa0;=3D&#xa0;iList.SplitAfter(l,le);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;New&#xa0;list:\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;Fprintf(newList);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Source&#xa0;list\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;Fprintf(l);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(l);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(newList);
}

OUTPUT:
Original&#xa0;list:
1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#xa0;11&#=
xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;
Element&#xa0;5&#xa0;is&#xa0;at&#xa0;the&#xa0;split
New&#xa0;list:
6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#xa0;11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0=
;16&#xa0;
Source&#xa0;list
1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;

</pre></font>                        =20
=20
<div class=3D"p"><!----></div>
<br><a name=3D"UseHeap+\container11"></a> <font size=3D"+1"><b>UseHeap</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*UseHeap)(List&#xa0;*list,ContainerAlloca=
tor&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds a heap manager to the given list, that should be empty. The heap manag=
er will manage the free list and the allocation of new objects. Use this=20
function when the list will hold a great number of elements. This function =
is optional and may not be present in all implementations.
If m is &#xa0;NULL , the current memory manager object will be used for all=
ocating and reclaiming memory. Otherwise m should be a memory manager objec=
t.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOT_EMPTY

 The list is not empty or has already a heap.

<div class=3D"p"><!----></div>
Portability:
This function is optional and may not be present in all implementations.

     <h3><a name=3D"tth_sEc1.2">
1.2</a>&#xa0;&#xa0;Specializations of linked lists</h3>
The sample implementation proposes a <font size=3D"+1"><tt>stringlist</tt><=
/font> container that can hold a list of strings. Its interface functions a=
nd all its vocabulary
are identical to the linked list one. This is a recommended extension but m=
ay not be present in all implementations of the library.

<div class=3D"p"><!----></div>
It comes in two flavors:

<ul>
<li> Single byte character strings. The name of the interface is <font size=
=3D"+1"><tt>iStringList</tt></font>.
<div class=3D"p"><!----></div>
</li>

<li> Wide character strings. The name of the interface is <font size=3D"+1"=
><tt>iWStringList</tt></font>.
<div class=3D"p"><!----></div>
</li>
</ul>
In this specialization the function <font size=3D"+1"><tt>GetElementSize</t=
t></font> returns always zero since it has no meaning in a list composed of=
 strings of different
length.<a href=3D"#tthFtNtADD" name=3D"tthFrefADD"><sup>33</sup></a>

<div class=3D"p"><!----></div>
The function <font size=3D"+1"><tt>Sizeof</tt></font> that is very fast in =
normal lists (the element size is known), it is very expensive in string li=
sts since all
the list needs to be scanned to add up the contents of each string.<a href=
=3D"#tthFtNtADE" name=3D"tthFrefADE"><sup>34</sup></a>

<div class=3D"p"><!----></div>
Another difference is that the function <font size=3D"+1"><tt>Save</tt></fo=
nt> and the function <font size=3D"+1"><tt>Load</tt></font> do not use the =
user function argument since they are specialized
to load and save character strings. The function argument can have any valu=
e. It has been maintained for compatibility with the rest of the software.

<div class=3D"p"><!----></div>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Double linked lists: iDlist</h2>
<a name=3D"Dlist20"></a>
<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"DListVocabulary.png">

<div class=3D"p"><!----></div>
 Differences with the list vocabulary are marked in bold.<br clear=3D"LEFT"=
><br><br>
<a name=3D"lists+double linked20"></a>
<div class=3D"p"><!----></div>
Double linked lists have a pair of pointers pointing to the next and to the=
 previous element in the list. It is easy then, to move in  either directio=
n through the list. The price to pay is a higher overhead for each element.
This container shares most of its interface with the single linked list con=
tainer.  Here we document the functions that aren&#x27;t already described =
for the list container.
<a name=3D"iDlist20"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagDlistInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Dlist&#xa0;*dl,const&#xa0;void&#xa0;*newv=
al);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(Dlist&#xa0;*l,size_t&#xa0;n,const&#x=
a0;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Advance)(DlistElement&#xa0;**pDlistElement);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(Dlist&#xa0;*l1,Dlist&#xa0;*l2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(Dlist&#xa0;*L,int(Applyfn)(void&#xa0;*e=
lem,void&#xa0;*extraArg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*extraArg);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Back)(const&#xa0;Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Dlist&#xa0;*dl);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;Dlist&#xa0;*dl,const&#xa0=
;void&#xa0;*element);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*Copy)(const&#xa0;Dlist&#xa0;*dl);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;Dlist&#xa0;*l,size_t&#=
xa0;idx,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*Create)(size_t&#xa0;elementsize);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*CreateWithAllocator)(size_t,const&#xa0;Cont=
ainerAllocator&#xa0;*);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*ElementData)(DlistElement&#xa0;*le);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;Dlist&#xa0;*l1,const&#xa0;Dl=
ist&#xa0;*l2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Dlist&#xa0;*AL,const&#xa0;void&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(Dlist&#xa0;*AL,const&#xa0;void&#xa0;=
*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(Dlist&#xa0;*AL,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Dlist&#xa0;*AL);
&#xa0;&#xa0;&#xa0;DlistElement&#xa0;*(*FirstElement)(Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Front)(const&#xa0;Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;Dlist&#xa0;*AL,size_t=
&#xa0;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;Dlist&#xa0;*dl);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;Dlist&#xa0;*AL);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*GetRange)(Dlist&#xa0;*l,size_t&#xa0;start,s=
ize_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(const&#xa0;Dlist&#xa0;*AL,const&#xa0;=
void&#xa0;*SearchedElement,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*args,size_t&#xa0=
;*result);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*Init)(Dlist&#xa0;*dlist,size_t&#xa0;element=
size);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(Dlist&#xa0;*,void&#xa0;*buf);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*InitWithAllocator)(Dlist&#xa0;*L,size_t&#xa=
0;element_size,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;Cont=
ainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*InitializeWith)(size_t&#xa0;elementSize,&#x=
a0;size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void=
&#xa0;*data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(Dlist&#xa0;*AL,size_t&#xa0;idx,const=
&#xa0;void&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(Dlist&#xa0;*l,&#xa0;size_t&#xa0;idx,=
Dlist&#xa0;*newData);
&#xa0;&#xa0;&#xa0;DlistElement&#xa0;*(*LastElement)(Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunction&=
#xa0;loadFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*MoveBack)(DlistElement&#xa0;**pDlistElement);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Dlist&#xa0;*);
&#xa0;&#xa0;&#xa0;DlistElement&#xa0;*(*NextElement)(DlistElement&#xa0;*le);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(Dlist&#xa0;*AL,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopFront)(Dlist&#xa0;*AL,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;DlistElement&#xa0;*(*PreviousElement)(DlistElement&#xa0;*=
le);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(Dlist&#xa0;*AL,const&#xa0;void&#xa0;=
*str);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(Dlist&#xa0;*AL,const&#xa0;void&#xa0=
;*str);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveRange)(Dlist&#xa0;*l,size_t&#xa0;start,&=
#xa0;size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(Dlist&#xa0;*AL,size_t&#xa0;idx,cons=
t&#xa0;void&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(Dlist&#xa0;*l,&#xa0;size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(Dlist&#xa0;*l,size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;Dlist&#xa0;*L,FILE&#xa0;*stre=
am,&#xa0;SaveFunction&#xa0;saveFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Select)(Dlist&#xa0;*src,const&#xa0;Mask&#xa0;*=
m);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*SelectCopy)(const&#xa0;Dlist&#xa0;*src,cons=
t&#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;(*SetCompareFunction)(Dlist&#xa0;*l,=
CompareFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(Dlist&#xa0;*v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetElementData)(Dlist&#xa0;*l,&#xa0;DlistEleme=
nt&#xa0;*le,void&#xa0;*data);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(Dlist&#xa0;*L,Erro=
rFunction);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(Dlist&#xa0;*AL,unsigned&#xa0;fl=
ags);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Dlist&#xa0;*dl);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;Dlist&#xa0;*dl);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;Dlist&#xa0;*);
&#xa0;&#xa0;&#xa0;DlistElement&#xa0;*(*Skip)(DlistElement&#xa0;*l,size_t&#x=
a0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(Dlist&#xa0;*l);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*Splice)(Dlist&#xa0;*list,void&#xa0;*pos,Dli=
st&#xa0;*toInsert,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;direct=
ion);
&#xa0;&#xa0;&#xa0;Dlist&#xa0;*(*SplitAfter)(Dlist&#xa0;*l,&#xa0;DlistElemen=
t&#xa0;*pt);
&#xa0;&#xa0;&#xa0;int&#xa0;(*UseHeap)(Dlist&#xa0;*L,const&#xa0;ContainerAll=
ocator&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;DlistInterface;

</pre></font>

=20
<div class=3D"p"><!----></div>
<br><a name=3D"MoveBack+\container20"></a> <font size=3D"+1"><b>MoveBack</b=
></font> <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*MoveBack)(ListElement&#xa0;**ppElement);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Given the address of a pointer to an element, it returns a pointer to the d=
ata stored into that element and writes the address of the previous element
into its argument <font size=3D"+1"><tt>ppElement</tt></font>. If ppElement=
 is&#xa0;NULL it returns&#xa0;NULL . If <font size=3D"+1"><tt>*ppElement</t=
t></font> is&#xa0;NULL it also returns&#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the data stored in the given element or&#xa0;NU=
LL if the data can&#x27;t be retrieved.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopBack+\container20"></a> <font size=3D"+1"><b>PopBack</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(List&#xa0;*L,void&#xa0;*result);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Pops the element at the last position copying it to the result pointer. If =
the &quot;result&quot; pointer is &#xa0;NULL , the last element is removed =
without any=20
copying. Otherwise, the library supposes that result points to at least Ele=
mentSize bytes of contiguous storage.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the result pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if an element was popped, zero if the list was empty, or a=
 negative error code if an error occurred.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.PopBack(L,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r=3D=3D0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;List&#xa0;empt=
y\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error&#xa0;%d\=
n&quot;,r);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;OK,&#xa0;p=
opped&#xa0;value&#xa0;%g\n&quot;,d);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PreviousElement+\container20"></a> <font size=3D"+1"><b>Prev=
iousElement</b></font> <hr>


<font size=3D"+1"><pre>
DlistElement&#xa0;*(*PreviousElement)(DlistElement&#xa0;*le);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the previous element in the list. If the input list is=
&#xa0;NULL it returns&#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>The previous element or&#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PushBack+\container20"></a> <font size=3D"+1"><b>PushBack</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(List&#xa0;*L,void&#xa0;*elemen=
t);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the given element at the last position of the list.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list or the element pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, or a negative error code other=
wise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.3;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iList.PushBack(list,&amp;d)&#xa0;&lt;&#xa0=
;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error\n&quot;);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Splice+\container20"></a> <font size=3D"+1"><b>Splice</b></f=
ont> <hr>


<font size=3D"+1"><pre>
Synopsis:
Dlist&#xa0;*(*Splice)(Dlist&#xa0;*list,&#xa0;void&#xa0;*Pos,&#xa0;Dlist&#xa=
0;*toInsert,int&#xa0;direction);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts a list (parameter &quot;toInsert&quot;) into another one (parameter=
 &quot;list&quot;) at the given position
that should be an element of &quot;list&quot;. The direction argument means=
 to insert before the position if zero, after the position if not zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The list, the list to be inserted or the element pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The list is read only.
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;The Vector interface: iVector</h2>
<a name=3D"iVector30"></a>
<img alt=3D"Figure" src=3D"VectorVocabulary.png">

<div class=3D"p"><!----></div>
 Vector vocabulary.
<div class=3D"p"><!----></div>
<a name=3D"Vector30"></a>The &quot;vector&quot; container is an array that =
resizes to accommodate new elements. Access is always checked against the a=
rray bounds.
Insertion and deletion of items are more expensive than in lists, and the c=
ost increases linearly with the array size. Access is very cheap, since a=20
multiplication suffices to get to any array position.

<div class=3D"p"><!----></div>
Most functions of the interface are shared with the list, Dlist and the oth=
er sequential containers.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc3.0.1">
3.0.1</a>&#xa0;&#xa0;Special arrays using a modified error function</h4><a =
name=3D"Infinite arrays30"></a>
Some functions of the iVector interface will examine the return value of th=
e error function after an index error is detected. If the error function=20
returns a pointer value different than &#xa0;NULL , it will be assumed that=
 that is the value of the API that should be returned to the user. This all=
ows
for the implementation of infinite arrays or arrays where an access into so=
me element beyond the end of the array provokes an automatic=20
resize operation of the array up to the required length.

<div class=3D"p"><!----></div>
In case of an index error, this container passes always a pointer to the co=
ntainer and the out of range index to the error function. The functions
where the return value of the error function is used are:


<ul>     =20
<li> CopyElement. If the return value is not &#xa0;NULL the returned pointe=
r is used to copy into the result buffer.
<div class=3D"p"><!----></div>
</li>

<li> GetElement. If the return pointer is not &#xa0;NULL the pointer is the=
 result of the function.
<div class=3D"p"><!----></div>
</li>

<li> InsertAt. If the return pointer is not &#xa0;NULL , the vector is resi=
zed up to the index that is required.

<div class=3D"p"><!----></div>
</li>
</ul>


     <h3><a name=3D"tth_sEc3.1">
3.1</a>&#xa0;&#xa0;The interface</h3>
<a name=3D"iVector31"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagVectorInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Vector&#xa0;*AL,const&#xa0;void&#xa0;*new=
val);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(Vector&#xa0;*AL,size_t&#xa0;n,const&=
#xa0;void&#xa0;*newvalues);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(Vector&#xa0;*AL1,&#xa0;Vector&#xa0;*AL=
2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(Vector&#xa0;*AL,int&#xa0;(*Applyfn)(voi=
d&#xa0;*element,void&#xa0;*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Back)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqual)(const&#xa0;Vector&#xa0;*left,c=
onst&#xa0;Vector&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqualScalar)(const&#xa0;Vector&#xa0;*=
left,&#xa0;const&#xa0;void&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;Vector&#xa0;*AL,const&#xa=
0;void&#xa0;*element,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Copy)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;Vector&#xa0;*AL,size_t=
&#xa0;idx,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;void&#xa0;**(*CopyTo)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Create)(size_t&#xa0;elementsize,size_t&#xa=
0;startsize);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elemsiz,s=
ize_t&#xa0;startsiz,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa=
0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;Vector&#xa0;*first,const&#xa=
0;Vector&#xa0;*second);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Vector&#xa0;*AL,const&#xa0;void&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(Vector&#xa0;*AL,const&#xa0;void&#xa0=
;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(Vector&#xa0;*AL,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*Front)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;void&#xa0;**(*GetData)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;Vector&#xa0;*AL,size_=
t&#xa0;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*GetRange)(const&#xa0;Vector&#xa0;*AL,&#xa0=
;size_t&#xa0;start,&#xa0;size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*IndexIn)(Vector&#xa0;*SC,Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(const&#xa0;Vector&#xa0;*AL,const&#xa0=
;void&#xa0;*data,void&#xa0;*ExtraArgs,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*result);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Init)(Vector&#xa0;*r,size_t&#xa0;elementsi=
ze,size_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(Vector&#xa0;*V,void&#xa0;*buf);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*InitializeWith)(size_t&#xa0;elementSize,&#=
xa0;size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa=
0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(Vector&#xa0;*AL,void&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(Vector&#xa0;*AL,size_t&#xa0;idx,void=
&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(Vector&#xa0;*AL,&#xa0;size_t&#xa0;id=
x,Vector&#xa0;*newData);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunction=
&#xa0;readFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Mismatch)(Vector&#xa0;*a1,Vector&#xa0;*a2,size=
_t&#xa0;*mismatch);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(Vector&#xa0;*AL,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(Vector&#xa0;*AL,const&#xa0;void&#xa0=
;*str);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveRange)(Vector&#xa0;*SC,size_t&#xa0;start=
,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(Vector&#xa0;*AL,size_t&#xa0;idx,voi=
d&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reserve)(Vector&#xa0;*src,size_t&#xa0;newCapac=
ity);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(Vector&#xa0;*AL,size_t&#xa0;newSize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(Vector&#xa0;*V,size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(Vector&#xa0;*V,size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;Vector&#xa0;*AL,FILE&#xa0;*st=
ream,&#xa0;SaveFunction&#xa0;saveFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SearchWithKey)(Vector&#xa0;*vec,size_t&#xa0;st=
artByte,size_t&#xa0;sizeKey,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;startIndex,void=
&#xa0;*item,size_t&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Select)(Vector&#xa0;*src,const&#xa0;Mask&#xa0;=
*m);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*SelectCopy)(Vector&#xa0;*src,Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetCapacity)(Vector&#xa0;*AL,size_t&#xa0;newCa=
pacity);
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;(*SetCompareFunction)(Vector&#xa0;*l,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(Vector&#xa0;*v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(Vector&#xa0;*AL,Er=
rorFunction);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(Vector&#xa0;*AL,unsigned&#xa0;f=
lags);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;Vector&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;VectorInterface;

</pre></font>


     <h3><a name=3D"tth_sEc3.2">
3.2</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container32"></a> <font size=3D"+1"><b>Add</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Vector&#xa0;*AL,void&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(TYPEVector,&#xa0;TYPE&#xa0;data);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given element to the end of the container. It is the same operatio=
ns as the PushBack operation. It is assumed that &quot;data&quot; points to=
 a contiguous memory area of at least ElementSize bytes. Returns a value gr=
eater than zero if the addition completed successfully, a negative error co=
de otherwise.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector or the data pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL&#xa0;=3D&#xa0;iVector.Create(sizeof(double));
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;4.5;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iVector.Add(AL,&amp;d=
ata);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Template&#xa0;version
&#xa0;&#xa0;&#xa0;&#xa0;#include&#xa0;&quot;doubleVector.h&quot;
&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*AL&#xa0;=3D&#xa0;idoubleVector.C=
reate();
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;idoubleVector.Add(AL,=
4.5);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"AddRange+\container32"></a> <font size=3D"+1"><b>AddRange</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Vector&#xa0;*AL,size_t&#xa0;n,&#xa0=
;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(TYPEVector&#xa0;*AL,size_t&#xa0;n,&=
#xa0;TYPE&#xa0;*data);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the n given elements to the end of the container. It is the same opera=
tions as the PushBack operation. It is assumed that &quot;data&quot; points=
 to a contiguous memory area of at least n*ElementSize bytes. Returns a val=
ue greater than zero if the addition completed successfully, a negative err=
or code otherwise. If n is zero no error is issued even if the array pointe=
r or the data pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector or the data pointers are &#xa0;NULL , and n is not zero.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data[]&#xa0;=3D&#xa0;{4.5,&#xa0;4.6,&#x=
a0;4.7&#xa0;};
&#xa0;&#xa0;&#xa0;&#xa0;AL&#xa0;=3D&#xa0;iVector.Create(sizeof(double),5);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iVector.Add(AL,3,&#xa=
0;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Template&#xa0;version
&#xa0;&#xa0;&#xa0;&#xa0;#include&#xa0;&quot;doubleVector.h&quot;
&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*AL&#xa0;=3D&#xa0;idoubleVector.C=
reate(5);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data[]&#xa0;=3D&#xa0;{4.5,&#xa0;4.6,&#x=
a0;4.7&#xa0;};
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;idoubleVector.Add(AL,=
3,&#xa0;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Append+\container32"></a> <font size=3D"+1"><b>Append</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;int&#xa0;(*Append)(Vector&#xa0;*AL1,&#xa0;Vector&#xa0;*AL2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds all elements of AL2 at the end of the first container AL1. The two vec=
tors should contain elements of the same type.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of the Vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The first argument is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Apply+\container32"></a> <font size=3D"+1"><b>Apply</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(Vector&#xa0;l,int&#xa0;(Applyfn)(=
void&#xa0;*,void&#xa0;*),void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(TYPEVector&#xa0;l,int&#xa0;(Apply=
fn)(TYPE,void&#xa0;*),void&#xa0;*arg);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will call the given function for each element of the array. The first argum=
ent of the callback function receives an element of the array. The second a=
rgument of the callback is the arg argument that the Apply function receive=
s and passes to  the callback. This way some context can be passed to the c=
allback, and from one element to the next.
Note that the result of the callback is not used. This allows all kinds of =
result types to be accepted after a suitable cast.
If the array is read-only, a copy of the element will be passed to the call=
back function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either list or Applyfn are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 The list is read-only and there is no more memory to allocate the buffer t=
o copy each element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if no errors or a negative error code.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
static&#xa0;int&#xa0;Callback(void&#xa0;*pelement,void&#xa0;*pResult)
&#xa0;&#xa0;&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*p&#xa0;=3D&#xa=
0;pelement;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*result&#xa0;=
=3D&#xa0;pResult;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;*result&#xa0;+=3D&#xa0;*p;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;AddVector(Vector&#xa0;*l)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;sum&#xa0;=3D&#x=
a0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*alist&#xa0;=3D=
&#xa0;iVector.Create(sizeof(double),2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;2;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iVector.Add(alist,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;3;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iVector.Add(alist,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Apply(alist,Callback,=
&amp;sum);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Here&#xa0;sum&#xa0;=
should&#xa0;be&#xa0;5.
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;sum;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;------------------------------Template&#xa0=
;version
&#xa0;&#xa0;&#xa0;&#xa0;static&#xa0;int&#xa0;Callback(double&#xa0;element,v=
oid&#xa0;*pResult)
&#xa0;&#xa0;&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*result&#xa0;=
=3D&#xa0;pResult;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;*result&#xa0;+=3D&#xa0;elem=
ent;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;AddVector(Vector&#xa0;*l)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;sum&#xa0;=3D&#x=
a0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*alist&#x=
a0;=3D&#xa0;idoubleVector.Create(2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleVector.Add(alist,2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleVector.Add(alist,3);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleList.Apply(alist,Cal=
lback,&amp;sum);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Here&#xa0;sum&#xa0;=
should&#xa0;be&#xa0;5.
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;sum;
&#xa0;&#xa0;&#xa0;&#xa0;}


</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Back+\container32"></a> <font size=3D"+1"><b>Back</b></font>=
 <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*Back)(const&#xa0;Vector&#xa0;*v);
TYPE&#xa0;&#xa0;(*Back)(const&#xa0;TYPEVector&#xa0;*v);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the last element of the given vector or &#xa0;NULL if the vector is=
 empty.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The last element or &#xa0;NULL if the vector is empty or an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container32"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Vector&#xa0;*l);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all stored data and releases the memory associated with it. The vect=
or header will not be destroyed, and its contents will be the same as when =
the array was initially created. It is an error to use this function when t=
here are still active iterators for the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is greater than zero if successful, or an error code if an error=
 occurs.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*Al;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;m&#xa0;=3D&#xa0;iVector.Clear(Al);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CompareEqual+\container32"></a> <font size=3D"+1"><b>Compare=
Equal</b></font> <hr>


<font size=3D"+1"><pre>
Mask&#xa0;*(*CompareEqual)(ValArray&#xa0;*left,ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;bi=
tarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each element of the mask the result of comparing the correspondi=
ng elements of the left and right arrays. Conceptually this operation is:=20
<font size=3D"+1"><pre>Mask[i]&#xa0;=3D&#xa0;(left[i]&#xa0;=3D=3D&#xa0;righ=
t[i])

</pre></font>=20
If the mask argument is &#xa0;NULL it will be allocated and returned.=20
The allocator used is the global memory manager.=20
If it is not &#xa0;NULL it should contain at least enough positions to hold=
 the data. If it doesn&#x27;t it will be finalized using <font size=3D"+1">=
<tt>iMask.Finalize</tt></font> and=20
allocated with the necessary length.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given mask hasn&#x27;t enough positions available.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The arrays are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray passed or allocated, or &#xa0;NULL=
 if an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CompareEqualScalar+\container32"></a> <font size=3D"+1"><b>C=
ompareEqualScalar</b></font> <hr>


<font size=3D"+1"><pre>
Mask&#xa0;*(*CompareEqual)(const&#xa0;Vector&#xa0;*left,const&#xa0;void&#xa=
0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*b=
itarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each element of the mask the result of comparing the elements of=
 the left array with the right argument.=20
Conceptually this operation is:=20

<font size=3D"+1"><pre>bit[i]&#xa0;=3D&#xa0;(left[i]&#xa0;=3D=3D&#xa0;right)

</pre></font>=20
If the bitarray argument is &#xa0;NULL it will be allocated and returned. T=
he allocator used is the one from the left argument. If it is not &#xa0;NUL=
L it will be allocated if its length is less than the needed length.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray or &#xa0;NULL if an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Contains+\container32"></a> <font size=3D"+1"><b>Contains</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(Vector&#xa0;*a,void&#xa0;*data=
);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(TYPEVector&#xa0;*a,TYPE&#xa0;d=
ata);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches the given data in the array. The &quot;data&quot; argument is supp=
osed to point to an element at least ElementSize bytes. The array&#x27;s co=
mparison function is used for determining if two elements are equal. This c=
omparison function defaults to memcmp.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either array or data are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
One if the given data is stored in the array, zero otherwise. If either the=
 data pointer or the array pointer are &#xa0;NULL it returns a negative err=
or code.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*a&#xa0;=3D&#xa0;iVector.Create(sizeof(double),2);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;78.67;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.Contains(a,&amp;da=
ta);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;---------------------------Template&#xa0;ve=
rsion
&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*a&#xa0;=3D&#xa0;iVector.Create(2=
);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.Contains(a,78.67);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container32"></a> <font size=3D"+1"><b>Copy</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Copy)(Vector&#xa0;*A);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
A shallow copy of the given array is performed. Only ElementSize bytes will=
 be copied for each element. If the element contains pointers, only the poi=
nters are copied, not the objects they point to. The new memory will be all=
ocated using the given array&#x27;s allocator.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*newVector,*OldVector;
&#xa0;&#xa0;&#xa0;&#xa0;newVector&#xa0;=3D&#xa0;iVector.Copy(OldVector);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CopyElement+\container32"></a> <font size=3D"+1"><b>CopyElem=
ent</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Copy)(const&#xa0;Vector&#xa0;*A,size=
_t&#xa0;idx,void&#xa0;*result);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The element at the given index is copied into the output buffer that should=
 be at least big enough to hold one element. If the index is bigger
than the number of elements the error function is called. If it returns a v=
alid pointer (not &#xa0;NULL ) it is assumed that this is a pointer to a va=
lid
element that should be copied into the output buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
If the <font size=3D"+1"><tt>idx</tt></font> argument is out of range the <=
font size=3D"+1"><tt>CopyElement</tt></font> function calls the vector erro=
r function. If the error function returns a result
different than &#xa0;NULL , the function assumes that it is a pointer to so=
me value that should be copied into the result buffer.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The index is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*V;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buffer[16];
&#xa0;&#xa0;&#xa0;&#xa0;newVector&#xa0;=3D&#xa0;iVector.CopyElement(V,3,buf=
fer);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CopyTo+\container32"></a> <font size=3D"+1"><b>CopyTo</b></f=
ont> <hr>


<font size=3D"+1"><pre>
void&#xa0;**(*CopyTo)(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the whole contents of the given array into a table of pointers to ne=
wly allocated elements, finished by a &#xa0;NULL pointer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a table of pointers or &#xa0;NULL if an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"deleteIterator+\container32"></a> <font size=3D"+1"><b>delet=
eIterator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;deleteIterator(Iterator&#xa0;*it);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims the memory used by the given iterator object

<div class=3D"p"><!----></div>
<b>Returns:</b>
Integer smaller than zero with error code or a positive number when the ope=
ration completes.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container32"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Create)(size_t&#xa0;element_size,siz=
e_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;&#xa0;TYPEVector&#xa0;*(*Create)(size_t&#xa0;startsize);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The creation function returns an empty array, initialized with all the defa=
ult values.
The current memory manager is used to allocate the space needed for the hea=
der. The array is supposed to contain elements of the same size. If the ele=
ments you want to store are of different size, use a pointer to them, and c=
reate the array with sizeof(void *) as the size parameter.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A pointer to a newly created array or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given element size is zero.

<div class=3D"p"><!----></div>
Any errors provoke the call the current default error function of the libra=
ry since this is the creation function.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*DArray&#xa0;=3D&#xa0;iVector.Create(sizeof(double),100);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CreateWithAllocator+\container32"></a> <font size=3D"+1"><b>=
CreateWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
Vector&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;startsize,Containe=
rAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function is identical to <font size=3D"+1"><tt>Create</tt></font> with=
 the difference that it accepts a pointer to an allocator object. Actually,=
 <font size=3D"+1"><tt>Create</tt></font> can
be written as:
<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>return CreateWithAllocator(elementsize,startsize,Curr=
entAllocator);</tt></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Equal+\container32"></a> <font size=3D"+1"><b>Equal</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(Vector&#xa0;*first,Vector&#xa0;*s=
econd);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Compares the given arrays. If they differ in their length, flags, or elemen=
t size they compare unequal. If any of their elements differ, they compare =
unequal.
If both first and second are &#xa0;NULL they compare equal.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is one if the vectors are equal, zero otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container32"></a> <font size=3D"+1"><b>Erase</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Vector&#xa0;*AL,void&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(TYPEVector&#xa0;*AL,TYPE&#xa0;dat=
a);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the vector the element that matches the given data, that is as=
sumed to be a pointer to an element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that at least one match was found and the elements were removed.=20
If the element is not in the vector the result value is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.3;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.Erase(AL,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;2.3&#xa0;erase=
d|n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;No&#xa0;elemen=
t&#xa0;with&#xa0;value&#xa0;2.3&#xa0;present\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;error&#xa0;cod=
e&#xa0;%d\n&quot;,r);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"EraseAll+\container32"></a> <font size=3D"+1"><b>EraseAll</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(Vector&#xa0;*v,const&#xa0;void=
&#xa0;*data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(TYPEVector&#xa0;*v,const&#xa0;=
TYPE&#xa0;data);&#xa0;&#xa0;&#xa0;&#xa0;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the list all elements that match the given data, that is assum=
ed to be a pointer to an element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that at least a match was found and the element was removed. If the=20
element is not in the list the result is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"EraseAt+\container32"></a> <font size=3D"+1"><b>EraseAt</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(Vector&#xa0;*AL,size_t&#xa0;idx=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the array the element at the given position.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A negative error code if an error occurred or a positive value that indicat=
es that the element was removed.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.EraseAt(AL,2);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Element&#xa0;a=
t&#xa0;position&#xa0;2&#xa0;erased\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Error&#xa0;cod=
e&#xa0;%d\n&quot;,r);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container32"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the container, including the array header objec=
t itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The container is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value means the operation completed. A negative error code indic=
ates failure.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.Finalize(AL);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;er=
ror&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container32"></a> <font size=3D"+1"><b>Front</b></fon=
t> <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*Front)(const&#xa0;Vector&#xa0;*v);
TYPE&#xa0;&#xa0;(*Front)(const&#xa0;TYPEVector&#xa0;*v);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the first element of the given vector or &#xa0;NULL if the vector i=
s empty.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The first element or &#xa0;NULL if the vector is empty or an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetCapacity+\container32"></a> <font size=3D"+1"><b>GetCapac=
ity</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(const&#xa0;Vector&#xa0;*=
AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements the array can hold before  it needs to reall=
ocate its data<a href=3D"#tthFtNtADF" name=3D"tthFrefADF"><sup>35</sup></a>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given array is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The array capacity or zero if there was an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElementSize+\container32"></a> <font size=3D"+1"><b>GetEl=
ementSize</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;Vector&#xa=
0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Retrieves the size of the elements stored in the given vector. Note that th=
is value can be different than the value given to the creation function bec=
ause of alignment requirements. In template containers this function returns
<font size=3D"+1"><tt>sizeof(TYPE)</tt></font>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>

<b>Returns:</b>
The element size.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iVector.GetElementSiz=
e(AL);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetData+\container32"></a> <font size=3D"+1"><b>GetData</b><=
/font> <hr>


<font size=3D"+1"><pre>
void&#xa0;**(*GetData)(const&#xa0;Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the data area of the container, or &#xa0;NULL if an er=
ror occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_READONLY

 The container is read-only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>The pointer to the array&#x27;s data or &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElement+\container32"></a> <font size=3D"+1"><b>GetElemen=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(Vector&#xa0;*AL,size_t&#xa=
0;idx);
&#xa0;&#xa0;&#xa0;&#xa0;TYPE&#xa0;*(*GetElement)(TYPEVector&#xa0;*AL,size_t=
&#xa0;idx);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a read only pointer to the element at the given index, or &#xa0;NUL=
L if the operation failed.  This function will return &#xa0;NULL if the vec=
tor is read only. If the index is greater than the number of elements, the =
error function will be called. If the error function returns a valid pointer
(not &#xa0;NULL ) the result will be that pointer. This allows the construc=
tion of infinite arrays, or sparse arrays, etc. By default, the error funct=
ion
returns always &#xa0;NULL .

<div class=3D"p"><!----></div>
Use the CopyElement function to get a read/write copy of an element of the =
vector.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

    The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

    The array is read only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d&#xa0;=3D&#xa0;iVector.GetElement(AL,=
3);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(d&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetFlags / SetFlags+\container32"></a> <font size=3D"+1"><b>=
GetFlags / SetFlags</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(Vector&#xa0;*AL,unsigned&=
#xa0;newFlags);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
GetFlags returns the state of the container flags, SetFlags sets the flags =
to a new value and returns the old value.=20

<div class=3D"p"><!----></div>
The Vector container supports the following flags:

<div class=3D"p"><!----></div>
 CONTAINER_READONLY
If this flag is set, no modifications to the container are allowed, and the=
 Clear and Finalize functions will not work. The GetElement function will a=
lways return &#xa0;NULL . You should use the CopyElement function to access=
 the data
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetRange+\container32"></a> <font size=3D"+1"><b>GetRange</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*GetRange)(Vector&#xa0;*AL,size_t&#xa=
0;start,size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Selects a series of consecutive elements starting at position start and end=
ing at position end.  Both the elements at start and end are included in th=
e result.
If start &gt; end or start &gt; Size(AL), &#xa0;NULL is returned. If end is=
 bigger than the number of elements in the vector AL, only elements up to t=
he number of elements will be used.
The selected elements are copied into a new array. The original array remai=
ns unchanged.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given array pointer or the element given are &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new vector containing the selected elements o=
r &#xa0;NULL if an error occurs.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*range&#xa0;=3D&#xa0;iVector.GetRange(A=
L,2,5);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(range&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0;/=
*&#xa0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"IndexIn+\container32"></a> <font size=3D"+1"><b>IndexIn</b><=
/font> <hr>


<font size=3D"+1"><pre>
Vector&#xa0;*(*IndexIn)(Vector&#xa0;*SC,Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns an array built from indexing the first argument (&quot;SC&quot;) wi=
th the array of indexes =C4L&quot; that should be an array of size_t elemen=
ts. The number of elements of the resulting array is equal to the number of=
 elements of the indexes array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given array pointer or the indexes array are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 Any given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new array or &#xa0;NULL if an error occurs. No partial results are return=
ed. If any index is out of bounds the whole operation fails.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"IndexOf+\container32"></a> <font size=3D"+1"><b>IndexOf</b><=
/font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*IndexOf)(Vector&#xa0;*l,void&#xa0;*data,void&#xa0;*ExtraArgs,siz=
e_t&#xa0;*result);
int&#xa0;(*IndexOf)(TYPEVector&#xa0;*l,TYPE&#xa0;data,void&#xa0;*ExtraArgs,=
size_t&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches for an element in the array. If found its zero based index is retu=
rned in the pointer &quot;result&quot;. Otherwise the result of the search =
is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
. The =EBxtraArgs&quot; argument will be passed to the comparison function,=
 that is used to compare elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given array pointer or the element given are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the element is found, or a negative number containing =
an error code or the negative constant=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;6.8;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;pos;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.IndexOf(AL,&amp;da=
ta,NULL,&amp;pos);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;CONTAINER_ERROR_NOTFOUN=
D)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Not&#xa0;found=
\n&quot;);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"InsertAt+\container32"></a> <font size=3D"+1"><b>InsertAt</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(Vector&#xa0;*AL,size_t&#xa0;id=
x,void&#xa0;*newData);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(TYPEVector&#xa0;*AL,size_t&#xa=
0;idx,TYPE&#xa0;newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the new element. The new element will have the given index, that ca=
n go from zero to the vector count inclusive, i.e. one more than the number=
 of elements in the vector. If the index is out of bounds, the vector error=
 function is called. If the function returns a valid pointer (a pointer
different than &#xa0;NULL ) it will be assumed that the vector should be in=
creased to the index given. The vector is resized and the data is inserted
at the requested position. This allows the implementation of infinite vecto=
rs, sparse vectors, and other data structures.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
When this API detects an index error, it calls the error function. If the e=
rror function returns a pointer different from &#xa0;NULL , the API will ex=
tend
the requested vector to make possible the insertion. If the API is unable t=
o extend the vector and error is returned and the vector remains unchanged.

<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given vector pointer or the element given are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if th=
e operation failed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.7;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL&#xa0;=3D&#xa0;iVector.Create(sizeof=
(double),3);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.InsertAt(AL,2,&amp=
;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;Er=
ror&#xa0;handling&#xa0;*/&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{&#xa0;/*&#xa0;Normal&#xa0;processing&#xa=
0;*/&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;--------------------------Template&#xa0;ver=
sion
&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*AL&#xa0;=3D&#xa0;idoubleVector.C=
reate(3);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;idoubleVector.InsertAt(AL,=
2,2.7);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;Er=
ror&#xa0;handling&#xa0;*/&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{&#xa0;/*&#xa0;Normal&#xa0;processing&#xa=
0;*/&#xa0;&#xa0;}


</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"InsertIn+\container32"></a> <font size=3D"+1"><b>InsertIn</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(Vector&#xa0;*Destination,&#xa0=
;size_t&#xa0;pos,&#xa0;Vector&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the array given in  its third argument at the given position in the=
 array pointed to by its first argument. The data is copied, and the source=
 argument is not modified in any way. Both arrays must have elements of the=
 same type. The library only tests the size of each one.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The source or the destination vectors are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The destination vector is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The vectors store elements of different size.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if th=
e operation failed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;PrintVector(Vector&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Count&#xa0;%ld,&#xa0;Capacity&#xa0;%ld=
\n&quot;,(long)iVector.Size(AL),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(long)iVector.GetCapa=
city(AL));
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iVector.Size(AL);i++)&#x=
a0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,*(double&#xa0;*)iVector.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

static&#xa0;void&#xa0;FillVector(Vector&#xa0;*&#xa0;AL,int&#xa0;start)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;i+start;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iVector.Add(AL,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;}
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL&#xa0;=3D&#xa0;iVector.Create(sizeof=
(double),10);
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL1&#xa0;=3DiVector.Create(sizeof(doub=
le),10);
&#xa0;&#xa0;&#xa0;&#xa0;FillVector(AL,0);
&#xa0;&#xa0;&#xa0;&#xa0;FillVector(AL1,100);
&#xa0;&#xa0;&#xa0;&#xa0;iVector.InsertIn(AL,5,AL1);
&#xa0;&#xa0;&#xa0;&#xa0;PrintVector(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Count&#xa0;20,&#xa0;Capacity&#xa0;20
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;100&#xa0;101&#xa0;102&#xa0;103&#xa0;104&=
#xa0;105&#xa0;106&#xa0;107&#xa0;108&#xa0;109&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#x=
a0;9
---------------------------------------------Template&#xa0;version
#include&#xa0;&lt;containers.h&gt;
#include&#xa0;&quot;doublevector.h&quot;
static&#xa0;void&#xa0;PrintVector(doubleVector&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Count&#xa0;%ld,&#xa0;Capacity&#xa0;%ld=
\n&quot;,(long)iVector.Size(AL),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(long)iVector.GetCapa=
city(AL));
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;iVector.Size(AL);i++)&#x=
a0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g&#xa0;&quot;=
,idoubleVector.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

static&#xa0;void&#xa0;FillVector(Vector&#xa0;*&#xa0;AL,int&#xa0;start)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idoubleVector.Add(AL,i+star=
t);
&#xa0;&#xa0;&#xa0;&#xa0;}
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL&#xa0;=3D&#xa0;idoubleVector.Create(=
10);
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL1&#xa0;=3DidoubleVector.Create(10);
&#xa0;&#xa0;&#xa0;&#xa0;FillVector(AL,0);
&#xa0;&#xa0;&#xa0;&#xa0;FillVector(AL1,100);
&#xa0;&#xa0;&#xa0;&#xa0;iVector.InsertIn(AL,5,AL1);
&#xa0;&#xa0;&#xa0;&#xa0;PrintVector(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Count&#xa0;20,&#xa0;Capacity&#xa0;20
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;100&#xa0;101&#xa0;102&#xa0;103&#xa0;104&=
#xa0;105&#xa0;106&#xa0;107&#xa0;108&#xa0;109&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#x=
a0;9


</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Load+\container32"></a> <font size=3D"+1"><b>Load</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*Load)(FILE&#xa0;*stream,ReadFunction&#xa0;=
readFn,void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads an array previously saved with the Save function from the stream poin=
ted to by stream. If readFn is not &#xa0;NULL , it will be used to read eac=
h element. The <font size=3D"+1"><tt>arg</tt></font> argument will be passe=
d to the read function. If the read function is &#xa0;NULL , this argument =
is ignored and a default read function is used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given stream pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A new array or &#xa0;NULL if the operation could not be completed. Note tha=
t the function pointers in the array are NOT saved, nor any special allocat=
or that was in the original vector. Those values will be the values by defa=
ult. To rebuild the original state the user should replace the pointers aga=
in in the new array.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"NewIterator+\container32"></a> <font size=3D"+1"><b>NewItera=
tor</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates and initializes a new iterator object to iterate this array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
If no more memory is available it returns &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new iterator or &#xa0;NULL if there is no more memory left.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;iVector.NewIterator=
(AL);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(d=3Dit-&gt;GetFirst(it);&#xa0;d&#xa0;!=3D=
&#xa0;NULL;&#xa0;d&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;val&#xa0;=3D&#x=
a0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Work&#xa0;with&#xa0=
;the&#xa0;value&#xa0;here
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iVector.deleteIterator(it);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Mismatch+\container32"></a> <font size=3D"+1"><b>Mismatch</b=
></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Mismatch)(const&#xa0;Vector&#xa0;*a1,const&#xa0;Vector&#xa0;*a2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*mismatch);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the index of the first element that is different when comparing bot=
h arrays in the passed pointer <i>mismatch</i>. If one array is shorter tha=
n the other the comparison stops
when the last element from the shorter array is compared. The comparison st=
ops when the first difference is spotted.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any of the arguments is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The containers have different comparison functions or store elements of di=
fferent size.

<div class=3D"p"><!----></div>
<b>Returns:</b>
If a mismatch is found the result is greater than zero and the <i>mismatch<=
/i> argument will contain the index of the first element that compared=20
unequal. This will be always the case for arrays of different length.

<div class=3D"p"><!----></div>
If both arrays are the same length and no differences are found the result =
is zero and the value pointed to by the=20
<i>mismatch</i> argument is one more than the length of the arrays.

<div class=3D"p"><!----></div>
If an error occurs, a negative error code is returned. The <i>mismatch</i> =
argument contains zero.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopBack+\container32"></a> <font size=3D"+1"><b>PopBack</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(Vector&#xa0;*AL,void&#xa0;*resu=
lt);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(TYPEVector&#xa0;*AL,TYPE&#xa0;*=
result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the last element into the given result buffer and deletes the elemen=
t from the container. If the result buffer is &#xa0;NULL , no copy is perfo=
rmed.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A negative value if an error occurs, zero if the array is empty or greater =
than zero if the operation succeeded.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RemoveRange+\container32"></a> <font size=3D"+1"><b>RemoveRa=
nge</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*RemoveRange)(Vector&#xa0;*SC,size_t&#xa0;start,size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes all elements having an index equal or greater than
<font size=3D"+1"><tt><i>start</i></tt></font>
 and less than
<font size=3D"+1"><tt><i>end</i></tt></font>
. If
<font size=3D"+1"><tt><i>end</i></tt></font>
 is greater than the number of elements=20
in the collection it will be adjusted to one more than the number of elemen=
ts. If
<font size=3D"+1"><tt><i>start</i></tt></font>
 is bigger than
<font size=3D"+1"><tt><i>end</i></tt></font>
 the range is still valid and
starts with the value of
<font size=3D"+1"><tt><i>end</i></tt></font>
 and ends with the value of
<font size=3D"+1"><tt><i>start</i></tt></font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
Zero if the vector is empty. Otherwise returns a positive number for succes=
s, a negative error code in case of an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"ReplaceAt+\container32"></a> <font size=3D"+1"><b>ReplaceAt<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(Vector&#xa0;*AL,size_t&#xa0;i=
dx,void&#xa0;*newData);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(TYPEVector&#xa0;*AL,size_t&#x=
a0;idx,TYPE&#xa0;newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the array element at position idx with the new data starting at th=
e position pointed to by &quot;newData&quot; and extending ElementSize byte=
s.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array or the new element pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL&#xa0;=3D&#xa0;iVector.Create(sizeof(double),2);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;6.7;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.ReplaceAt(AL,2,&am=
p;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;Er=
ror&#xa0;handling&#xa0;*/&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;--------------------------------Template&#x=
a0;version
&#xa0;&#xa0;&#xa0;&#xa0;doubleVector&#xa0;*AL&#xa0;=3D&#xa0;idoubleVector.C=
reate(2);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;idoubleVector.ReplaceAt(AL=
,2,6.7);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;Er=
ror&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Reserve+\container32"></a> <font size=3D"+1"><b>Reserve</b><=
/font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Reserve)(Vector&#xa0;*AL,&#xa0;size_t&#xa0;newSize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The capacity of the vector is increased at least by the given amount in pre=
paration for a planned increase in elements. The size is in element
units.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the space could be reserved, a negative=
 error code if not.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Resize+\container32"></a> <font size=3D"+1"><b>Resize</b></f=
ont> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Resize)(Vector&#xa0;*AL,&#xa0;size_t&#xa0;newSize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Resizes the given vector to the new capacity, expressed in element units. I=
f the new capacity is smaller than the elements in=20
the vector some elements will be erased.
For each erased element its destructor (if any) is called. If the requested=
 <font size=3D"+1"><tt>newSize</tt></font> argument is equal to the number =
of elements in the=20
container, all storage beyond what is needed to store exactly <font size=3D=
"+1"><tt>newSize</tt></font> elements, is released.
This allows to signal the library that the extra storage is no longer neede=
d<a href=3D"#tthFtNtADG" name=3D"tthFrefADG"><sup>36</sup></a>.

<font size=3D"+1"><pre>iVector.Resize(vec,iVector.Size(vec));

</pre></font>

<div class=3D"p"><!----></div>
Obviously under some implementations it is maybe impossible to allocate <b>=
exactly</b> the space needed, for instance because space can be only=20
allocated in chunks bigger than the element size of the vector. In those ca=
ses only a &quot;best effort&quot; will be done and the used storage will b=
e reduced=20
to a minimum.
If an error occurs, and the container can&#x27;t be resized, no changes occ=
ur and the container is left unmodified.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded. If the requested capacity is equal to the current
capacity  the result is zero.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Reverse+\container32"></a> <font size=3D"+1"><b>Reverse</b><=
/font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Reverse)(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reverses the order of the elements of the given Vector.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory for intermediate storage available

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RotateRight+\container32"></a> <font size=3D"+1"><b>RotateRi=
ght</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(Vector&#xa0;*src,size_t&#xa=
0;n);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates right the array by the indicated amount. The last n elements will b=
e written to the start of
the array, and the rest will be shifted right.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size).

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RotateLeft+\container32"></a> <font size=3D"+1"><b>RotateLef=
t</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(Vector&#xa0;*src,size_t&#xa0=
;n);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates left the array by the indicated amount. The first n elements will b=
e written to the end of
the array, and the rest will be shifted left to fill the empty n places.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory for intermediate storage available

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size), or an error code less than zero if an error occu=
rs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Save+\container32"></a> <font size=3D"+1"><b>Save</b></font>=
 <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;Vector&#xa0;*AL,&#xa0;FILE&#xa0;*out,&#xa0;Save=
Function&#xa0;Fn,&#xa0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given vector are saved into the given stream. If the sa=
ve function pointer is not &#xa0;NULL , it will be used to save the content=
s of each element and will receive the arg argument passed to Save, togethe=
r with the output stream. Otherwise a default save function will be used an=
d arg will be ignored.
The output stream must be opened for writing and must be in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer or the stream pointer are &#xa0;NULL .
EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*outFile;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iVector.Save(AL,outFile,NULL,NULL)&#xa0;&l=
t;&#xa0;0)&#xa0;{&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Handle&#xa0;error&#=
xa0;here&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SearchWithKey+\container32"></a> <font size=3D"+1"><b>Search=
WithKey</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*SearchWithKey)(Vector&#xa0;*vec,size_t&#xa0;startByte,size_t&#xa=
0;sizeKey,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;startIndex,v=
oid&#xa0;*item,&#xa0;size_t*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function searches the vector for a match in a region of the stored obj=
ects, ignoring the rest of the data. It will start at the object with <i>st=
artIndex</i> and compare (using memcmp) the specified region of each object=
. The region of interest within the stored object is specified=20
by a byte offset and a size.
If a match is found the search stops and the zero based index of the object=
 will
be written into the <i>result</i> pointer. If the index of the start of the=
 iteration is bigger than the number of elements in the array nothing
is searched and the result is zero.

<div class=3D"p"><!----></div>
If the sum of <i>startByte</i> and <i>sizeKey</i> is bigger than the size o=
f the elements stored, the comparison will start at the given offset but wi=
ll stop
at the end of the stored element.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array or the item element pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, zero if no match was found, or a =
positive number indicating that a match was found. The given index pointer =
is
modified only if a match is found.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Select+\container32"></a> <font size=3D"+1"><b>Select</b></f=
ont> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Select)(Vector&#xa0;*v,Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Using the given mask, the elements where the corresponding mask element is =
zero are eliminated, those with a mask
value different of zero are retained. The mask must have the same length as=
 the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The mask and the array are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value for success, or a negative error code other=
wise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SelectCopy+\container32"></a> <font size=3D"+1"><b>SelectCop=
y</b></font> <hr>


<font size=3D"+1"><pre>
Vector&#xa0;*(*SelectCopy)(Vector&#xa0;*v,Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Using the given mask, the elements where the corresponding mask element is =
different from zero are copied into a new array, those with a mask
value different of zero are ignored. The mask must have the same length as =
the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The mask and the array are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value for success, or a negative error code other=
wise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetCapacity+\container32"></a> <font size=3D"+1"><b>SetCapac=
ity</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*SetCapacity)(Vector&#xa0;*AL,size_t&#xa0;newCapacity);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Resizes the given Vector to a new value. The new capacity means there will =
be that number of elements allocated, avoiding costly resizing operations w=
hen new elements are added to the Vector. If the number given is less than =
the number of elements present in the array, elements are discarded from th=
e end of the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The Vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if resizing was completed, a negative error=
 code otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetCompareFunction+\container32"></a> <font size=3D"+1"><b>S=
etCompareFunction</b></font> <hr>


<font size=3D"+1"><pre>
CompareFunction&#xa0;(*SetCompareFunction)(Vector&#xa0;*AL,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;f);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
if the f argument is non &#xa0;NULL , it sets the array comparison function=
 to f.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The array is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the comparison function.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
ErrorFunction&#xa0;fn,newfn;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;fn&#xa0;=3D&#xa0;iVector.SetErrorFunction(AL,newfn);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetDestructor+\container32"></a> <font size=3D"+1"><b>SetDes=
tructor</b></font> <hr>


<font size=3D"+1"><pre>
DestructorFunction&#xa0;(*SetDestructor)(Vector&#xa0;*v,DestructorFunction&=
#xa0;fn);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Sets the destructor function to its given argument. I=
f the function argument is &#xa0;NULL nothing is changed and the call is in=
terpreted as a query since the return value is the current value of the des=
tructor function. If the vector argument is &#xa0;NULL , the result is &#xa=
0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The old value of the destructor.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetErrorFunction+\container32"></a> <font size=3D"+1"><b>Set=
ErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(Vector&#xa0;=
*V,ErrorFunction);&#xa0;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the current error function  for the given vector with the new erro=
r function if the
<font size=3D"+1"><tt><i>ErrorFunction</i></tt></font>
parameter is different from &#xa0;NULL . If=20
the
<font size=3D"+1"><tt><i>V</i></tt></font>
parameter is &#xa0;NULL the function returns the value of the current defau=
lt error function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the error function or &#xa0;NULL if there is an error.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Size+\container32"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements stored in the array.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;elem&#xa0;=3D&#xa0;iVector.Size(AL);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sizeof+\container32"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total size in bytes of the vector, including the header, and al=
l data stored in it. If the argument is &#xa0;NULL , the size of the header=
 only is returned.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes used by the vector or the size of the Vector header if =
the argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;&#xa0;size&#xa0;=3D&#xa0;iVector.Sizeof=
(AL);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sort+\container32"></a> <font size=3D"+1"><b>Sort</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;Sort(Vector&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sorts the given array using the its comparison function. The order of the o=
riginal array is destroyed. You should copy it if you want to preserve it.=
=20

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if sorting succeeded, a negative error code if not.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iVector.Sort(AL)&#xa0;&lt;&#xa0;0)&#xa0;{&=
#xa0;/*&#xa0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc4">
4</a>&#xa0;&#xa0;The bit-string container: iBitString</h2>
<a name=3D"BitString40"></a><img alt=3D"Figure" src=3D"bitstrings.png">
<div class=3D"p"><!----></div>
 BitString vocabulary. Specific items are in bold.
<div class=3D"p"><!----></div>
A bit string is a derivation from the Vector container, specialized to hold=
 a sequence of bits. It is a sequential container designed to save space in=
 the storage of boolean values
<a href=3D"#tthFtNtADH" name=3D"tthFrefADH"><sup>37</sup></a>.=20

     <h3><a name=3D"tth_sEc4.1">
4.1</a>&#xa0;&#xa0;The interface</h3>
<a name=3D"iBitString41"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagBitStringInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(BitString&#xa0;*BitStr,int);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(BitString&#xa0;*b,&#xa0;size_t&#xa0;=
bitSize,&#xa0;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*And)(BitString&#xa0;*bsl,BitString&#xa0=
;*bsr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AndAssign)(BitString&#xa0;*bsl,BitString&#xa0;=
*bsr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(BitString&#xa0;*left,BitString&#xa0;*r=
ight);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(BitString&#xa0;*BitStr,int&#xa0;(*Apply=
fn)(int&#xa0;,void&#xa0;*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;uintmax_t&#xa0;(*BitBlockCount)(BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;int&#xa0;(*BitLeftShift)(BitString&#xa0;*bs,size_t&#xa0;s=
hift);
&#xa0;&#xa0;&#xa0;int&#xa0;(*BitRightShift)(BitString&#xa0;*bs,size_t&#xa0;=
shift);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(BitString&#xa0;*BitStr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(BitString&#xa0;*BitStr,BitString&#xa=
0;*str,void&#xa0;*ExtraArgs);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Copy)(BitString&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyBits)(BitString&#xa0;*bitstr,void&#xa0;*bu=
f);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Create)(size_t&#xa0;bitlen);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*CreateWithAllocator)(size_t&#xa0;starts=
iz,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(BitString&#xa0;*bsl,BitString&#xa0;*bsr=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(BitString&#xa0;*BitStr,int&#xa0;bit);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(BitString&#xa0;*BitStr,size_t&#xa0;id=
x);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(BitString&#xa0;*BitStr);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(BitString&#xa0;*BitStr);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;*(*GetData)(BitString&#xa0;*BitSt=
r);
&#xa0;&#xa0;&#xa0;int&#xa0;(*GetElement)(BitString&#xa0;*BitStr,size_t&#xa0=
;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(BitString&#xa0;*BitStr);&#xa0;
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*GetRange)(BitString&#xa0;*b,size_t&#xa0=
;start,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(BitString&#xa0;*BitStr,int&#xa0;Searc=
hedBit,void&#xa0;*ExtraArgs,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*result);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Init)(BitString&#xa0;*BitStr,size_t&#xa=
0;bitlen);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(BitString&#xa0;*,void&#xa0;*);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*InitializeWith)(size_t&#xa0;size,void&#=
xa0;*data);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Insert)(BitString&#xa0;*BitStr,int&#xa0;bit=
);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*InsertAt)(BitString&#xa0;*BitStr,size_t&#xa=
0;idx,int&#xa0;bit);
&#xa0;&#xa0;&#xa0;int&#xa0;(*LessEqual)(BitString&#xa0;*bsl,BitString&#xa0;=
*bsr);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunct=
ion&#xa0;saveFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Memset)(BitString&#xa0;*,size_t&#xa0;start,siz=
e_t&#xa0;stop,int&#xa0;newval);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(BitString&#xa0;*);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Not)(BitString&#xa0;*bsl);
&#xa0;&#xa0;&#xa0;int&#xa0;(*NotAssign)(BitString&#xa0;*bsl);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Or)(BitString&#xa0;*left,BitString&#xa0=
;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*OrAssign)(BitString&#xa0;*bsl,BitString&#xa0;*=
bsr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(BitString&#xa0;*BitStr);
&#xa0;&#xa0;&#xa0;uintmax_t&#xa0;(*PopulationCount)(BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Print)(BitString&#xa0;*b,size_t&#xa0;bufsiz=
,unsigned&#xa0;char&#xa0;*out);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(BitString&#xa0;*BitStr,int&#xa0;val);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(BitString&#xa0;*BitStr,size_t&#xa0;=
idx,int&#xa0;newval);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Reverse)(BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;BitString&#xa0;*bitstr,FILE&#=
xa0;*stream,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;sav=
eFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetCapacity)(BitString&#xa0;*BitStr,size_t&#xa=
0;newCapacity);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetElement)(BitString&#xa0;*bs,size_t&#xa0;pos=
ition,int&#xa0;b);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;*(*SetErrorFunction)(BitString&#xa0;*,=
ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(BitString&#xa0;*BitStr,unsigned=
&#xa0;flags);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(BitString&#xa0;*BitStr);&#xa0;
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(BitString&#xa0;*b);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*StringToBitString)(unsigned&#xa0;char&#=
xa0;*);
&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Xor)(BitString&#xa0;*bsl,BitString&#xa0=
;*bsr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*XorAssign)(BitString&#xa0;*bsl,BitString&#xa0;=
*bsr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;BitStringInterface;

</pre></font>


     <h3><a name=3D"tth_sEc4.2">
4.2</a>&#xa0;&#xa0;API</h3>
Contrary to the other containers presented above like <font size=3D"+1"><tt=
>iList</tt></font> or <font size=3D"+1"><tt>iVector</tt></font>, bitstring =
receives and returns not pointers but values of bits. This is an important =
difference and makes for significant changes in the interface of many funct=
ions.

<div class=3D"p"><!----></div>
Other functions like <font size=3D"+1"><tt>Apply</tt></font> do not make mu=
ch sense for bits and are provided  just to be coherent in the overall desi=
gn of the library. Obviously a function that needs a function call per bit =
is not very fast.
The function GetElementSize is provided for compatibility purposes only and=
 returns always 1. Actually it should return 0.125 assuming
8 bits bytes.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container42"></a> <font size=3D"+1"><b>Add</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(BitString&#xa0;*BitStr,int);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds a bit at the end of the given bitstring.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is no memory to carry out the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the bit is added or a negative error co=
de otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;32;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(b,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"And+\container42"></a> <font size=3D"+1"><b>And</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*And)(BitString&#xa0;*left,BitStri=
ng&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical AND between the left and right arguments. The result is ret=
urned in a new bit string, both arguments are not modified. The length of t=
he resulting bit string is the smallest length of both strings.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the newly allocated result or &#xa0;NULL in case of error.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of both bitstring pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b,*c,*d;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;c&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;32;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(b,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(c,i&lt;16);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;&#xa0;AND\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(c,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;=3D\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;iBitString.And(b,c);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(d,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010
&#xa0;AND
0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000&#xa0;&#xa0;1111&#xa0;1111&#xa0;&#x=
a0;1111&#xa0;1111
=3D
0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"AndAssign+\container42"></a> <font size=3D"+1"><b>AndAssign<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*AndAssign)(BitString&#xa0;*left,BitStrin=
g&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical AND of its two arguments and assigns the result into the le=
ft bit string. If the bit strings have a different length, the operation us=
es the bits of the right argument until either the end of the right argumen=
t or the end of the destination string is reached.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number or a negative error code in case of error.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b,*c;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;c&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;32;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(b,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(c,i&lt;16);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;&#xa0;AND\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(c,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;=3D\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.AndAssign(b,c);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010
&#xa0;AND
0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000&#xa0;&#xa0;1111&#xa0;1111&#xa0;&#x=
a0;1111&#xa0;1111
=3D
0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"BitBlockCount+\container42"></a> <font size=3D"+1"><b>BitBlo=
ckCount</b></font> <hr>


<font size=3D"+1"><pre>
uintmax_t&#xa0;&#xa0;(*BitBlockCount)(BitString&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of blocks where 1 or more bits are set.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of blocks of set bits.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b,*c,*d;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;c&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;32;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(b,i&amp;1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(c,i&lt;16);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s&#xa0;BitBlockCount=3D%ld\n&quot;,bu=
f,iBitString.BitBlockCount(b));
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(c,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s&#xa0;BitBlockCount=3D%ld\n&quot;,bu=
f,iBitString.BitBlockCount(c));
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#xa0;1010&#xa0;1010&#xa0;&#x=
a0;1010&#xa0;1010&#xa0;BitBlockCount=3D16
0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000&#xa0;&#xa0;1111&#xa0;1111&#xa0;&#x=
a0;1111&#xa0;1111&#xa0;BitBlockCount=3D1

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CopyBits+\container42"></a> <font size=3D"+1"><b>CopyBits</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyBits)(BitString&#xa0;*b,&#xa0;void&#=
xa0;*buffer);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the bits into the given buffer. The size of the buffer is at least:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;1+iBitstring.Size(bitstr)/8

</pre></font>

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either the bitstring or the buffer pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the bits are copied, a negative error c=
ode otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetData+\container42"></a> <font size=3D"+1"><b>GetData</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;*(*GetData)(BitString&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Returns a pointer to the bits stored in the bitstring=
. If the string is read-only the result is &#xa0;NULL . The size of the nee=
ded buffer can be=20
calculated according to:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;BitString&#xa0;*bitstr;
&#xa0;&#xa0;&#xa0;size_t&#xa0;bytesize;

&#xa0;&#xa0;&#xa0;bytesize&#xa0;=3D&#xa0;1+iBitString.GetSize(bitstr)/CHAR_=
BIT;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The bit string pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The bitstring is read-only.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetRange+\container42"></a> <font size=3D"+1"><b>GetRange</b=
></font> <hr>


<font size=3D"+1"><pre>
BitString&#xa0;*(*GetRange)(BitString&#xa0;*b,size_t&#xa0;start,size_t&#xa0=
;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns all the bits between the start (inclusive) and the end (inclusive) =
indices. If end is smaller than start, start and end are exchanged.
If end is greater than the size of the bit string, all elements up to the l=
ast one are returned. If both start and end are out of range, an error is i=
ssued and the result is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new bit string with the specified contents.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;outbuf[256];
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*bs&#xa0;=3D&#xa0;iBitString.StringT=
oBitString(&quot;0001&#xa0;1111&#xa0;0000&#xa0;0000&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*bs1&#xa0;=3D&#xa0;iBitString.GetRan=
ge(bs,8,14);
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*bs2&#xa0;=3D&#xa0;iBitString.GetRan=
ge(bs,7,14);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(bs,sizeof(outbuf),outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original:%s&#xa0;\n&quot;,outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(bs1,sizeof(outbuf),outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Range&#xa0;8,14:&#xa0;%s\n&quot;,outbu=
f);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(bs2,sizeof(outbuf),outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Range&#xa0;7,14:%s\n&quot;,outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Original:0001&#xa0;1111&#xa0;&#xa0;0000&#xa0;0000&#xa0;
Range&#xa0;8,14:&#xa0;01&#xa0;1111
Range&#xa0;7,14:001&#xa0;1110

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"BitLeftShift+\container42"></a> <font size=3D"+1"><b>BitLeft=
Shift</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*BitLeftShift)(BitString&#xa0;*bs,size_t&#xa0;shift);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Shifts left the given bit string by the specified number of bits. New bits =
introduced by the right are zeroed.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The bit string pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>An integer bigger than zero if successful, a negative error =
code otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
static&#xa0;void&#xa0;Putbs(BitString&#xa0;*bs,char&#xa0;*prompt)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;outbuf[256];
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(bs,sizeof(outbuf),outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s:&#xa0;%s\n&quot;,prompt,outbuf);
}
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;outbuf[256];
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;ls;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&lt;&#xa0;2)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;Usage:=
&#xa0;%s:&#xa0;amount\n&quot;,argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;ls&#xa0;=3D&#xa0;atoi(argv[1]);
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*bs&#xa0;=3D&#xa0;iBitString.StringT=
oBitString(&quot;0001&#xa0;1111&#xa0;1010&#xa0;0000&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;Putbs(bs,&quot;Original&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.BitLeftShift(bs,ls);
&#xa0;&#xa0;&#xa0;&#xa0;sprintf(outbuf,&quot;Shifted&#xa0;left&#xa0;by&#xa0=
;%d&quot;,ls);
&#xa0;&#xa0;&#xa0;&#xa0;Putbs(bs,outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
~/ccl/test&#xa0;$&#xa0;./a.out&#xa0;1
Original&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;:&#xa0;0001&#=
xa0;1111&#xa0;&#xa0;1010&#xa0;0000
Shifted&#xa0;left&#xa0;by&#xa0;1:&#xa0;0011&#xa0;1111&#xa0;&#xa0;0100&#xa0;=
0000
~/ccl/test&#xa0;$&#xa0;./a.out&#xa0;3
Original&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;:&#xa0;0001&#=
xa0;1111&#xa0;&#xa0;1010&#xa0;0000
Shifted&#xa0;left&#xa0;by&#xa0;3:&#xa0;1111&#xa0;1101&#xa0;&#xa0;0000&#xa0;=
0000

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Not+\container42"></a> <font size=3D"+1"><b>Not</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Not)(BitString&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical NOT of its argument. The result is returned in a new bit st=
ring. The length of the resulting bit string is the same as the length of t=
he argument.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the newly allocated bit string or &#xa0;NULL in case of error.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The argument is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"NotAssign+\container42"></a> <font size=3D"+1"><b>NotAssign<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*NotAssign)(BitString&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical NOT of its argument and assigns the result into it.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The argument is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number or a negative error code in case of error.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.Create(32);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;32;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Add(b,i&lt;16);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa=
0;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.NotAssign(b);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;NOT&#xa0;b&#xa0;=3D&#xa0;%s\n&quot;,bu=
f);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;0000&#xa0;0000&#xa0;&#xa0;0000&#xa0=
;0000&#xa0;&#xa0;1111&#xa0;1111&#xa0;&#xa0;1111&#xa0;1111
NOT&#xa0;b&#xa0;=3D&#xa0;1111&#xa0;1111&#xa0;&#xa0;1111&#xa0;1111&#xa0;&#xa=
0;0000&#xa0;0000&#xa0;&#xa0;0000&#xa0;0000

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitializeWith+\container42"></a> <font size=3D"+1"><b>Initi=
alizeWith</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*ObjectToBitString)(size_t&#xa0;si=
ze,void&#xa0;*p);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The bits starting by the given pointer are copied into a new bit string usi=
ng the size (in bytes) indicated by the second parameter <font size=3D"+1">=
<tt>size</tt></font>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough ressources to finish the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A new bit string or &#xa0;NULL if there is an error.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
/*&#xa0;This&#xa0;example&#xa0;changes&#xa0;the&#xa0;sign&#xa0;of&#xa0;a&#x=
a0;double&#xa0;precision
number&#xa0;by&#xa0;changing&#xa0;its&#xa0;sign&#xa0;bit&#xa0;*/
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0;-0.125;&#xa0;/*&#xa0;Nu=
mber&#xa0;is&#xa0;negative&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b&#xa0;=3D&#xa0;iBitString.ObjectTo=
BitString(sizeof(double),&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Now&#xa0;set&#xa0;sign&#xa0;to&#xa0;zero,&#=
xa0;making&#xa0;the&#xa0;number&#xa0;positive&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.SetElement(b,63,0);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.CopyBits(b,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%g\n&quot;,d);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
0.125

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Or+\container42"></a> <font size=3D"+1"><b>Or</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Or)(BitString&#xa0;*left,BitStrin=
g&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical OR between the left and right arguments. The result is retu=
rned in a new bit string, both arguments are not modified. The length of th=
e resulting bit string is the smallest length of both strings.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of both bitstring pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"OrAssign+\container42"></a> <font size=3D"+1"><b>OrAssign</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*OrAssign)(BitString&#xa0;*left,BitString=
&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical OR of its two arguments and assigns the result into the lef=
t bit string. If the bit strings have a different length, the operation use=
s the bits of the right argument until either the end of the right argument=
 or the end of the destination string is reached.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number or a negative error code in case of error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopulationCount+\container42"></a> <font size=3D"+1"><b>Popu=
lationCount</b></font> <hr>


<font size=3D"+1"><pre>
uintmax_t&#xa0;&#xa0;(*PopulationCount)(BitString&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of 1 bits in the bit string.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of set bits in the string.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given argument is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Print+\container42"></a> <font size=3D"+1"><b>Print</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;size_t&#xa0;(*Print)(BitString&#xa0;*b,size_t&#xa0;bufsiz,unsig=
ned&#xa0;char&#xa0;*out);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Prints into the given buffer the contents of the bitstring <font size=3D"+1=
"><tt>b</tt></font> without exceeding the length of the given buffer <font =
size=3D"+1"><tt>bufsiz</tt></font>. The bits will=20
be grouped into 4 bits separated by a space. Each group of 8 bits will be s=
eparated from the rest by two spaces.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

. The bit string pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of characters written to the output string, inclu=
ding the terminating zero. If the output string pointer is &#xa0;NULL , it =
returns=20
the number of characters that would be needed to print the contents of the =
bitstring.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Reverse+\container42"></a> <font size=3D"+1"><b>Reverse</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Reverse)(BitString&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The bit sequence of the argument is reversed

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new bit string containing the reversed argument.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;pos;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b,*c;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&lt;&#xa0;2)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;Usage:=
&#xa0;%s&#xa0;&lt;bitstring&gt;\n&quot;,argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.StringToBitString(argv[1=
]);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Reversing&#xa0;bits&#xa0;of&#xa0;%s\n&=
quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;c&#xa0;=3D&#xa0;iBitString.Reverse(b);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(c,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Reversing&#xa0;bits&#xa0;of&#xa0;1111&#xa0;1100&#xa0;&#xa0;0000&#xa0;1111&#=
xa0;&#xa0;1111&#xa0;1111
1111&#xa0;1111&#xa0;&#xa0;1111&#xa0;0000&#xa0;&#xa0;0011&#xa0;1111

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RemoveAt+\container42"></a> <font size=3D"+1"><b>RemoveAt</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveAt)(BitString&#xa0;*bitStr,size_t&#xa0;i=
dx);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes the bit at the specified position. If the position is greater than =
the length of the string the last position will be used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given bit string pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number when the bit was removed, a negative error=
 code otherwise. If the bit string is empty the result is zero.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;pos;
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*b;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;buf[512];

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&lt;&#xa0;3)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;Usage:=
&#xa0;%s&#xa0;bitstring&#xa0;pos\n&quot;,argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;b&#xa0;=3D&#xa0;iBitString.StringToBitString(argv[1=
]);
&#xa0;&#xa0;&#xa0;&#xa0;pos&#xa0;=3D&#xa0;atoi(argv[2]);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Erasing&#xa0;bit&#xa0;%d&#xa0;of&#xa0;=
%s\n&quot;,pos,buf);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.EraseAt(b,pos);
&#xa0;&#xa0;&#xa0;&#xa0;iBitString.Print(b,sizeof(buf),buf);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,buf);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
Erasing&#xa0;bit&#xa0;2&#xa0;of&#xa0;11&#xa0;&#xa0;1000&#xa0;1110&#xa0;&#xa=
0;0011&#xa0;1000
1&#xa0;&#xa0;1100&#xa0;0111&#xa0;&#xa0;0001&#xa0;1100

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Set+\container42"></a> <font size=3D"+1"><b>Set</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Set)(BitString&#xa0;*B,size_t&#xa0;start=
,size_t&#xa0;stop,bool&#xa0;newvalue);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the range of bits delimiteded by its <i>start</i> and <i>end</i> argum=
ents to the value given by its <i>newvalue</i> argument. If the new
value is different than zero a &#x27;1&#x27; bit is written, otherwise the =
bit is set to zero. If the <i>stop</i> argument is bigger than the length o=
f the
bitstring, the end of the string will be used.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The bit string pointer is NULL.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The <i>start</i> argument is bigger or equal to the length of the bitstrin=
g.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"StringToBitString+\container42"></a> <font size=3D"+1"><b>St=
ringToBitString</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*StringToBitString)(unsigned&#xa0;=
char&#xa0;*);

</pre></font>
Reads a bitstring from a character string. The character string should cont=
ain only the characters &#x27;1&#x27;, &#x27;0&#x27;, space and tab.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The character string pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the new bitstring or &#xa0;NULL if there was an=
 error or the given character string did not contain any &#x27;1&#x27; or &=
#x27;0&#x27;.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Xor+\container42"></a> <font size=3D"+1"><b>Xor</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BitString&#xa0;*(*Xor)(BitString&#xa0;*left,BitStri=
ng&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical XOR between the left and right arguments. The result is ret=
urned in a new bit string, both arguments are not modified. The length of t=
he resulting bit string is the smallest length of both strings.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to its result or &#xa0;NULL in case of error.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of both bitstring pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory is available to complete the operation.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"XorAssign+\container42"></a> <font size=3D"+1"><b>XorAssign<=
/b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*XorAssign)(BitString&#xa0;*left,BitStrin=
g&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a logical XOR of its two arguments and assigns the result into the le=
ft bit string. If the bit strings have a different length, the operation us=
es the bits of the right argument until either the end of the right argumen=
t or the end of the destination string is reached.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number or a negative error code in case of error.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Its argument is &#xa0;NULL .

<div class=3D"p"><!----></div>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc5">
5</a>&#xa0;&#xa0;The string collection container: istrCollection, iWstrColl=
ection</h2>
<a name=3D"istrCollection50"></a><a name=3D"iWstrCollection50"></a><a name=
=3D"WstrCollection50"></a>A string collection is a derivation from the Vect=
or container, specialized to hold character strings.

     <h3><a name=3D"tth_sEc5.1">
5.1</a>&#xa0;&#xa0;The interface</h3>
To avoid unnecessary repetitions in this document here is documented a gene=
ric interface.
The word <font size=3D"+1"><tt>ElementType</tt></font> is either <font size=
=3D"+1"><tt>char</tt></font> for multi-byte strings, or
<font size=3D"+1"><tt>wchar_t</tt></font> for wide character strings. The w=
ord <font size=3D"+1"><tt>strCollection</tt></font> in this context means e=
ither=20

<ul>
<li> a multi-byte string collection using the <font size=3D"+1"><tt>strColl=
ectionInterface</tt></font>
<div class=3D"p"><!----></div>
</li>

<li> a wide character string collection using the <font size=3D"+1"><tt>Wst=
rCollectionInterface</tt></font>
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagstrCollectionInterface&#=
xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(strCollection&#xa0;*SC,const&#xa0;char&#x=
a0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(strCollection&#xa0;*s,size_t&#xa0;n,=
const&#xa0;char&#xa0;**values);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(strCollection&#xa0;*,strCollection&#xa=
0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(strCollection&#xa0;*SC,int&#xa0;(*Apply=
fn)(char&#xa0;*,void&#xa0;*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*Back)(const&#xa0;strCollection&#xa0;*str);
&#xa0;&#xa0;&#xa0;struct&#xa0;_Vector&#xa0;*(*CastToArray)(const&#xa0;strCo=
llection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqual)(const&#xa0;strCollection&#xa0;=
*left,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;strC=
ollection&#xa0;*right,Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqualScalar)(const&#xa0;strCollection=
&#xa0;*left,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;char=
&#xa0;*str,Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;strCollection&#xa0;*SC,co=
nst&#xa0;char&#xa0;*str);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*Copy)(const&#xa0;strCollection&#xa0=
;*SC);
&#xa0;&#xa0;&#xa0;char&#xa0;**(*CopyTo)(const&#xa0;strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*Create)(size_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*CreateFromFile)(const&#xa0;char&#xa=
0;*fileName);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*CreateWithAllocator)(size_t&#xa0;st=
artsiz,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;strCollection&#xa0;*SC1,cons=
t&#xa0;strCollection&#xa0;*SC2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(strCollection&#xa0;*SC,const&#xa0;char&=
#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(strCollection&#xa0;*SC,const&#xa0;ch=
ar&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(strCollection&#xa0;*SC,size_t&#xa0;id=
x);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*FindFirst)(const&#xa0;strCollection&#xa0;*S=
C,const&#xa0;char&#xa0;*text);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*FindNext)(const&#xa0;strCollection&#xa0;*SC=
,&#xa0;const&#xa0;char&#xa0;*text,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;sta=
rt);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*FindText)(const&#xa0;strCollection&=
#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;char&#xa0;*text);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*FindTextIndex)(const&#xa0;strCollection&#x=
a0;*SC,const&#xa0;char&#xa0;*text);
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*FindTextPositions)(const&#xa0;strCollectio=
n&#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa=
0;char&#xa0;*text);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*Front)(const&#xa0;strCollection&#xa0;*str);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;strCollection&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(const&#xa0;strCollection&#xa0;=
*SC);
&#xa0;&#xa0;&#xa0;char&#xa0;**(*GetData)(const&#xa0;strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*GetElement)(const&#xa0;strCollection&#xa0;*S=
C,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;strCollection&#x=
a0;*SC);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;strCollection&#xa0;*=
SC);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*GetRange)(strCollection&#xa0;*SC,&#=
xa0;size_t&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*IndexIn)(const&#xa0;strCollection&#=
xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;Vector&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(const&#xa0;strCollection&#xa0;*SC,con=
st&#xa0;char&#xa0;*SearchedString,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*result);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*Init)(strCollection&#xa0;*result,si=
ze_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(strCollection&#xa0;*SC,void&#xa0=
;*buf);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*InitWithAllocator)(strCollection&#x=
a0;*c,size_t&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*InitializeWith)(size_t&#xa0;n,&#xa0=
;char&#xa0;**data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(strCollection&#xa0;*SC,char&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(strCollection&#xa0;*SC,size_t&#xa0;i=
dx,const&#xa0;char&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(strCollection&#xa0;*source,&#xa0;siz=
e_t&#xa0;idx,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*newData=
);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadF=
unction&#xa0;readFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Mismatch)(const&#xa0;strCollection&#xa0;*a1,co=
nst&#xa0;strCollection&#xa0;*a2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*mismatch);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*PopBack)(strCollection&#xa0;*,&#xa0;char&#x=
a0;*result,size_t&#xa0;bufsize);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*PopFront)(strCollection&#xa0;*SC,char&#xa0;=
*outbuf,size_t&#xa0;buflen);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(strCollection&#xa0;*,const&#xa0;char=
&#xa0;*data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(strCollection&#xa0;*SC,char&#xa0;*s=
tr);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveRange)(strCollection&#xa0;*SC,size_t&#xa=
0;start,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(strCollection&#xa0;*SC,size_t&#xa0;=
idx,char&#xa0;*newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;strCollection&#xa0;*SC,FILE&#=
xa0;*stream,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;sav=
eFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Select)(strCollection&#xa0;*src,&#xa0;const&#x=
a0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*SelectCopy)(const&#xa0;strCollectio=
n&#xa0;*src,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetCapacity)(strCollection&#xa0;*SC,size_t&#xa=
0;newCapacity);
&#xa0;&#xa0;&#xa0;StringCompareFn&#xa0;(*SetCompareFunction)(strCollection&=
#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;StringCompareFn);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(strCollection&#x=
a0;*v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(strCollection&#xa0=
;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(strCollection&#xa0;*SC,unsigned=
&#xa0;flags);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;strCollection&#x=
a0;*l);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(strCollection&#xa0;*SC);
&#xa0;&#xa0;&#xa0;int&#xa0;(*WriteToFile)(const&#xa0;strCollection&#xa0;*SC=
,const&#xa0;char&#xa0;*filename);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;strCollectionInterface;

</pre></font>


     <h3><a name=3D"tth_sEc5.2">
5.2</a>&#xa0;&#xa0;API</h3>
Most of the functions present in the interface are exactly like the functio=
ns in Vector. Only those that differ will be documented here.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"AddRange+\container52"></a> <font size=3D"+1"><b>AddRange</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(strCollection&#xa0;*SC,size_t&=
#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ElementType&#xa0;*d=
ata[]);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds each string of the array of string pointers at the end of the containe=
r. It is assumed that &quot;data&quot; points to a contiguous array of stri=
ng pointers whose size is given by the &quot;n&quot; parameter. Returns a v=
alue greater than zero if the addition completed successfully, a negative e=
rror code otherwise.  If n is zero nothing is done and no errors are issued=
, even if the array pointer or the data pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer or the data pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The collection is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The data added is copied and not modified in any way.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
strCollection&#xa0;*SC&#xa0;=3D&#xa0;istrCollection.Create(10);
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*data[]&#xa0;=3D&#xa0;{&#xa0;&quot;one&qu=
ot;,&quot;two,&quot;three&quot;};
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;istrCollection.AddRan=
ge(SC,3,data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CastToArray+\container52"></a> <font size=3D"+1"><b>CastToAr=
ray</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*CastToArray)=
(const&#xa0;strCollection&#xa0;*SC);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Converts a string collection into an vector.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given collection is not modified in any way.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CreateFromFile+\container52"></a> <font size=3D"+1"><b>Creat=
eFromFile</b></font> <hr>


<font size=3D"+1"><pre>
strCollection&#xa0;*(*CreateFromFile)(const&#xa0;char&#xa0;*fileName);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads the given text file and stores each line in a string of the collectio=
n. The end of line characters are discarded.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The fileName pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOENT

 The file doesn&#x27;t exist or can&#x27;t be opened for reading.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new string collection with the contents of the file. If an e=
rror occurs the result is &#xa0;NULL and the current error function (in the=
=20
iError interface) is called.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"FindFirst+\container52"></a> <font size=3D"+1"><b>FindFirst<=
/b></font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*FindFirstText)(const&#xa0;strCollection&#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&=
#xa0;ElementType&#xa0;*text);

</pre></font>
=20
<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Finds the first occurrence of the given text in the string collection.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
Neither the input collection, nor the given text are modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The zero based index of the line that contains the given text or the consta=
nt=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
if the text is not found.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"FindNext+\container52"></a> <font size=3D"+1"><b>FindNext</b=
></font> <hr>


<font size=3D"+1"><pre>
Iterator&#xa0;*(*Find)(const&#xa0;strCollection&#xa0;*SC,const&#xa0;Element=
Type&#xa0;*txt,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;=
start);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Starts searching for the given text at the specified line.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection or the text pointer are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
Neither the input collection, nor the given text are modified in any way.

<div class=3D"p"><!----></div>
<b>Returns:</b>
An iterator that points to the element found or &#xa0;NULL if nothing was f=
ound.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"FindTextPositions+\container52"></a> <font size=3D"+1"><b>Fi=
ndTextPositions</b></font> <hr>


<font size=3D"+1"><pre>
Vector&#xa0;*(*FindTextPositions)(const&#xa0;strCollection&#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ElementType&#xa0;*text);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches all occurrences of the given text in the given string collection.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection or the text pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough storage for holding the resulting array.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
Neither the input collection, nor the given text are modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
An array list containing a pair of integers for each occurrence containing =
the zero based position of the line where the text was found and a second n=
umber indicating the character index within the line where the searched tex=
t occurs.
The result is &#xa0;NULL if there wasn&#x27;t any occurrences of the search=
ed text in the string collection or an error was detected.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container52"></a> <font size=3D"+1"><b>Front</b></fon=
t> <hr>


<font size=3D"+1"><pre>
const&#xa0;CHARTYPE&#xa0;*(*Front)(const&#xa0;strCollection&#xa0;*l);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the first element of the given list or &#xa0;NULL if the collection=
 is empty.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The collection pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The collection is read only.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input collection is not modified. The resulting pointer should not be m=
odified in any way.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The first element or &#xa0;NULL if the collection is empty or an error occu=
rs.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Init+\container52"></a> <font size=3D"+1"><b>Init</b></font>=
 <hr>


<font size=3D"+1"><pre>
strCollection&#xa0;*(*Init)(strCollection&#xa0;*result,&#xa0;size_t&#xa0;st=
artsize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the given string collection to contain at least the number of s=
trings given. Uses the current memory manager.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is no more memory left to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The string collection pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the initialized string collection or &#xa0;NULL=
 if an error occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitWithAllocator+\container52"></a> <font size=3D"+1"><b>In=
itWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
strCollection&#xa0;*(*InitWithAllocator)(strCollection&#xa0;*result,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
size_t&#xa0;startsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
const&#xa0;ContainerAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the given string collection to contain at least the number of s=
trings given. Uses the given memory manager.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is no more memory left to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The string collection pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the initialized string collection or &#xa0;NULL=
 if an error occurs.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InsertIn+\container52"></a> <font size=3D"+1"><b>InsertIn</b=
></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*InsertIn)(strCollection&#xa0;*dst,&#xa0;size_t&#xa0;pos,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;strCollection&#xa0;*newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the given strCollection into the destination strCollection at the g=
iven position. If the position is greater than the actual length of the str=
ing collection the new data will be inserted at the end.
=20
<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The source or destination pointers are &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The destination is read only.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The new data is not modified in any way.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
static&#xa0;void&#xa0;PrintStringCollection(strCollection&#xa0;*AL)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Count&#xa0;%ld,&#xa0;Capacity&#xa0;%ld=
\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(long)ist=
rCollection.Size(AL),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(long)ist=
rCollection.GetCapacity(AL));
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;istrCollection.Size(AL);=
i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s&#xa0;&quot;=
,istrCollection.GetElement(AL,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}

static&#xa0;void&#xa0;FillStringCollection(strCollection&#xa0;*&#xa0;AL,int=
&#xa0;start)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[256];

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;10;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;i+start;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;sprintf(buf,&quot;%g&quot;,=
d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.Add(AL,buf);
&#xa0;&#xa0;&#xa0;&#xa0;}
}
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*AL&#xa0;=3D&#xa0;istrCollection=
.Create(10);
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*AL1&#xa0;=3DistrCollection.Crea=
te(10);
&#xa0;&#xa0;&#xa0;&#xa0;FillStringCollection(AL,0);
&#xa0;&#xa0;&#xa0;&#xa0;FillStringCollection(AL1,100);
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.InsertIn(AL,5,AL1);
&#xa0;&#xa0;&#xa0;&#xa0;PrintStringCollection(AL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}

</pre></font>
The example creates two string collections, fills them with the string repr=
esentation of the numbers from 0 to 9 and from 100 to 109, then inserts the=
 second collection into the first one at position 5.

<div class=3D"p"><!----></div>
OUTPUT:

<font size=3D"+1"><pre>Count&#xa0;20,&#xa0;Capacity&#xa0;20
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;100&#xa0;101&#xa0;102&#xa0;103&#xa0;104&=
#xa0;105&#xa0;106&#xa0;107&#xa0;108&#xa0;109&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#x=
a0;9

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Mismatch+\container52"></a> <font size=3D"+1"><b>Mismatch</b=
></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Mismatch)(const&#xa0;strCollection&#xa0;*a1,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;strCollection&#xa0;*a2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;size_t&#xa0;*mismatch);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the index of the first element that is different when comparing bot=
h collections in the passed pointer <i>mismatch</i>. If one  is shorter tha=
n the other the comparison stops
when the last element from the shorter array is compared. The comparison al=
so stops when the first difference is spotted.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any of the arguments is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input collections are not modified in any way. Both collections could b=
e the same.

<div class=3D"p"><!----></div>
<b>Returns:</b>
If a mismatch is found the result is greater than zero and the <i>mismatch<=
/i> argument will contain the index of the first element that compared=20
unequal. This will be always the case for arrays of different length.

<div class=3D"p"><!----></div>
If both arrays are the same length and no differences are found the result =
is zero and the value pointed to by the=20
<i>mismatch</i> argument is one more than the length of the arrays.

<div class=3D"p"><!----></div>
If an error occurs, a negative error code is returned. The <i>mismatch</i> =
argument contains zero.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
char&#xa0;*table[]&#xa0;=3D&#xa0;{&quot;String&#xa0;1&quot;,&#xa0;&quot;Str=
ing&#xa0;2&quot;,&quot;String&#xa0;3&quot;,&quot;String&#xa0;4&quot;,};

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*sc&#xa0;=3D&#xa0;istrCollection=
.Create(4);
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*sc2;
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.AddRange(sc,sizeof(table)/sizeof(tab=
le[0]),table);
&#xa0;&#xa0;&#xa0;&#xa0;sc2&#xa0;=3D&#xa0;istrCollection.Copy(sc);
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.ReplaceAt(sc,2,&quot;String456&quot;=
);
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.Mismatch(sc,sc2,&amp;idx);
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;String&#xa0;collections&#xa0;differ&#x=
a0;at&#xa0;position&#xa0;%d\n&quot;,idx);
}
OUTPUT:
String&#xa0;collections&#xa0;differ&#xa0;at&#xa0;position&#xa0;2

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopBack+\container52"></a> <font size=3D"+1"><b>PopBack</b><=
/font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*PopBack)(strCollection&#xa0;*SC,ElementType&#xa0;*buf,size_t&=
#xa0;buflen);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
If the string collection is not empty, it will copy at most buflen characte=
rs into the given buffer. If the buffer pointer is &#xa0;NULL or the length=
 of the buffer is zero it will return the length of the element that would =
be popped.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
Zero if the collection was empty, a negative error code if an error occurs,=
 or a positive value if the range was erased.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RemoveRange+\container52"></a> <font size=3D"+1"><b>RemoveRa=
nge</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*RemoveRange)(strCollection&#xa0;*SC,size_t&#xa0;start,size_t&#xa=
0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes all strings having an index equal or greater than
<font size=3D"+1"><tt><i>start</i></tt></font>
 and less than
<font size=3D"+1"><tt><i>end</i></tt></font>
. If
<font size=3D"+1"><tt><i>end</i></tt></font>
 is greater than the number of elements=20
in the collection it will be adjusted to one more than the number of elemen=
ts. If
<font size=3D"+1"><tt><i>start</i></tt></font>
 is bigger than
<font size=3D"+1"><tt><i>end</i></tt></font>
 the range is still valid and
starts with the value of
<font size=3D"+1"><tt><i>end</i></tt></font>
 and ends with the value of
<font size=3D"+1"><tt><i>start</i></tt></font>
.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
Zero if the string collection is empty. Otherwise returns a positive number=
 for success, a negative error code in case of an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetCompareFunction+\container52"></a> <font size=3D"+1"><b>S=
etCompareFunction</b></font> <hr>


<font size=3D"+1"><pre>
StringCompareFn&#xa0;(*SetCompareFunction)(strCollection&#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;StringCompareFn&#xa0;StrCmp);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the function used for comparing two strings to the given one. If the v=
alue of the new function is &#xa0;NULL the current value is returned.

<div class=3D"p"><!----></div>
Note that the definition of the <font size=3D"+1"><tt>StringCompareFn</tt><=
/font> differs from the
normal comparison functions used in all other containers. Its definition is=
 as follows:

<font size=3D"+1"><pre>typedef&#xa0;int&#xa0;(*StringCompareFn)(const&#xa0;=
void&#xa0;**s1,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;**s2,CompareInfo&#=
xa0;*info);

</pre></font>
<a name=3D"StringCompareFn52"></a>
The reason for this change is that a string container holds pointers to cha=
racters, hence a double indirection is needed by functions like
<font size=3D"+1"><tt>sort</tt></font>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The old value of the comparison function.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"WriteToFile+\container52"></a> <font size=3D"+1"><b>WriteToF=
ile</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*WriteToFile)(const&#xa0;strCollection&#xa0;*SC,const&#xa0;char&#=
xa0;*fileName);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Writes the contents of the given string collection into a file with the giv=
en name. If the collection is empty an empty file is created. The resulting=
 file contains a line for each string in the collection.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The strCollection pointer or the fileName are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The input collection is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completes, or a negative error code othe=
rwise. If the collection is empty the result is zero.
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc6">
6</a>&#xa0;&#xa0;The dictionary container: iDictionary</h2>
<a name=3D"Dictionary60"></a>
<img alt=3D"Figure" src=3D"Dictionary.png">
<div class=3D"p"><!----></div>
 The dictionary vocabulary.
<div class=3D"p"><!----></div>
A dictionary is an associative container that associates a text key with a =
piece of data. It can be implemented by means of a hash table that uses a h=
ash function to map the key into a restricted integer range, used to index =
a table. A common usage is to associate some data with a character key,
but it can also be used to just store character keys without any data assoc=
iated with them. The container is then used just to see if a given key
is stored there or not. In this case the container should be created with o=
bject size of zero.

<div class=3D"p"><!----></div>
The interest of hash tables is that the access to objects using the key is =
very fast.=20

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc6.1">
6.1</a>&#xa0;&#xa0;The dictionary interface</h3>
This interface (like the string collection container) comes in two flavors:=
 One with keys of 8 bit characters, another with keys in the wide character
set. Both interfaces are identical, except for the keys parameter.
<a name=3D"iDictionary61"></a>
This is the interface for the multi-byte character set.

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagDictionaryInterface&#xa0=
;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Dictionary&#xa0;*Dict,const&#xa0;char&#xa=
0;*key,const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(Dictionary&#xa0;*Dict,int&#xa0;(*Applyf=
n)(const&#xa0;char&#xa0;*Key,
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*CastToArray)(const&#xa0;Dictionary&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Dictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;Dictionary&#xa0;*dict,con=
st&#xa0;char&#xa0;*key);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*Copy)(const&#xa0;Dictionary&#xa0;*dict=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;Dictionary&#xa0;*Dict,=
const&#xa0;char&#xa0;*Key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*Create)(size_t&#xa0;ElementSize,size_t=
&#xa0;hint);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*CreateWithAllocator)(size_t&#xa0;eleme=
ntsize,size_t&#xa0;hint,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;Dictionary&#xa0;*d1,const&#x=
a0;Dictionary&#xa0;*d2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Dictionary&#xa0;*Dict,const&#xa0;char&#=
xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Dictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;Dictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;Dictionary&#xa0;*Dict=
,const&#xa0;char&#xa0;*Key);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;Dictionary&#xa0;=
*d);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;Dictionary&#xa0;*Dic=
t);
&#xa0;&#xa0;&#xa0;strCollection&#xa0;*(*GetKeys)(const&#xa0;Dictionary&#xa0=
;*Dict);
&#xa0;&#xa0;&#xa0;double&#xa0;(*GetLoadFactor)(Dictionary&#xa0;*d);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*Init)(Dictionary&#xa0;*dict,size_t&#xa=
0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;size_t&#xa0;hint);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(Dictionary&#xa0;*dict,void&#xa0;=
*buf);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*InitWithAllocator)(Dictionary&#xa0;*D,=
size_t&#xa0;elemsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;size_t&#xa0;hint,const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*InitializeWith)(size_t&#xa0;elementSiz=
e,size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;char&#xa0;**Keys,const&#xa0;void&#xa0;*Valu=
es);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(Dictionary&#xa0;*Dict,const&#xa0;char&=
#xa0;*key,const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(Dictionary&#xa0;*dst,Dictionary&#xa0=
;*src);
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*&#xa0;(*Load)(FILE&#xa0;*stream,&#xa0;Re=
adFunction&#xa0;readFn,&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Dictionary&#xa0;*dict);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Replace)(Dictionary&#xa0;*dict,const&#xa0;char=
&#xa0;*Key,const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;Dictionary&#xa0;*Dict,FILE&#x=
a0;*stream,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;sav=
eFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(Dictionary&#xa0;=
*v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(Dictionary&#xa0;*D=
ict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(Dictionary&#xa0;*Dict,unsigned&=
#xa0;flags);
&#xa0;&#xa0;&#xa0;HashFunction&#xa0;(*SetHashFunction)(Dictionary&#xa0;*d,H=
ashFunction&#xa0;newFn);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Dictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;Dictionary&#xa0;*dict);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;Dictionary&#xa0;=
*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;DictionaryInterface;

</pre></font>


<div class=3D"p"><!----></div>
This is the interface for the wide character set.

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagWDictionaryInterface&#xa=
0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(WDictionary&#xa0;*Dict,const&#xa0;wchar_t=
&#xa0;*key,const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(WDictionary&#xa0;*Dict,int&#xa0;(*Apply=
fn)(const&#xa0;wchar_t&#xa0;*Key,
&#xa0;&#xa0;&#xa0;Vector&#xa0;*(*CastToArray)(const&#xa0;WDictionary&#xa0;*=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(WDictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;WDictionary&#xa0;*dict,co=
nst&#xa0;wchar_t&#xa0;*key);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*Copy)(const&#xa0;WDictionary&#xa0;*di=
ct);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;WDictionary&#xa0;*Dict=
,const&#xa0;wchar_t&#xa0;*Key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*Create)(size_t&#xa0;ElementSize,size_=
t&#xa0;hint);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elem=
entsize,size_t&#xa0;hint,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*mm);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;WDictionary&#xa0;*d1,const&#=
xa0;WDictionary&#xa0;*d2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(WDictionary&#xa0;*Dict,const&#xa0;wchar=
_t&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(WDictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const=
&#xa0;WDictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;WDictionary&#xa0;*Dic=
t,const&#xa0;wchar_t&#xa0;*Key);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;WDictionary&#xa0=
;*d);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;WDictionary&#xa0;*Di=
ct);
&#xa0;&#xa0;&#xa0;WstrCollection&#xa0;*(*GetKeys)(const&#xa0;WDictionary&#x=
a0;*Dict);
&#xa0;&#xa0;&#xa0;double&#xa0;(*GetLoadFactor)(WDictionary&#xa0;*d);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*Init)(WDictionary&#xa0;*dict,size_t&#=
xa0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;hint);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(WDictionary&#xa0;*dict,void&#xa0=
;*buf);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*InitWithAllocator)(WDictionary&#xa0;*=
D,size_t&#xa0;elemsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;hint,const&#xa0;ContainerAllocator&#xa0;*m=
m);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*(*InitializeWith)(size_t&#xa0;elementSi=
ze,size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;wchar_t&#xa0;**Keys,const&#xa0;void&#=
xa0;*Values);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(WDictionary&#xa0;*Dict,const&#xa0;wcha=
r_t&#xa0;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(WDictionary&#xa0;*dst,WDictionary&#x=
a0;*src);
&#xa0;&#xa0;&#xa0;WDictionary&#xa0;*&#xa0;(*Load)(FILE&#xa0;*stream,&#xa0;R=
eadFunction&#xa0;readFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(WDictionary&#xa0;*dict);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Replace)(WDictionary&#xa0;*dict,const&#xa0;wch=
ar_t&#xa0;*Key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;WDictionary&#xa0;*Dict,FILE&#=
xa0;*stream,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;sav=
eFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(WDictionary&#xa0=
;*v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(WDictionary&#xa0;*=
Dict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(WDictionary&#xa0;*Dict,unsigned=
&#xa0;flags);
&#xa0;&#xa0;&#xa0;WHashFunction&#xa0;(*SetHashFunction)(WDictionary&#xa0;*d,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;WHashFunction&#xa0;newFn);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;WDictionary&#xa0;*Dict);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;WDictionary&#xa0;*dict);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;WDictionary&#xa0=
;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;WDictionaryInterface;

</pre></font>


     <h3><a name=3D"tth_sEc6.2">
6.2</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container62"></a> <font size=3D"+1"><b>Add</b></font> <=
hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(Dictionary&#xa0;*Dict,char&#xa0;*ke=
y,const&#xa0;void&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given element to the container using the given &quot;key&quot; str=
ing. It is assumed that &quot;data&quot; points to a contiguous memory area=
 of at least ElementSize bytes.  Both the key and the data are copied into =
the container. If the size of dictionary data elements is zero the=20
<font size=3D"+1"><tt><i>data</i></tt></font>

<div class=3D"p"><!----></div>
argument is ignored and can be &#xa0;NULL .

<div class=3D"p"><!----></div>
If an element exists with the given key, its contents are replaced with the=
 new data. For a different behavior use <font size=3D"+1"><tt>Insert</tt></=
font> or <font size=3D"+1"><tt>Replace</tt></font>.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The dictionary, or the key pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The dictionary is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation added a new element, zero if the data wa=
s written into an existing element, or a negative error code if an error oc=
curred.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*dict;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;4.5;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iDictionary.Add(dict,=
&quot;Interest&#xa0;rate&quot;,&amp;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Apply+\container62"></a> <font size=3D"+1"><b>Apply</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(Dictionary&#xa0;*Dict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(Applyfn)(const&#xa0;char&#xa0;*k=
ey,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*data,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*extraArg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*extraArg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will call the given function for each element of the array. The first argum=
ent of the callback function receives they key ,the second is a pointer to =
the element of the Dictionary. The  third argument of the callback is the =
=EBxtraArg&quot; argument that the Apply function receives and passes to  t=
he callback. This way some context can be passed to the callback, and from =
one element to the next.
Note that the result of the callback is not used. This allows all kinds of =
result types to be accepted after a suitable function type cast.
If the dictionary is read-only, a copy of the element will be passed to the=
 callback function.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

  Either the dictionary pointer or Applyfn are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 The dictionary is read-only and there is no more memory to allocate the bu=
ffer to copy each element.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
static&#xa0;int&#xa0;print(const&#xa0;char&#xa0;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*pElemen=
t,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*pResult)
&#xa0;&#xa0;&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*p&#xa0;=3D&#xa=
0;pElement;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s:&#xa0;%g\n&=
quot;,key,*p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;main(void)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*dict&#xa0;=
=3D&#xa0;iDictionary.Create(sizeof(double),5);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;2;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Add(dict,&quot;=
First&#xa0;item&quot;,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;3;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Add(dict,&quot;=
Second&#xa0;item&quot;,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Apply(dict,prin=
t,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
Output should be:

<font size=3D"+1"><pre>First&#xa0;item:&#xa0;2
Second&#xa0;item:&#xa0;3

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CastToArray+\container62"></a> <font size=3D"+1"><b>CastToAr=
ray</b></font> <hr>


<font size=3D"+1"><pre>
Vector&#xa0;*(*CastToArray)(Dictionary&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a vector containing all the elements in the dictionary (without any=
 keys). If the element size of the dictionary is zero the result is &#xa0;N=
ULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

  The dictionary pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 The creation of the resulting vector failed or the dictionary is read-only=
 and there is no more memory to allocate=20
the buffer to copy each element.

<div class=3D"p"><!----></div>
<b>Returns:</b>The new vector or &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container62"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Dictionary&#xa0;*dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all stored data and releases the memory associated with it. The dict=
ionary header is not destroyed, and its contents will be the same as when i=
t was initially created. It is an error to use this function when there are=
 still active iterators for the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is greater than zero if successful, or an error code if an error=
 occurs.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The vector is read only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;m&#xa0;=3D&#xa0;iDictionary.Clear(Dict);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Contains+\container62"></a> <font size=3D"+1"><b>Contains</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(Dictionary&#xa0;*Dict,const&#x=
a0;char&#xa0;*Key);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns one if the given key is stored in the dictionary, zero otherwise.  =
If an error occurs it returns a negative error code.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either Dict or Key are &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*dict;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iDictionary.Contains(dict,=
&quot;Item&#xa0;1&quot;);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container62"></a> <font size=3D"+1"><b>Copy</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*Copy)(Dictionary&#xa0;*Dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
A shallow copy of the given dictionary is performed. Only ElementSize bytes=
 will be copied for each element. If the element contains pointers, only th=
e pointers are copied, not the objects they point to. The new memory will b=
e allocated using the allocator in the source dictionary.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a copy of the given dictionary or &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*newDict,*Old;
&#xa0;&#xa0;&#xa0;&#xa0;newDict&#xa0;=3D&#xa0;iDictionary.Copy(Old);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CopyElement+\container62"></a> <font size=3D"+1"><b>CopyElem=
ent</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(Dictionary&#xa0;*Dict,cont&=
#xa0;char&#xa0;*Key,&#xa0;void&#xa0;*outbuf);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
A shallow copy of the given dictionary element is performed.=20
Only element size bytes will be copied. If the element contains pointers, o=
nly the pointers are copied, not the objects they point to. The new memory =
will be allocated using the allocator in the source dictionary. If the elem=
ent size is zero nothing is copied and the result is zero.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value for success, zero if the element size of th=
e dictionary is zero, or a negative error code.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iDictionary.CopyElement(Di=
ct,&quot;Key&quot;,outbuf);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;;&#xa0;//&#xa0;=
handle&#xa0;error
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;;&#xa0;nothing&=
#xa0;was&#xa0;copied
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;//&#xa0;Use&#xa0;outbuf&#xa0;data&#xa0;he=
re

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container62"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*Create)(size_t&#xa0;ElementSize,=
size_t&#xa0;hint);
&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*(*CreateWithAllocator)(size_t&#xa0=
;elementsize,size_t&#xa0;hint,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Con=
tainerAllocator&#xa0;*allocator);

</pre></font>
<a name=3D"CreateWithAllocator62"></a>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new dictionary with the given element size and with a table big e=
nough to store <font size=3D"+1"><tt>hint</tt></font> entries. The <font si=
ze=3D"+1"><tt>Create</tt></font> function
uses the current memory manager as the allocator for the new dictionary. <f=
ont size=3D"+1"><tt>CreateWithAllocator</tt></font> uses the given allocato=
r object.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the new dictionary or &#xa0;NULL if there is no=
t enough memory to create it.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"deleteIterator+\container62"></a> <font size=3D"+1"><b>delet=
eIterator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;deleteIterator(Iterator&#xa0;*it);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims the memory used by the given iterator object

<div class=3D"p"><!----></div>
<b>Returns:</b>
Integer smaller than zero with error code or a positive number when the ope=
ration completes.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The iterator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Equal+\container62"></a> <font size=3D"+1"><b>Equal</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(Dictionary&#xa0;*d1,Dictionary&#x=
a0;*d2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Compares the given dictionaries using their comparison function. If the dic=
tionaries differ in their size, flags, or hash functions they compare unequ=
al. If any of their elements differ, they compare unequal.
If both d1 and d2 are &#xa0;NULL they compare equal. If Both d1 and d2 are =
empty they compare equal.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is one if the dictionaries are equal, zero otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container62"></a> <font size=3D"+1"><b>Erase</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Dictionary&#xa0;*Dict,const&#xa0;=
char&#xa0;*key);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the dictionary the element that matches the given key.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value that indicates that a match was found and the element was =
removed. If no element matched the result is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
. If an error occurs, a negative error code is returned.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
double&#xa0;d&#xa0;=3D&#xa0;2.3;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iVector.Erase(AL,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;2.3&#xa0;erase=
d|n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;No&#xa0;elemen=
t&#xa0;with&#xa0;value&#xa0;2.3&#xa0;present\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;error&#xa0;cod=
e&#xa0;%d\n&quot;,r);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container62"></a> <font size=3D"+1"><b>Finalize</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Dictionary&#xa0;*dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the dictionary, including the array header obje=
ct itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The dictionary is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value means the operation completed. A negative error code indic=
ates failure.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*AL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iDictionary.Finalize(AL);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#xa0;er=
ror&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetAllocator+\container62"></a> <font size=3D"+1"><b>GetAllo=
cator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;(*GetAllocator)(Dictionary&=
#xa0;*Dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Retrieves the memory manager of the given dictionary.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>

<b>Returns:</b>
The memory manager object or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElementSize+\container62"></a> <font size=3D"+1"><b>GetEl=
ementSize</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;Dictionary=
&#xa0;*Dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Retrieves the size of the elements stored in the given dictionary. Note tha=
t this value can be different than the value given to the creation function=
 because of alignment requirements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>

<b>Returns:</b>
The element size or zero if an error.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iDictionary.GetElemen=
tSize(Dict);

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetElement+\container62"></a> <font size=3D"+1"><b>GetElemen=
t</b></font> <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*GetElement)(Dictionary&#xa0;*Dict,const&#xa0;char&#xa0;*key);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the element at the given index, or &#xa0;NULL if the o=
peration failed.  This function will return &#xa0;NULL if the dictionary is=
 read only.

<div class=3D"p"><!----></div>
Use the CopyElement function to get a read/write copy of an element of the =
dictionary.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given dictionary pointer or the key are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

    The array is read only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d&#xa0;=3D&#xa0;iDictionary.GetElement=
(Dict,&quot;Index&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(d&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetFlags+\container62"></a> <font size=3D"+1"><b>GetFlags</b=
></font> <hr>


<font size=3D"+1"><pre>
unsigned&#xa0;(*GetFlags)(Dictionary&#xa0;*dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the flags element of the given dictionary.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given dictionary pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetLoadFactor+\container62"></a> <font size=3D"+1"><b>GetLoa=
dFactor</b></font> <hr>


<font size=3D"+1"><pre>
double&#xa0;(*GetLoadFactor)(Dictionary&#xa0;*dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements divided by the size of the table.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given dictionary pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InsertIn+\container62"></a> <font size=3D"+1"><b>InsertIn</b=
></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*InsertIn)(Dictionary&#xa0;*dst,Dictionary&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts all keys of the
<font size=3D"+1"><tt><i>src</i></tt></font>
dictionary into the
<font size=3D"+1"><tt><i>dst</i></tt></font>
dictionary. If the container changes during the insertion process=20
the operation aborts.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given dictionary pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

. There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if successful, zero if the container chang=
ed during the operation, or a negative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Init+\container62"></a> <font size=3D"+1"><b>Init</b></font>=
 <hr>


<font size=3D"+1"><pre>
	Dictionary&#xa0;*(*Init)(Dictionary&#xa0;*Dict,size_t&#xa0;elementsize,siz=
e_t&#xa0;hint);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the indicated storage for use asa dictionary object. This proce=
dure is completely equivalent to <font size=3D"+1"><tt>Create</tt></font> w=
ith the difference
that there is no allocation done for the dictionary header. Uses the curren=
t memory manager for the allocations of the slot table.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to its first argument if successfull or &#xa0;NULL if there is no=
 memory to complete the operation.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitializeWith+\container62"></a> <font size=3D"+1"><b>Initi=
alizeWith</b></font> <hr>


<font size=3D"+1"><pre>
Dictionary&#xa0;*(*InitializeWith)(size_t&#xa0;elemSize,&#xa0;size_t&#xa0;n=
,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
char&#xa0;**keys,void&#xa0;*Values);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Construct a dictionary from the given keys and values. The <font size=3D"+1=
"><tt>Values</tt></font> argument should be either &#xa0;NULL or a valid po=
inter to <font size=3D"+1"><tt>n</tt></font> elements
of size <font size=3D"+1"><tt>elementSize</tt></font>. The <font size=3D"+1=
"><tt>keys</tt></font> argument should be a table of string pointers with e=
ach string associated with each element of the
<font size=3D"+1"><tt>Values</tt></font> table.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The keys argument is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

. There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>The new dictionary object or &#xa0;NULL if an error occurs
=20
<div class=3D"p"><!----></div>
<br><a name=3D"InitWithAllocator+\container62"></a> <font size=3D"+1"><b>In=
itWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;	Dictionary&#xa0;*(*InitWithAllocator)(Dictionary&#=
xa0;*Dict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t=
&#xa0;elementsize,&#xa0;size_t&#xa0;hint,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Initializes the indicated storage for use as a dictionary object. This proc=
edure is completely equivalent to <font size=3D"+1"><tt>CreateWithAllocator=
</tt></font> with the difference
that there is no allocation done for the dictionary header. Uses the given =
memory manager for the allocations of the slot table.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to its first argument if successfull or &#xa0;NULL if there is no=
 memory to complete the operation.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Insert+\container62"></a> <font size=3D"+1"><b>Insert</b></f=
ont> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Insert)(Dictionary&#xa0;*Dict,&#xa0;const&#xa0;char&#xa0;*key,vo=
id&#xa0;*Data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the new key and its corresponding data into the given dictionary. I=
f the key is already present, nothing is changed. This contrasts with the=20
behavior of <font size=3D"+1"><tt>Add</tt></font> that will replace an exis=
ting key.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Any of the given pointers is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

    The array is read only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if the key was inserted, zero if the key wa=
s already present, or a negative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Load+\container62"></a> <font size=3D"+1"><b>Load</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;Dictionary&#xa0;*(*Load)(FILE&#xa0;*stream,ReadFunction&#xa0;readFn,v=
oid&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads a dictionary previously saved with the Save function from the stream =
pointed to by stream. If readFn is not &#xa0;NULL , it will be used to read=
 each=20
element. The =E4rg&quot; argument will be passed to the read function. If t=
he read function is &#xa0;NULL , this argument is ignored and a default rea=
d function is=20
used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given stream pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new dictionary or &#xa0;NULL if the operation could not be completed. Not=
e that the function pointers in the array are NOT saved, nor any special al=
locator=20
that was in the original dictionary. Those values will be the values by def=
ault. To rebuild the original state the user should replace the pointers=20
again in the new array.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"NewIterator+\container62"></a> <font size=3D"+1"><b>NewItera=
tor</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Dictionary&#xa0;*Dict=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates and initializes a new iterator object to iterate this dictionary.=
 The exact sequence is implementation defined but it will be the same for=20
the same dictionary with the same number of elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
If no more memory is available it returns &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new iterator or &#xa0;NULL if there is no more memory left.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;iDictionary.NewIter=
ator(Dict);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(d=3Dit-&gt;GetFirst(it);&#xa0;d&#xa0;!=3D=
&#xa0;NULL;&#xa0;d&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;val&#xa0;=3D&#x=
a0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Work&#xa0;with&#xa0=
;the&#xa0;value&#xa0;here
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.deleteIterator(it);

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetDestructor+\container62"></a> <font size=3D"+1"><b>SetDes=
tructor</b></font> <hr>


<font size=3D"+1"><pre>
DestructorFunction&#xa0;SetDestructor(Dictionary&#xa0;*d,DestructorFunction=
&#xa0;fn);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Sets the destructor function to its given argument. I=
f the function argument is &#xa0;NULL nothing is changed and the call is in=
terpreted as=20
a query since the return value is the current value of the destructor funct=
ion. If the dictionary argument is &#xa0;NULL , the result is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The old value of the destructor.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetHashFunction+\container62"></a> <font size=3D"+1"><b>SetH=
ashFunction</b></font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*SetHashFunction)(Dicttionary&#xa0;*dict,HashFunction&#xa0;new=
Fn);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> This function is both a query function  and a functio=
n to change the hash function used by the given dictionary.


<ul>     =20
<li> If the dictionary pointer is &#xa0;NULL returns the value of the defau=
lt hash function used by the library at startup.
<div class=3D"p"><!----></div>
</li>

<li> If the <font size=3D"+1"><tt>newFn</tt></font> parameter is &#xa0;NULL=
 it returns the hash function used by the given dictionary without modifyin=
g it.
<div class=3D"p"><!----></div>
</li>

<li> Otherwise it sets the hash function in the given dictionary to the new=
 one, returning the value of the old one.

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
=20
<br><a name=3D"Size+\container62"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Dictionary&#xa0;*Dic=
t);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements stored in the dictionary or  SIZE_MAX if the=
 dictionary pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

    The given array pointer or the key are &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;elem&#xa0;=3D&#xa0;iDictionary.Size(Dic=
t);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Save+\container62"></a> <font size=3D"+1"><b>Save</b></font>=
 <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;Dictionary&#xa0;*D,&#xa0;FILE&#xa0;*out,&#xa0;S=
aveFunction&#xa0;Fn,&#xa0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given dictionary are saved into the given stream. If th=
e save function pointer is not &#xa0;NULL , it will be used to save the con=
tents of each element and will receive the arg argument passed to Save, tog=
ether with the output stream. Otherwise a default save function will be use=
d and arg will be ignored.
The output stream must be opened for writing and must be in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The dictionary pointer or the stream pointer are &#xa0;NULL .
EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*outFile;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iDictionary.Save(Dict,outFile,NULL,NULL)&#=
xa0;&lt;&#xa0;0)&#xa0;{&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Handle&#xa0;error&#=
xa0;here&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Sizeof+\container62"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(Dictionary&#xa0;*Dict);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total size in bytes of the dictionary, including the header, an=
d all data stored in the dictionary, including the size of the dictionary h=
eader.
If Dict is &#xa0;NULL , the result is the size of the <font size=3D"+1"><tt=
>Dictionary</tt></font> structure.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes used by the dictionary or the size of the Dictionary st=
ructure if the argument is &#xa0;NULL .


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;&#xa0;size&#xa0;=3D&#xa0;iDictionary.Si=
zeof(Dict);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetErrorFunction+\container62"></a> <font size=3D"+1"><b>Set=
ErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
ErrorFunction&#xa0;(*SetErrorFunction)(Dictionary&#xa0;*dict,ErrorFunction&=
#xa0;efn);&#xa0;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the current error function  for the given dictionary with the new =
error function if the
<font size=3D"+1"><tt><i>ErrorFunction</i></tt></font>
parameter is=20
different from &#xa0;NULL . If the
<font size=3D"+1"><tt><i>dict</i></tt></font>
parameter is &#xa0;NULL the function returns the value of the current defau=
lt error function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The dictionary pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The dictionary is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the error function or &#xa0;NULL if there is an error.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Size+\container62"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;Dictionary&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements stored in the dictionary. If the argument is=
 &#xa0;NULL the result is zero.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Dictionary&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;elem&#xa0;=3D&#xa0;iDictionary.Size(d);

</pre></font>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc7">
7</a>&#xa0;&#xa0;The TreeMap interface: iTreeMap</h2>
<a name=3D"TreeMap70"></a>
<a name=3D"iTreeMap70"></a>The tree map container uses a tree to associate =
 keys to values. Trees are extremely efficient data structures that allow a=
ccess to millions
of items with a few comparisons. Disadvantages include a greater overhead t=
han other containers, and a complex machinery to maintain
them.

<div class=3D"p"><!----></div>
This associative container is special in that it contains no separate key, =
the elements themselves are the key. Obviously they need imperatively=20
a comparison function, and that comparison function could use some parts of=
 the stored object as a key, but that is transparent to the interface.

<div class=3D"p"><!----></div>
An essential point in this container is the comparison function. Since all =
insertions searches and deletions from/to the tree are done using that
function, it is essential that is defined correctly. Like all other compari=
son functions it can receive an extra argument that conveys some kind
of context to it. This implies that functions like &#x27;Add&#x27; have an =
extra argument to be able to pass this context to the comparison function.

      <h4><a name=3D"tth_sEc7.0.1">
7.0.1</a>&#xa0;&#xa0;The comparison function must be consistent</h4>
It is important to stress that for this container it is <b>essential</b> th=
at the comparison function returns always the <b>same</b> result for
two given elements. The context passed through this auxiliary arguments mus=
t not be used to change the result of the element comparison according
to some external factor. Any inconsistency in the comparison function will =
destroy completely the whole container and the user will be unable
to retrieve the data stored or (worst) retrieve the wrong data.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc7.1">
7.1</a>&#xa0;&#xa0;The interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagTreeMapInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(TreeMap&#xa0;*ST,&#xa0;void&#xa0;*D=
ata,void&#xa0;*ExtraArgs);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(TreeMap&#xa0;*ST,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Applyfn)(const&#xa0;void&#xa0;*data,v=
oid&#xa0;*arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;TreeMap&#xa0;*(*Copy)(TreeMap&#xa0;*src);
&#xa0;&#xa0;&#xa0;&#xa0;TreeMap&#xa0;*(*CreateWithAllocator)(size_t&#xa0;El=
ementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*m);
&#xa0;&#xa0;&#xa0;&#xa0;TreeMap&#xa0;*(*Create)(size_t&#xa0;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(TreeMap&#xa0;*ST);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(TreeMap&#xa0;*ST);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(TreeMap&#xa0;*ST,void&#xa0;*el=
ement,void&#xa0;*ExtraArgs);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(TreeMap&#xa0;*tree,&#xa0;void&#xa=
0;*element,void&#xa0;*ExtraArgs);&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(TreeMap&#xa0;*t1,&#xa0;TreeMap&#x=
a0;*t2);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(TreeMap&#xa0;*ST);&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*Find)(TreeMap&#xa0;*tree,void&#xa0;*el=
ement,void&#xa0;*ExtraArgs);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(TreeMap&#xa0;*d);
&#xa0;&#xa0;&#xa0;&#xa0;TreeMap&#xa0;*(*InitializeWith)(size_t&#xa0;element=
Size,&#xa0;size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*Elements);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(TreeMap&#xa0;*RB,&#xa0;const&#xa=
0;void&#xa0;*Data,&#xa0;void&#xa0;*ExtraArgs);
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(TreeMap&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;TreeMap&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadF=
unction&#xa0;loadFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(TreeMap&#xa0;*src,FILE&#xa0;*strea=
m,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;saveFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;(*SetCompareFunction)(TreeMap&=
#xa0;*ST,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(TreeMap&#x=
a0;*Tree,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;DestructorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(TreeMap&#xa0=
;*ST,&#xa0;ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(TreeMap&#xa0;*ST,&#xa0;un=
signed&#xa0;flags);&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(TreeMap&#xa0;*ST);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(TreeMap&#xa0;*ST);&#xa0;&#xa0;
}&#xa0;TreeMapInterface;

</pre></font>
All the above functions were described for the sequential containers and th=
eir syntax is here the same.
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc8">
8</a>&#xa0;&#xa0;Hash Table: iHashTable</h2>
<a name=3D"HashTable80"></a>Hash table is a similar container as dictionary=
, but allows for more features at the expense of a slightly more complicate=
d interface.=20
Keys aren&#x27;t restricted to zero terminated strings but can be any kind =
of data.=20
The table resizes itself as it grows.
Merging two hash tables

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc8.1">
8.1</a>&#xa0;&#xa0;The interface</h3>
<a name=3D"iHashTable81"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagHashTableInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(HashTable&#xa0;*HT,const&#xa0;void&#xa0;*=
key,size_t&#xa0;klen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*Data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(HashTable&#xa0;*HT,int&#xa0;(*Applyfn)(=
void&#xa0;*Key,size_t&#xa0;klen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*data,void&#xa0;*=
arg),void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(HashTable&#xa0;*HT);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;HashTable&#xa0;*ht,const&=
#xa0;void&#xa0;*Key,size_t&#xa0;klen);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Copy)(const&#xa0;HashTable&#xa0;*Orig,P=
ool&#xa0;*pool);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Create)(size_t&#xa0;ElementSize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(HashTable&#xa0;*HT,const&#xa0;void&#xa0=
;*key,size_t&#xa0;klen);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(HashTable&#xa0;*HT);
&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(const&#xa0;HashTable&#xa0;*HT,co=
nst&#xa0;void&#xa0;*Key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;klen);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;HashTable&#xa0;*=
HT);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;HashTable&#xa0;*HT);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Init)(HashTable&#xa0;*ht,size_t&#xa0;El=
ementSize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(HashTable&#xa0;*SC,void&#xa0;*bu=
f);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunct=
ion&#xa0;readFn,&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Merge)(Pool&#xa0;*p,&#xa0;const&#xa0;Ha=
shTable&#xa0;*overlay,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;HashTable&=
#xa0;*base,&#xa0;void&#xa0;*&#xa0;(*merger)(Pool&#xa0;*p,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;=
*key,&#xa0;size_t&#xa0;klen,&#xa0;const&#xa0;void&#xa0;*h1_val,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;=
*h2_val,&#xa0;const&#xa0;void&#xa0;*data),&#xa0;const&#xa0;void&#xa0;*data);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(HashTable&#xa0;*);
&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Overlay)(Pool&#xa0;*p,&#xa0;const&#xa0;=
HashTable&#xa0;*overlay,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;const&#xa0;HashTable&#xa0;*base);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Replace)(HashTable&#xa0;*HT,const&#xa0;void&#x=
a0;*key,&#xa0;size_t&#xa0;klen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*val);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(HashTable&#xa0;*HT,size_t&#xa0;newSize=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;HashTable&#xa0;*HT,FILE&#xa0;=
*stream,&#xa0;SaveFunction&#xa0;saveFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Search)(HashTable&#xa0;*ht,int&#xa0;(*Comparef=
n)(void&#xa0;*rec,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;=
*key,size_t&#xa0;klen,const&#xa0;void&#xa0;*value),&#xa0;void&#xa0;*rec);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(HashTable&#xa0;*=
v,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(HashTable&#xa0;*HT=
,ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(HashTable&#xa0;*HT,unsigned&#xa=
0;flags);
&#xa0;&#xa0;&#xa0;GeneralHashFunction&#xa0;(*SetHashFunction)(HashTable&#xa=
0;*ht,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Genera=
lHashFunction&#xa0;hf);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;HashTable&#xa0;*HT);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;HashTable&#xa0;*HT);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;HashTable&#xa0;*=
ht);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;HashTableInterface;

</pre></font>


     <h3><a name=3D"tth_sEc8.2">
8.2</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container82"></a> <font size=3D"+1"><b>Add</b></font> <=
hr>


<font size=3D"+1"><pre>
int&#xa0;(*Add)(HashTable&#xa0;*ht,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0=
;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#x=
a0;keyLength,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa=
0;void&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given element to the container using the given &quot;key&quot; str=
ing. It is assumed that &quot;data&quot; points to a contiguous memory area=
 of at least ht-&gt;ElementSize bytes.  Both the key and the data are copie=
d into the container.

<div class=3D"p"><!----></div>
If an element exists with the given key, its contents are replaced with the=
 new data.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table, the key or the data pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

: The hash table is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation added a new element, zero if the data wa=
s written into an existing element, or a negative error code if an error oc=
curred.

<div class=3D"p"><!----></div>

<b>Example:</b>

<font size=3D"+1"><pre>
HashTable&#xa0;*ht;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;4.5;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iHashTable.Add(ht,&qu=
ot;Interest&#xa0;rate&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;strlen(&quot;Interest=
&#xa0;rate&quot;),&amp;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Apply+\container82"></a> <font size=3D"+1"><b>Apply</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(HashTable&#xa0;*ht,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(Applyfn)(const&#xa0;char&#xa0;*k=
ey,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;keyLength,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*data,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*extraArg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*extraArg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Apply will call the given function for each element of the array. The first=
 argument of the callback function receives they key ,the second is the len=
gth of the key. The third is a pointer to one element of the table. The fou=
rth argument of the callback is the =EBxtraArg&quot; argument that the Appl=
y function receives and passes to the callback. This way some context can b=
e passed to the callback, and from one element to the next.

<div class=3D"p"><!----></div>
Note that the result of the callback is not used. This allows all kinds of =
result types to be accepted after a suitable function type cast.

<div class=3D"p"><!----></div>
If the dictionary is read-only, a copy of the element will be passed to the=
 callback function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

  Either the hash table pointer or Applyfn are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 The hash table is read-only and there is no more memory to allocate the bu=
ffer to copy each element.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
static&#xa0;int&#xa0;print(const&#xa0;char&#xa0;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*pElemen=
t,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*pResult)
&#xa0;&#xa0;&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*p&#xa0;=3D&#xa=
0;pElement;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s:&#xa0;%g\n&=
quot;,key,*p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;main(void)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*dict&#xa0;=
=3D&#xa0;iDictionary.Create(sizeof(double),5);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;2;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Add(dict,&quot;=
First&#xa0;item&quot;,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;d&#xa0;=3D&#xa0;3;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Add(dict,&quot;=
Second&#xa0;item&quot;,&amp;d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Apply(dict,prin=
t,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;}
Output&#xa0;should&#xa0;be:
First&#xa0;item:&#xa0;2
Second&#xa0;item:&#xa0;3

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Clear+\container82"></a> <font size=3D"+1"><b>Clear</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(HashTable&#xa0;*ht);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all stored data and releases the memory associated with it. The hash=
 table header is not destroyed, and its contents will be the same as it was=
 when initially created. It is an error to use this function when there are=
 still active iterators for the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is greater than zero if successful, or an error code if an error=
 occurs.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The hash table is read only.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
HashTable&#xa0;*ht;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;m&#xa0;=3D&#xa0;iHashTable.Clear(ht);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Copy+\container82"></a> <font size=3D"+1"><b>Copy</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Copy)(const&#xa0;HashTable&#xa0;*=
Orig,Pool&#xa0;*pool);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the given hash table using the given pool. If &quot;pool&quot; is &#=
xa0;NULL ,the pool of the given hash table will be used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Create+\container82"></a> <font size=3D"+1"><b>Create</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Create)(size_t&#xa0;ElementSize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new hash table and initializes all fields. The table will use the=
 current memory manager for its pool.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The parameter is zero or bigger than the maximum size the implementation s=
upports.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"deleteIterator+\container82"></a> <font size=3D"+1"><b>delet=
eIterator</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Releases the memory used by the given iterator.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The parameter is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if successful or a negative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container82"></a> <font size=3D"+1"><b>Erase</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(HashTable&#xa0;*HT,void&#xa0;*key=
,size_t&#xa0;keyLength);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the hash table the element with the given key.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table parameter or the key pointer are &#xa0;NULL , or the keyLen=
gth is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, a negative error code otherwi=
se.

<div class=3D"p"><!----></div>
Finalize
Synopsis:
    int (*Finalize)(HashTable *HT);
Description:
Releases all memory used by the hash table and destroys the hash table head=
er itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The parameter is &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetElement+\container82"></a> <font size=3D"+1"><b>GetElemen=
t</b></font> <hr>


<font size=3D"+1"><pre>
void&#xa0;*(*GetElement)(const&#xa0;HashTable&#xa0;*H,const&#xa0;void&#xa0;=
*Key,size_t&#xa0;keyLen);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the given hash table element.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table parameter or the key pointer are &#xa0;NULL , or the keyLen=
 parameter is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the element or &#xa0;NULL if no element with the specified key=
 exists.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetFlags+\container82"></a> <font size=3D"+1"><b>GetFlags</b=
></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;HashTable&#xa0=
;*HT);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns an unsigned integer with the state of the table.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Load+\container82"></a> <font size=3D"+1"><b>Load</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;HashTable&#xa0;*(*Load)(FILE&#xa0;*stream,ReadFunction&#xa0;readFn,vo=
id&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads a table previously saved with the Save function from the stream point=
ed to by stream. If readFn is not &#xa0;NULL , it will be used to read each=
 element. The =E4rg&quot; argument will be passed to the read function. If =
the read function is &#xa0;NULL , this argument is ignored and a default re=
ad function is used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given stream pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new table or &#xa0;NULL if the operation could not be completed. Note tha=
t the function pointers in the array are NOT saved in most implementations,=
 nor any special allocator that was in the original table. In most implemen=
tations those values will be the values by default. To rebuild the original=
 state the user should replace the pointers again in the new table.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Merge+\container82"></a> <font size=3D"+1"><b>Merge</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Merge)(Pool&#xa0;*p,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&=
#xa0;HashTable&#xa0;*overlay,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&=
#xa0;HashTable&#xa0;*base,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#=
xa0;*&#xa0;(*merger)(Pool&#xa0;*p,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;keyLength,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*h1_val,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*h2_val,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*data),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&=
#xa0;void&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Merge two hash tables into one new hash table. If the same key is present i=
n both tables, call the supplied merge function to produce a merged value f=
or the key in the new table. Both hash tables must use the same hash functi=
on.=20
The arguments should be:

<ol type=3D"1">
<li>The pool to use when allocating memory. If &#xa0;NULL , the pool of the=
 &quot;base&quot; hash table will be used.
<div class=3D"p"><!----></div>
</li>

<li>
The first table to be used in the merge.
<div class=3D"p"><!----></div>
</li>

<li>
The second table
<div class=3D"p"><!----></div>
</li>

<li>
An argument to pass to the merger function.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"NewIterator+\container82"></a> <font size=3D"+1"><b>NewItera=
tor</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(HashTable&#xa0;*HT);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Allocates and initializes a new iterator object to iterate this table. The =
exact sequence of each object returned is implementation defined but it wil=
l be the same for the same dictionary with the same number of elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The parameter is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a new iterator or &#xa0;NULL if the operation couldn&#x27;t be=
 completed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
HashTable&#xa0;*HT;
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;iHashTable.NewItera=
tor(HT);
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(d=3Dit-&gt;GetFirst(it);&#xa0;d&#xa0;!=3D=
&#xa0;NULL;&#xa0;d&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;val&#xa0;=3D&#x=
a0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Work&#xa0;with&#xa0=
;the&#xa0;value&#xa0;here
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iHashTable.deleteIterator(it);

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Overlay+\container82"></a> <font size=3D"+1"><b>Overlay</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;HashTable&#xa0;*(*Overlay)(Pool&#xa0;*p,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;const&#xa0;HashTable&#xa0;*overlay,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;const&#xa0;HashTable&#xa0;*base);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies overlay into base. If conflicts arise, the data in base will be copi=
ed in the result.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of the arguments is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Resize+\container82"></a> <font size=3D"+1"><b>Resize</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(HashTable&#xa0;*HT,size_t&#xa0;n=
ewSize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will resize the given hash table to a new size. If the given new size is ze=
ro, the new size is implementation defined, and equal to the amount when au=
tomatic resizing occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The parameter is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation completed, a negative error code otherwis=
e.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Replace+\container82"></a> <font size=3D"+1"><b>Replace</b><=
/font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;(*Replace)(HashTable&#xa0;*HT,&#xa0;=
const&#xa0;void&#xa0;*key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;keyLength,const&#x=
a0;void&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will replace the contents of the given element if found.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The hash table pointer, the key or the replacement data are &#xa0;NULL , o=
r the keyLength is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the element was replaced or zero if the element wasn&#=
x27;t found. If the operation didn&#x27;t complete a negative error code is=
 returned.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Save+\container82"></a> <font size=3D"+1"><b>Save</b></font>=
 <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;HashTable&#xa0;*HT,&#xa0;FILE&#xa0;*out,&#xa0;S=
aveFunction&#xa0;Fn,&#xa0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given table are saved into the given stream. If the sav=
e function pointer is not &#xa0;NULL , it will be used to save the contents=
 of each element and will receive the arg argument passed to Save, together=
 with the output stream. Otherwise a default save function will be used and=
 arg will be ignored.
The output stream must be opened for writing and must be in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The array pointer or the stream pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
 EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
HashTable&#xa0;*HT;
&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*outFile;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iHashTable.Save(HT,outFile,NULL,NULL)&#xa0=
;&lt;&#xa0;0)&#xa0;{&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Handle&#xa0;error&#=
xa0;here&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetErrorFunction+\container82"></a> <font size=3D"+1"><b>Set=
ErrorFunction</b></font> <hr>


<font size=3D"+1"><pre>
ErrorFunction&#xa0;(*SetErrorFunction)(HashTable&#xa0;*HT,ErrorFunction&#xa=
0;fn);&#xa0;

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Replaces the current error function  for the given table with the new error=
 function if the
<font size=3D"+1"><tt><i>ErrorFunction</i></tt></font>
parameter is different from &#xa0;NULL . If=20
the
<font size=3D"+1"><tt><i>HT</i></tt></font>
parameter is &#xa0;NULL the function returns the value of the current defau=
lt error function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The table pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The table is read only and the function argument is not &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The old value of the error function or &#xa0;NULL if there is an error.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Size+\container82"></a> <font size=3D"+1"><b>Size</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;HashTable&#xa0;*HT);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements stored in the given table.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The table pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of elements stored in the table

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Sizeof+\container82"></a> <font size=3D"+1"><b>Sizeof</b></f=
ont> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;HashTable&#xa0;*HT);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of bytes of storage used in the given table including th=
e size of the elements stored in it.
If HT is &#xa0;NULL the result is the size of the HashTable header.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of elements stored in the table or the size of the HashTable hea=
der if the HT pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc9">
9</a>&#xa0;&#xa0;Queues: iQueue</h2>
<a name=3D"Queue90"></a>Queues are a type of container adaptors, specifical=
ly designed to operate in a FIFO context (first-in first-out), where elemen=
ts are inserted into one end of the container and extracted from the other.

<div class=3D"p"><!----></div>
The sample implementation shows how to implement this container as an =E4da=
ptor&quot; container, i.e. based on another container. The implementation u=
ses a linked list to implement a queue
<a href=3D"#tthFtNtADI" name=3D"tthFrefADI"><sup>38</sup></a>.

     <h3><a name=3D"tth_sEc9.1">
9.1</a>&#xa0;&#xa0;Interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagQueueInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Back)(Queue&#xa0;*Q,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Queue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;Queue&#xa0;*(*Create)(size_t&#xa0;elementSize);
&#xa0;&#xa0;&#xa0;Queue&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elementSiz=
e,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Container=
Allocator&#xa0;*allocator);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Dequeue)(Queue&#xa0;*Q,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Enqueue)(Queue&#xa0;*Q,&#xa0;void&#xa0;*Elemen=
t);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Queue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Front)(Queue&#xa0;*Q,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;List&#xa0;*(*GetData)(Queue&#xa0;*q);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(Queue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(Queue&#xa0;*Q);
}&#xa0;QueueInterface;

</pre></font>


     <h3><a name=3D"tth_sEc9.2">
9.2</a>&#xa0;&#xa0;The API</h3>
All methods are exactly like the ones in other containers except for Enqueu=
e, that is equivalent to =C4dd&quot; since adds one element at the end of t=
he container, and Dequeue, that is the same as PopFront, i.e. pops the firs=
t element of the container.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container92"></a> <font size=3D"+1"><b>Front</b></fon=
t> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;(*Front)(Queue&#xa0;*Q,void&#x=
a0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the contents of the first element in the given memory area that sho=
uld be at least the size of the element size of the queue. Note that nothin=
g is changed, and the first element is not erased from the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number for success, zero if the queue is empty or a negative err=
or code.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The Queue pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Back+\container92"></a> <font size=3D"+1"><b>Back</b></font>=
 <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;(*Back)(Queue&#xa0;*Q,void&#xa=
0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the contents of the last element in the given memory area that shou=
ld be at least the size of the element size of the queue. Note that nothing=
 is changed, and the last element is not erased from the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number for success, zero if the queue is empty or a negative err=
or code.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The Queue pointer is &#xa0;NULL .
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetData+\container92"></a> <font size=3D"+1"><b>GetData</b><=
/font> <hr>


<font size=3D"+1"><pre>
List&#xa0;*(*GetData)(Queue&#xa0;*q);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Queues are based on the list container. It is not necessary to duplicate al=
l the list functions in the queue interface: this function allows you to ac=
cess the underlying list and use all the list specific APIs with it.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the list container or &#xa0;NULL if the queue pointer passed i=
s &#xa0;NULL .

<div class=3D"p"><!----></div>

 <h2><a name=3D"tth_sEc10">
10</a>&#xa0;&#xa0;Deque: iDeque</h2>
<a name=3D"Deque100"></a>
Deque (usually pronounced like &quot;deck&quot;) is an irregular acronym of=
 double-ended queue. Double-ended queues are a kind of sequence containers.=
 As such, their elements are ordered following a strict linear sequence.
Deques may be implemented by specific libraries in different ways, but in a=
ll cases they allow for adding and retrieving elements at both ends, with s=
torage always handled automatically (expanding and contracting as needed).=
=20

<div class=3D"p"><!----></div>
Operations to insert and retrieve elements in the middle are not provided b=
ecause if users need a plain sequential container they can use one. Individ=
ual implementation can offer those if they think it is useful. This differs=
 from the C++ implementation.

<div class=3D"p"><!----></div>
Here is a little table with a Rosetta stone for deque:

<div class=3D"p"><!----></div>
<font size=3D"-2">
<table>
<tbody><tr><td align=3D"left">C </td><td align=3D"left">Ada </td><td align=
=3D"left">C++ </td><td align=3D"left">Java </td><td align=3D"left">Perl </t=
d><td align=3D"left">PHP </td><td align=3D"left">Python=20
</td></tr>
<tr><td align=3D"left"></td></tr>
<tr><td align=3D"left">PushBack </td><td align=3D"left">Append </td><td ali=
gn=3D"left">push_back </td><td align=3D"left">offerLast </td><td align=3D"l=
eft">push </td><td align=3D"left">array_push </td><td align=3D"left">append=
=20
</td></tr>
<tr><td align=3D"left">PushFront </td><td align=3D"left">Prepend </td><td a=
lign=3D"left">push_front </td><td align=3D"left">offerFirst </td><td align=
=3D"left">unshift </td><td align=3D"left">array_unshift </td><td align=3D"l=
eft">appendleft=20
</td></tr>
<tr><td align=3D"left">PopBack </td><td align=3D"left">Delete_Last </td><td=
 align=3D"left">pop_back </td><td align=3D"left">pollLast </td><td align=3D=
"left">pop </td><td align=3D"left">array_pop </td><td align=3D"left">pop=20
</td></tr>
<tr><td align=3D"left">PopFront </td><td align=3D"left">Delete_First </td><=
td align=3D"left">pop_front </td><td align=3D"left">pollFirst </td><td alig=
n=3D"left">shift </td><td align=3D"left">array_shift </td><td align=3D"left=
">popleft=20
</td></tr>
<tr><td align=3D"left">Back </td><td align=3D"left">Last_Element </td><td a=
lign=3D"left">back </td><td align=3D"left">peekLast </td><td align=3D"left"=
>$array[-1] </td><td align=3D"left">end </td><td align=3D"left"> &lt; obj &=
gt; [-1] =20
</td></tr></tbody></table>

</font>

<div class=3D"p"><!----></div>
Some functions that the C++ interface provides like is_empty() can be obtai=
ned in this implementation simply by invoking:

<font size=3D"+1"><pre>iDeque.Size(deque)&#xa0;=3D=3D&#xa0;0

</pre></font>

     <h3><a name=3D"tth_sEc10.1">
10.1</a>&#xa0;&#xa0;Interface</h3>
The interface iDeque is as follows:
<a name=3D"iDeque101"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagDequeInterface&#xa0;{
&#xa0;&#xa0;&#xa0;void&#xa0;(*Apply)(Deque&#xa0;*Q,int&#xa0;(*Applyfn)(void=
&#xa0;*,void&#xa0;*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Back)(Deque&#xa0;*d,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(Deque&#xa0;*Q);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Contains)(Deque&#xa0;*&#xa0;d,&#xa0;void*&#=
xa0;item);
&#xa0;&#xa0;&#xa0;Deque&#xa0;*(*Copy)(Deque&#xa0;*d);
&#xa0;&#xa0;&#xa0;Deque&#xa0;*(*Create)(size_t&#xa0;elementSize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(Deque&#xa0;*d1,Deque&#xa0;*d2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Deque&#xa0;*&#xa0;d,&#xa0;const&#xa0;vo=
id*&#xa0;item);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(Deque&#xa0;*&#xa0;d,&#xa0;const&#xa0=
;void*&#xa0;item);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Deque&#xa0;*Q);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Front)(Deque&#xa0;*d,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(Deque&#xa0;*Q);
&#xa0;&#xa0;&#xa0;Deque&#xa0;*(*Init)(Deque&#xa0;*d,size_t&#xa0;elementSize=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(Deque&#xa0;*dc,void&#xa0;*buf);
&#xa0;&#xa0;&#xa0;Deque&#xa0;*(*Load)(FILE&#xa0;*stream,&#xa0;ReadFunction&=
#xa0;readFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(Deque&#xa0;*Deq);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(Deque&#xa0;*d,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopFront)(Deque&#xa0;*d,void&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(Deque&#xa0;*Q,const&#xa0;void&#xa0;*=
Element);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(Deque&#xa0;*Q,&#xa0;void&#xa0;*Elem=
ent);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(Deque&#xa0;*&#xa0;d);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;Deque&#xa0;*d,FILE&#xa0;*stre=
am,&#xa0;SaveFunction&#xa0;saveFn,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(Deque&#xa0;*Q,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(Deque&#xa0;*d,Erro=
rFunction);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(Deque&#xa0;*Q,unsigned&#xa0;new=
Flags);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(Deque&#xa0;*Q);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(Deque&#xa0;*d);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(Deque&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;DequeInterface;

</pre></font>


<div class=3D"p"><!----></div>
The deque container can be implemented as an adaptor container, for instanc=
e based on a double linked list or in an vector. In any case the underlying=
 container interface is not visible.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Apply+\container101"></a> <font size=3D"+1"><b>Apply</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;(*Apply)(Deque&#xa0;*d,int&#xa0;(Applyfn)=
(void&#xa0;*,void&#xa0;*),void&#xa0;*arg);

</pre></font>=20

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Will call the given function for each element. The first argument of the ca=
llback function receives an element of the array. The second argument of th=
e callback is the arg argument that the Apply function receives and passes =
to  the callback. This way some context can be passed to the callback, and =
from one element to the next.
Note that the result of the callback is not used. This allows all kinds of =
result types to be accepted after a suitable cast.
If the array is read-only, a copy of the element will be passed to the call=
back function.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either the deque or Applyfn are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 The list is read-only and there is no more memory to allocate the buffer t=
o copy each element.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Back+\container101"></a> <font size=3D"+1"><b>Back</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Back)(Deque&#xa0;*d,void&#xa0;*outbuf);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the last element stored in the Deque d.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either d or outbuf are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value of the operation completed, zero if the container is empty=
, or a negative error code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container101"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(*Clear)(Deque&#xa=
0;*Q);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all elements stored in the queue and reclaims the memory used. The D=
eque object itself is not destroyed.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Contains+\container101"></a> <font size=3D"+1"><b>Contains</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;&#xa0;(*Contains)(Deque&#xa0;*&#xa0;d,&=
#xa0;void*&#xa0;item);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches the deque for the given data, returning its (index one based) posi=
tion or zero if not found.=20
Errors

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The deque pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The index of element or zero if not found.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container101"></a> <font size=3D"+1"><b>Copy</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Deque&#xa0;&#xa0;*(*Copy)(Deque&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a copy of the given deque.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new container or &#xa0;NULL if the operation did not compl=
ete.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container101"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;Deque&#xa0;&#xa0;*(*Create)(size_t&#xa0;elementSize=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new Deque container using =EBlementSize&quot; as the size that ea=
ch element will have.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The elementSize parameter is zero or bigger than what the implementation s=
upports.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new container or &#xa0;NULL if the operation did not compl=
ete.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Deque&#xa0;*d&#xa0;=3D&#xa0;iDeque.Create(sizeof(myType));
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(d&#xa0;=3D=3D&#xa0;NULL)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Equal+\container101"></a> <font size=3D"+1"><b>Equal</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(Deque&#xa0;*d1,Deque&#xa0;*d2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Compares the given deques using their comparison function. If they differ i=
n their size, flags, or compare functions they compare unequal. If any of t=
heir elements differ, they compare unequal.
If both d1 and d2 are &#xa0;NULL they compare equal. If both are empty, the=
y compare equal.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
The result is one if the deques are equal, zero otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container101"></a> <font size=3D"+1"><b>Front</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Front)(Deque&#xa0;*d,void&#xa0;*outbuf);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the first element stored in the Deque d.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either d or outbuf are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value of the operation completed, zero if the container is empty=
, or a negative error code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container101"></a> <font size=3D"+1"><b>Erase</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(Deque&#xa0;*&#xa0;d,&#xa0;void*&#=
xa0;item);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases the first occurrence of the given element from the container if foun=
d, starting from the front.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer or the item pointer are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the item was found and erased, zero if the item wasn&#=
x27;t found, or a negative error code if the operation did not complete.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container101"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(Deque&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the container erasing all elements, if any. The=
n it destroys the container object itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, a negative error code otherwi=
se.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetFlags+\container101"></a> <font size=3D"+1"><b>GetFlags</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(Deque&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Retrieves the state of the flags. If the implementation doesn&#x27;t suppor=
t this field this function always returns zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The state of the flags field.=20

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Load+\container101"></a> <font size=3D"+1"><b>Load</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;Deque&#xa0;*(*Load)(FILE&#xa0;*stream,ReadFunction&#xa0;readFn,void&#=
xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads a deque previously saved with the Save function from the stream point=
ed to by stream. If readFn is not &#xa0;NULL , it will be used to read each=
 element. The =E4rg&quot; argument will be passed to the read function. If =
the read function is &#xa0;NULL , this argument is ignored and a default re=
ad function is used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given stream pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new deque or &#xa0;NULL if the operation could not be completed. Note tha=
t the function pointers in the deque are NOT saved in most implementations,=
 nor any special allocator that was in the original table. In most implemen=
tations those values will be the values by default. To rebuild the original=
 state the user should replace the pointers again in the new table.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopBack+\container101"></a> <font size=3D"+1"><b>PopBack</b>=
</font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(Deque&#xa0;*d,void&#xa0;*outbuf=
);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the last element stored in the Deque d, then e=
rases the element from the deque.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either d or outbuf are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value of the operation completed, zero if the container is empty=
, or a negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PopFront+\container101"></a> <font size=3D"+1"><b>PopFront</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopFront)(Deque&#xa0;*d,void&#xa0;*outbu=
f);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the first element stored in the Deque d, thnen=
 erases the element from the deque.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either d or outbuf are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value of the operation completed, zero if the container is empty=
, or a negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PushBack+\container101"></a> <font size=3D"+1"><b>PushBack</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(Deque&#xa0;*d,void&#xa0;*eleme=
nt);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given element to the end of the deque. It is assumed that =EBlemen=
t&quot; points to a contiguous memory area of at least ElementSize bytes. =
=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque or the element pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation added a new element, or a negative error=
 code if an error occurred.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Deque&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;4.5;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iDeque.PushBack(d,&am=
p;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PushFront+\container101"></a> <font size=3D"+1"><b>PushFront=
</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PushFront)(Deque&#xa0;*d,void&#xa0;*elem=
ent);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given element to the start of the deque. It is assumed that =EBlem=
ent&quot; points to a contiguous memory area of at least ElementSize bytes.=
 =20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque or the element pointers are &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation added a new element, or a negative error=
 code if an error occurred.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Deque&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;data&#xa0;=3D&#xa0;4.5;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;iDeque.PushFront(d,&a=
mp;data);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)&#xa0;{&#xa0;/*&#x=
a0;Error&#xa0;handling&#xa0;*/&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Save+\container101"></a> <font size=3D"+1"><b>Save</b></font=
> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;Deque&#xa0;*d,&#xa0;FILE&#xa0;*out,&#xa0;SaveFu=
nction&#xa0;Fn,&#xa0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given deque are saved into the given stream. If the sav=
e function pointer is not &#xa0;NULL , it will be used to save the contents=
 of each element and will receive the arg argument passed to Save, together=
 with the output stream. Otherwise a default save function will be used and=
 arg will be ignored.
The output stream must be opened for writing and must be in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The deque pointer or the stream pointer are &#xa0;NULL .
EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
Deque&#xa0;*d;
&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*outFile;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iDeque.Save(d,outFile,NULL,NULL)&#xa0;&lt;=
&#xa0;0)&#xa0;{&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Handle&#xa0;error&#=
xa0;here&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;}

</pre></font>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc11">
11</a>&#xa0;&#xa0;Priority queues</h2>
<a name=3D"Priority queues110"></a>Priority queues are queues where each el=
ement has a priority associated with it. In this implementation the element=
s with the lowest priority
associated with the data are served first.

<div class=3D"p"><!----></div>
The value of the priority key must be within the bounds set up by the two m=
anifest constants:

<font size=3D"+1"><pre>CCL_PRIORITY_MIN
CCL_PRIORITY_MAX

</pre></font>

<div class=3D"p"><!----></div>
They are defined by the implementation and they define a subset of an integ=
er or long integer range. This allows the implementation to save some
values for special &quot;markers&quot; if needed. If the implementation doe=
sn&#x27;t need this feature it can define the bounds as to cover the full
possible range for the key type.

<div class=3D"p"><!----></div>
The key type is defined as the C99 type <font size=3D"+1"><tt>intptr_t</tt>=
</font>: the integer type that can hold a pointer.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc11.1">
11.1</a>&#xa0;&#xa0;Interface</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagPQueueInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(PQueue&#xa0;*Q,intptr_t&#xa0;key,const&#x=
a0;void&#xa0;*Element);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(PQueue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;PQueue&#xa0;*(*Copy)(const&#xa0;PQueue&#xa0;*src);
&#xa0;&#xa0;&#xa0;PQueue&#xa0;*(*Create)(size_t&#xa0;elementSize);
&#xa0;&#xa0;&#xa0;PQueue&#xa0;*(*CreateWithAllocator)(size_t&#xa0;elementSi=
ze,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Con=
tainerAllocator&#xa0;*allocator);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;PQueue&#xa0;*q1,const&#xa0;P=
Queue&#xa0;*q2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(PQueue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;intptr_t&#xa0;(*Front)(const&#xa0;PQueue&#xa0;*Q,void&#xa=
0;*result);
&#xa0;&#xa0;&#xa0;intptr_t&#xa0;(*Pop)(PQueue&#xa0;*Q,void&#xa0;*result);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Push)(PQueue&#xa0;*Q,intptr_t&#xa0;key,const&#=
xa0;void&#xa0;*Element);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;PQueue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;PQueue&#xa0;*Q);
&#xa0;&#xa0;&#xa0;PQueue&#xa0;*(*Union)(PQueue&#xa0;*left,&#xa0;PQueue&#xa0=
;*right);
}&#xa0;PQueueInterface;

</pre></font>


     <h3><a name=3D"tth_sEc11.2">
11.2</a>&#xa0;&#xa0;A complete example</h3>

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
#include&#xa0;&lt;stdlib.h&gt;
#include&#xa0;&quot;containers.h&quot;
#define&#xa0;MAX_ITERATIONS&#xa0;10
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[20];
&#xa0;&#xa0;&#xa0;&#xa0;PQueue&#xa0;*pq&#xa0;=3D&#xa0;iPQueue.Create(20);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r,i;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;MAX_ITERATIONS;i++)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[20];
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;d&#xa0;=3D&#xa0;ra=
nd();
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;snprintf(buf,20,&quot;%d&qu=
ot;,d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;iPQueue.Pus=
h(pq,d,buf);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0=
)&#xa0;break;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;The&#xa0;queue&#xa0;has&#xa0;%zu&#xa0;=
elements\n&quot;,iPQueue.Size(pq));
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;It&#xa0;uses&#xa0;%zu&#xa0;bytes.&#xa0=
;The&#xa0;size&#xa0;of&#xa0;the&#xa0;header&#xa0;structure&#xa0;is&#xa0;%zu=
\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iPQ=
ueue.Sizeof(pq),iPQueue.Sizeof(NULL));
&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;iPQueue.Size(pq);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;r;&#xa0;i++){
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iPQueue.Pop(pq,buf);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%s&#xa0;&quot;=
,buf);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
}
OUTPUT
The&#xa0;queue&#xa0;has&#xa0;10&#xa0;elements
It&#xa0;uses&#xa0;968&#xa0;bytes.&#xa0;The&#xa0;size&#xa0;of&#xa0;the&#xa0;=
header&#xa0;structure&#xa0;is&#xa0;88
16807&#xa0;101027544&#xa0;282475249&#xa0;470211272&#xa0;984943658&#xa0;1144=
108930&#xa0;
1457850878&#xa0;1458777923&#xa0;1622650073&#xa0;2007237709

</pre></font>
The example uses two loops: one for filling the priority queue, the other f=
or printing all its elements.=20

<div class=3D"p"><!----></div>
We create the priority queue
with an element size of 20. This is more than enough to hold a character st=
ring containing the textual representation of the priority.

<div class=3D"p"><!----></div>
In the first loop (lines 9 to 15) we associate a priority that we obtain fr=
om the random number generator, to a character string containing
the text representation of it. We use the <font size=3D"+1"><tt>Push</tt></=
font> primitive to add to the priority queue (line 13). In case of any erro=
r we stop.=20

<div class=3D"p"><!----></div>
We print some information about the queue in lines 16-18. In line 19 we sto=
re the length of the queue in a temporary variable.
This is necessary since we will use the <font size=3D"+1"><tt>Pop</tt></fon=
t> primitive that erases the lowest priority element, so the length of the =
queue will
change. We can&#x27;t use <font size=3D"+1"><tt>MAX_ITERATIONS</tt></font> =
either because it could be that the queue doesn&#x27;t have its full length=
 because an error
in line 13 forced us to break the first loop in line 14 withoutb reaching <=
font size=3D"+1"><tt>MAX_ITERATIONS</tt></font>
<a href=3D"#tthFtNtADJ" name=3D"tthFrefADJ"><sup>39</sup></a>.

<div class=3D"p"><!----></div>
The output is obviously insorted order, since the queue releases the data f=
rom the lowest priority to the highest.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc11.3">
11.3</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container113"></a> <font size=3D"+1"><b>Add</b></font> =
<hr>


<font size=3D"+1"><pre>
int&#xa0;(*Add)(PQueue&#xa0;*q,&#xa0;intptr_t&#xa0;key,void&#xa0;*Element);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds to the given queue <font size=3D"+1"><tt>q</tt></font> the given eleme=
nt <font size=3D"+1"><tt>Element</tt></font> with its associated priority <=
font size=3D"+1"><tt>key</tt></font>. This function is identical to the
<font size=3D"+1"><tt>Push</tt></font> function below.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container113"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(*Clear)(PQueue&#x=
a0;*Q);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Erases all elements stored in the queue and reclaims the memory used. The p=
riority queue object itself is not destroyed.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The PQueue pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The queue is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if the queue is cleared, a negative error =
code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container113"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;PQueue&#xa0;&#xa0;*(*Create)(size_t&#xa0;elementSiz=
e);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new priority queue container using =EBlementSize&quot; as the siz=
e that each element will have.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The elementSize parameter is zero or bigger than what the implementation s=
upports.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new container or &#xa0;NULL if the operation did not compl=
ete.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Copy+\container113"></a> <font size=3D"+1"><b>Copy</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;PQueue&#xa0;&#xa0;*(*Copy)(PQueue&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Makes a copy of the given queue.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The queue pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new queue or &#xa0;NULL if the operation did not complete.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container113"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;PQueue&#xa0;&#xa0;*(*Create)(size_t&#xa0;elementSiz=
e);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new priority queue container using =EBlementSize&quot; as the siz=
e that each element will have.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The elementSize parameter is zero or bigger than what the implementation s=
upports.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to the new container or &#xa0;NULL if the operation did not compl=
ete.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Equal+\container113"></a> <font size=3D"+1"><b>Equal</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(PQueue&#xa0;*&#xa0;q1,&#xa0;PQueu=
e&#xa0;*q2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Compares two priority queues for equality. Two &#xa0;NULL pointers compare =
equal.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the two queues are equal, zero otherwise.

<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container113"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(PQueue&#xa0;*d);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the container erasing all elements, if any. The=
n it destroys the container object itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The priority queue pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_READONLY

 The deque is read-only. No modifications allowed.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the operation completed, a negative error code otherwi=
se.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Front+\container113"></a> <font size=3D"+1"><b>Front</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;intptr_t&#xa0;(*Front)(PQueue&#xa0;*q,void&#xa0;*re=
sult);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the element with the lowest priority in the qu=
eue q.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either the queue pointer or the result pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The value of the priority associated with the lowest priority element. If t=
he queue is empty the result is <font size=3D"+1"><tt>INT_MIN</tt></font>.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Pop+\container113"></a> <font size=3D"+1"><b>Pop</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;intptr_t&#xa0;(*Pop)(PQueue&#xa0;*d,void&#xa0;*outb=
uf);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given buffer the element with the lowest priority in the De=
que d, then erases the element from the deque.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either d or outbuf are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
The priority value associated with the element or <font size=3D"+1"><tt>INT=
_MIN</tt></font> if the queue is empty.=20
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Push+\container113"></a> <font size=3D"+1"><b>Push</b></font=
> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Push)(PQueue&#xa0;*q,&#xa0;intptr_t&#xa0;key,void&#xa0;*Element);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds to the given queue <font size=3D"+1"><tt>q</tt></font> the given eleme=
nt <font size=3D"+1"><tt>Element</tt></font> with its associated priority <=
font size=3D"+1"><tt>key</tt></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Size+\container113"></a> <font size=3D"+1"><b>Size</b></font=
> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Size)(PQueue&#xa0;*q);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of elements in the given priority queue.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sizeof+\container113"></a> <font size=3D"+1"><b>Sizeof</b></=
font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Sizeof)(PQueue&#xa0;*q);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of bytes used in the given priority queue. If the argum=
ent <font size=3D"+1"><tt>q</tt></font> is &#xa0;NULL it returns the number=
 of bytes used
by the header structure.
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc12">
12</a>&#xa0;&#xa0;Bloom filters</h2>
<a name=3D"Bloomfilter120"></a>Bloom filters allow you to determine cheaply=
 and quickly if an element is member of a set without actually looking into=
 the large set. This container
doesn&#x27;t store any data, just a series of bits indicating whether the e=
lement is there.=20
It can return false answers, specifically a false positive meaning
it can answer =FFes, the element is there&quot; when in fact it is not. Whe=
n it tells you however that the element is <b>not</b> there you can be sure
it is not in the set. The probability that a false answer occurs can be cal=
culated in function of the size reserved for the bit table: the bigger
the table, the smaller the probability of a false answer for a fixed number=
 of elements. <a href=3D"#tthFtNtAEA" name=3D"tthFrefAEA"><sup>40</sup></a>
<img alt=3D"Figure" src=3D"BloomFilter.png">
<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc12.1">
12.1</a>&#xa0;&#xa0;The interface: iBloomFilter</h3>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagBloomFilterInterface&#xa=
0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*CalculateSpace)(size_t&#xa0;maxfEleme=
nts,double&#xa0;probability);
&#xa0;&#xa0;&#xa0;&#xa0;BloomFilter&#xa0;*(*Create)(size_t&#xa0;maxElements=
,double&#xa0;probability);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Add)(BloomFilter&#xa0;*b,const&#xa0;v=
oid&#xa0;*key,size_t&#xa0;keylen);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Find)(BloomFilter&#xa0;*b,const&#xa0;voi=
d&#xa0;*key,size_t&#xa0;keylen);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(BloomFilter&#xa0;*b);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(BloomFilter&#xa0;*b);
}&#xa0;BloomFilterInterface;

</pre></font>

     <h3><a name=3D"tth_sEc12.2">
12.2</a>&#xa0;&#xa0;The API</h3>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CalculateSpace+\container122"></a> <font size=3D"+1"><b>Calc=
ulateSpace</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*CalculateSpace)(size_t&#xa0;maxElemen=
ts,double&#xa0;probability);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the space in bytes that would occupy a bloom filter to hold the giv=
en number of elements with the given probability. The probability parameter
should be greater than zero and smaller than 1.0. For values very close to =
the values zero and one,=20
a huge number of bits can be necessary and the filter
creation function will return &#xa0;NULL because of lack memory problems.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The probability is smaller or equal than zero, or bigger or equal than one.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes needed or zero in case of error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container122"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;BloomFilter&#xa0;*(*Create)(size_t&#xa0;maxElements=
,double&#xa0;probability);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates and initializes a filter with space enough to hold <i>MaxElements</=
i> with the given probability for a false answer. The probability parameter
should be greater than zero and smaller than 1.0. For values very close to =
the values zero and one,=20
a huge number of bits can be necessary and the filter
creation function will return NULL because of lack memory problems.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The probability is smaller or equal than zero, or bigger or equal than one.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEM

 There is no memory for the allocation of the necessary data structures.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a newly allocated bloom filter or &#xa0;NULL in case of error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container122"></a> <font size=3D"+1"><b>Add</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Add)(BloomFilter&#xa0;*b,const&#xa0;v=
oid&#xa0;*key,size_t&#xa0;keylen);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given key to the filter. The <font size=3D"+1"><tt>keylen</tt></fo=
nt> argument should be the length of the key, that should never be zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The filter pointer or the key pointer are &#xa0;NULL , or the <font size=
=3D"+1"><tt>keylen</tt></font> is zero.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_CONTAINER_FULL

. The maximum number of elements has been reached.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of elements in the filter or zero if there is an error.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Find+\container122"></a> <font size=3D"+1"><b>Find</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Find)(BloomFilter&#xa0;*b,const&#xa0;voi=
d&#xa0;*key,size_t&#xa0;keylen);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches the given key in the filter.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The filter pointer or the key pointer are &#xa0;NULL , or the <font size=
=3D"+1"><tt>keylen</tt></font> is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>
One if the element is found, zero if it is not, or a negative error code if=
 an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Clear+\container122"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(BloomFilter&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes all elements from the filter. No memory is released.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
One if all elements were cleared, a negative error code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container122"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(BloomFilter&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Releases all memory held by the filter.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
One if all elements were cleared, a negative error code otherwise.
<br clear=3D"LEFT"><br><br>
 <h2><a name=3D"tth_sEc13">
13</a>&#xa0;&#xa0;Value arrays</h2>
<a name=3D"iValArray130"></a>
<a name=3D"ValArray130"></a>
Value arrays are a group of containers that store the basic types of the la=
nguage: <font size=3D"+1"><tt>short, int, long, long long, float, double, l=
ong double</tt></font>
and have some specialized operations that should be done in hardware when t=
he underlying CPU allows it. The objective here is to simplify the=20
<font size=3D"+1"><tt>vector</tt></font> interface replacing the <font size=
=3D"+1"><tt>void *</tt></font> with the concrete type that these arrays hol=
d.

<div class=3D"p"><!----></div>
We have the following ValArrays:

<center>

<table>
<tbody><tr><td align=3D"left"><b>Name</b></td><td align=3D"left"><b>Interfa=
ce name</b></td><td align=3D"left"><b>Element type</b></td></tr>
<tr><td align=3D"left">ValArrayShort</td><td align=3D"left">iValArrayShort<=
/td><td align=3D"left">short</td></tr>
<tr><td align=3D"left">ValArrayInt</td><td align=3D"left">iValArrayInt</td>=
<td align=3D"left">int</td></tr>
<tr><td align=3D"left">ValArrayUInt</td><td align=3D"left">iValArrayUInt</t=
d><td align=3D"left">unsigned</td></tr>
<tr><td align=3D"left">ValArrayLong</td><td align=3D"left">iValArrayLong</t=
d><td align=3D"left">long</td></tr>
<tr><td align=3D"left">ValArrayDouble</td><td align=3D"left">iValArrayDoubl=
e</td><td align=3D"left">double</td></tr>
<tr><td align=3D"left">ValArrayFloat</td><td align=3D"left">iValArrayFloat<=
/td><td align=3D"left">float</td></tr>
<tr><td align=3D"left">ValArrayLongDouble</td><td align=3D"left">iValArrayL=
ongDouble</td><td align=3D"left">long double</td></tr>
<tr><td align=3D"left">ValArrayLLong</td><td align=3D"left">iValArrayLLong<=
/td><td align=3D"left">long long</td></tr>
<tr><td align=3D"left">ValArrayULLong</td><td align=3D"left">iValArrayULLon=
g</td><td align=3D"left">unsigned long long</td></tr>
<tr><td align=3D"left">ValArraySize_t</td><td align=3D"left">iValArraySize_=
t</td><td align=3D"left">size_t</td></tr></tbody></table>

</center>
Some types can be just aliases for other types. For instance when int and l=
ong have the same size there is no point in providing a separate
implementation. This will be always the case with the type <font size=3D"+1=
"><tt>size_t</tt></font> that will be an alias for one of the unsigned type=
s. This type is needed to
represent arrays of indices that can be used to select elements into anothe=
r array.

<div class=3D"p"><!----></div>
The operations supported are the same as the vector data type with several =
differences:

<ul>
<li> Simplified interfaces. For instance in the vector container the result=
 of GetElement is always a pointer to the data. ValArray simplifies this by
using directly the underlying type as return value. The functions that chan=
ge their signature are:

<ol type=3D"1">
<li> Contains. Second parameter is not a pointer but the underlying type.
<div class=3D"p"><!----></div>
</li>

<li> Erase. Second parameter is not a pointer but the underlying type.
<div class=3D"p"><!----></div>
</li>

<li> Apply. The apply function receives the underlying type and not a point=
er.
<div class=3D"p"><!----></div>
</li>

<li> Add. The second argument is the underlying type.
<div class=3D"p"><!----></div>
</li>

<li> GetElement. Returns the underlying type.
<div class=3D"p"><!----></div>
</li>

<li> PushBack.Second argument changes.
<div class=3D"p"><!----></div>
</li>

<li> PopFront. Returns the underlying type.
<div class=3D"p"><!----></div>
</li>

<li> InsertAt. Second argument.
<div class=3D"p"><!----></div>
</li>

<li> ReplaceAt. Third argument
<div class=3D"p"><!----></div>
</li>

<li> IndexOf. Second argument.
<div class=3D"p"><!----></div>
</li>

<li> Insert. Second argument
<div class=3D"p"><!----></div>
</li>

<li> AddRange. Second argument is not a void pointer but a pointer to the u=
nderlying type.
<div class=3D"p"><!----></div>
</li>

<li> CopyElement. Second argument is not a void pointer but a pointer to th=
e underlying type.
<div class=3D"p"><!----></div>
</li>

<li> CopyTo. The return type is not a <font size=3D"+1"><tt>void **</tt></f=
ont> but a pointer to an array of the underlying type.
<div class=3D"p"><!----></div>
</li>
</ol>
<div class=3D"p"><!----></div>
</li>

<li> No destructors. There is no point in using destructors with the basic =
types.
<div class=3D"p"><!----></div>
</li>

<li> No extra arguments used in the comparison function. The comparison is =
done inline whenever possible. The function <font size=3D"+1"><tt>SetCompar=
isonFunction</tt></font>
is accepted but does nothing.
<div class=3D"p"><!----></div>
</li>

<li> Creation functions do not need the element size parameter.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>GetElementSize</tt></font> returns the size =
in bytes of the underlying type but doesn&#x27;t use its argument that can =
be &#xa0;NULL .
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>Save</tt></font> and <font size=3D"+1"><tt>L=
oad</tt></font> functions do not need a user defined save/load function sin=
ce it is obvious how the basic
types are to be written to the disk: they contain surely no pointers that n=
eed to be followed. Their signature is changed.
<div class=3D"p"><!----></div>
</li>

<li> Iterators are unchanged and still return a pointer to an element <a hr=
ef=3D"#tthFtNtAEB" name=3D"tthFrefAEB"><sup>41</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li> No tests for &#xa0;NULL arguments in the default version.=20
Obviously those tests can be added in other versions or implementations sin=
ce any &#xa0;NULL arguments
provokes undefined behavior <a href=3D"#tthFtNtAEC" name=3D"tthFrefAEC"><su=
p>42</sup></a>.
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc13.1">
13.1</a>&#xa0;&#xa0;Operations</h3>
Each operation described below needs two compatible arrays, i.e. arrays tha=
t have the same number of elements. If that is not the case an error
occurs. A single number can be used in place of an array, extending it to t=
he shape of the array. The naming convention is to add the &quot;Scalar&quo=
t; token
to the operation name, so we have for instance <font size=3D"+1"><tt>Multip=
lyWith</tt></font> and <font size=3D"+1"><tt>MultiplyWithScalar</tt></font>.

<div class=3D"p"><!----></div>
In general all operations use the data of the left argument and write their=
 results into the left argument. The right argument remains unmodified.
This allows to construct efficient RPN evaluators to avoid allocating inter=
mediate results.

     <h3><a name=3D"tth_sEc13.2">
13.2</a>&#xa0;&#xa0;Slices and masks</h3>
A <b>slice</b> is a description of a certain portion of the array. It has t=
hree fields:

<ol type=3D"1">
<li> <b>Start</b>, The zero based index of the element that starts the slic=
e.
<div class=3D"p"><!----></div>
</li>

<li> <b>Length</b>. The number of elements that are selected by the slice.
<div class=3D"p"><!----></div>
</li>

<li> <b>Increment</b>. The number of elements that are skipped between elem=
ents when passing from one element of the slice to the next.
<div class=3D"p"><!----></div>
</li>
</ol>
When a ValArray is created, the slice used is the default one: <font size=
=3D"+1"><tt>0, Size(ValArray), 1</tt></font>. The slice starts at element z=
ero,
has the same number of elements that the number of elements in the array, a=
nd its increment is 1. Using the API <font size=3D"+1"><tt>SetSlice</tt></f=
ont> and
<font size=3D"+1"><tt>ResetSlice</tt></font> you can modify the elements th=
at will be selected for all operations. When a slice is active, all element=
s that aren&#x27;t in the
selected slice are ignored.

<div class=3D"p"><!----></div>
Slices are maintained by the library automatically. If you erase elements f=
rom the array until the slice is empty, the library automatically
resets the slice. If you add elements, the length of the slice will increas=
e if necessary.

<div class=3D"p"><!----></div>
A <b>Mask</b> is a boolean vector of ones or zeroes that selects elements f=
rom the array. It can be implemented as a bitstring or as a sequence
of bytes, this is implementation defined. When used in combination with som=
e ValArray operation, it selects the elements that will be affected
by the operation.

     <h3><a name=3D"tth_sEc13.3">
13.3</a>&#xa0;&#xa0;The interface</h3>
This is a generic interface description. The <font size=3D"+1"><tt>ElementT=
ype</tt></font> token is replaced in each ValArray by the underlying type:=
=20
int, double, etc. In the same
style, <font size=3D"+1"><tt>ValArray</tt></font> and the <font size=3D"+1"=
><tt>ValArrayInterface</tt></font> tokens are replaced with the correspondi=
ng value array name and interface name.

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagValArrayInterface&#xa0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Abs)(ValArray&#xa0;*src);&#xa0;
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Accumulate)(const&#xa0;ValArray&#xa0;*=
src);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(ValArray&#xa0;*AL,ElementType&#xa0;newval=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(ValArray&#xa0;*AL,size_t&#xa0;n,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ElementTyp=
e&#xa0;*newvalues);
&#xa0;&#xa0;&#xa0;int&#xa0;(*And)(ValArray&#xa0;*left,&#xa0;const&#xa0;ValA=
rray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*AndScalar)(ValArray&#xa0;*left,&#xa0;const&#xa=
0;ElementType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(ValArray&#xa0;*AL1,&#xa0;ValArray&#xa0=
;*AL2);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Apply)(ValArray&#xa0;*AL,int&#xa0;(*Applyfn)(E=
lementType&#xa0;element,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*&#xa0;arg),void&=
#xa0;*arg);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Back)(const&#xa0;ValArray&#xa0;*src);
&#xa0;&#xa0;&#xa0;int&#xa0;(*BitLeftShift)(ValArray&#xa0;*data,int&#xa0;shi=
ft);
&#xa0;&#xa0;&#xa0;int&#xa0;(*BitRightShift)(ValArray&#xa0;*data,&#xa0;const=
&#xa0;int&#xa0;shift);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*Compare)(const&#xa0;ValArray&#xa0;*left,&#xa=
0;const&#xa0;ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*bytearray);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqual)(const&#xa0;ValArray&#xa0;*left=
,const&#xa0;ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*bytearray);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*CompareEqualScalar)(const&#xa0;ValArray&#xa0=
;*left,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;Elem=
entType&#xa0;right,&#xa0;Mask&#xa0;*bytearray);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*CompareScalar)(const&#xa0;ValArray&#xa0;*lef=
t,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;Elem=
entType&#xa0;right,char&#xa0;*bytearray);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;ValArray&#xa0;*AL,Element=
Type&#xa0;data);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*Copy)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*CopyElement)(const&#xa0;ValArray&#xa0;*AL,size=
_t&#xa0;idx,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;*outbuf);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;*(*CopyTo)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*Create)(size_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*CreateSequence)(size_t&#xa0;n,ElementTyp=
e&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;ElementType&#xa0;increment);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*CreateWithAllocator)(size_t&#xa0;startsi=
ze,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;ContainerAllocator&#xa0;*allocator);
&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideBy)(ValArray&#xa0;*left,&#xa0;const&#xa0=
;ValArray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideByScalar)(ValArray&#xa0;*left,&#xa0;Elem=
entType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideScalarBy)(ValArray&#xa0;*left,ElementTyp=
e&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(const&#xa0;ValArray&#xa0;*first,&#xa0;c=
onst&#xa0;ValArray&#xa0;*second);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(ValArray&#xa0;*AL,ElementType&#xa0;elem=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(ValArray&#xa0;*AL,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;Mask&#xa0;*(*FCompare)(const&#xa0;ValArray&#xa0;*left,&#x=
a0;const&#xa0;ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*byte=
array,ElementType&#xa0;tolerance);
&#xa0;&#xa0;&#xa0;int&#xa0;(*FillSequential)(ValArray&#xa0;*dst,size_t&#xa0=
;length,ElementType&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;incr=
ement);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ForEach)(ValArray&#xa0;*src,ElementType&#xa0;(=
*ApplyFn)(ElementType));
&#xa0;&#xa0;&#xa0;int&#xa0;(*Fprintf)(const&#xa0;ValArray&#xa0;*src,FILE&#x=
a0;*out,const&#xa0;char&#xa0;*fmt);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Front)(const&#xa0;ValArray&#xa0;*src);
&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*(*GetAllocator)(const&#xa0;ValAr=
ray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;*(*GetData)(const&#xa0;ValArray&#xa0;*sr=
c);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*GetElement)(const&#xa0;ValArray&#xa0;*=
AL,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;ValArray&#xa0;*A=
L);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*GetRange)(const&#xa0;ValArray&#xa0;*AL,&=
#xa0;size_t&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*GetSlice)(ValArray&#xa0;*array,size_t&#xa0;*st=
art,size_t&#xa0;*length,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*incremen=
t);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*IndexIn)(const&#xa0;ValArray&#xa0;*SC,co=
nst&#xa0;ValArraySize_t&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(ValArray&#xa0;*AL,ElementType&#xa0;da=
ta,size_t&#xa0;*result);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*Init)(ValArray&#xa0;*AL,size_t&#xa0;star=
tsize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InitIterator)(ValArray&#xa0;*AL,void&#xa0;*buf=
);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*InitializeWith)(size_t&#xa0;n,&#xa0;Elem=
entType&#xa0;*data);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Insert)(ValArray&#xa0;*AL,ElementType);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(ValArray&#xa0;*AL,size_t&#xa0;idx,El=
ementType&#xa0;newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertIn)(ValArray&#xa0;*AL,&#xa0;size_t&#xa0;=
idx,&#xa0;ValArray&#xa0;*newData);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Inverse)(ValArray&#xa0;*src);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*Load)(FILE&#xa0;*stream);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Max)(const&#xa0;ValArray&#xa0;*src);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Memset)(ValArray&#xa0;*dst,ElementType&#xa0;fi=
llValue,size_t&#xa0;length);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Min)(const&#xa0;ValArray&#xa0;*src);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Mismatch)(const&#xa0;ValArray&#xa0;*a1,const&#=
xa0;ValArray&#xa0;*a2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*mismatch);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Mod)(ValArray&#xa0;*left,const&#xa0;ValArray&#=
xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ModScalar)(ValArray&#xa0;*left,const&#xa0;Elem=
entType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*MultiplyWith)(ValArray&#xa0;*left,&#xa0;const&=
#xa0;ValArray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*MultiplyWithScalar)(ValArray&#xa0;*left,&#xa0;=
ElementType&#xa0;right);
&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Not)(ValArray&#xa0;*left);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Or)(ValArray&#xa0;*left,&#xa0;const&#xa0;ValAr=
ray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*OrScalar)(ValArray&#xa0;*left,&#xa0;const&#xa0=
;ElementType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PopBack)(ValArray&#xa0;*AL,ElementType&#xa0;*r=
esult);
&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Product)(const&#xa0;ValArray&#xa0;*src=
);
&#xa0;&#xa0;&#xa0;int&#xa0;(*PushBack)(ValArray&#xa0;*AL,ElementType&#xa0;d=
ata);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RemoveRange)(ValArray&#xa0;*src,size_t&#xa0;st=
art,size_t&#xa0;end);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(ValArray&#xa0;*AL,size_t&#xa0;idx,E=
lementType&#xa0;newval);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ResetSlice)(ValArray&#xa0;*array);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(ValArray&#xa0;*src,&#xa0;size_t&#xa0;n=
ewSize);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Reverse)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(ValArray&#xa0;*AL,&#xa0;size_t&#xa=
0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(ValArray&#xa0;*AL,size_t&#xa0;n);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(const&#xa0;ValArray&#xa0;*AL,FILE&#xa0;*=
stream);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Select)(ValArray&#xa0;*src,const&#xa0;Mask&#xa=
0;*m);
&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*SelectCopy)(const&#xa0;ValArray&#xa0;*sr=
c,const&#xa0;Mask&#xa0;*m);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetCapacity)(ValArray&#xa0;*AL,size_t&#xa0;new=
Capacity);
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;(*SetCompareFunction)(ValArray&#xa0;=
*l,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;(*SetDestructor)(ValArray&#xa0;*c=
b,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction=
&#xa0;fn);
&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(ValArray&#xa0;*AL,=
ErrorFunction);
&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(ValArray&#xa0;*AL,unsigned&#xa0=
;flags);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetSlice)(ValArray&#xa0;*src,size_t&#xa0;start=
,size_t&#xa0;length,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;increment);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*SizeofIterator)(const&#xa0;ValArray&#xa0;*);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractFrom)(ValArray&#xa0;*left,&#xa0;const&=
#xa0;ValArray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractFromScalar)(ElementType&#xa0;left,&#xa=
0;ValArray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractScalarFrom)(ValArray&#xa0;*left,&#xa0;=
ElementType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SumScalarTo)(ValArray&#xa0;*left,ElementType&#=
xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SumTo)(ValArray&#xa0;*left,const&#xa0;ValArray=
&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Xor)(ValArray&#xa0;*left,&#xa0;const&#xa0;ValA=
rray&#xa0;*right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*XorScalar)(ValArray&#xa0;*left,&#xa0;const&#xa=
0;ElementType&#xa0;right);
&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
}&#xa0;ValArrayInterface;

</pre></font>

<br clear=3D"LEFT"><br><br>
<img alt=3D"Figure" src=3D"ValArray.png">

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Abs+\container133"></a> <font size=3D"+1"><b>Abs</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Abs)(ValArray&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
If any of the values in the source array is smaller than zero it will be ne=
gated. This function is only defined for signed or floating point types.
It has no meaning with unsigned types.

<div class=3D"p"><!----></div>
<b>Returns:</b>Zero if the array was empty, a positive number if successful.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Accumulate+\container133"></a> <font size=3D"+1"><b>Accumula=
te</b></font> <hr>


<font size=3D"+1"><pre>
ElementType&#xa0;(*Accumulate)(ValArray&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Calculates the sum of all the elements of the given vector. If a slice defi=
nition is active only the slice elements are considered.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None are mandatory but implementations should check for overflow when possi=
ble.

<div class=3D"p"><!----></div>
<b>Returns:</b>The sum of the elements.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Add+\container133"></a> <font size=3D"+1"><b>Add</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(ValArray&#xa0;*AL,ElementType&#xa0;=
newval);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds an element at the end of the array. If a slice is active, the incremen=
t field (stride) will be used: the new element will be separated by the=20
increment field of the slice and empty fields will be filed with zeroes. Th=
e length of the slice will be incremented by one.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the element was added or a negative error code otherwi=
se.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"AddRange+\container133"></a> <font size=3D"+1"><b>AddRange</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*AddRange)(ValArray&#xa0;*AL,size_t&#xa0;=
n,ElementType&#xa0;*newvalues);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds a range of elements at the end of the array. If a slice is active, the=
 increment field (stride) will be used: each new element will be separated =
by=20
the increment field of the slice and empty fields will be filed with zeroes=
. The length of the slice will be incremented by n. If n is zero no error
will be issued and the result is a positive number.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the elements were added or a negative error code other=
wise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Apply+\container133"></a> <font size=3D"+1"><b>Apply</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Apply)(ValArray&#xa0;*AL,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;int&#xa0;(*Applyfn)(ElementType&#xa0;element,void&#xa0;*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;void&#xa0;*arg);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Calls the given function for each element of the array. If a slice is activ=
e only the elements in the slice will be used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number

<div class=3D"p"><!----></div>
=20
<br><a name=3D"And+\container133"></a> <font size=3D"+1"><b>And</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*And)(ValArray&#xa0;*left,ValArray&#xa0;*=
right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise AND operation between each element of the right argument=
 with the corresponding element of the left argument. Conceptually this ope=
ration is: <font size=3D"+1"><tt>left&#xa0;&amp;=3D&#xa0;right</tt></font>.=
 This operation is allowed only between unsigned integer types. For floatin=
g point data this operation has no=20
meaning. If a slice is active only the slice elements are affected. If both=
 arrays have slices they must be compatible, i.e. they must have the
same length.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays or slices have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"BitLeftShift+\container133"></a> <font size=3D"+1"><b>BitLef=
tShift</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*BitLeftShift)(ValArray&#xa0;*dst,int&#xa=
0;shift);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Shifts left each element of the given ValArray by <font size=3D"+1"><tt>shi=
ft</tt></font> bits. If <font size=3D"+1"><tt>shift</tt></font> is negative=
 it performs a right shift instead.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
No errors.=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number or a negative error code if an implementat=
ion detects an invalid pointer. This error is not required to be detected.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"BitRightShift+\container133"></a> <font size=3D"+1"><b>BitRi=
ghtShift</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*BitRightShift)(ValArray&#xa0;*dst,int&#x=
a0;shift);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Shifts right each element of the given ValArray by <font size=3D"+1"><tt>sh=
ift</tt></font> bits. If <font size=3D"+1"><tt>shift</tt></font> is negativ=
e it performs a left shift instead.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
No errors.=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number or a negative error code if an implementat=
ion detects an invalid pointer. This error is not required to be detected.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Clear+\container133"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(ValArray&#xa0;*array);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the number of elements to zero but doesn&#x27;t release any memory. An=
y slice definitions are cleared.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive integer.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Compare+\container133"></a> <font size=3D"+1"><b>Compare</b>=
</font> <hr>


<font size=3D"+1"><pre>
char&#xa0;*(*Compare)(ValArray&#xa0;*left,ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*b=
itarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each byte of the bitarray the result of comparing the correspond=
ing elements of the left and right arrays. Conceptually this operation is:=
=20
<font size=3D"+1"><pre>byte[i]&#xa0;=3D&#xa0;(left[i]&#xa0;&lt;&#xa0;right[=
i])&#xa0;?&#xa0;-1&#xa0;:&#xa0;(left[i]&#xa0;=3D=3D&#xa0;right[i])&#xa0;?&#=
xa0;0&#xa0;:&#xa0;1

</pre></font>
If the bytearray argument is &#xa0;NULL it will be allocated and returned. =
The allocator used is the one from the left argument.=20
If it is not &#xa0;NULL it will be assumed that it contains at least
<font size=3D"+1"><tt>GetSize(left)</tt></font>
positions available.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The arrays are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CompareScalar+\container133"></a> <font size=3D"+1"><b>Compa=
reScalar</b></font> <hr>


<font size=3D"+1"><pre>
char&#xa0;*(*CompareScalar)(const&#xa0;ValArray&#xa0;*left,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;E=
lementType&#xa0;right,&#xa0;char&#xa0;*bitarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each byte of the bitarray the result of comparing the elements o=
f the left array with the right argument.=20
Conceptually this operation is:=20

<font size=3D"+1"><pre>byte[i]&#xa0;=3D&#xa0;(left[i]&#xa0;&lt;&#xa0;right)=
&#xa0;?&#xa0;-1&#xa0;:&#xa0;(left[i]&#xa0;=3D=3D&#xa0;right)&#xa0;?&#xa0;0&=
#xa0;:&#xa0;1

</pre></font>
If the bitarray argument is &#xa0;NULL it will be allocated and returned. T=
he allocator used is the one from the left argument. If it is not &#xa0;NUL=
L it will be assumed that it contains at least
<font size=3D"+1"><tt>GetSize(left)</tt></font>
positions available.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CompareEqual+\container133"></a> <font size=3D"+1"><b>Compar=
eEqual</b></font> <hr>


<font size=3D"+1"><pre>
Mask&#xa0;*(*CompareEqual)(ValArray&#xa0;*left,ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;bi=
tarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each element of the mask the result of comparing the correspondi=
ng elements of the left and right arrays. Conceptually this operation is:=20
<font size=3D"+1"><pre>bit[i]&#xa0;=3D&#xa0;(left[i]&#xa0;=3D=3D&#xa0;right=
[i])

</pre></font>=20
If the bitarray argument is &#xa0;NULL it will be allocated and returned. T=
he allocator used is the global memory manager.=20
If it is not &#xa0;NULL it should contain at least enough positions to hold=
 the data.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given mask hasn&#x27;t enough positions available.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INCOMPATIBLE

 The arrays are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray passed or allocated, or &#xa0;NULL=
 if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CompareEqualScalar+\container133"></a> <font size=3D"+1"><b>=
CompareEqualScalar</b></font> <hr>


<font size=3D"+1"><pre>
Mask&#xa0;*(*CompareEqual)(ValArray&#xa0;*left,ElementType&#xa0;right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*b=
itarray);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each bit of the bitarray the result of comparing the elements of=
 the left array with the right argument.=20
Conceptually this operation is:=20

<font size=3D"+1"><pre>bit[i]&#xa0;=3D&#xa0;(left[i]&#xa0;=3D=3D&#xa0;right)

</pre></font>=20
If the bitarray argument is &#xa0;NULL it will be allocated and returned. T=
he allocator used is the one from the left argument. If it is not &#xa0;NUL=
L it will be assumed that it contains at least
<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>1+GetSize(left)/CHAR_BIT</tt></font>
<div class=3D"p"><!----></div>
positions available.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Contains+\container133"></a> <font size=3D"+1"><b>Contains</=
b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Contains)(ValArray&#xa0;*a,ElementType&#xa0;data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches the given data in the array. If any slice specifications are activ=
e, only the slice is searched.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
One if the given data is stored in the array, zero otherwise.=20

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Copy+\container133"></a> <font size=3D"+1"><b>Copy</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*Copy)(const&#xa0;ValArray&#xa0;*A);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
A copy of the given array is performed. The new memory will be allocated us=
ing the given array&#x27;s allocator. If any slice specifications are curre=
nt,=20
only the elements of the slice will be copied into the resulting vector, th=
at will have the size of the slice. Slice specifications are not copied.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>The new array.=20

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CopyTo+\container133"></a> <font size=3D"+1"><b>CopyTo</b></=
font> <hr>


<font size=3D"+1"><pre>
ElementType&#xa0;*(*CopyTo)(ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the whole contents of the given array into a table of newly allocate=
d elements. If a slice specification is active only the slice will be
returned.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A pointer to a table or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Create+\container133"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
ValArray&#xa0;*(*Create)(size_t&#xa0;capacity);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates an empty array with enough storage to hold <font size=3D"+1"><tt>ca=
pacity</tt></font> elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough storage to complete this operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the empty array or &#xa0;NULL if an error occur=
s.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CreateSequence+\container133"></a> <font size=3D"+1"><b>Crea=
teSequence</b></font> <hr>


<font size=3D"+1"><pre>
ValArray&#xa0;*(*CreateSequence)(size_t&#xa0;size,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;ElementType&#xa0;startValue,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;ElementType&#xa0;increment);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates an array with <font size=3D"+1"><tt>size</tt></font> elements and f=
ills it with elements of the ValArray data type starting with
the <font size=3D"+1"><tt>startValue</tt></font> argument, and increasing i=
t by the value of <font size=3D"+1"><tt>increment</tt></font> at each step.=
 The <font size=3D"+1"><tt>increment</tt></font> value can be negative or z=
ero. If it is zero the array is filled with the same value. This is equival=
ent to the <font size=3D"+1"><tt>Fill</tt></font> API<a href=3D"#tthFtNtAED=
" name=3D"tthFrefAED"><sup>43</sup></a>.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough storage to complete this operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the sequence or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"DivideBy+\container133"></a> <font size=3D"+1"><b>DivideBy</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideBy)(ValArray&#xa0;*left,ValArray&#=
xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Divides each element of the left argument by the corresponding element of t=
he right argument. Conceptually this operation is: <font size=3D"+1"><tt>le=
ft /=3D right</tt></font>.=20
If any of the elements of the right argument is zero, an error occurs and t=
he computation stops, leaving the left argument with some elements divided
and others not<a href=3D"#tthFtNtAEE" name=3D"tthFrefAEE"><sup>44</sup></a>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_DIVIDE_BY_ZERO

 The second argument has an element that is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"DivideByScalar+\container133"></a> <font size=3D"+1"><b>Divi=
deByScalar</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideByScalar)(ValArray&#xa0;*left,&#xa=
0;ElementType&#xa0;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Divides each element of the left argument by the right argument. Conceptual=
ly this operation is: <font size=3D"+1"><tt>left /=3D right</tt></font>. If=
 the right argument is zero
an error occurs and the left argument remains unchanged.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_DIVIDE_BY_ZERO

 The second argument is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"DivideScalarBy+\container133"></a> <font size=3D"+1"><b>Divi=
deScalarBy</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*DivideScalarBy)(ElementType&#xa0;left,&#=
xa0;ValArray&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Divides each element of the left argument by the right argument. Conceptual=
ly this operation is: <font size=3D"+1"><tt>right =3D left / right</tt></fo=
nt>. If the left argument is zero
an error occurs and the right argument remains unchanged.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_DIVIDE_BY_ZERO

 The first argument is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Equal+\container133"></a> <font size=3D"+1"><b>Equal</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Equal)(const&#xa0;ValArray&#xa0;*src1,const&#xa0;ValArray&#xa0;*=
src2);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns 1 if both arrays are equal, zero otherwise. It is legal to compare =
an array with &#xa0;NULL . If both arrays are &#xa0;NULL they compare equal=
. Any slice
definitions in the arrays must be equal. If equal, they restrict the number=
 of elements compared.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>True or false depending if the arrays are equal or not.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Erase+\container133"></a> <font size=3D"+1"><b>Erase</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(ValArray&#xa0;*AL,ElementType&#xa=
0;data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the vector the element that matches the given data.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOTFOUND

 No match was found.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that a match was found and the element was removed. If the element is n=
ot
in the ValArray the result value is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"EraseAll+\container133"></a> <font size=3D"+1"><b>EraseAll</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(ValArray&#xa0;*v,const&#xa0;vo=
id&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the array all elements that match the given data, that is assu=
med to be a pointer to an element.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred, or a positive value that indica=
tes that at least a match was found and the element was removed. If the=20
element is not in the list the result is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"EraseAt+\container133"></a> <font size=3D"+1"><b>EraseAt</b>=
</font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(ValArray&#xa0;*AL,size_t&#xa0;i=
dx);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Removes from the array the element at the given position. If a slice specif=
ication is defined for the array, the index is understood as an
index within the slice and not as an index in the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given vector pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurred or a positive value that indicat=
es that the element was removed.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"FCompare+\container133"></a> <font size=3D"+1"><b>FCompare</=
b></font> <hr>


<font size=3D"+1"><pre>
char&#xa0;*(*FCompare)(const&#xa0;ValArray&#xa0;*left,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ValArray&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;*bytearray,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;tolerance);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function is exactly like the Compare function but designed for compari=
ng floating point numbers. Direct comparison of floating point numbers are =
known to be problematic. This comparison will be realized within the tolera=
nce defined by the fourth parameter

<div class=3D"p"><!----></div>
The sample implementation uses the ideas of Donald Knuth
<a href=3D"#tthFtNtAEF" name=3D"tthFrefAEF"><sup>45</sup></a>
as implemeted by Theodore C. Belding
<a href=3D"#tthFtNtAEG" name=3D"tthFrefAEG"><sup>46</sup></a>
In the documentation of its software, Mr Belding writes:

<blockquote>
What is needed is a comparison operator that takes into account a
certain amount of uncertainty:

<font size=3D"+1"><pre>if&#xa0;(fabs(x&#xa0;-&#xa0;y)&#xa0;&lt;=3D&#xa0;eps=
ilon)&#xa0;{
&#xa0;&#xa0;/*&#xa0;code&#xa0;to&#xa0;be&#xa0;executed&#xa0;if&#xa0;x&#xa0;=
=3D=3D&#xa0;y&#xa0;*/
}

if&#xa0;(x&#xa0;-&#xa0;y&#xa0;&gt;&#xa0;epsilon)&#xa0;{
&#xa0;&#xa0;/*&#xa0;code&#xa0;to&#xa0;be&#xa0;executed&#xa0;if&#xa0;x&#xa0;=
&gt;&#xa0;y&#xa0;*/
}

if&#xa0;(x&#xa0;-&#xa0;y&#xa0;&lt;&#xa0;-epsilon)&#xa0;{
&#xa0;&#xa0;/*&#xa0;code&#xa0;to&#xa0;be&#xa0;executed&#xa0;if&#xa0;x&#xa0;=
&lt;&#xa0;y&#xa0;*/
}

</pre></font>
In the above code, a neighborhood is defined that extends a distance
epsilon to either side of y on the real number line.  If x falls
within epsilon of y, x is declared to be equal to y (the first case,
above).  If x is greater than y by an amount that is greater than
epsilon, x is declared to be greater than y (the second case, above).
If x is less than y by an amount that is greater than epsilon, x is
declared to be less than y (the third case, above).

<div class=3D"p"><!----></div>
The problem then becomes to determine an appropriate value of epsilon.
A fixed value of epsilon would not work for all x and y; epsilon
should be scaled larger or smaller depending on the magnitudes of the
numbers to be compared.

<div class=3D"p"><!----></div>
A floating point number is represented by two numbers, the significand
(also called the fraction or mantissa) and the exponent, and a sign,
where

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>0&#xa0;&lt;=3D&#xa0;significand&#xa0;&lt;&#xa0;1</tt>=
</font>=20

<div class=3D"p"><!----></div>
and=20

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>number =3D sign * significand * pow(2, exponent)</tt>=
</font>.

<div class=3D"p"><!----></div>
Knuth&#x27;s suggestion is to scale epsilon by the exponent of the larger o=
f the
two floating point numbers to be compared:

<div class=3D"p"><!----></div>
&#x2206; =3D  epsilon =D7maxExponent

<div class=3D"p"><!----></div>
where maxExponent is the exponent of max(x, y).  Delta can then be
substituted for epsilon in the code snippets above.


<div class=3D"p"><!----></div>
<font size=3D"+1"><b>Determining epsilon</b></font>

<div class=3D"p"><!----></div>
Now that we have found a way to scale epsilon to work with a wide
range of x and y, we still need to choose an appropriate epsilon,
before scaling. =20

<div class=3D"p"><!----></div>
If the number of binary digits of error, e, is known, then epsilon
can be calculated as follows:

<font size=3D"+1"><pre>epsilon&#xa0;=3D&#xa0;(pow(2,&#xa0;e)&#xa0;-&#xa0;1)=
&#xa0;*&#xa0;FLT_EPSILON&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;(for&#xa0;floats)
epsilon&#xa0;=3D&#xa0;(pow(2,&#xa0;e)&#xa0;-&#xa0;1)&#xa0;*&#xa0;DBL_EPSILO=
N&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;(for&#xa0;doubles)

</pre></font>
<font size=3D"+1"><tt>FLT_EPSILON</tt></font> and <font size=3D"+1"><tt>DBL=
_EPSILON</tt></font> are equivalent to 1 ulp for single- and
double-precision numbers, respectively; they are defined in the
standard C header file <font size=3D"+1"><tt>&lt;float.h&gt;</tt></font>. (=
An ulp is one unit in the last
place of the significand, or fraction part, of a floating point
number; see Knuth for more details.)
</blockquote>

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. The given byte array argument was &#xa0;NULL but there is no memory to al=
locate the result.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the bitarray or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"FillSequential+\container133"></a> <font size=3D"+1"><b>Fill=
Sequential</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*FillSequential)(ValArray&#xa0;*a,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;s=
tart,ElementType&#xa0;increment);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to all members of the array a sequence that starts at <font size=3D=
"+1"><tt>start</tt></font>, and is incremented by the given amount at each =
array position.
The start and increment arguments can hold any value without restrictions, =
unless they go beyond the maximum value allowed for the given data
type

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
No errors.=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
ValARray&#xa0;*myValARray&#xa0;=3D&#xa0;iValArray.Create(6);
iValArray.FillSequential(myValArray,5,2);
//&#xa0;Now&#xa0;the&#xa0;contents&#xa0;of&#xa0;myValArray&#xa0;are:
5,7,9,11,13,15

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Finalize+\container133"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the container, including the array header objec=
t itself.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive value means the operation completed.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"ForEach+\container133"></a> <font size=3D"+1"><b>ForEach</b>=
</font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*ForEach)(ValArray&#xa0;*src,ElementType&#xa0;(*ApplyFn)(ElementT=
ype));

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Applies the one argument <font size=3D"+1"><tt>ApplyFn</tt></font> to each =
element of the array and stores the result in that element.

<div class=3D"p"><!----></div>
<b>Returns:</b>Always 1<a href=3D"#tthFtNtAEH" name=3D"tthFrefAEH"><sup>47<=
/sup></a>.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Fprintf+\container133"></a> <font size=3D"+1"><b>Fprintf</b>=
</font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Fprintf)(ValArray&#xa0;*src,FILE&#xa0;*out,const&#xa0;char&#xa0;=
*fmt);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Prints in the indicated stream each element of the given array using the in=
dicated format string. If the array is empty nothing is printed and
the result is zero. There is a newline character appended to the output if =
the array wasn&#x27;t empty and no error occurred.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_EOF

 An output error occurred: impossible to write to the stream.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of characters written to the stream, zero if the array was empty=
, or a negative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetCapacity+\container133"></a> <font size=3D"+1"><b>GetCapa=
city</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetCapacity)(const&#xa0;ValArray&#xa0=
;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the number of elements the array can hold before  it needs to reall=
ocate its data.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
The array capacity.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetData+\container133"></a> <font size=3D"+1"><b>GetData</b>=
</font> <hr>


<font size=3D"+1"><pre>
ElementType&#xa0;*(*GetData)(const&#xa0;ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the data area of the container, or &#xa0;NULL if an er=
ror occurs.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_READONLY

 The container is read-only.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The given pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>The pointer to the array&#x27;s data or &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetElement+\container133"></a> <font size=3D"+1"><b>GetEleme=
nt</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*GetElement)(const&#xa0;ValArray&=
#xa0;*AL,size_t&#xa0;idx);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the value stored at the element with the given index.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INDEX

    The given position is out of bounds.

<div class=3D"p"><!----></div>
<b>Returns:</b>The element&#x27;s value or the minimum value that can be st=
ored in ElementType if the index is out of bounds.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetElementSize+\container133"></a> <font size=3D"+1"><b>GetE=
lementSize</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;size_t&#xa0;(*GetElementSize)(const&#xa0;ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the size of the elements stored in the ValArray. The argument is no=
t used and can be &#xa0;NULL .

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetRange+\container133"></a> <font size=3D"+1"><b>GetRange</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*GetRange)(const&#xa0;ValArray&#xa0=
;*AL,size_t&#xa0;start,size_t&#xa0;end);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Selects a series of consecutive elements starting at position start and end=
ing at position one less than end.
If start  &gt;  end or start  &gt;  Size(ValArray),  &#xa0;NULL is returned=
. If end is bigger than the number of elements in the array, only elements =
up to the number of elements will be used.
<div class=3D"p"><!----></div>
If a slice is active in the array, the arguments will be understood as indi=
ces in the slice and <b>not</b> in the original array.
<div class=3D"p"><!----></div>
The selected elements are copied into a new array. The original array remai=
ns unchanged.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>:
A pointer to a new ValArray containing the selected elements or &#xa0;NULL =
if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetSlice+\container133"></a> <font size=3D"+1"><b>GetSlice</=
b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*GetSlice)(ValArray&#xa0;*array,size_t&#xa0;*start,&#xa0;size_t&#=
xa0;*length,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*increment);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies into the given pointers the contents of the current slice specificat=
ions for the given array. If any of the given pointers is &#xa0;NULL nothin=
g is=20
copied into it and no error is issued. If the array has no slice specificat=
ion all fields will be set to zero if not &#xa0;NULL , and the result is ze=
ro.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
No errors

<div class=3D"p"><!----></div>
<b>Returns:</b>Zero if there isn&#x27;t any slice specification, a positive=
 number otherwise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
/*&#xa0;This&#xa0;expression&#xa0;allows&#xa0;you&#xa0;to&#xa0;determine&#x=
a0;if&#xa0;there&#xa0;
&#xa0;&#xa0;&#xa0;is&#xa0;a&#xa0;slice&#xa0;defined&#xa0;for&#xa0;a&#xa0;gi=
ven&#xa0;array&#xa0;*/
if&#xa0;(iValArray.GetSlice(myValArray,NULL,NULL,NULL))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;The&#xa0;array&#xa0;has&#xa0;a&#xa0;slice&#=
xa0;defined&#xa0;into&#xa0;it&#xa0;*/
}

</pre></font>

<div class=3D"p"><!----></div>
=20
<br><a name=3D"IndexIn+\container133"></a> <font size=3D"+1"><b>IndexIn</b>=
</font> <hr>


<font size=3D"+1"><pre>
ValArray&#xa0;*(*IndexIn)(const&#xa0;ValArray&#xa0;*source,ValArraySize_t&#=
xa0;*indices);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns an array built from indexing the first argument (=DFource&quot;) wi=
th the array of indexes =EFndices&quot; that should be an array of=20
size_t elements. The number of elements of the resulting array is equal to =
the number of elements of the indexes array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INDEX

 Any given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A new array or &#xa0;NULL if an error occurs. No partial results are return=
ed. If any index is out of bounds the whole operation fails.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"IndexOf+\container133"></a> <font size=3D"+1"><b>IndexOf</b>=
</font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*IndexOf)(const&#xa0;ValArray&#xa0;*l,ElementType&#xa0;data,size_=
t&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Searches for an element in the array. If found its zero based index is retu=
rned in the pointer &quot;result&quot;. Otherwise the result of the search =
is=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
. The =EBxtraArgs&quot; argument will be passed to the comparison function,=
 that is used to compare elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given array pointer or the element given are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if the element is found, or a negative number containing =
an error code or the negative constant=20
<font size=3D"-2">CONTAINER_ERROR_NOTFOUND</font>
.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"InitializeWith+\container133"></a> <font size=3D"+1"><b>Init=
ializeWith</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ValArray&#xa0;*(*InitializeWith)(size_t&#xa0;n,&#xa=
0;ElementType&#xa0;*data);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates and initializes a new ValArray with the given data table. The first=
 argument is the number of items in the table and the second
is a pointer to a storage area that should contain at least the given numbe=
r of items.=20
The data is copied into the new array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the new array or &#xa0;NULL if an error occurs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"InsertAt+\container133"></a> <font size=3D"+1"><b>InsertAt</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(ValArray&#xa0;*src,size_t&#xa0=
;idx,ElementType&#xa0;newData);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Inserts the new element. The new element will have the given index, that ca=
n go from zero to the vector count inclusive, i.e. one more than the number=
 of elements in the vector.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INDEX

 The given position is out of bounds.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to complete the operation.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation succeeded, or a negative error code if th=
e operation failed.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Inverse+\container133"></a> <font size=3D"+1"><b>Inverse</b>=
</font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Inverse)(ValArray&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes for each element the inverse (1/element) and stores it in-place.=20
If a slice definition is active only their elements will be used. If any of=
 the elements is
zero the computation stops and the result is an error code.

<div class=3D"p"><!----></div>
This function is defined for the floating point types only<a href=3D"#tthFt=
NtAEI" name=3D"tthFrefAEI"><sup>48</sup></a>.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_DIVISION_BY_ZERO

 One of the elements is zero.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if successful, a negative error code other=
wise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Max+\container133"></a> <font size=3D"+1"><b>Max</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Max)(const&#xa0;ValArray&#xa0;*s=
rc);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the biggest element in the container. If the container is empty it =
returns the smallest element that can be stored into the array&#x27;s data
type<a href=3D"#tthFtNtAEJ" name=3D"tthFrefAEJ"><sup>49</sup></a>.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Memset+\container133"></a> <font size=3D"+1"><b>Memset</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Memset)(ValArray&#xa0;*dst,ElementType&#=
xa0;data,size_t&#xa0;length);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Assigns to each element of the argument the given data. Conceptually this o=
peration is: <font size=3D"+1"><tt>dst =3D data</tt></font>. If a slice is =
active in the destination=20
array only the elements described by the slice are modified. If the given l=
ength is bigger than the number of elements in the array, the array
will be expanded to accomodate the new elements.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is not enough ressources to expand the array to the desired length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, a negative error code otherwi=
se.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Min+\container133"></a> <font size=3D"+1"><b>Min</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;ElementType&#xa0;(*Min)(const&#xa0;ValArray&#xa0;*s=
rc);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the smallest element in the container. If the container is empty it=
 returns the biggest element that can be stored into the array&#x27;s data
type<a href=3D"#tthFtNtAFA" name=3D"tthFrefAFA"><sup>50</sup></a>.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Mismatch+\container133"></a> <font size=3D"+1"><b>Mismatch</=
b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Mismatch)(const&#xa0;ValArray&#xa0;*left,const&#xa0;ValArray&#xa=
0;*a2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*mismatch);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the index of the first element that is different when comparing bot=
h arrays in the passed pointer <i>mismatch</i>. If one array is shorter tha=
n the other the comparison stops
when the last element from the shorter array is compared. The comparison st=
ops when the first difference is spotted.

<div class=3D"p"><!----></div>
If there are slice definitions in one or both arrays, they will be used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
If a mismatch is found the result is greater than zero and the <i>mismatch<=
/i> argument will contain the index of the first element that compared
unequal. This will be always the case for arrays of different length.

<div class=3D"p"><!----></div>
If both arrays are the same length and no differences are found the result =
is zero and the value pointed to by the
<i>mismatch</i> argument is one more than the length of the arrays.

<div class=3D"p"><!----></div>
If an error occurs, a negative error code is returned. The <i>mismatch</i> =
argument contains zero.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"MultiplyWith+\container133"></a> <font size=3D"+1"><b>Multip=
lyWith</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*MultiplyWith)(ValArray&#xa0;*left,ValArr=
ay&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Multiplies each element of the right argument with the corresponding elemen=
t of the left argument. Conceptually this operation is: <font size=3D"+1"><=
tt>left *=3D right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"MultiplyWithScalar+\container133"></a> <font size=3D"+1"><b>=
MultiplyWithScalar</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*MultiplyWithScalar)(ValArray&#xa0;*left,=
&#xa0;ElementType&#xa0;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Multiplies each element of the left argument with the right argument. Conce=
ptually this operation is: <font size=3D"+1"><tt>left *=3D right</tt></font=
>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None. Some implementations could detect a bad pointer.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Not+\container133"></a> <font size=3D"+1"><b>Not</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Not)(ValArray&#xa0;*v);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise Not operation of each element of the argument. Conceptua=
lly this operation is: <font size=3D"+1"><tt>v&#xa0;=3D&#xa0;~v</tt></font>=
. This operation is allowed only between unsigned integer types. For floati=
ng point data this operation has no=20
meaning. If a slice is active, only its elements will be affected.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Or+\container133"></a> <font size=3D"+1"><b>Or</b></font> <h=
r>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Or)(ValArray&#xa0;*left,const&#xa0;ValAr=
ray&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise or operation between each element of the right argument =
with the corresponding element of the left argument. Conceptually this
operation is: <font size=3D"+1"><tt>left&#xa0;|=3D&#xa0;right</tt></font>. =
This operation is allowed only between unsigned integer types. For floating=
 point data this operation has no=20
meaning. This operation will only affect the elements in the active slice, =
if a slice is active.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"OrScalar+\container133"></a> <font size=3D"+1"><b>OrScalar</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Or)(ValArray&#xa0;*left,ElementType&#xa0=
;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise or operation between each element of the left argument w=
ith the right argument. Conceptually this operation is: <font size=3D"+1"><=
tt>left&#xa0;|=3D&#xa0;right</tt></font>. This operation is allowed only be=
tween unsigned integer types. For floating point data this operation has no=
=20
meaning.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"PopBack+\container133"></a> <font size=3D"+1"><b>PopBack</b>=
</font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*PopBack)(ValArray&#xa0;*AL,ElementType&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies the last element into the given result buffer and deletes the elemen=
t from the container. If the result buffer is &#xa0;NULL , no copy is perfo=
rmed.
If a slice specification is active, the element deleted will be the last el=
ement of the slice, and the length of the slice will be reduced by one.
If the slice becomes empty, the slice specifications are reset.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative value if an error occurs, zero if the array is empty or greater =
than zero if the operation succeeded.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Product+\container133"></a> <font size=3D"+1"><b>Product</b>=
</font> <hr>


<font size=3D"+1"><pre>
ElementType&#xa0;(*Product)(ValArray&#xa0;*src);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Calculates the product of all the elements of the given vector. If a slice =
definition is active only the slice elements are considered.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None are mandatory but implementations should check for overflow when possi=
ble.

<div class=3D"p"><!----></div>
<b>Returns:</b>The product of the elements.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Reverse+\container133"></a> <font size=3D"+1"><b>Reverse</b>=
</font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Reverse)(ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reverses the order of the elements of the given array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Not enough memory for intermediate storage available

<div class=3D"p"><!----></div>
<b>Returns:</b>
A negative error code if an error occurs, or a positive value if the operat=
ion succeeded.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"ResetSlice+\container133"></a> <font size=3D"+1"><b>ResetSli=
ce</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*ResetSlice)(ValArray&#xa0;*array);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Eliminates any slices specifications from the given a=
rray.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>If a slice specification was removed returns 1, if no slice =
was defined in the given array returns zero.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"RotateLeft+\container133"></a> <font size=3D"+1"><b>RotateLe=
ft</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateLeft)(ValArray&#xa0;*src,size_t&#x=
a0;n);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates left the array by the indicated amount. The first n elements will b=
e written to the end of
the array, and the rest will be shifted left to fill the empty n places.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size).


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ValArrayInt&#xa0;*&#xa0;vIn=
t&#xa0;=3D&#xa0;iValArrayInt.CreateSequence(24,0,1);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Original&#xa0;=
array:&#xa0;\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,s=
tdout,&quot;%d&#xa0;&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Rotating&#xa0;=
left&#xa0;by&#xa0;4\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.RotateLeft(vIn=
t,4);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,s=
tdout,&quot;%d&#xa0;&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Rotating&#xa0;=
left&#xa0;by&#xa0;48\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.RotateLeft(vIn=
t,48);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,s=
tdout,&quot;%d&#xa0;&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Rotating&#xa0;=
left&#xa0;by&#xa0;55\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.RotateLeft(vIn=
t,55);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(vInt,s=
tdout,&quot;%d&#xa0;&quot;);

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Finalize(vInt);
}

OUTPUT
Original&#xa0;array:&#xa0;
0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#x=
a0;11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;=
20&#xa0;21&#xa0;22&#xa0;23&#xa0;
Rotating&#xa0;left&#xa0;by&#xa0;4
4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#xa0;11&#xa0;12&#xa0;13&#xa0;1=
4&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;20&#xa0;21&#xa0;22&#xa0;23&#=
xa0;0&#xa0;1&#xa0;2&#xa0;3&#xa0;
Rotating&#xa0;left&#xa0;by&#xa0;48
4&#xa0;5&#xa0;6&#xa0;7&#xa0;8&#xa0;9&#xa0;10&#xa0;11&#xa0;12&#xa0;13&#xa0;1=
4&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;20&#xa0;21&#xa0;22&#xa0;23&#=
xa0;0&#xa0;1&#xa0;2&#xa0;3&#xa0;
Rotating&#xa0;left&#xa0;by&#xa0;55
11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19&#xa0;20&=
#xa0;21&#xa0;22&#xa0;23&#xa0;0&#xa0;1&#xa0;2&#xa0;3&#xa0;4&#xa0;5&#xa0;6&#x=
a0;7&#xa0;8&#xa0;9&#xa0;10

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"RotateRight+\container133"></a> <font size=3D"+1"><b>RotateR=
ight</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*RotateRight)(ValArray&#xa0;*src,size_t&#=
xa0;n);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Rotates right the array by the indicated amount. The last n elements will b=
e written to the start of
the array, and the rest will be shifted right.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number if something was moved, zero otherwise (th=
e input was zero or a=20
modulo of the array size).

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Save+\container133"></a> <font size=3D"+1"><b>Save</b></font=
> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Save)(const&#xa0;ValArray&#xa0;*AL,&#xa0;FILE&#xa0;*out);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
The contents of the given ValArray are saved into the given stream. This fu=
nction is a simplified version of the Save function in the Vector container
since it doesn&#x27;t feature a save function. Since ValArrays hold primiti=
ve types they are saved in a single write into the output stream.
The output stream must be opened for writing and must be in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
EOF A disk input/output error occurred.

<div class=3D"p"><!----></div>

<b>Returns:</b>
A positive value if the operation completed, a negative value or EOF otherw=
ise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetCompareFunction+\container133"></a> <font size=3D"+1"><b>=
SetCompareFunction</b></font> <hr>


<font size=3D"+1"><pre>
CompareFunction&#xa0;(*SetCompareFunction)(ValArray&#xa0;*AL,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;f);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
This function does nothing and returns always &#xa0;NULL . It is retained f=
or compatibility purposes with other containers.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None

<div class=3D"p"><!----></div>
<b>Returns:</b>Always &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Select+\container133"></a> <font size=3D"+1"><b>Select</b></=
font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*Select)(ValArray&#xa0;*va,Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Using the given mask, the elements where the corresponding mask element is =
zero are eliminated, those with a mask
value different of zero are retained. The mask must have the same length as=
 the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The mask and the array are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value for success, or a negative error code other=
wise.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;Mask&#xa0;*m&#xa0;=3D&#xa0;iMask.Create(18);
&#xa0;&#xa0;&#xa0;&#xa0;ValArrayInt&#xa0;*va&#xa0;=3D&#xa0;iValArrayInt.Cre=
ateSequence(18,0,1);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;18;&#xa0;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iMask.Set(m,i,(i&amp;1)&#xa=
0;?&#xa0;0&#xa0;:&#xa0;1);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(va,stdout,&quot;%3d&#xa0;&quot=
;);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Select(va,m);
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.Fprintf(va,stdout,&quot;%3d&#xa0;&quot=
;);
}
OUTPUT:
0&#xa0;&#xa0;&#xa0;1&#xa0;&#xa0;&#xa0;2&#xa0;&#xa0;&#xa0;3&#xa0;&#xa0;&#xa0=
;4&#xa0;&#xa0;&#xa0;5&#xa0;&#xa0;&#xa0;6&#xa0;&#xa0;&#xa0;7&#xa0;&#xa0;&#xa=
0;8&#xa0;&#xa0;&#xa0;9&#xa0;&#xa0;10&#xa0;&#xa0;11&#xa0;&#xa0;12&#xa0;&#xa0=
;13&#xa0;&#xa0;14&#xa0;&#xa0;15&#xa0;&#xa0;16&#xa0;&#xa0;17
0&#xa0;&#xa0;&#xa0;2&#xa0;&#xa0;&#xa0;4&#xa0;&#xa0;&#xa0;6&#xa0;&#xa0;&#xa0=
;8&#xa0;&#xa0;10&#xa0;&#xa0;12&#xa0;&#xa0;14&#xa0;&#xa0;16&#xa0;

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SelectCopy+\container133"></a> <font size=3D"+1"><b>SelectCo=
py</b></font> <hr>


<font size=3D"+1"><pre>
ValArray&#xa0;*(*SelectCopy)(ValArray&#xa0;*va,Mask&#xa0;*m);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Using the given mask, the elements where the corresponding mask element is =
different from zero are copied into a new array, those with a mask
value different of zero are ignored. The mask must have the same length as =
the array.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The mask and the array are of different length.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value for success, or a negative error code other=
wise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SetSlice+\container133"></a> <font size=3D"+1"><b>SetSlice</=
b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*SetSlice)(ValArray&#xa0;*s,size_t&#xa0;start,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;size_t&#xa0;length,size_t&#xa0;increment);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Defines a slice for the given array. The slice starts at the given index, a=
nd has <font size=3D"+1"><tt>length</tt></font> elements. Between each elem=
ent and the next
there are <font size=3D"+1"><tt>increment</tt></font> positions. All operat=
ions done with the array will be done to the elements defined by the slice.

<div class=3D"p"><!----></div>
Constraints:

<ul>
<li> The <font size=3D"+1"><tt>start</tt></font> argument can&#x27;t be gre=
ater or equal than the number of elements in the array.
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>increment</tt></font> argument must be great=
er than zero
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>length</tt></font> argument must be greater =
than zero. If it is greater than the number of elements in the array or gre=
ater than the number of=20
elements that would fit with the given increment and start it will be adjus=
ted accordingly.
<div class=3D"p"><!----></div>
</li>
</ul>
If any slice specification was defined for the given array it will be repla=
ced by the new one.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One of the arguments doesn&#x27;t meet the above constraints.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

. There is no memory to allocate the slice specifications.

<div class=3D"p"><!----></div>
<b>Returns:</b>
Positive number if successful; negative error code otherwise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Size+\container133"></a> <font size=3D"+1"><b>Size</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total number of elements stored in the array. If there is a sli=
ce definition it will <font size=3D"+1"><tt>not</tt></font> be used. To kno=
w the size of a slice use the<font size=3D"+1"><tt>GetSlice</tt></font> API.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Sizeof+\container133"></a> <font size=3D"+1"><b>Sizeof</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the total size in bytes of the ValArray, including the header, and =
all data stored in it. If the argument is &#xa0;NULL , the size of the head=
er only is returned.

<div class=3D"p"><!----></div>
<b>Returns:</b>
The number of bytes used by the vector or the size of the ValArray header i=
f the argument is &#xa0;NULL .

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Sort+\container133"></a> <font size=3D"+1"><b>Sort</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Sort)(ValArray&#xa0;*AL);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sorts the given array. The order of the original array is destroyed. You sh=
ould copy it if you want to preserve it. If a slice specification is active
only the elements in the slice will be sorted.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 Temporary storage for the operation is absent.

<div class=3D"p"><!----></div>
<b>Returns:</b>
A positive number if sorting succeeded, a negative error code if not.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SubtractFrom+\container133"></a> <font size=3D"+1"><b>Subtra=
ctFrom</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractFrom)(ValArray&#xa0;*left,const&=
#xa0;ValArray&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Subtracts each element of the right argument from the corresponding element=
 of the left argument. Conceptually this operation is: <font size=3D"+1"><t=
t>left -=3D right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SubtractFromScalar+\container133"></a> <font size=3D"+1"><b>=
SubtractFromScalar</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractFromScalar)(ElementType&#xa0;lef=
t,ValArray&#xa0;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Subtracts from the left argument the right argument. Conceptually this oper=
ation is: <font size=3D"+1"><tt>right =3D left - right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SubtractScalarFrom+\container133"></a> <font size=3D"+1"><b>=
SubtractScalarFrom</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*SubtractScalarFrom)(ValArray&#xa0;*left,=
ElementType&#xa0;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Subtracts from the left argument the right argument. Conceptually this oper=
ation is: <font size=3D"+1"><tt>left -=3D right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SumTo+\container133"></a> <font size=3D"+1"><b>SumTo</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*SumTo)(ValArray&#xa0;*left,ValArray&#xa0=
;*right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds each element of the right argument to the corresponding element of the=
 left argument. Conceptually this operation is: <font size=3D"+1"><tt>left =
+=3D right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"SumToScalar+\container133"></a> <font size=3D"+1"><b>SumToSc=
alar</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*SumTo)(ValArray&#xa0;*left,ElementType&#=
xa0;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds each element of the left argument the right argument. Conceptually thi=
s operation is: <font size=3D"+1"><tt>left +=3D right</tt></font>.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
No errors.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Xor+\container133"></a> <font size=3D"+1"><b>Xor</b></font> =
<hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Xor)(ValArray&#xa0;*left,ValArray&#xa0;*=
right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise Xor operation between each element of the right argument=
 with the corresponding element of the left argument. Conceptually this ope=
ration is: <font size=3D"+1"><tt>left&#xa0;^=3D&#xa0;right</tt></font>. Thi=
s operation is allowed only between unsigned integer types. For floating po=
int data this operation has no=20
meaning.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_INCOMPATIBLE

 The arrays have a different number of elements.

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"XorScalar+\container133"></a> <font size=3D"+1"><b>XorScalar=
</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*XorScalar)(ValArray&#xa0;*left,ElementTy=
pe&#xa0;right);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Performs a bitwise Xor operation between each element of the left argument =
with the right argument. Conceptually this operation is: <font size=3D"+1">=
<tt>left&#xa0;^=3D&#xa0;right</tt></font>. This operation is allowed only b=
etween unsigned integer types. For floating point data this operation has n=
o=20
meaning.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

<b>Returns:</b>A positive number for success, or a negative error code.

<div class=3D"p"><!----></div>
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc14">
14</a>&#xa0;&#xa0;Buffers</h2>
<a name=3D"Buffers140"></a>
The buffers interface is greatly simplified compared to the interface of a =
general container.=20
The usage of a buffer as an intermediate storage means there is no sense in=
 including all  the functionality of a container. The library provides two=
=20
types:

<ol type=3D"1">
<li> Stream buffers provide linear storage that grows automatically as need=
ed.
<div class=3D"p"><!----></div>
</li>

<li> Circular buffers store the last n items of a stream
<div class=3D"p"><!----></div>
</li>
</ol>
Other languages provide similar features:

<ul>
<li> The Java language provides a typed buffer functionality. This buffers =
are not resizable, have a cursor and other more sophisticated operations=20
than the buffers proposed here like slicing and compacting.Their place in t=
he Java class hierarchy is: Object &#x2192; Native I/O &#x2192;=20
ByteBuffer. There are methods for viewing the buffer as float, doubles, etc.
<div class=3D"p"><!----></div>
</li>

<li> The C# language provides also a typed buffer class of the primitive ty=
pes (char, float, int, etc). It is called System.Buffer and provides a few=
=20
methods for determining its length and read/write a single byte. The langua=
ge itself doesn&#x27;t provide any circular buffers class but several=20
implementations are available in the net. The same situation applies for Ja=
va.
<div class=3D"p"><!----></div>
</li>

<li> The C++ STL doesn&#x27;t provide circular buffers directly but the <fo=
nt size=3D"+1"><tt>boost</tt></font> C++ library does provide an implementa=
tion. See:

<div class=3D"p"><!----></div>
<font size=3D"-1">http://www.boost.org/doc/libs/1_48_0/libs/circular_buffer=
/doc/circular_buffer.html</font>

<div class=3D"p"><!----></div>
In the usual simplicity of that language, the class has around 60 entry poi=
nts, including specialized templates for some functions. Around 14 auxiliar=
y=20
types are involved and the documentation for this component goes for around=
 50 pages. That is the exact opposite of this proposal.
<div class=3D"p"><!----></div>
</li>
</ul>
The design objective in this library is to keep buffers small and, while pr=
oviding functionality, reduce the interface to a minimum. Compacting is not=
=20
feasible in C due to the wide use of pointers. If there is a pointer to the=
 data in the buffer, moving it would invalidate the pointer making for hard=
=20
to debug crashes <a href=3D"#tthFtNtAFB" name=3D"tthFrefAFB"><sup>51</sup><=
/a>.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc14.1">
14.1</a>&#xa0;&#xa0;Stream buffers</h3>

<div class=3D"p"><!----></div>
<img alt=3D"Figure" src=3D"StreamBuffer.png">
<div class=3D"p"><!----></div>
This objects are designed to store sequentially arbitrary data, resizing th=
emselves as necessary. There is a cursor, a pointer that indicates where=20
the next data item will be written. You can move the cursor, overwriting ol=
d data, or leaving holes in the buffer structure
<a href=3D"#tthFtNtAFC" name=3D"tthFrefAFC"><sup>52</sup></a>
. =20

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc14.1.1">
14.1.1</a>&#xa0;&#xa0;The interface</h4>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagStreamBufferInterface&#x=
a0;{
&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(StreamBuffer&#xa0;*b);
&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*(*Create)(size_t&#xa0;startsize);
&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*(*CreateFromFile)(const&#xa0;char&#xa0=
;*FileName);
&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*(*CreateWithAllocator)(size_t&#xa0;sta=
rtsize,
&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(StreamBuffer&#xa0;*b);
&#xa0;&#xa0;&#xa0;char&#xa0;*(*GetData)(const&#xa0;StreamBuffer&#xa0;*b);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetPosition)(const&#xa0;StreamBuffer&#xa0;*=
b);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Read)(StreamBuffer&#xa0;*b,&#xa0;void&#xa0;=
*data,&#xa0;size_t&#xa0;siz);
&#xa0;&#xa0;&#xa0;int&#xa0;(*ReadFromFile)(StreamBuffer&#xa0;*b,FILE&#xa0;*=
f);
&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(StreamBuffer&#xa0;*b,size_t&#xa0;newSi=
ze);
&#xa0;&#xa0;&#xa0;int&#xa0;(*SetPosition)(StreamBuffer&#xa0;*b,size_t&#xa0;=
pos);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;StreamBuffer&#xa0;*b);
&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Write)(StreamBuffer&#xa0;*b,void&#xa0;*data=
,&#xa0;size_t&#xa0;siz);
&#xa0;&#xa0;&#xa0;int&#xa0;(*WriteToFile)(StreamBuffer&#xa0;*b,FILE&#xa0;*f=
);
}&#xa0;StreamBufferInterface;

</pre></font>


      <h4><a name=3D"tth_sEc14.1.2">
14.1.2</a>&#xa0;&#xa0;The API</h4>
Noteworthy are the two functions that work with with buffers and files: <fo=
nt size=3D"+1"><tt>ReadFromFile</tt></font> and <font size=3D"+1"><tt>Write=
ToFile</tt></font>. The allow you to work with a buffer when the file can&#=
x27;t be read in one buffer, allowing
piecewise processing of portions of the file.=20

<div class=3D"p"><!----></div>
The function <font size=3D"+1"><tt>CreateFromFile</tt></font> allows you to=
 read all the file contents into a buffer.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container141"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(StreamBuffer&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the cursor at position zero and zeroes the whole buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given buffer pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if successful, a negative error code otherw=
ise.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"Create+\container141"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*(*Create)(size_t&#xa0;startsize);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new buffer with the given start size. If the size is zero it will=
 use a default start value. The allocator used is the current memory manage=
r.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. There is no more memory to create the buffer.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a newly created buffer or &#xa0;NULL if there i=
s no more memory left.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"CreateFromFile+\container141"></a> <font size=3D"+1"><b>Crea=
teFromFile</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*(*CreateFromFile)(const&#xa0;cha=
r&#xa0;*FileName);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new buffer with the contents of the given file. The allocator use=
d is the current memory manager. The file is read in binary mode.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. There is no more memory to create the buffer.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOENT

 The file given can&#x27;t be found (or it exists but the current user has =
no read permission).

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a newly created buffer or &#xa0;NULL if there i=
s no more memory left or the file can&#x27;t be opened.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CreateWithAllocator+\container141"></a> <font size=3D"+1"><b=
>CreateWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
StreamBuffer&#xa0;*(*CreateWithAllocator)(size_t&#xa0;startsize,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Con=
tainerAllocator&#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates a new buffer using the given allocator and start size. If the start=
 size is zero a default value is used.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

 There is no more memory to complete the operation.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the new buffer or &#xa0;NULL if there is no mem=
ory left.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container141"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(StreamBuffer&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Releases all memory used by the buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given buffer pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if successful or anegative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"GetData+\container141"></a> <font size=3D"+1"><b>GetData</b>=
</font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;char&#xa0;*(*GetData)(const&#xa0;StreamB=
uffer&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns a pointer to the data stored in the buffer. The data is read-only (=
const).

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given buffer pointer is &#xa0;NULL=20


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given buffer is not modified. The returned pointer should not be modifi=
ed.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to the buffer&#x27;s data or NULL, if an error occ=
urs.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"GetPosition+\container141"></a> <font size=3D"+1"><b>GetPosi=
tion</b></font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*GetPosition)(const&#xa0;StreamBuffer&=
#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Returns the current cursor position.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The stream buffer pointer is &#xa0;NULL=20


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The stream buffer is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>The cursor position or zero if there is an error. Note that =
zero is also a valid cursor position.<a href=3D"#tthFtNtAFD" name=3D"tthFre=
fAFD"><sup>53</sup></a>

=20
<div class=3D"p"><!----></div>
<br><a name=3D"Read+\container141"></a> <font size=3D"+1"><b>Read</b></font=
> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Read)(StreamBuffer&#xa0;*b,&#xa0;void=
&#xa0;*data,&#xa0;size_t&#xa0;siz);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reads <i>siz</i> bytes from the given buffer, starting from the position of=
 the cursor. If the buffer finishes before <i>siz</i> characters are
read, reading stops, and less characters than requested are returned. It is=
 assumed that the <i>data</i> buffer contains at least <i>siz</i>=20
characters.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 Either the stream buffer, the data buffer are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
None. The given buffer is modified since the cursor is updated to the new p=
osition. The given buffer is modified since the data is copied=20
into it.

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of characters copied or zero if there is an error=
. Note that if the number of requested characters is zero, this function
will also return zero.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"ReadFromFile+\container141"></a> <font size=3D"+1"><b>ReadFr=
omFile</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*ReadFromFile)(StreamBuffer&#xa0;*b,FILE&#xa0;*f);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Fills the given buffer with data from the given file. The cursor is reset t=
o position zero.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The stream buffer pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of bytes read or a negative error code.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Resize+\container141"></a> <font size=3D"+1"><b>Resize</b></=
font> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;int&#xa0;(*Resize)(StreamBuffer&#xa0;*b,size_t&#xa0;newSi=
ze);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Resizes the buffer to the requested size. The new size can be bigger or sma=
ller than the current size. All pointers to the data in the buffer=20
are invalid after this operation.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The stream buffer pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEMORY

 There is not enough memory to satisfy the request.

<div class=3D"p"><!----></div>
<b>Returns:</b>A negative error code if an error occurs, zero if the reques=
ted size is equal to the current size, or a positive number
if the request was satisfied.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"SetPosition+\container141"></a> <font size=3D"+1"><b>SetPosi=
tion</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*SetPosition)(StreamBuffer&#xa0;*b,&#xa0;size_t&#xa0;pos);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Sets the cursor at the given position. If the position is bigger than the s=
ize of the buffer the cursor is moved to the end of the buffer.

<div class=3D"p"><!----></div>

  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The given buffer pointer is &#xa0;NULL=20

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if successful, a negative error code otherw=
ise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Size+\container141"></a> <font size=3D"+1"><b>Size</b></font=
> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Size)(const&#xa0;StreamBuffer&#xa0;*b);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b> Returns the allocated size of the buffer. If the buff=
er pointer is &#xa0;NULL returns the size of the buffer header.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>
None


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given buffer is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>The size of the buffer.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Write+\container141"></a> <font size=3D"+1"><b>Write</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Write)(StreamBuffer&#xa0;*b,void&#xa0=
;*data,&#xa0;size_t&#xa0;siz);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Writes into the buffer <i>siz</i> characters from the passed pointer <i>dat=
a</i>. The characters are written starting at the cursor
position. If the buffer is too small to hold the data, it will be enlarged =
using its allocator.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_NOMEMORY

. There is no more memory to enlarge the buffer.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_BADARG

 The stream buffer pointer or the data pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of characters written.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;StreamBuffer&#xa0;*sb&#xa0;=
=3D&#xa0;iStreamBuffer.Create(10);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[20],*p;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;=
10;&#xa0;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;sprintf(buf,&quot;item&#xa0;%d&quot;,i+1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;iStreamBuffer.Write(sb,buf,1+strlen(buf));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;buf[0]=3D0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iStreamBuffer.Write(sb,&amp=
;buf,1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;Buffer&#xa0;si=
ze&#xa0;is:&#xa0;%d,&#xa0;position&#xa0;is&#xa0;%d\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;(int)iStreamBuffer.Size(sb),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;(int)&#xa0;iStreamBuffer.GetPosition(sb));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iStreamBuffer.SetPosition(s=
b,0);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;=3D&#xa0;iStreamBuff=
er.GetData(sb);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(*p)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\n&quot;,p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;p&#xa0;+=3D&#xa0;1&#xa0;+&#xa0;strlen(p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iStreamBuffer.Finalize(sb);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}
OUTPUT:
Buffer&#xa0;size&#xa0;is:&#xa0;82,&#xa0;position&#xa0;is&#xa0;72
item&#xa0;1
item&#xa0;2
item&#xa0;3
item&#xa0;4
item&#xa0;5
item&#xa0;6
item&#xa0;7
item&#xa0;8
item&#xa0;9
item&#xa0;10

</pre></font>
This example does the following:

<ul>
<li> Creates a stream buffer. It assumes success and does not test the retu=
rn value of the creation function. The buffer is dimensioned too small=20
for the data it will contain so it has to resize several times.
<div class=3D"p"><!----></div>
</li>

<li> Prepares a string buffer with sprintf and writes the resulting string =
including its terminating zero in the stream buffer. Note that
zeroes have no special significance in buffers. It loops ten times doing th=
is operation.
<div class=3D"p"><!----></div>
</li>

<li> It ends the buffer with a terminating double zero.
<div class=3D"p"><!----></div>
</li>

<li> It prints the buffer size and the number of characters it has written.=
 Note that they are not the same. The buffer has been resized=20
several times, and at each time the new capacity is determined by an intern=
al algorithm. Since we did not move the cursor the position of the
cursor give us the number of characters written.
<div class=3D"p"><!----></div>
</li>

<li> It obtains a pointer to the data in the buffer
<div class=3D"p"><!----></div>
</li>

<li> It prints all the strings in the buffer to standard output. Each chara=
cter string from 1 to 9 is 7 bytes long, including its terminating zero.
The tenth string is 9 bytes, also including the terminating zero. We have t=
hen: (7*9)+9 =3D 72.
<div class=3D"p"><!----></div>
</li>

<li> It destroys the buffer.
<div class=3D"p"><!----></div>
</li>
</ul>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"WriteToFile+\container141"></a> <font size=3D"+1"><b>WriteTo=
File</b></font> <hr>


<font size=3D"+1"><pre>
int&#xa0;(*WriteToFile)(StreamBuffer&#xa0;*b,FILE&#xa0;*outfile);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Writes all the contents of the given buffer to the given file. The cursor i=
s reset to the begin of the buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The stream buffer pointer or the file pointer is&#xa0;NULL=20
returns The number of bytes written.

     <h3><a name=3D"tth_sEc14.2">
14.2</a>&#xa0;&#xa0;Circular buffers</h3>
<img alt=3D"Figure" src=3D"Circular.png">
<div class=3D"p"><!----></div>
This objects are designed to store the last n items of a stream. When they =
are full, the new items are stored in the same place as the oldest
item <a href=3D"#tthFtNtAFE" name=3D"tthFrefAFE"><sup>54</sup></a>.=20

      <h4><a name=3D"tth_sEc14.2.1">
14.2.1</a>&#xa0;&#xa0;The interface: iCircularBuffer</h4>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;tagCircularBufferInterface&=
#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(&#xa0;CircularBuffer&#xa0;*&#xa0;b,=
&#xa0;const&#xa0;void&#xa0;*data_element);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(CircularBuffer&#xa0;*cb);
&#xa0;&#xa0;&#xa0;&#xa0;CircularBuffer&#xa0;*(*CreateWithAllocator)(size_t&=
#xa0;sizElement,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;sizeBuffer,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*allocator=
);
&#xa0;&#xa0;&#xa0;&#xa0;CircularBuffer&#xa0;*(*Create)(size_t&#xa0;sizEleme=
nt,size_t&#xa0;sizeBuffer);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(CircularBuffer&#xa0;*cb);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PopFront)(CircularBuffer&#xa0;*b,void&#x=
a0;*result);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*PeekFront)(CircularBuffer&#xa0;*b,void&#=
xa0;*result);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;CircularBuffer&#xa0;=
*cb);
&#xa0;&#xa0;&#xa0;&#xa0;DestructorFunction&#xa0;SetDestructor(CircularBuffe=
r&#xa0;*cb,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;DestructorFunction&#xa0;NewFn);
}&#xa0;CircularBufferInterface;

</pre></font>

      <h4><a name=3D"tth_sEc14.2.2">
14.2.2</a>&#xa0;&#xa0;The API</h4>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Add+\container142"></a> <font size=3D"+1"><b>Add</b></font> =
<hr>


<font size=3D"+1"><pre>
	int&#xa0;(*Add)(&#xa0;CircularBuffer&#xa0;*&#xa0;b,&#xa0;const&#xa0;void&#=
xa0;*data_element);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Adds the given data element to the circular buffer. If the buffer is full, =
the oldest element&#x27;s place will be overwritten with the new data
and the container remains full with the same number of elements.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given data element is not modified but copied into the container.

<div class=3D"p"><!----></div>
<b>Returns:</b>A negative error code if an error occurs. If the container i=
s full zero is returned. If a new element was added a positive number is re=
turned.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Clear+\container142"></a> <font size=3D"+1"><b>Clear</b></fo=
nt> <hr>


<font size=3D"+1"><pre>
	int&#xa0;(*Clear)(CircularBuffer&#xa0;*cb);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Resets the number of elements inside the container to empty without freeein=
g the memory used by the buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The buffer pointer b is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A negative error code if an error occurs, or a positive numb=
er when the container is reset.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"CreateWithAllocator+\container142"></a> <font size=3D"+1"><b=
>CreateWithAllocator</b></font> <hr>


<font size=3D"+1"><pre>
	CircularBuffer&#xa0;*(*CreateWithAllocator)(size_t&#xa0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;sizeBuffer,&#xa0;ContainerAllocator&=
#xa0;*allocator);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates an empty circular buffer that can hold at most sizeBuffer elements,=
 each element being of size ElementSize. Uses the given allocator
to allocate memory.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both sizes are zero, or the allocator pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEM

 There is no memory left.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new circular buffer or &#xa0;NULL if an error=
 occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Create+\container142"></a> <font size=3D"+1"><b>Create</b></=
font> <hr>


<font size=3D"+1"><pre>
	CircularBuffer&#xa0;*(*Create)(size_t&#xa0;ElementSize,&#xa0;size_t&#xa0;s=
izeBuffer);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Creates an empty circular buffer that can hold at most sizeBuffer elements,=
 each element being of size ElementSize. Uses the CurrentAllocator
to allocate memory.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 One or both arguments are zero.

<div class=3D"p"><!----></div>
CONTAINER_ERROR_NOMEM

 There is no memory left.

<div class=3D"p"><!----></div>
<b>Returns:</b>A pointer to a new circular buffer or &#xa0;NULL if an error=
 occurs.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Finalize+\container142"></a> <font size=3D"+1"><b>Finalize</=
b></font> <hr>


<font size=3D"+1"><pre>
	int&#xa0;(*Finalize)(CircularBuffer&#xa0;*cb);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Reclaims all memory used by the given buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The buffer pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A positive value if the container is destroyed, a negative e=
rror code otherwise.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"PeekFront+\container142"></a> <font size=3D"+1"><b>PeekFront=
</b></font> <hr>


<font size=3D"+1"><pre>
	int&#xa0;(*PeekFront)(CircularBuffer&#xa0;*b,void&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies one item from the front of the circular buffer into the given buffer=
 without removing the item from the container.=20

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The buffer pointer or the result buffer are &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A negative error code if an error occurs, zero if the buffer=
 was empty, or a positive number if an item was copied.

<div class=3D"p"><!----></div>
=20
<br><a name=3D"PopFront+\container142"></a> <font size=3D"+1"><b>PopFront</=
b></font> <hr>


<font size=3D"+1"><pre>
	int&#xa0;(*PopFront)(CircularBuffer&#xa0;*b,void&#xa0;*result);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Copies one item from the front of the circular buffer into the given buffer=
 and removes the item from the container. If the result pointer is &#xa0;NU=
LL=20
the item is removed but nothing is copied.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The buffer pointer is &#xa0;NULL .

<div class=3D"p"><!----></div>
<b>Returns:</b>A negative error code if an error occurs, zero if the buffer=
 was empty, or a positive number if an item was removed.


<div class=3D"p"><!----></div>
<b>Example:</b>

<font size=3D"+1"><pre>
#include&#xa0;&lt;containers.h&gt;
int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;CircularBuffer&#xa0;*cb&#xa0;=3D&#xa0;iCircularBuff=
er.Create(sizeof(int),10);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i,integer;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;20;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iCircularBuffer.Add(cb,&amp=
;i);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;There&#xa0;are&#xa0;%d&#xa0;elements\n=
&quot;,iCircularBuffer.Size(cb));
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;The&#xa0;container&#xa0;uses&#xa0;%d&#=
xa0;bytes\n&quot;,iCircularBuffer.Sizeof(cb));
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;The&#xa0;size&#xa0;of&#xa0;the&#xa0;he=
ader&#xa0;is&#xa0;%d\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;iCircularBuffer.Sizeof(NULL));
&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Print&#xa0;all&#xa0;elements&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(iCircularBuffer.PopFront(cb,&amp;intege=
r)&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%d&#xa0;&quot;=
,integer);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}
OUTPUT:
There&#xa0;are&#xa0;10&#xa0;elements
The&#xa0;container&#xa0;uses&#xa0;88&#xa0;bytes
The&#xa0;size&#xa0;of&#xa0;the&#xa0;header&#xa0;is&#xa0;48
10&#xa0;11&#xa0;12&#xa0;13&#xa0;14&#xa0;15&#xa0;16&#xa0;17&#xa0;18&#xa0;19

</pre></font>
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Size+\container142"></a> <font size=3D"+1"><b>Size</b></font=
> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Size)(const&#xa0;CircularBuffer&#xa0;*cb);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of items in the given circular buffer.

<div class=3D"p"><!----></div>
  <b>Errors:</b>
<div class=3D"p"><!----></div>

CONTAINER_ERROR_BADARG

 The buffer pointer is &#xa0;NULL .


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
The given buffer is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of items in the buffer.
=20
<div class=3D"p"><!----></div>
<br><a name=3D"Sizeof+\container142"></a> <font size=3D"+1"><b>Sizeof</b></=
font> <hr>


<font size=3D"+1"><pre>
size_t&#xa0;(*Sizeof)(const&#xa0;CircularBuffer&#xa0;*cb);

</pre></font>

<div class=3D"p"><!----></div>
  <b>Description:</b>=20
Computes the number of bytes used by given circular buffer. If the pointer =
is &#xa0;NULL returns the size of the circular buffer header structure.


<div class=3D"p"><!----></div>
 <b>Invariants:</b>
the given buffer is not modified.

<div class=3D"p"><!----></div>
<b>Returns:</b>The number of bytes used by the buffer.
<br clear=3D"LEFT"><br><br>

 <h2><a name=3D"tth_sEc15">
15</a>&#xa0;&#xa0;The generic interfaces</h2>
This interface allows the user to use containers in a generic way, ignoring=
 its specific type.
Note that there is no &quot;GenericContainer&quot; object; you can&#x27;t c=
reate any generic container. Once a specific container is created, it can b=
e used as a generic container at any time since all containers comply with =
the generic interface. This interface just dispatches internally to the act=
ual container and therefore incurs in a slight performance cost.
<a href=3D"#tthFtNtAFF" name=3D"tthFrefAFF"><sup>55</sup></a>

<div class=3D"p"><!----></div>
Conceptually, the generic interfaces represent a base class (GenericContain=
er) and two derived classes: Sequential and Associative containers.
It would be possible to derive more classes, for instance a numeric contain=
er class that could be implemented in the future, This is left open for fut=
ure releases of this specification.
<a href=3D"#tthFtNtAFG" name=3D"tthFrefAFG"><sup>56</sup></a>

     <h3><a name=3D"tth_sEc15.1">
15.1</a>&#xa0;&#xa0;Generic containers</h3>
The general generic interface that encloses associative and sequential cont=
ainers is as follows:
<a name=3D"iGenericContainer151"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;GenericContainer&#xa0;Gener=
icContainer;
typedef&#xa0;struct&#xa0;tagGenericContainerInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;GenericContainer&#xa=
0;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(GenericContainer&#xa0;*Ge=
n);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(GenericContainer&#xa0;*Ge=
n,unsigned&#xa0;flags);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(GenericContainer&#xa0;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(GenericContainer&#xa0;*Gen,voi=
d&#xa0;*Value);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(GenericContainer&#xa0;*Gen,void&#=
xa0;*objectToDelete);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Finalize)(GenericContainer&#xa0;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;(*Apply)(GenericContainer&#xa0;*Gen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Applyfn)(void&#xa0;*,void&#xa0;=
*&#xa0;arg),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Equal)(GenericContainer&#xa0;*Gen1,Gener=
icContainer&#xa0;*Gen2);
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainer&#xa0;*(*Copy)(GenericContainer&#xa=
0;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;(*SetErrorFunction)(GenericConta=
iner&#xa0;*Gen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;ErrorFunction&#xa0;fn);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Sizeof)(GenericContainer&#xa0;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*(*NewIterator)(GenericContainer&#xa0=
;*Gen);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*deleteIterator)(Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Save)(GenericContainer&#xa0;*Gen,FILE&#x=
a0;*stream,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;SaveFunction&#xa0;saveFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainer&#xa0;*(*Load)(FILE&#xa0;*stream,&#=
xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ReadFunction&#xa0;readFn,void&#xa0;*arg);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;GetElementSize(GenericContainer&#xa0;*G=
en);
}&#xa0;GenericContainerInterface;
extern&#xa0;GenericContainerInterface&#xa0;iGenericContainer;

</pre></font>
This functions return the obvious results already described in the document=
ation of their container-specific counterparts and not repeated here. We on=
ly note the absence of a creation function, or any means to add an object.
<a href=3D"#tthFtNtAFH" name=3D"tthFrefAFH"><sup>57</sup></a>

<div class=3D"p"><!----></div>
Based on the generic interface, we have generic sequential and associative =
interfaces. They contain generic functions for adding and removing objects.

     <h3><a name=3D"tth_sEc15.2">
15.2</a>&#xa0;&#xa0;Sequential containers</h3>
These containers include all the functions of the GenericContainer interfac=
e, adding functions to use any sequential container as a stack, and functio=
ns for managing object replacement or addition.
<a name=3D"iSequentiaContainer152"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;SequentialContainer&#xa0;Se=
quentialContainer;
typedef&#xa0;struct&#xa0;tagSequentialContainerInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainerInterface&#xa0;Generic;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(SequentialContainer&#xa0;*SC,void&#=
xa0;*Element);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(SequentialContainer&#xa0;*=
SC,size_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Push)(SequentialContainer&#xa0;*Gen,void=
&#xa0;*Element);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Pop)(SequentialContainer&#xa0;*Gen,void&=
#xa0;*result);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*InsertAt)(SequentialContainer&#xa0;*SC,s=
ize_t&#xa0;idx,&#xa0;void&#xa0;*newval);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAt)(SequentialContainer&#xa0;*SC,si=
ze_t&#xa0;idx);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*ReplaceAt)(SequentialContainer&#xa0;*SC,=
&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx,&#xa0;vo=
id&#xa0;*element);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*IndexOf)(SequentialContainer&#xa0;*SC,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ElementToFind,size_t&#xa0=
;*result);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Append)(SequentialContainer&#xa0;*SC1,Se=
quentialContainer&#xa0;*SC2);
}&#xa0;SequentialContainerInterface;
extern&#xa0;SequentialContainerInterface&#xa0;iSequentialContainer;

</pre></font>

     <h3><a name=3D"tth_sEc15.3">
15.3</a>&#xa0;&#xa0;Associative containers</h3>
These containers include all the functions of the GenericContainer interfac=
es and add functions for inserting and removing objects.
<a name=3D"iAssociativeContainer153"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;AssociativeContainer&#xa0;A=
ssociativeContainer;
typedef&#xa0;struct&#xa0;tagAssociativeContainerInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainerInterface&#xa0;Generic;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Add)(SequentialContainer&#xa0;*SC,void&#=
xa0;*key,void&#xa0;*Element);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetElement)(AssociativeContainer&#xa0;=
*SC,void&#xa0;*Key);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Replace)(AssociativeContainer&#xa0;*SC,&=
#xa0;void&#xa0;*Key,&#xa0;void&#xa0;*element);
}&#xa0;AssociativeContainerInterface;
extern&#xa0;AssociativeContainerInterface&#xa0;iAssociativeContainer;

</pre></font>=20

 <h1><a name=3D"tth_chAp6">
Chapter 6 </a><br>Enhancing the library</h1>
No design can ever cover all special cases that can arise during developmen=
t. The advantage of the interface design is that you can enhance the librar=
y by subclassing functions that add functionality you need when absent.
Subclassing means in this context that you replace a function of the librar=
y with a new function written by you that either replaces completely the fu=
nctionality of the library or that either before or after the library funct=
ion adds some code that implements an enhancement.

<div class=3D"p"><!----></div>
There are several ways to enhance the library in this way:

<ol type=3D"1">
<li> Replace the function in the container interface object. This affects a=
ll containers of this type, including those that are already created. This =
involves simply assigning to the function you want to replace a new functio=
n pointer that points to a compatible function. You can save the old value =
and add some functionality, call the old function pointer to do what the li=
brary does, then you can add code that runs after the old library function =
has finished.
<div class=3D"p"><!----></div>
</li>

<li> Replace the function in a copy of the functions table of a single obje=
ct. This way is less intrusive than the former, since only one container is=
 affected: the one where you modify the function table. The downside is tha=
t instead of using the simple syntax:
<div class=3D"p"><!----></div>
 <font size=3D"+1"><tt>iList.Add</tt></font>=20
<div class=3D"p"><!----></div>
 you have to use the container&#x27;s table:
<div class=3D"p"><!----></div>
 <font size=3D"+1"><tt>Container-&gt;VTable-&gt;Add(...)</tt></font>=20
<div class=3D"p"><!----></div>
 This represents quite a different syntax, but this can be less of a proble=
m if you hide it under some convenient macros <a href=3D"#tthFtNtAFI" name=
=3D"tthFrefAFI"><sup>58</sup></a>.

<div class=3D"p"><!----></div>
On the up side, another advantage of this syntax is that you do not need to=
 change your source code if you change the type of the container. If you wr=
ite:=20
<div class=3D"p"><!----></div>
  <font size=3D"+1"><tt>myContainer-&gt;Vtable-&gt;Add(myContainer,object);=
</tt></font>
<div class=3D"p"><!----></div>
  this will stay the same for lists, arrays, string collections or whatever=
 sequential container you are using. You can then change completely the typ=
e of the container just by changing the declaration.
<div class=3D"p"><!----></div>
</li>
</ol>

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Adding conversions between containers</h2>
Converting one type of container into another, or creating a new container =
with some or all the data of an existing one are routine operations not
specified in the core library.

<div class=3D"p"><!----></div>
The reason is that there is a downside to the interface definitions as pres=
ented here: all functions within an interface module are declared=20
<font size=3D"+1"><tt>static</tt></font> to avoid polluting the user name s=
pace with those names. This has the consequence that interfaces are a monol=
ithic  piece of
code that can&#x27;t be splitted.

<div class=3D"p"><!----></div>
Converting an object from type =C4&quot; to another of type &quot;B&quot; i=
mplies then that we have <b>both</b> interfaces present. If for every conta=
iner
we would define a conversion into all others, the function table of each co=
ntainer would need all other interfaces and if a user uses just
a single container it would need to link with the <b>whole</b> library. To =
avoid this problem, no conversions are specified even when surely
converting a ValArrayInt into a ValArrayDouble is an operation that will be=
 needed sooner or later.

<div class=3D"p"><!----></div>
There are many solutions to this problem using the existing APIs:

<ol type=3D"1">
<li> Using a simple loop:

<font size=3D"+1"><pre>ValArrayDouble&#xa0;*CastToDouble(ValArrayInt&#xa0;*=
src)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iValArrayInt.Size(src=
);
&#xa0;&#xa0;&#xa0;&#xa0;ValArrayDouble&#xa0;*result&#xa0;=3D&#xa0;iValArray=
Double.Create(siz);
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;siz;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;d&#xa0;=3D&#xa0=
;iValArrayInt.GetElement(src,i);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iV=
alArrayDouble.Add(result,d);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
This function stops at an error returning a partial result. Other error han=
dling strategies could be to finalize the=20
incomplete container and return &#xa0;NULL , or call the iError interface a=
nd then do a long jump to a recovery point, etc.
<div class=3D"p"><!----></div>
</li>

<li> Using iterators:

<font size=3D"+1"><pre>ValArrayDouble&#xa0;*CastToDouble(ValArrayInt&#xa0;*=
src)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iValArrayInt.Size(src=
);
&#xa0;&#xa0;&#xa0;&#xa0;ValArrayDouble&#xa0;*result&#xa0;=3D&#xa0;iValArray=
Double.Create(siz);
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&#xa0;iValArrayInt.NewIte=
rator(src);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;*ip;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(ip&#xa0;=3D&#xa0;it-&gt;GetFirst(src);&#x=
a0;ip;ip&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iV=
alArrayDouble.Add(result,*ip);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;iValArrayInt.DeleteIterator(it);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
<div class=3D"p"><!----></div>
</li>

<li> Using the Apply API.
There are surely more complex requirements for conversions. For instance we=
 could need to extract only certain parts of the input=20
container. In that case
writing a special function to be called by <font size=3D"+1"><tt>Apply</tt>=
</font> is justified. For instance if we have an array of structures repres=
enting customers
we could want to make a string collection with the names of all of them.=20

<font size=3D"+1"><pre>//&#xa0;We&#xa0;want&#xa0;to&#xa0;extract&#xa0;the&#=
xa0;second&#xa0;field&#xa0;of&#xa0;this&#xa0;structure
struct&#xa0;customer&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;long&#xa0;long&#xa0;NumericID;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*Name;
&#xa0;&#xa0;&#xa0;&#xa0;long&#xa0;double&#xa0;Balance;
};

int&#xa0;ApplyFn(void&#xa0;*data,void&#xa0;*container)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;customer&#xa0;*pData&#xa0;=3D&#xa0;(str=
uct&#xa0;customer&#xa0;*)data;
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*Collection&#xa0;=3D&#xa0;(strCo=
llection&#xa0;*)container;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;istrCollection.Add(Collection,pData-&gt=
;Name);
}&#xa0;&#xa0;

strCollection&#xa0;*GetAllNames(Vector&#xa0;*CustomerDB)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz&#xa0;=3D&#xa0;iVector.Size(Customer=
DB);
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*result&#xa0;=3D&#xa0;istrCollec=
tion.Create(siz);
&#xa0;&#xa0;&#xa0;&#xa0;iVector.Apply(CustomerDB,ApplyFn,result);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
<div class=3D"p"><!----></div>
</li>
</ol>

 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Infinite arrays</h2>
We can conceptually define an array as a function that maps an input value =
<i>index</i> into some output that is the <i>value</i> of the
array at that position.

<div class=3D"p"><!----></div>
In this context, an infinite array is a function that maps any member from =
the set of positive natural numbers  (a <font size=3D"+1"><tt>size_t</tt></=
font>) into some resulting value. This function must have a value for all p=
ossible input values of its <font size=3D"+1"><tt>size_t</tt></font> argume=
nt. For instance the function
value=3D(index+5)/(index&#x2212;5) is not usable since it would provoke a d=
ivision by zero at index=3D5.

<div class=3D"p"><!----></div>
Infinite arrays exist in many computer languages.


<ul>     =20
<li> In APL they were proposed by McDonnel and Shallit in their paper =CBxt=
ending APL to Infinity&quot; <a href=3D"#tthFtNtAFJ" name=3D"tthFrefAFJ"><s=
up>59</sup></a>.
<div class=3D"p"><!----></div>
</li>

<li> Common lisp has the &quot;Series&quot; construct that is similar to in=
finite arrays.
<div class=3D"p"><!----></div>
</li>

<li> The Translucid computer language features each variable as an infinite=
 array of all its values
<a href=3D"#tthFtNtAGA" name=3D"tthFrefAGA"><sup>60</sup></a>

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
Since in the C language arrays must contain elements of the same type, obvi=
ous restrictions apply: all C types have specific bounds (defined in the
appropiate headers) so that a conceptually correct function like the Fibona=
cci function for instance, is not usable beyond a certain value of the
input index because of output overflow: the Fibonacci numbers grow without =
limit.

<div class=3D"p"><!----></div>
To implement an infinite array using the library is relatively easy. The <f=
ont size=3D"+1"><tt>iVector</tt></font> interface has the necessary hooks f=
or doing this.
When an index error occurs, the library calls the error function of the giv=
en vector passing it the name of the function, the integer constant=20
<font size=3D"+1"><tt>CONTAINER_ERROR_INDEX</tt></font> and a pointerto the=
 array and the requested index. If the error function returns any other val=
ue than &#xa0;NULL ,
the Library will assume that it is a valid pointer to some result where the=
 real value of the array at that position is stored.

<div class=3D"p"><!----></div>
Using this information we can write this first simple implementation of an =
infinite array. The array function will be the <i>identity</i> function
i.e. the array will contain the value of the index at each position.

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
#include&#xa0;&lt;stdarg.h&gt;
#include&#xa0;&lt;stdlib.h&gt;
#include&#xa0;&quot;containers.h&quot;
static&#xa0;ErrorFunction&#xa0;oldErrorFn;

static&#xa0;void&#xa0;*Fn(const&#xa0;char&#xa0;*msg,int&#xa0;errorCode,...)
{
&#xa0;&#xa0;&#xa0;&#xa0;va_list&#xa0;ap;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;static&#xa0;int&#xa0;value;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*v;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(errorCode&#xa0;!=3D&#xa0;CONTAINER_ERROR_I=
NDEX)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;oldErrorFn(msg,=
errorCode);
&#xa0;&#xa0;&#xa0;&#xa0;va_start(ap,errorCode);
&#xa0;&#xa0;&#xa0;&#xa0;v&#xa0;=3D&#xa0;va_arg(ap,Vector&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;idx&#xa0;=3D&#xa0;va_arg(ap,size_t);
&#xa0;&#xa0;&#xa0;&#xa0;value&#xa0;=3D&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;va_end(ap);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&amp;value;
}

Vector&#xa0;*CreateInfiniteArray(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;VectorInterface&#xa0;*ivct;
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*result&#xa0;=3D&#xa0;iVector.Create(si=
zeof(int),1);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)&#xa0;return&=
#xa0;result;
&#xa0;&#xa0;&#xa0;&#xa0;oldErrorFn&#xa0;=3D&#xa0;iVector.SetErrorFunction(r=
esult,&#xa0;Fn);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;Vector&#xa0;*v&#xa0;=3D&#xa0;CreateInfiniteArray();
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D20;&#xa0;i&lt;30;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;%d&#xa0;&quot;=
,*(int&#xa0;*)iVector.GetElement(v,i));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;printf(&quot;\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;iVector.Finalize(v);
}


</pre></font>
The central piece of the implementation is the <font size=3D"+1"><tt>Fn</tt=
></font> function (lines 6 to 20)=20
that will be our replacement of the default vector error function. This fun=
ction
will only return something if the error is an error index (line 12). Otherw=
ise it calls the default function stored in a static pointer.

<div class=3D"p"><!----></div>
If the error is the expected index error, we fetch the arguments (lines 15 =
and 16) and we set the value.=20
The address of the static area is returned.

<div class=3D"p"><!----></div>
We have to write a special creation function (lines 22 to 29) that creates =
a vector and replaces its error function=20
with our own, saving the old
value in a global variable. This value will be used if the error is not an =
index error.

<div class=3D"p"><!----></div>
We can now write our test program that returns 10 integers from our array. =
Its output is
<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>20&#xa0;21&#xa0;22&#xa0;23&#xa0;24&#xa0;25&#xa0;26&#x=
a0;27&#xa0;28&#xa0;29&#xa0;</tt></font>

<div class=3D"p"><!----></div>
Note that our =EFnfinite&quot; array is still a perfectly valid vector obje=
ct and if you use it in a &quot;normal&quot; way it will store the data you=
 give it and=20
return that data when you index it as any array. What it is shown in the ex=
ample above is just how we can change the return value of the functions whe=
n=20
an index error is detected by the library. All other uses are untouched and=
 the vector will still behave as a normal vector.

<div class=3D"p"><!----></div>
Note also that if the error is something different than the error the softw=
are wants to modify the old procedure is called. This means that
this type of changes can be built in a cascade, each one handling only a de=
finite type of error.

<div class=3D"p"><!----></div>
We have used here the generic interface using void pointers. Obviously we c=
ould use an integer vector instead of the generic one. To do that it would=
=20
be necessary to change all lines that contain <font size=3D"+1"><tt>Vector<=
/tt></font> into <font size=3D"+1"><tt>intVector</tt></font> and then call =
the <font size=3D"+1"><tt>iintVector.Create</tt></font> function
instead of the plain <font size=3D"+1"><tt>iVector.Create</tt></font>.

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc2.1">
2.1</a>&#xa0;&#xa0;Zero extensible arrays</h3>
To make a zero extensible array (used in  signal processing) you would just=
 change the line 17 above and instead of writing

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>value&#xa0;=3D&#xa0;idx;</tt></font>

<div class=3D"p"><!----></div>
you would write:

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>value&#xa0;=3D&#xa0;0;</tt></font>

<div class=3D"p"><!----></div>
This type of array would return always zero for any index outside the limit=
s of the array.

     <h3><a name=3D"tth_sEc2.2">
2.2</a>&#xa0;&#xa0;Arrays extensible by insert</h3>
Within the error procedure it is possible to call any function of the libra=
ry. For instance, we can detect that the index error is the
result of the =CFnsertAt&quot; API, and decide to enlarge the array automat=
ically. To do this we should return a non &#xa0;NULL value from within  our
error procedure.

<div class=3D"p"><!----></div>
As you can see, that is <b>already the case</b>! That is why the next secti=
on is called:

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc2.3">
2.3</a>&#xa0;&#xa0;Pitfalls</h3>
When you change the default procedure you must be careful to ensure that th=
e <b>only</b> situations where you modify the library&#x27;s behavior are
the ones you want to modify.=20

<div class=3D"p"><!----></div>
 <h1><a name=3D"tth_chAp7">
Chapter 7 </a><br>Applications</h1>

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Unique</h2>
The main point in using the C containers library is the increase in
program abstraction. In this example we will see how the library
can be used to solve in a few lines a classroom problem.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc1.0.1">
1.0.1</a>&#xa0;&#xa0;Task description</h4>
Given a text file, print in standard output the lines that are
unique in it, i.e. filtering all duplicated lines.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc1.0.2">
1.0.2</a>&#xa0;&#xa0;Algorithm</h4>
Normally this involves keeping a sorted list/array of lines
and testing if a line is in the set or  not.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc1.0.3">
1.0.3</a>&#xa0;&#xa0;Solution using the CCL</h4>

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;#include&#xa0;&lt;containers.h&gt;
&#xa0;int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*f;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i=3D1,r;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*dict;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;buf[8192];
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&l=
t;&#xa0;2)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;%s&#xa0;&lt;file&#xa0;name&=
gt;\n&quot;,argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;-1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;f&#xa0;=3D&#xa0;fopen=
(argv[1],&quot;r&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(f&#xa0;=3D=
=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;-1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;dict&#xa0;=3D&#xa0;iD=
ictionary.Create(0,500);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(dict&#xa0;=
=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;-1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(fgets(buf=
,sizeof(buf),f))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;r=3D&#xa0;iDictionary.Add(dict,buf,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
printf(&quot;[%3d]&#xa0;%s&quot;,i,buf);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;brea=
k;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;i++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iDictionary.Finalize(=
dict);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fclose(f);
&#xa0;}

</pre></font>

      <h4><a name=3D"tth_sEc1.0.4">
1.0.4</a>&#xa0;&#xa0;Algorithm</h4>
A hash table will be used to determine if a line is a duplicate
or not.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc1.0.5">
1.0.5</a>&#xa0;&#xa0;Commentary</h4>
We use the following local variables (lines 4-7):

<div class=3D"p"><!----></div>

<table>
<tbody><tr><td align=3D"left">Name   </td><td align=3D"left">Usage</td></tr>
<tr><td align=3D"left">f      </td><td align=3D"left">Input stream bound to=
 the file to read</td></tr>
<tr><td align=3D"left">i      </td><td align=3D"left">Counter for lines rea=
d</td></tr>
<tr><td align=3D"left">r      </td><td align=3D"left">Result of adding a li=
ne</td></tr>
<tr><td align=3D"left">dict   </td><td align=3D"left">Dictionary (Hash tabl=
e)</td></tr>
<tr><td align=3D"left">buf    </td><td align=3D"left">Line buffer limited t=
o 8K per line</td></tr></tbody></table>


<div class=3D"p"><!----></div>
Lines 9-15 are concerned with opening the input file, with some error
checking.

<div class=3D"p"><!----></div>
In line 16 we create a dictionary, requesting a size of zero for the
data associated with the key since we aren&#x27;t storing any data, just the
key, and we suppose that the table will contain more or less 500
entries. If the file contains much more lines performance could
suffer but the algorithm would still work.

<div class=3D"p"><!----></div>
Lines 19-25 are the main loop of the program. We read each line into
the buffer and add it to then dictionary. If the =C4dd&quot; API returns
a positive number the line wasn&#x27;t there, if it returns zero the
line was already in the dictionary. If the result is negative it
is an error code and we stop the loop aborting the operation. Failure
can be provoked only by lack of memory.

<div class=3D"p"><!----></div>
If the result is positive we print the line.

<div class=3D"p"><!----></div>
Cleanup is performed in lines 26 and 27: we dispose of the dictionary
and close the file.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Paste</h2>

      <h4><a name=3D"tth_sEc2.0.6">
2.0.6</a>&#xa0;&#xa0;Task description</h4>
Given two text files, print each line of them in the same line separated by=
 a tab character. If files have a different number of lines
stop when the first file is exhausted.

<div class=3D"p"><!----></div>
Note that this specifications may be different from the Unix utility of the=
 same name.

      <h4><a name=3D"tth_sEc2.0.7">
2.0.7</a>&#xa0;&#xa0;Solution</h4>

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
#include&#xa0;&quot;containers.h&quot;
int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*f1,*f2;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*line1,*line2;
&#xa0;&#xa0;&#xa0;&#xa0;strCollection&#xa0;*file1,*file2;
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it1,*it2;
&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&lt;&#xa0;3)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;%s:&#x=
a0;file1&#xa0;file2\n&quot;,argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;-1;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;file1&#xa0;=3D&#xa0;istrCollection.CreateFromFile(a=
rgv[1]);
&#xa0;&#xa0;&#xa0;&#xa0;file2&#xa0;=3D&#xa0;istrCollection.CreateFromFile(a=
rgv[2]);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(file1&#xa0;!=3D&#xa0;NULL&#xa0;&amp;&amp;&=
#xa0;file2&#xa0;!=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;it1&#xa0;=3D&#xa0;istrColle=
ction.NewIterator(file1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;it2&#xa0;=3D&#xa0;istrColle=
ction.NewIterator(file2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;line2&#xa0;=3D&#xa0;it2-&gt=
;GetFirst(it2);&#xa0;line1&#xa0;=3D&#xa0;it1-&gt;GetFirst(it1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(;&#xa0;line1;&#xa=
0;line1&#xa0;=3D&#xa0;it1-&gt;GetNext(it1))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(line2)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;printf(&quot;%s\t%s\n&quot;,line1,line2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;line2&#xa0;=3D&#xa0;it2-&gt;GetNext(it2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;els=
e&#xa0;printf(&quot;%s\n&quot;,line1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.deleteIterat=
or(it1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.deleteIterat=
or(it2);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.Finalize(file1);
&#xa0;&#xa0;&#xa0;&#xa0;istrCollection.Finalize(file2);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}

</pre></font>

      <h4><a name=3D"tth_sEc2.0.8">
2.0.8</a>&#xa0;&#xa0;Commentary</h4>
We create two string collections containing the text (lines 13-14). Two ite=
rators are used to get each line of both files( lines 16 17). The rest
is just cleanup: we delete the iterators (lines 26-27) and finalize the str=
ing collections (lines 29 30).

<div class=3D"p"><!----></div>
This solution using the library is shorter and easier to write than a solut=
ion reading each line with <font size=3D"+1"><tt>fgets()</tt></font> but ne=
eds enough memory
to hold both files in memory at the same time.

 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;Mapcar</h2>
<a name=3D"mapcar30"></a>
The lisp function &quot;mapcar&quot; produces a map by applying a given fun=
ction to each element of a list.

<font size=3D"+1"><pre>(mapcar&#xa0;#&#x27;abs&#xa0;&#x27;(3&#xa0;-4&#xa0;2=
&#xa0;-5&#xa0;-6))&#xa0;=3D&gt;&#xa0;(3&#xa0;4&#xa0;2&#xa0;5&#xa0;6)&#xa0;

</pre></font>
We can reproduce this function by using =C4pply&quot;. In the extra argumen=
t we pass a structure of two members:=20

<ul>
<li> A function to call (in the above example it would be a function to cal=
culate the absolute value)
<div class=3D"p"><!----></div>
</li>

<li> A list container where the result would be stored
<div class=3D"p"><!----></div>
</li>
</ul>
Our function receives then (as all functions called by Apply) two arguments=
, the element and a pointer to our structure. Here is a sketch of how could=
 it be done:

<font size=3D"+1"><pre>#include&#xa0;&lt;containers.h&gt;
struct&#xa0;MapcarArgs&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;&#xa0;*(*fn)(void&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*Result;
};

</pre></font>
We keep some generality by using a general prototype and definition for the=
 function we are using. We could have defined the callback as:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*fn)(int&#xa0;*);

</pre></font>
That prototype would have been unusable for lists that use doubles, for ins=
tance. With the current definition we can use this &quot;MapcarArgs&quot; s=
tructure with any other list.

<div class=3D"p"><!----></div>
The actual function we are calling encapsulates all knowledge about the dat=
a stored in the list and the operation we perform with that data. The other=
 parts of the software do not need to know anything about it.  It returns a=
 static pointer to the result of the operation it performs using the given =
element as data that will be overwritten at each call. The intended usage i=
s to save that result before making the next call.
It can be defined as follows:

<font size=3D"+1"><pre>void&#xa0;*DoAbsValue(void&#xa0;*element)
{
&#xa0;&#xa0;&#xa0;&#xa0;static&#xa0;int&#xa0;result&#xa0;=3D&#xa0;*(int&#xa=
0;*)element;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;-resul=
t;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&amp;result;
}
/*&#xa0;This&#xa0;function&#xa0;will&#xa0;be&#xa0;directly&#xa0;called&#xa0=
;by&#xa0;&quot;Apply&quot;.&#xa0;*/
static&#xa0;int&#xa0;Applyfn(void&#xa0;*element,&#xa0;struct&#xa0;MapcarArg=
s&#xa0;*args)
{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*result&#xa0;=3D&#xa0;args-&gt;fn(element=
);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iList.Add(args-&gt;Result,=
result);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;r;
}
List&#xa0;*mapcar(List&#xa0;*li,void&#xa0;*(*fn)(void&#xa0;*))
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;MapcarArgs&#xa0=
;args;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;args.fn&#xa0;=3D&#xa0;fn;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;args.Result&#xa0;=3D&#xa0;i=
List.Create(iList.GetElementSize(li));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(args.Result&#xa0;=
=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Apply(li,Applyfn,(voi=
d&#xa0;*)&amp;args);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;args.Result;
}

int&#xa0;main(void)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*li&#xa0;=3D&#xa0;iList.Create(sizeof(int=
));
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*newList;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;tab[]&#xa0;=3D&#xa0;{3,-4,2,-5,6};
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;5;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Add(li,&amp;tab[i]);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;newList&#xa0;=3D&#xa0;mapcar(li,DoAbsValue);
}

</pre></font>
Still, our version of mapcar is still specific to lists. A more general ver=
sion would use a sequential container to make a mapcar function that would =
be able to work with any type of sequential container.=20

<div class=3D"p"><!----></div>
The basic idea is to provide an empty container of the desired result type =
as an extra argument to mapcar. We use an iterator instead of =C4pply&quot;=
, obtaining a single compact function that will take any sequential contain=
er as input an add the result of the function to any type of sequential con=
tainer.

<font size=3D"+1"><pre>int&#xa0;mapcar(SequentialContainer&#xa0;*src,&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;The&#xa0;source&#xa=
0;container&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0=
;*(*fn)(void&#xa0;*),/*&#xa0;Function&#xa0;to&#xa0;call&#xa0;with&#xa0;each=
&#xa0;element&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Sequentia=
lContainer&#xa0;*result)&#xa0;&#xa0;&#xa0;/*&#xa0;The&#xa0;resulting&#xa0;c=
ontainer&#xa0;*/
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it&#xa0;=3D&=
#xa0;iSequentialContainer.NewIterator(src);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r=3D1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*obj;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(it&#xa0;=3D=3D&#xa=
0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(obj&#xa0;=3D&#xa0=
;it-&gt;GetFirst(it);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;obj&#xa0;!=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;obj&#xa0;=3D&#xa0;it-&gt;GetNext(it))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;void&#xa0;*tmp&#xa0;=3D&#xa0;fn(obj);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iSequentialContainer.Add(result,tmp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;In&#xa0;case&#xa0;of&#=
xa0;any&#xa0;error&#xa0;return&#xa0;a&#xa0;partial&#xa0;result&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;and&#xa0;the&#xa0;error&#xa0;c=
ode&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;deleteIterator(it);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;r;
}

</pre></font>
Other similar functions can be built from this model. For instance &quot;ma=
pcon&quot;, a function that needs two containers to build a resulting conta=
iner. The result is  made out of the results of a binary function that will=
 receive one element from each container.=20

<div class=3D"p"><!----></div>
Its implementation is trivially deduced from the above function:
<a name=3D"mapcon30"></a>

<font size=3D"+1"><pre>int&#xa0;mapcon(SequentialContainer&#xa0;*src1,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Sequentia=
lContainer&#xa0;*src2,&#xa0;&#xa0;/*&#xa0;The&#xa0;input&#xa0;containers&#x=
a0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0=
;*(*fn)(void&#xa0;*,void&#xa0;*),&#xa0;&#xa0;/*&#xa0;Function&#xa0;with&#xa=
0;2&#xa0;arguments&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Sequentia=
lContainer&#xa0;*result)&#xa0;&#xa0;&#xa0;/*&#xa0;The&#xa0;resulting&#xa0;c=
ontainer&#xa0;*/
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it1&#xa0;=3D=
&#xa0;iSequentialContainer.NewIterator(src1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;*it2&#xa0;=3D=
&#xa0;iSequentialContainer.NewIterator(src2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r=3D1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*obj1,*obj2;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(it&#xa0;=3D=3D&#xa=
0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(iSequentialContain=
er.GetElementSize(src1)&#xa0;!=3D&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iSe=
quentialContainer.GetElementSize(src2))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;CONTAINER_ERROR_INCOMPATIBLE;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(obj1&#xa0;=3D&#xa=
0;it1-&gt;GetFirst(it1),obj2&#xa0;=3D&#xa0;it2-&gt;GetFirst(it2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;obj1&#xa0;!=3D&#xa0;NULL&#xa0;&amp;&amp;&#xa0;obj2&#xa0;!=3D&#xa0;=
NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;obj2&#xa0;=3D&#xa0;it2-&gt;GetNext(it2),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;obj1&#xa0;=3D&#xa0;it1-&gt;GetNext(it1))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;void&#xa0;*tmp&#xa0;=3D&#xa0;fn(obj1,obj2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;iSequentialContainer.Add(result,tmp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;In&#xa0;case&#xa0;of&#=
xa0;any&#xa0;error&#xa0;return&#xa0;a&#xa0;partial&#xa0;result&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;and&#xa0;the&#xa0;error&#xa0;c=
ode&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;deleteIterator(it1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;deleteIterator(it2);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;r;
}

</pre></font>
We can use it with a function  that adds its two arguments to add two conta=
iners:

<font size=3D"+1"><pre>void&#xa0;*DoAdd(void&#xa0;*element1,void&#xa0;*elem=
ent2)
{
&#xa0;&#xa0;&#xa0;&#xa0;static&#xa0;int&#xa0;result&#xa0;=3D&#xa0;*(int&#xa=
0;*)element1&#xa0;+&#xa0;*(int&#xa0;*)element2;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&amp;result;
}

</pre></font>
Note that not all errors are detected, and we stop at the smallest containe=
r, producing a result compatible with the smallest of both arguments.
Note too that we make a very superficial compatibility test to see if the a=
rguments contain the same type of object, using their size as an indication=
. This test would ignore elements of the same size but incompatible, for in=
stance floats and 32 bit integers, or 64 bit integers and double precision =
elements, etc.

<div class=3D"p"><!----></div>
The standard answer to the above problems is to point out that C has a trad=
ition of keeping things simple and expecting programmers that take care of =
low level details. If you want more error support, you will find out with m=
inimal research a lot of languages ready to make all kinds of hand holding =
for you.

<div class=3D"p"><!----></div>

 <h1><a name=3D"tth_chAp8">
Chapter 8 </a><br>The sample implementation</h1>
The objective of the sample implementation is to serve as a guide for the i=
mplementers of this proposal. It is not the fastest implementation and it i=
s not the most efficient or compact one. As any other software, it contains=
 bugs, that I hope to iron out with time.

<div class=3D"p"><!----></div>
Please note that all the decisions done for the sample implementation are <=
b>not</b> part of the specifications of the containers library. Other
implementations could do completely different things.

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;The different source files</h2>

<div class=3D"p"><!----></div>
The sample implementation has two types of files:

<ol type=3D"1">
<li> Source files that implement a specific container: list.c vector.c, etc=
. This containers use a void pointer to receive thir arguments and return
a void pointer when retrieving their data.
<div class=3D"p"><!----></div>
</li>

<li> Source files that implement a <i>templated</i> container, i.e. the fil=
e needs a <i>parameter file</i> and a <i>templated implementation</i>=20
file. In this type of files we have a small file that defines the templated=
 file parameters (in the form of pre-processor macros) and then just=20
includes the templated implementation file. This containers receive data of=
 a concrete type passed by value and return the same data passed by value.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
<font size=3D"-1">
<div class=3D"p"><!----></div>
<a name=3D"tth_tAb1">
</a>=20
<center>     =20
<table border=3D"1">
<tbody><tr><td width=3D"138"><b>File</b></td><td width=3D"434"><b>Descripti=
on</b></td></tr><tr><td></td></tr>
<tr><td width=3D"138">bitstrings.c</td><td width=3D"434">The bitstring cont=
ainer.</td></tr>
<tr><td width=3D"138">bloom.c</td><td width=3D"434">The bloom filter contai=
ner</td></tr>
<tr><td width=3D"138">buffer.c</td><td width=3D"434">Growable buffers and c=
ircular buffers</td></tr>
<tr><td width=3D"138">ccl_internal.h</td><td width=3D"434">Definitions of a=
ll the types defined internally by the library.</td></tr>
<tr><td width=3D"138">containers.h</td><td width=3D"434">Main header file o=
f the library. It defines all the user visible interfaces.</td></tr>
<tr><td width=3D"138">deque.c</td><td width=3D"434">The deque container</td=
></tr>
<tr><td width=3D"138">dlistgen.h</td><td width=3D"434">Generic definition o=
f the double linked list data-type specific containers.</td></tr>
<tr><td width=3D"138">dictionary.c</td><td width=3D"434">Hash tables using =
ASCII text as key. This is just a small file that sets the parameters for t=
he <font size=3D"+1"><tt>dictionarygen.c</tt></font> file</td></tr>
<tr><td width=3D"138">dictionarygen.c</td><td width=3D"434">Common code for=
 the dictionary container using either ASCII or wide characters keys</td></=
tr>
<tr><td width=3D"138">dlist.c</td><td width=3D"434">Double linked list cont=
ainer using void pointers to store the data.</td></tr>
<tr><td width=3D"138">dlistgen.c</td><td width=3D"434">Double linked list c=
ontainer using a specific data type. Needs a parameter file</td></tr>
<tr><td width=3D"138">dlistgen.h</td><td width=3D"434">Double linked list c=
ontainer data definitions and interface definitions using a specific data t=
ype. Needs a parameter file</td></tr>
<tr><td width=3D"138">doubledlist.c</td><td width=3D"434">Double linked lis=
t for double data. This is a parameter file for dlistgen.c</td></tr>
<tr><td width=3D"138">doubledlist.h</td><td width=3D"434">Single linked lis=
t header file for double data. This is a parameter file for dlistgen.h</td>=
</tr>
<tr><td width=3D"138">doublelist.c</td><td width=3D"434">Single linked list=
: Parameter file for listgen.c</td></tr>
<tr><td width=3D"138">doublelist.h</td><td width=3D"434">Single linked list=
: parameter file for listgen.h using double data</td></tr>
<tr><td width=3D"138">error.c</td><td width=3D"434">The error interface</td=
></tr>
<tr><td width=3D"138">fgetline.c</td><td width=3D"434">Reads a line of text=
 from a file. Used in the string container</td></tr>
<tr><td width=3D"138">generic.c</td><td width=3D"434">The generic container=
 interface</td></tr>
<tr><td width=3D"138">hashtable.c</td><td width=3D"434">Hash table featurin=
g binary keys</td></tr>
<tr><td width=3D"138">heap.c</td><td width=3D"434">Small object allocator</=
td></tr>
<tr><td width=3D"138">iMask.c</td><td width=3D"434">Mask interface implemen=
tation</td></tr>
<tr><td width=3D"138">intdlist.c</td><td width=3D"434">Parameter file for d=
listgen.c</td></tr>
<tr><td width=3D"138">intdlist.h</td><td width=3D"434">Parameter header fil=
e for dlistgen.h</td></tr>
<tr><td width=3D"138">intlist.c</td><td width=3D"434">Parameter file for li=
stgen.c</td></tr>
<tr><td width=3D"138">intlist.h</td><td width=3D"434">Parameter header file=
  for listgen.h</td></tr>
<tr><td width=3D"138">list.c</td><td width=3D"434">Generic type list contai=
ner using void pointers</td></tr>
<tr><td width=3D"138">listgen.c</td><td width=3D"434">Template file for lis=
t container</td></tr>
<tr><td width=3D"138">longlongdlist.c</td><td width=3D"434">Parameter file =
for dlistgen.c.</td></tr>
<tr><td width=3D"138">longlonglist.c</td><td width=3D"434">Parameter file f=
or listgen.c</td></tr>
<tr><td width=3D"138">malloc_debug.c</td><td width=3D"434">Debug implementa=
tion of malloc</td></tr>
<tr><td width=3D"138">Makefile</td><td width=3D"434">Make file for Unix sys=
tems using the gcc compiler</td></tr>
<tr><td width=3D"138">Makefile.lcc</td><td width=3D"434">Make file for wind=
ows systems using the 32 bit lcc compiler</td></tr>
<tr><td width=3D"138">Makefile.lcc64</td><td width=3D"434">Make file for wi=
ndows systems using the 64 bit lcc compiler</td></tr>
<tr><td width=3D"138">Makefile.msvc</td><td width=3D"434">Make file for win=
dows systems using the Microsoft compiler</td></tr>
<tr><td width=3D"138">memoryanager.c</td><td width=3D"434">Very short file =
describing the CurrentAllocator mechanism.</td></tr>
<tr><td width=3D"138">observer.c</td><td width=3D"434">The implementation o=
f the observer pattern</td></tr>
<tr><td width=3D"138">pool.c</td><td width=3D"434">Pooled memory manager</t=
d></tr>
<tr><td width=3D"138">pooldebug.c</td><td width=3D"434">Debug version of th=
e pool memory manager</td></tr>
<tr><td width=3D"138">priorityqueue.c</td><td width=3D"434">Priority queues=
 implementation</td></tr>
<tr><td width=3D"138">qsortex.c</td><td width=3D"434">Quick sort algorithm<=
/td></tr>
<tr><td width=3D"138">queue.c</td><td width=3D"434">Queue container</td></t=
r>
<tr><td width=3D"138">redblacktree.c</td><td width=3D"434">Red black tree i=
mplementation. Not yet documented</td></tr>
<tr><td width=3D"138">scapegoat.c</td><td width=3D"434">&quot;Scapegoat&quo=
t; trees implementation</td></tr>
<tr><td width=3D"138">searchtree.c</td><td width=3D"434">AVL trees. Not doc=
umented</td></tr>
<tr><td width=3D"138">sequential.c</td><td width=3D"434">Implementation of =
the general sequential container interface</td></tr>
<tr><td width=3D"138">smallpool.c</td><td width=3D"434">Not documented yet<=
/td></tr>
<tr><td width=3D"138">strcollection.c</td><td width=3D"434">Specialized vec=
tor for ascii character strings. This is a parameter file for strcollection=
gen.c.</td></tr>
<tr><td width=3D"138">stringlist.c</td><td width=3D"434">Specialized versio=
n of single linked lists using strings</td></tr>
<tr><td width=3D"138">stringlistgen.c</td><td width=3D"434">Common code for=
 ascii and wide character strings specialized vector</td></tr>
<tr><td width=3D"138">valarraydouble.c</td><td width=3D"434">Value array of=
 double data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarrayfloat.c</td><td width=3D"434">Value array of =
float data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarrayint.c</td><td width=3D"434">Value array of in=
t data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarraylongdouble.c</td><td width=3D"434">Value arra=
y of long double data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarraylonglong.c</td><td width=3D"434">Value array =
of long long data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarrayshort.c</td><td width=3D"434">Value array of =
short data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarraysize_t.c</td><td width=3D"434">Value array of=
 size_t data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarrayuint.c</td><td width=3D"434">Value array of u=
nsigned int data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarrayulonglong.c</td><td width=3D"434">Value array=
 of unsigned long long data. Parameter file for valarraygen.c</td></tr>
<tr><td width=3D"138">valarraygen.c</td><td width=3D"434">Common code for a=
ll val array implementations.</td></tr>
<tr><td width=3D"138">valarraygen.h</td><td width=3D"434">Common header fil=
e for all val array implementations. Needs a parameter file</td></tr>
<tr><td width=3D"138">vector.c</td><td width=3D"434">Code for the vector co=
ntainer</td></tr>
<tr><td width=3D"138">vectorgen.h</td><td width=3D"434">Header file for the=
 template form of the vector container</td></tr>
<tr><td width=3D"138">vectorgen.c</td><td width=3D"434">Implementation of t=
he template form of the vector container</td></tr>
<tr><td width=3D"138">wdictionary.c</td><td width=3D"434">Dictionary for a =
dictionary using wide character strings</td></tr>
<tr><td width=3D"138">wstrcollection.c</td><td width=3D"434">String collect=
ion using wide character data. Parameter file for strcollectiongen.c</td></=
tr><tr><td></td></tr>
<tr><td width=3D"138"></td></tr></tbody></table>
</center>
<div class=3D"p"><!----></div>
</font>=20
     <h3><a name=3D"tth_sEc1.1">
1.1</a>&#xa0;&#xa0;Building the software</h3>
The library comes with several &quot;makefiles&quot; to build it automatica=
lly. Those makefiles build a library called <font size=3D"+1"><tt>libccl.a<=
/tt></font> under Unix systems, or <font size=3D"+1"><tt>ccl.lib</tt></font=
> under windows.


<ul>     =20
<li> Type <font size=3D"+1"><tt>make</tt></font> for building the files und=
er Unix
<div class=3D"p"><!----></div>
</li>

<li> Type <font size=3D"+1"><tt>make&#xa0;-f&#xa0;Makefile.lcc</tt></font> =
for building under windows 32 bit with the lcc compiler
<div class=3D"p"><!----></div>
</li>

<li> Type <font size=3D"+1"><tt>make&#xa0;-f&#xa0;Makefile.lcc64</tt></font=
> for building under windows 64 bit with the lcc64 compiler
<div class=3D"p"><!----></div>
</li>

<li> Type <font size=3D"+1"><tt>nmake&#xa0;-f&#xa0;Makefile.msvc</tt></font=
> for building under windows with the Microsoft MSVC compiler

<div class=3D"p"><!----></div>
</li>
</ul>


 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Partitioning</h2>
An interface is a table of functions. This tables are a monolithic construc=
t: if you use only one of the functions of the
interface you will have to link with all of the interface functions, whethe=
r you use them or not.

<div class=3D"p"><!----></div>
It is important then, that each interface doesn&#x27;t &quot;pull in&quot; =
other interfaces since then you would end up linking with the whole library=
 even if
you use a small fraction of it.

<div class=3D"p"><!----></div>
Some of this is inevitable though. All interfaces use the observer interfac=
e, so if you use any interface the observer interface will be
pulled in. It is important then, that the dependencies of the observer inte=
rface be kept to a minimum=20
<a href=3D"#tthFtNtAGB" name=3D"tthFrefAGB"><sup>61</sup></a>. Problem is, =
it is necessary for the
observer interface to set the flags of the container being registered as an=
 observed object. This means that the generic interface is needed.

<div class=3D"p"><!----></div>
Go avoid pulling in the whole generic interface, the observer functions use=
 the <font size=3D"+1"><tt>vTable</tt></font>. In the sample implementation=
 all containers
have a table of functions as first interface field. Since the description o=
f the generic container object is published in &quot;containers.h&quot; it =
can
use the generic notation.

<font size=3D"+1"><pre>GenericContainer&#xa0;*gen&#xa0;=3D&#xa0;(GenericCon=
tainer&#xa0;*)InputObject;
unsigned&#xa0;flags&#xa0;=3D&#xa0;gen-&gt;vTable-&gt;GetFlags(gen);

</pre></font>

<div class=3D"p"><!----></div>
This works because the sample implementation has carefully designed all int=
erface to be binary compatible, allowing an easy implementation
of the generic interface. All vTables have the <font size=3D"+1"><tt>GetFla=
gs</tt></font> function at the same place, so we always call the correct fu=
nction.

<div class=3D"p"><!----></div>
Another interface that is used by all other interfaces is the error interfa=
ce. It has been kept as small as possible to avoid pulling in too much
data into the fixed overhead.

<div class=3D"p"><!----></div>
 <h2><a name=3D"tth_sEc3">
3</a>&#xa0;&#xa0;Data structures</h2>
All container data structures are composed of two parts:

<ol type=3D"1">
<li> A header part, containing a pointer to the functions table and some ot=
her fields. This &#x27;generic&#x27; part is at the start of all container =
header structures.
<div class=3D"p"><!----></div>
</li>

<li> A container specific part, containing auxiliary structures and data ne=
eded for the specific container at hand.
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc3.1">
3.1</a>&#xa0;&#xa0;The generic part</h3>
The first part of all container data structures is the same for each contai=
ner. This allows to implement conceptually an abstract class of objects: th=
e &#x27;generic&#x27; container.
<a name=3D"Generic Container+structure31"></a>

<font size=3D"+1"><pre>struct&#xa0;GenericContainer&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainerInterface&#xa0;*vTable;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;Size;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Flags;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;
};

</pre></font>

<ol type=3D"1">
<li> <font size=3D"+1"><tt>Vtable</tt></font>. All containers in the sample=
 implementation contain a pointer to the table of functions of their interf=
ace.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Size</tt></font>. The number of elements this co=
ntainer stores.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Flags</tt></font>. Stores the state of the conta=
iner. The only flag the sample implementation uses is the <font size=3D"+1"=
><tt>READ_ONLY_FLAG</tt></font> but many others=20
are possible, for instance a &#x27;locked&#x27; flag for multi-threading ac=
cess, or a &#x27;copy on write&#x27; flag for lazy copy, etc.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>ElementSize</tt></font>. All containers in the s=
ample implementation can store objects of the same size. This is not really=
 a limitation since you=20
can store objects of ANY size by storing a pointer in the container.
An alternative design would store objects of any size but it would need to =
store the size of each object in addition to the data used by the object.=20
The specialized containers like bitstrings, string collections or integer/d=
ouble arrays do not need this field obviously, and its presence is optional.
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc3.2">
3.2</a>&#xa0;&#xa0;Lists</h3>
<img alt=3D"Figure" src=3D"List.png">

<div class=3D"p"><!----></div>
Single linked lists use a single pointer to the next element. The data for =
the element comes right behind that pointer to avoid the overhead that yet=
=20
another pointer would represent.

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_list_element&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;_list_element&#xa0;*Next;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;Data[MINIMUM_ARRAY_INDEX];&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;//&#xa0;See&#xa0;below
}&#xa0;list_element;

</pre></font>
The list header uses this structure to store the elements<a href=3D"#tthFtN=
tAGC" name=3D"tthFrefAGC"><sup>62</sup></a>. As you can see, there is no sp=
ace wasted in a pointer to the element stored. The element stored is placed=
 just behind the <font size=3D"+1"><tt>Next</tt></font> pointer. The=20
downside of this decision is that we can&#x27;t recycle this object to stor=
e other different objects of different size.

     <h3><a name=3D"tth_sEc3.3">
3.3</a>&#xa0;&#xa0;Source files</h3>

<center>
<img alt=3D"Figure" src=3D"ListContainerSourceFiles.png">
</center>

<div class=3D"p"><!----></div>
The figure shows the files associated with the two implementations of the l=
ist container. The generic pointers implementation is <font size=3D"+1"><tt=
>list.c</tt></font> and the=20
<i>templated</i> implementation is in <font size=3D"+1"><tt>listgen.c</tt><=
/font>. The files depending on <font size=3D"+1"><tt>listgen.c</tt></font> =
are <i>parameter</i> files for <font size=3D"+1"><tt>listgen.c</tt></font>.

      <h4><a name=3D"tth_sEc3.3.1">
3.3.1</a>&#xa0;&#xa0;Alignment</h4>
Some machines require that data be stored at particular addresses, always a=
 multiple of two. For instance SPARC machines require that doubles be
aligned at a multiple of 8. The structure for our list element above would =
provoke a crash when used to store doubles
<a href=3D"#tthFtNtAGD" name=3D"tthFrefAGD"><sup>63</sup></a>.=20

<div class=3D"p"><!----></div>
In those machines the list element structure is defined as follows:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_ListElement&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;_ListElement&#xa0;*Next;
#ifdef&#xa0;SPARC32
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*alignment;
#endif
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;Data[MINIMUM_ARRAY_INDEX];
}&#xa0;ListElement;

</pre></font>

<div class=3D"p"><!----></div>
This assumes that <font size=3D"+1"><tt>sizeof(void&#xa0;*)</tt></font> is =
4.=20

<div class=3D"p"><!----></div>
In machines that handle unaligned data gracefully without crashing alignmen=
t requirements aren&#x27;t useless, since in most cases they=20
provoke a performance loss.
<a name=3D"lists+structure33"></a>

<font size=3D"+1"><pre>struct&#xa0;_List&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;ListInterface&#xa0;*VTable;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Flags;=09
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*Last;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*First;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;Compare;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*Heap;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*Allocator;
};

</pre></font>
In the public <font size=3D"+1"><tt>containers.h</tt></font> header file we=
 refer always to an abstract structure <font size=3D"+1"><tt>_List</tt></fo=
nt>. We define it here. This schema allows other=20
implementation to use the same header with maybe radically different implem=
entations of their data structure.

<ol type=3D"1">
<li> <font size=3D"+1"><tt>Vtable</tt></font>, <font size=3D"+1"><tt>count<=
/tt></font>, <font size=3D"+1"><tt>Flags</tt></font>, <font size=3D"+1"><tt=
>ElementSize</tt></font>. This fields were described in the generic contain=
er section.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>timestamp</tt></font>. This field is incremented=
 at each modification of the list, and allows the iterators to detect if th=
e container changes=20
during an iteration: they store the value of this field at the start of the=
 iteration, and before each iteration they compare it with its current=20
value. If there are any changes, they return &#xa0;NULL .
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Last</tt></font>. Stores a pointer to the last e=
lement of the list. This allows the addition of an element at the end of th=
e list to be fast,=20
avoiding a complete rescan of the list. This field is an optimization, all =
algorithms of a single linked list would work without this field.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>First</tt></font>. The start of the linked list.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Compare</tt></font>. A comparison function for t=
he type of elements stored in the list.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>RaiseError</tt></font>. A function that will be =
called when an error occurs. This field is necessary only if you want to ke=
ep the flexibility of=20
having a different error function for each list that the client software bu=
ilds. An alternative implementation would store a pointer to an error=20
function in the interface.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>Allocator</tt></font>. A set of functions that a=
llocates memory for this list. In an implementation that needs less flexibi=
lity and is more=20
interested in saving space it could be replaced by the default allocator.
<div class=3D"p"><!----></div>
</li>
</ol>
The sample implementation has certainly a quite voluminous header because o=
f a design decision to keep things very flexible. Other implementations=20
could trim most of the fields, and an absolute minimal implementation would=
 trim <font size=3D"+1"><tt>Last</tt></font>, <font size=3D"+1"><tt>Compare=
</tt></font>, <font size=3D"+1"><tt>RaiseError</tt></font>, <font size=3D"+=
1"><tt>Heap</tt></font>,=20
and <font size=3D"+1"><tt>Allocator</tt></font>. If the implementation assu=
mes that only one iterator per container is allowed, the <font size=3D"+1">=
<tt>timestamp</tt></font> field could be replace by=20
a single bit (&#x27;changed&#x27;) in the <font size=3D"+1"><tt>Flags</tt><=
/font> field.<a href=3D"#tthFtNtAGE" name=3D"tthFrefAGE"><sup>64</sup></a>

     <h3><a name=3D"tth_sEc3.4">
3.4</a>&#xa0;&#xa0;Double linked lists</h3>
This container has a very similar structure to the single linked ones

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_dlist_element&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;_dlist_element&#xa0;*Next;
	struct&#xa0;_dlist_element&#xa0;*Previous;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;Data[MINIMUM_ARRAY_INDEX];&#xa0;&#xa0;&#x=
a0;/*&#xa0;(1)&#xa0;*/
}&#xa0;dlist_element;

</pre></font>

<div class=3D"p"><!----></div>
(1): In the <i>templated</i> versions of the container this field is define=
d as: <font size=3D"+1"><tt>TYPE&#xa0;Data;</tt></font> where <font size=3D=
"+1"><tt>TYPE</tt></font> is a type=20
definition passed to the file as a parameter.

<div class=3D"p"><!----></div>
We have now two pointers followed by the stored data. All other fields are =
exactly identical to the ones in the single linked list. The single=20
difference is the existence of a free list. This could have been done in th=
e single linked list implementation too.
<a name=3D"Dlist+structure definition34"></a>

<font size=3D"+1"><pre>struct&#xa0;Dlist&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;DlistInterface&#xa0;*VTable;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Flags;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;
&#xa0;&#xa0;&#xa0;&#xa0;dlist_element&#xa0;*Last;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;dlist_element&#xa0;*First;
&#xa0;&#xa0;&#xa0;&#xa0;dlist_element&#xa0;*FreeList;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;Compare;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerHeap&#xa0;*Heap;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*Allocator;
};

</pre></font>

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc3.5">
3.5</a>&#xa0;&#xa0;Vector</h3>
Arrays are the containers that use the smallest overhead per element: zero.=
 The only overhead is the header structure, whose cost is amortized since i=
t is fixed for all elements that the array can hold.

<div class=3D"p"><!----></div>
This is a &#x27;flexible&#x27; array however, what means that there is some=
 spare space allocated for allowing further growth, and that different allo=
cation strategies can be followed when allocating a new chunk of array spac=
e when the existing array is full.
<a name=3D"Vector+structure35"></a>

<font size=3D"+1"><pre>struct&#xa0;_Vector&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;VectorInterface&#xa0;*VTable;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Flags;&#xa0;&#xa0;&#xa0;&#xa=
0;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;=09
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*contents;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;capacity;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;CompareFn;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*Allocator;
}&#xa0;;

</pre></font>

<ol type=3D"1">
<li> <font size=3D"+1"><tt>Vtable</tt></font>, <font size=3D"+1"><tt>count<=
/tt></font>, <font size=3D"+1"><tt>Flags</tt></font>, <font size=3D"+1"><tt=
>ElementSize</tt></font>. This fields were described in the generic contain=
er section.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>CompareFn, RaiseError, timestamp</tt></font> and=
 <font size=3D"+1"><tt>Allocator</tt></font> were described in the <font si=
ze=3D"+1"><tt>List</tt></font> container.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>capacity</tt></font>. Stores the number of eleme=
nts (of <font size=3D"+1"><tt>ElementSize</tt></font> bytes each) this cont=
ainer can hold without resizing.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>contents</tt></font>. Points to an array of <fon=
t size=3D"+1"><tt>capacity</tt></font> elements, each of size <font size=3D=
"+1"><tt>ElementSize</tt></font>.
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc3.6">
3.6</a>&#xa0;&#xa0;Dictionary</h3>
This container consists of an array of single linked lists. It could have b=
een done with an <font size=3D"+1"><tt>Vector</tt></font> of <font size=3D"=
+1"><tt>List</tt></font> containers but a dedicated implementation is justi=
fied because of a greater efficiency. The advantages of the <font size=3D"+=
1"><tt>Vector</tt></font> container (secured access, flexible expansion) ar=
e not needed since the array has a fixed length that never changes.
<a name=3D"Dictionary+structure definition36"></a>

<font size=3D"+1"><pre>struct&#xa0;_Dictionary&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;DictionaryInterface&#xa0;*VTable;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Flags;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;size;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*Allocator;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*hash)(const&#xa0;char&#xa0;*Key);
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;DataList&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;DataList&#xa0;*=
Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*Key;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;/*&#xa0;(1)&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*Value;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;**buckets;
};

</pre></font>

<div class=3D"p"><!----></div>
(1): In the wide character version of this structure, this field will be de=
fined as: <font size=3D"+1"><tt>wchar_t&#xa0;*Key;</tt></font>
<div class=3D"p"><!----></div>

<ol type=3D"1">
<li> <font size=3D"+1"><tt>Vtable</tt></font>, <font size=3D"+1"><tt>count<=
/tt></font>, <font size=3D"+1"><tt>Flags</tt></font>, <font size=3D"+1"><tt=
>ElementSize</tt></font>. This fields were described in the generic contain=
er section.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>RaiseError, timestamp</tt></font> and <font size=
=3D"+1"><tt>Allocator</tt></font> were described in the <font size=3D"+1"><=
tt>List</tt></font> container.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>size</tt></font>. The number of different lists =
that the hash table can contain. This is normally a prime number.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>hash</tt></font>. A hash function for character =
strings.
<div class=3D"p"><!----></div>
</li>

<li> <font size=3D"+1"><tt>buckets</tt></font>. A table of pointers to list=
s of <font size=3D"+1"><tt>DataList</tt></font> structures.
<div class=3D"p"><!----></div>
</li>
</ol>

     <h3><a name=3D"tth_sEc3.7">
3.7</a>&#xa0;&#xa0;String collection</h3>
String collections are just flexible arrays of pointers to C character stri=
ngs. They share all the fields of the Vector container, the only specific=20
field is a context that is passed to the string comparison function. This c=
ontext can contain flags or other information to use with special text=20
encodings (wide characters for instance) or other data like regular express=
ions, etc.
<a name=3D"strCollection+structure37"></a>

<font size=3D"+1"><pre>struct&#xa0;strCollection&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;strCollectionInterface&#xa0;*VTable;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Flags;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;**contents;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;/*&#xa0;(1)&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;capacity;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;
&#xa0;&#xa0;&#xa0;&#xa0;StringCompareFn&#xa0;strcompare;
&#xa0;&#xa0;&#xa0;&#xa0;CompareInfo&#xa0;*StringCompareContext;
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*Allocator;
};

</pre></font>
(1): In the wide character version of this structure this field is defined =
as:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;wchar_t&#xa0;**&#xa0;content=
s;

</pre></font>

     <h3><a name=3D"tth_sEc3.8">
3.8</a>&#xa0;&#xa0;Masks</h3>
There were two alternatives for implementing masks:=20
<a name=3D"Mask+structure definition38"></a>


<ul>     =20
<li> Bit strings. Each bit position can hold a boolean value.
<div class=3D"p"><!----></div>
</li>

<li> A character array. Each position can hold more values, for instance -1=
, 0, and 1, to hold the results of comparisons. This solution was retained
for the sample implementation. Item access is simplified and faster, at the=
 expense of course of more memory.

<div class=3D"p"><!----></div>
</li>
</ul>


<font size=3D"+1"><pre>struct&#xa0;_Mask&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;length;
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*Allocator;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;data[];
};

</pre></font>

     <h3><a name=3D"tth_sEc3.9">
3.9</a>&#xa0;&#xa0;Bit strings</h3>
Bit strings do not need the ElementSize field obviously. The <font size=3D"=
+1"><tt>BIT_TYPE</tt></font> macro is defined as unsigned char. In general =
it should be an
unsigned integer type that could be different from char, maybe a 32 bit typ=
e or even larger.
<a name=3D"BitString+structure definition39"></a>

<font size=3D"+1"><pre>struct&#xa0;_BitString&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;BitStringInterface&#xa0;*VTable;&#xa0;/*&#xa0;The&#=
xa0;table&#xa0;of&#xa0;functions&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;/*&#xa0;number&#xa0;of&#xa0;bits&#xa0;in&#xa0;the&#xa0=
;array&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;BIT_TYPE&#xa0;*contents;&#xa0;&#xa0;&#xa0;/*&#xa0;T=
he&#xa0;contents&#xa0;of&#xa0;the&#xa0;collection&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;capacity;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;/*&#xa0;allocated&#xa0;space&#xa0;in&#xa0;the&#xa0;contents&#xa0;vect=
or&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;&#xa0;&#xa0;&#xa0;/*&#xa0;M=
odifications&#xa0;counter&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Flags;&#xa0;&#xa0;&#xa0;/*&#=
xa0;Read-only&#xa0;or&#xa0;other&#xa0;flags&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;ContainerAllocator&#xa0;*Allocator;
}&#xa0;;

</pre></font>

<div class=3D"p"><!----></div>
     <h3><a name=3D"tth_sEc3.10">
3.10</a>&#xa0;&#xa0;The iterator implementation</h3>
This data structure has two main parts:

<ul>
<li> A public part:
<a name=3D"Iterator+structure310"></a>

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_Iterator&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetNext)(struct&#xa0;_Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetPrevious)(struct&#xa0;_Iterator&#xa=
0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetFirst)(struct&#xa0;_Iterator&#xa0;*=
);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetCurrent)(struct&#xa0;_Iterator&#xa0=
;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*GetLast)(struct&#xa0;_Iterator&#xa0;*);
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*(*Seek)(struct&#xa0;_Iterator&#xa0;*,siz=
e_t);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;&#xa0;&#xa0;(*Replace)(struct&#xa0;_Iterat=
or&#xa0;*,void&#xa0;*data,int&#xa0;direction);
}&#xa0;Iterator;

</pre></font>=20
This part contains only the functions that the interface offers. It is defi=
ned in the public header <font size=3D"+1"><tt>containers.h</tt></font>.
<div class=3D"p"><!----></div>
</li>

<li> A private, container specific part that comes right behind the public =
part and stores additional information that is needed for each container.=20
For instance the list container will add following fields:
<a name=3D"ListIterator310"></a>

<font size=3D"+1"><pre>struct&#xa0;ListIterator&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;Iterator&#xa0;it;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;Includes&#xa0;the&#xa0;public&#xa0;part
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;List&#xa0;this&#xa0;i=
terator&#xa0;is&#xa0;going&#xa0;through
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;index;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;//&#xa0;The&#xa0;position&#xa0;where&#xa0;we&#xa0;are&=
#xa0;in&#xa0;the&#xa0;list
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*Current;//&#xa0;The&#xa0;current=
&#xa0;element
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;timestamp;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0=
;//&#xa0;The&#xa0;timestamp&#xa0;of&#xa0;the&#xa0;list&#xa0;when&#xa0;this
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;//&#xa0;iterator&#xa0;was&#xa0;created
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;ElementBuffer[1];//&#xa0;The&#xa0;current=
&#xa0;element&#xa0;if&#xa0;needed
};

</pre></font>
User code should only see and use the public part, as if the iterator was o=
nly the public part. Internally all iterator functions are completely=20
different functions, specific for the container they should iterate. It loo=
ks like from user code, as you were always calling the same function becaus=
e=20
the syntax and name is the same. This allows for a certain abstraction in t=
he source code that uses this functions, allowing to express a whole range=
=20
of algorithms in terms of general concepts.

<div class=3D"p"><!----></div>
Each of the functions that implement <font size=3D"+1"><tt>GetNext</tt></fo=
nt> <font size=3D"+1"><tt>GetFirst</tt></font>, etc starts with a cast of t=
he input argument that is declared as an=20
<font size=3D"+1"><tt>Iterator</tt></font> structure to a concrete containe=
r iterator like our <font size=3D"+1"><tt>ListIterator</tt></font> above.

<div class=3D"p"><!----></div>
In all those structures there is a common ground. They have:

<ol type=3D"1">
<li> A pointer to the container the iterator is using.
<div class=3D"p"><!----></div>
</li>

<li> Some fields for storing the current position within the container, i.e=
. a cursor.
<div class=3D"p"><!----></div>
</li>

<li> A <font size=3D"+1"><tt>timestamp</tt></font> field to detect if the c=
ontainer has changed during the iteration.
<div class=3D"p"><!----></div>
</li>

<li> A buffer that allows the iterator to store an element of the container=
. This area contains a copy of the current element. Normally the
iterators return a pointer to the data of each element, but in the case of =
read only containers a pointer to this area will be returned.=20
This allows to maintain the read only semantics.
<div class=3D"p"><!----></div>
</li>
</ol>
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc3.11">
3.11</a>&#xa0;&#xa0;The timestamp field</h3>
This field will be incremented by each modification of the list. When an it=
erator is created it will copy the current value of the time stamp, and for
each subsequent operation it will compare the value of the container with i=
ts saved copy. They should be always equal, otherwise the iterator will
return always &#xa0;NULL . The only exception to this rule is the iterator =
<font size=3D"+1"><tt>Replace</tt></font> function that will modify the con=
tainer without invalidating
the iterator that calls it. Other iterators to the same container will be i=
nvalidated.

<div class=3D"p"><!----></div>
The timestamp field should be incremented in all operations that somehow mo=
dify the container, not only in the operations that modify the number of=20
elements.


<div class=3D"p"><!----></div>
  <b>Notes:</b>
<div class=3D"p"><!----></div>
Implementation issues

<ul>
<li>There is currently no way to know when you delete a container if there =
are iterators that are still
pointing to it. This could be detected by simply having a counter of the nu=
mber of iterators a container has, but that would mean more overhead for th=
e=20
already fat header objects...
<div class=3D"p"><!----></div>
</li>

<li> The current interface requires that the user calls the <font size=3D"+=
1"><tt>deleteIterator</tt></font> function when you are done using the iter=
ator. This is
a source of memory leaks if you forget
to do it. An easier way to do this would be to maintain a list of current i=
terators, to be freed automatically when the container is=20
destroyed. Obviously this supposes that you do not create thousands of iter=
ators but that you reuse the iterators for different loops.
<div class=3D"p"><!----></div>
</li>
</ul>

 <h2><a name=3D"tth_sEc4">
4</a>&#xa0;&#xa0;The code</h2>
Only one container will be shown here in full: the List container. For the =
others, only some functions will be explained to save space. You are=20
invited to read the distributed code of course that is part of this work.

     <h3><a name=3D"tth_sEc4.1">
4.1</a>&#xa0;&#xa0;List</h3>

<div class=3D"p"><!----></div>
<a name=3D"lists+code41"></a><br>
<b>Add</b><a name=3D"Add+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Add_nd(List&#xa0;*l,void&#xa0;*elem)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*newl;

&#xa0;&#xa0;&#xa0;&#xa0;newl&#xa0;=3D&#xa0;new_link(l,elem,&quot;iList.Add&=
quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(newl&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;&#xa0;0)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;n=
ewl;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last-&gt;Next&#xa0;=
=3D&#xa0;newl;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;newl;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;++l-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

static&#xa0;int&#xa0;Add(List&#xa0;*l,void&#xa0;*elem)
{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;elem&=
#xa0;=3D=3D&#xa0;NULL)&#xa0;return&#xa0;NullPtrError(&quot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;CONTAINER_READONLY)&=
#xa0;return&#xa0;ErrorReadOnly(l,&quot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;Add_nd(l,elem);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&amp;&amp;&#xa0;(l-&gt;Flags&#xa0;&=
amp;&#xa0;CONTAINER_HAS_OBSERVER))
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(l,CCL_ADD,=
elem,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;r;
}

</pre></font>
This function adds one element at the end. The <font size=3D"+1"><tt>Add</t=
t></font> entry point performs the error checking and calls <font size=3D"+=
1"><tt>Add_nd</tt></font> an internal
function that does the actual work. This is needed because other functions =
call internally <font size=3D"+1"><tt>Add</tt></font> after they have alrea=
dy performed
the error checking.

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>Add_nd</tt></font> function requests a new list e=
lement (5). If that suceeds the new element must be inserted in the list.
If the list is empty it just establishes the start of the list (9), if not,=
 it adds it after the last element (12). The new=20
list element is the last one (14). Errors leave the list unchanged. Exclusi=
ve access to the list is needed between the line 8 and the line 16 in the c=
ode.=20
This operation is a modification of the list, and it needs to update the <f=
ont size=3D"+1"><tt>timestamp</tt></font> value to notify possible iterators
that they are invalid.

<div class=3D"p"><!----></div>
If the <font size=3D"+1"><tt>Add_nd</tt></font> function was successfull an=
d this container has a registered observer we notify the observer of this
event.
<br>

<div class=3D"p"><!----></div>
<b>AddRange</b><a name=3D"AddRange+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;AddRange(List&#xa0;*&#xa0;AL,size_t&#xa0;n,&#xa0;void&=
#xa0;*data)
{
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;*p;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*oldLast;
&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL&#xa0;=3D=3D&#xa0;NULL)&#xa0;return&#xa0=
;NullPtrError(&quot;AddRange&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_REA=
DONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;RaiseError(&quot;iLi=
st.AddRange&quot;,CONTAINER_ERROR_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(n&#xa0;=3D=3D&#xa0;0)&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(data&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;RaiseError(&quot;iLi=
st.AddRange&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;=3D&#xa0;data;
&#xa0;&#xa0;&#xa0;&#xa0;oldLast&#xa0;=3D&#xa0;AL-&gt;Last;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(n&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;Ad=
d_nd(AL,p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;AL-=
&gt;Last&#xa0;=3D&#xa0;oldLast;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(AL-&gt;Last)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*removed&#xa0;=3D&#xa0;oldLast-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;while&#xa0;(removed)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*tmp&#xa0;=
=3D&#xa0;removed-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Heap)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iHeap.=
FreeObject(AL-&gt;Heap,removed);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;&#xa0;&#xa0;&#xa0;AL=
-&gt;Allocator-&gt;free(removed);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removed&#xa0;=3D&#xa0;tmp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;AL-&gt;Last-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}&#=
xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;r;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;+=3D&#xa0;AL-&gt;Ele=
mentSize;&#xa0;/*&#xa0;Point&#xa0;to&#xa0;the&#xa0;next&#xa0;element&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n--;&#xa0;/*&#xa0;Count&#xa=
0;the&#xa0;items&#xa0;added&#xa0;so&#xa0;far&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_HAS=
_OBSERVER)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(AL,CCL_ADD=
RANGE,data,(void&#xa0;*)n);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function calls repeatedly <font size=3D"+1"><tt>Add_nd</tt></font> for=
 each element of the given array. Any error provokes an abort and the origi=
nal=20
list is left unchanged.

<div class=3D"p"><!----></div>
Error checking is done in lines 6 to 15, testing for &#xa0;NULL for the lis=
t and the data. If the number of elements is zero the
function does nothing and returns zero. The code accepts data as &#xa0;NULL=
 if the number of elements is zero. If <font size=3D"+1"><tt>n</tt></font> =
is
zero this code still checks  that the list is not &#xa0;NULL , and that the=
 list is not read only, considering both to be errors.
Nothing is specified for those cases and you can&#x27;t rely on this behavi=
or for other implemetations.

<div class=3D"p"><!----></div>
Note that at compile time we do not know the=20
size of each element and we can&#x27;t index into this array. We just setup=
 a generic pointer to the start of the data area (16), and=20
increment it by the size of each element at each iteration (line 35).=20
This implementation supposes that the size of the elements as assumed by th=
e list is the same as the size of then element as assumed by the calling pr=
ogram.

<div class=3D"p"><!----></div>
If an error occurs when adding elements the new elements are discarded, the=
 list is reset to its previous state and an
error code is returned. (lines 20-33). The eventually added elements are di=
scarded (lines 24-30).

<div class=3D"p"><!----></div>

  <b>Notes:</b>
<div class=3D"p"><!----></div>
It would be far more efficient to test at the start of the loop if there is=
 enough space for the
<font size=3D"+1"><tt><i>n</i></tt></font>
list elements than
doing it within the loop. That would eliminate the code for reclaiming the =
already allocated items. This isn&#x27;t done because
the list allocator could be the default malloc function that doesn&#x27;t a=
llow queries of this type.

<div class=3D"p"><!----></div>
<br>
<b>Append</b><a name=3D"Append+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Append(List&#xa0;*l1,List&#xa0;*l2)
{

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;l2&#=
xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;RaiseError(&qu=
ot;iList.Append&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&qu=
ot;iList.Append&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;((l1-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_RE=
ADONLY)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;||&#xa0;(l2-&gt;Flags&#xa0;&amp;&#xa0;C=
ONTAINER_READONLY))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;RaiseError(&quot;iLi=
st.Append&quot;,CONTAINER_ERROR_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l2-&gt;ElementSize&#xa0;!=3D&#xa0;l1-&gt;E=
lementSize)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;RaiseError(&quot;iLi=
st.Append&quot;,CONTAINER_ERROR_INCOMPATIBLE);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_INCOMPATIBLE;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_HAS=
_OBSERVER)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(l1,CCL_APP=
END,l2,NULL);
&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l2-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_HAS=
_OBSERVER)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(l2,CCL_FIN=
ALIZE,NULL,NULL);
&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;count&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;First&#xa0;=3D&#xa0;=
l2-&gt;First;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;Last&#xa0;=3D&#xa0;l=
2-&gt;Last;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(l2-&gt;count&#xa0;&gt;&#xa0;0)&#=
xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l2-&gt;First)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-=
&gt;Last-&gt;Next&#xa0;=3D&#xa0;l2-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l2-&gt;Last)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l1-=
&gt;Last&#xa0;=3D&#xa0;l2-&gt;Last;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;count&#xa0;+=3D&#xa0;l2-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;l1-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;l2-&gt;Allocator-&gt;free(l2);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function  adds the second argument list to the first one. The second l=
ist is destroyed because all its elements are inserted into the first one. =
The result is obtained by pointer manipulation: no data is moved at all, an=
d any pointers to the objects in the second list remain valid.

<div class=3D"p"><!----></div>
Error checking is done in lines 4 to 19. Then, the observer interface is co=
nsidered. Since the second list will be destroyed
a notification is sent to any observers that listen to events in that list.=
 A notification is sent to the first list also,
informing the observers of this event.

<div class=3D"p"><!----></div>
The actual work can then begin (lines 26 to 36):
<font size=3D"+1"><tt><i>l2</i></tt></font>
is appended to
<font size=3D"+1"><tt><i>l1</i></tt></font>
and the list header of
<font size=3D"+1"><tt><i>l2</i></tt></font>
is freed.


<div class=3D"p"><!----></div>
  <b>Notes:</b>
<div class=3D"p"><!----></div>
The test for compatibility between both lists is done with the size of an e=
lement,
assuming elements of the same size are of the same type. This could
very well be false but there is no portable way of test this at run time. A=
nyway, since a container doesn&#x27;t care what is
inside the objects it manages you can store elements of different types but=
 the same size in a single container.

<div class=3D"p"><!----></div>
<br>
<b>Apply</b><a name=3D"Apply+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Apply(List&#xa0;*L,int&#xa0;(Applyfn)(void&#xa0;*,void=
&#xa0;*),void&#xa0;*arg)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*le;
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*pElem=3DNULL;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;Apply=
fn&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&=
gt;RaiseError(&quot;iList.Apply&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iEr=
ror.RaiseError(&quot;iList.Apply&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L-&gt;Flags&amp;CONTAINER_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pElem&#xa0;=3D&#xa0;L-&gt;A=
llocator-&gt;malloc(L-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pElem&#xa0;=3D=3D&=
#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&=
gt;RaiseError(&quot;iList.Apply&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;CONTAINER_ERROR_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(le)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pElem)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;mem=
cpy(pElem,le-&gt;Data,L-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;App=
lyfn(pElem,arg);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;Applyfn(le-&gt;Da=
ta,arg);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;le-&gt;Nex=
t;
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pElem)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;Allocator-&gt;free(pE=
lem);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function calls the given function for each element. If the container i=
s read only, a copy of each element is passed to the called function. This=
=20
copy is allocated with &quot;malloc&quot; because it is used for internal p=
urposes, and the standard allocator for the list could be a heap based, i.e=
. one that=20
doesn&#x27;t really free any memory. That could be a problem if repeated ca=
lls to <font size=3D"+1"><tt>Apply</tt></font> are done.

<div class=3D"p"><!----></div>
This function does not pass any pointer to the called function to mark the =
list as changed if the data passed to it is rewritten. This means that=20
there is no way to let the called function inform the rest of the software =
of any modifications. This can be justified by the fact that only the data,=
=20
not the container itself can be modified, but this can be tricky in multi-t=
hreaded environments. Other implementations could pass some pointer or away=
=20
to inform the rest of the software that a modification has been done.
<br>

<div class=3D"p"><!----></div>
<b>Clear</b><a name=3D"Clear+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Clear_nd(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_HAS_=
OBSERVER)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(l,CCL_CLEA=
R,NULL,NULL);
#ifdef&#xa0;NO_GC
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Heap)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iHeap.Finalize(l-&gt;Heap);
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp&#xa0=
;=3D&#xa0;l-&gt;First,*tmp;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(rvp)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmp=
&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa=
0;(l-&gt;DestructorFn)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;DestructorFn(tmp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;Allocator-&gt;free(tmp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
#endif
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Heap&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;l-&gt;Last&#xa0;=3D&#xa0;=
NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Flags&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}&#xa0;&#xa0;&#xa0;

static&#xa0;int&#xa0;Clear(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NullPtrError(&q=
uot;Clear&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_READ=
ONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.Clear&quot;,CONTAINER_ERROR_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;}&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;Clear_nd(l);
}&#xa0;

</pre></font>
This function should clear all stored elements and reset some fields of the=
 header structure so that the resulting list header is almost the same as w=
hen it was created. The only difference is that any functions like the comp=
arison function or the error function are not cleared. If they were changed=
 by the user they still remain changed.

<div class=3D"p"><!----></div>
Like in other functions we have a no-debug function (named <font size=3D"+1=
"><tt>Clear_nd</tt></font>) that assumes all its parameters are correct, an=
d the=20
official entry point that checks its arguments. If we are compiling with a =
garbage collector in mind we can save us all the
work of releasing each element since the collector will do that automatical=
ly.
<br>

<div class=3D"p"><!----></div>
<b>Copy</b><a name=3D"Copy+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*Copy(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*result;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*elem,*newElem;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;NullPtrError(&quot;Copy&quo=
t;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;iList.CreateWithAllocator(l-&g=
t;ElementSize,l-&gt;Allocator);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.Copy&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Flags&#xa0;=3D&#xa0;l-&gt;Flags;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;VTable&#xa0;=3D&#xa0;l-&gt;VTable;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Compare&#xa0;=3D&#xa0;l-&gt;Compare;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;RaiseError&#xa0;=3D&#xa0;l-&gt;RaiseErro=
r;
&#xa0;&#xa0;&#xa0;&#xa0;elem&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(elem)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;newElem&#xa0;=3D&#xa0;new_l=
ink(result,elem-&gt;Data,&quot;iList.Copy&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(newElem&#xa0;=3D=
=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;RaiseError(&quot;iList.Copy&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult-&gt;VTable-&gt;Finalize(result);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(elem&#xa0;=3D=3D&#=
xa0;l-&gt;First)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult-&gt;First&#xa0;=3D&#xa0;newElem;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult-&gt;count++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult-&gt;Last-&gt;Next&#xa0;=3D&#xa0;newElem;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult-&gt;count++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Last&#xa0;=3D&#x=
a0;newElem;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;elem&#xa0;=3D&#xa0;elem-&gt=
;Next;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_HAS_=
OBSERVER)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iObserver.Notify(l,CCL_COPY=
,result,NULL);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}


</pre></font>
This function requires a non null list pointer. It creates a header structu=
re, and fills some of it fields with the corresponding fields of the source=
 list:

<ol type=3D"1">
<li> The allocator
<div class=3D"p"><!----></div>
</li>

<li> The flags.
<div class=3D"p"><!----></div>
</li>

<li> The table of functions. This is necessary in case some of those functi=
ons have been sub-classed.
<div class=3D"p"><!----></div>
</li>

<li> The comparison function
<div class=3D"p"><!----></div>
</li>

<li> The error function
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
Note that the timestamp is not copied, and starts in the copy with zero.

<div class=3D"p"><!----></div>
If an error occurs during the copy, probably because of lack of memory, the=
 new list is destroyed and the result is &#xa0;NULL .
Otherwise elements are added at the growing end of the list.
<br>

<div class=3D"p"><!----></div>
<b>Contains</b><a name=3D"Contains+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Contains(List&#xa0;*l,void&#xa0;*data)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;(IndexOf(l,data,NULL,&amp;idx)&#xa0;&lt=
;&#xa0;0)&#xa0;?&#xa0;0&#xa0;:&#xa0;1;
}

</pre></font>
The <font size=3D"+1"><tt>Contains</tt></font> function is just a cover fun=
ction for <font size=3D"+1"><tt>IndexOf</tt></font>.
<br>

<div class=3D"p"><!----></div>
<b>CopyElement</b><a name=3D"CopyElement+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;CopyElement(List&#xa0;*l,size_t&#xa0;position,void&#xa=
0;*outBuffer)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;

&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;Error&#xa0;checking&#xa0;ellided&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(position)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;position--;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memcpy(outBuffer,rvp-&gt;Data,l-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
After the error checking, this function positions at the given element and =
copies its contents into the  given buffer.
Other designs are obviously possible.=20

<ul>
<li> This function could return a newly allocated buffer. This poses other =
problems like the type of allocator to use. If we use the list allocator we=
 could run into problems if it is a specialized allocator that is designed =
for allocating list elements from a pool where no &#x27;free&#x27; operatio=
n exists. Another, more important problem with that solution is that it for=
ces an allocation when none is necessary if the buffer you use is stack bas=
ed.
<div class=3D"p"><!----></div>
</li>

<li> The function could require the buffer length to be sure there are no b=
uffer overflows. This solution was discarded because it actually increases =
the chances of errors: you have to pass the size of the buffer, and if you =
pass the wrong one more problems arise. Is it an error if you pass more spa=
ce than is actually needed? It could be an error if the passed size differs=
 from the size of the elements stored or it could be just a consequence tha=
t you used the <font size=3D"+1"><tt>sizeof(buffer)</tt></font> expression =
with a bigger buffer than necessary.
<div class=3D"p"><!----></div>
</li>
</ul>
<br>

<div class=3D"p"><!----></div>
<b>Create</b><a name=3D"Create+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*Create(size_t&#xa0;elementsize)
{
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CreateWithAllocator(elementsize,Current=
Allocator);
}

</pre></font>
This function just calls <font size=3D"+1"><tt>CreateWithAllocator</tt></fo=
nt> using the current memory manager.
<br>

<div class=3D"p"><!----></div>
<b>CreateWithAllocator</b><a name=3D"CreateWithAllocator+code for \containe=
r41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*CreateWithAllocator(size_t&#xa0;elementsize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAll=
ocator&#xa0;*allocator)
{
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*result;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(elementsize&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Create&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;allocator-&gt;malloc(sizeof(Li=
st));
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Create&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memset(result,0,sizeof(List));
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;ElementSize&#xa0;=3D&#xa0;elementsize;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;VTable&#xa0;=3D&#xa0;&amp;iList;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Compare&#xa0;=3D&#xa0;DefaultListCompare=
Function;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;RaiseError&#xa0;=3D&#xa0;iError.RaiseErr=
or;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Allocator&#xa0;=3D&#xa0;allocator;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
After doing some error checking, the creation function allocates and initia=
lizes the new container with its default values.

<div class=3D"p"><!----></div>
A big question is the alignment problem for the given size. This can&#x27;t=
 be checked and could lead to problems if you pass to this function any arg=
ument that is not the product of a sizeof expression.
<br>

<div class=3D"p"><!----></div>
<b>DefaultListCompareFunction</b><a name=3D"DefaultListCompareFunction+code=
 for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;DefaultListCompareFunction(const&#xa0;void&#xa0;*left,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;const&#xa0;void&#xa0;*right,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;CompareInfo&#xa0;*ExtraArgs)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;siz=3D((List&#x=
a0;*)ExtraArgs-&gt;Container)-&gt;ElementSize;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;memcmp(left,rig=
ht,siz);
}

</pre></font>
The default element compare function is just a cover for <font size=3D"+1">=
<tt>memcmp</tt></font>. It is assumed that the user will replace it with a =
comparison function of its own if necessary.
<br>

<div class=3D"p"><!----></div>
<b>DefaultListLoadFunction</b><a name=3D"DefaultListLoadFunction+code for \=
container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;size_t&#xa0;DefaultLoadFunction(void&#xa0;*element,void&#xa0;*a=
rg,&#xa0;FILE&#xa0;*Infile)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;len&#xa0;=3D&#xa0;*(size_t&#xa0;*)arg;

&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;fread(element,1,len,Infile);
}

</pre></font>
This function just reads an element from the disk file. Returns the result =
value of <font size=3D"+1"><tt>fread</tt></font>, what is OK for our purpos=
es.
<br>

<div class=3D"p"><!----></div>
<b>DefaultSaveFunction</b><a name=3D"DefaultSaveFunction+code for \containe=
r41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;size_t&#xa0;DefaultSaveFunction(const&#xa0;void&#xa0;*element,v=
oid&#xa0;*arg,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;FILE&#xa0;*Outfile)
{
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;unsigned&#xa0;char&#xa0;*str&#xa0;=3D&#x=
a0;element;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;len&#xa0;=3D&#xa0;*(size_t&#xa0;*)arg;

&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;fwrite(str,1,len,Outfile);
}

</pre></font>
This function just writes the given element to the disk. Together with the =
default load function they allow for a very effective serialization package=
 for containers. Obviously here we have a shallow copy, and all this will n=
ever work for recursive saves, i.e. for elements that contain pointers.
<br>

<div class=3D"p"><!----></div>
<b>deleteIterator</b><a name=3D"deleteIterator+code for \container41"></a> =
<hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;deleteIterator(Iterator&#xa0;*it)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(it&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;del=
eteIterator&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;li&#xa0;=3D&#xa0;(struct&#xa0;ListIterator&#xa0;*)i=
t;
&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;li-&gt;L;
&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;Allocator-&gt;free(it);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This routine retrieves the list header object from the hidden part of the i=
terator and uses its allocator object to free the memory used by the iterat=
or.

<div class=3D"p"><!----></div>
The functions <font size=3D"+1"><tt>NewIterator</tt></font> and <font size=
=3D"+1"><tt>deleteIterator</tt></font> should occur in pairs like many othe=
rs in C: malloc and free, fopen and fclose, etc. It would be very easy to h=
ave in the header object a counter of iterators that should be zero when th=
e list is destroyed or cleared.
<br>

<div class=3D"p"><!----></div>
<b>Equal</b><a name=3D"Equal+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Equal(List&#xa0;*l1,List&#xa0;*l2)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*link1,*link2;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn;
&#xa0;&#xa0;&#xa0;&#xa0;CompareInfo&#xa0;ci;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1&#xa0;=3D=3D&#xa0;l2)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;l2&#=
xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;count&#xa0;!=3D&#xa0;l2-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;ElementSize&#xa0;!=3D&#xa0;l2-&gt;E=
lementSize)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;Compare&#xa0;!=3D&#xa0;l2-&gt;Compa=
re)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l1-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;fn&#xa0;=3D&#xa0;l1-&gt;Compare;
&#xa0;&#xa0;&#xa0;&#xa0;link1&#xa0;=3D&#xa0;l1-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;link2&#xa0;=3D&#xa0;l2-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;ci.Container&#xa0;=3D&#xa0;l1;
&#xa0;&#xa0;&#xa0;&#xa0;ci.ExtraArgs&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(link1&#xa0;&amp;&amp;&#xa0;link2)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(fn(link1-&gt;Data,=
link2-&gt;Data,&amp;ci))
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;link1&#xa0;=3D&#xa0;link1-&=
gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;link2&#xa0;=3D&#xa0;link2-&=
gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(link1&#xa0;||&#xa0;link2)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
If two null pointers are passed to the <font size=3D"+1"><tt>Equal</tt></fo=
nt> function it returns true. This is a design decision: <font size=3D"+1">=
<tt>Equal</tt></font> doesn&#x27;t have any error result. Either the two ob=
jects are equal or not.

<div class=3D"p"><!----></div>
A redundant test is done at the end of the function: if the lists have the =
same count and all elements are equal, link1 and link2 should be &#xa0;NULL=
 . If they aren&#x27;t that means there is a memory overwrite problem somew=
here...
<br>

<div class=3D"p"><!----></div>
<b>Erase</b><a name=3D"Erase+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Erase(List&#xa0;*l,void&#xa0;*elem)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Erase&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(elem&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.Erase&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOTFOUND;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;i&#xa0;=3D&#xa0;IndexOf(l,elem,NULL,&amp;idx);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(i&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;RemoveAt(l,idx);
}

</pre></font>
This is a very inefficient implementation. The list will be traversed twice=
, the first by <font size=3D"+1"><tt>IndexOf</tt></font>, and the second by=
 <font size=3D"+1"><tt>RemoveAt</tt></font>. The obvious solution is to mer=
ge both into one function.
<br>

<div class=3D"p"><!----></div>
<b>EraseRange</b><a name=3D"EraseRange+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;EraseRange(List&#xa0;*l,size_t&#xa0;start,size_t&#xa0;=
end)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp,*start_pos,*tmp;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;toremove;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(end&#xa0;&gt;&#xa0;l-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;end&#xa0;=3D&#xa0;l-&gt;cou=
nt;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(start&#xa0;&gt;=3D&#xa0;l-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(start&#xa0;&gt;=3D&#xa0;end)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;toremove&#xa0;=3D&#xa0;end&#xa0;-&#xa0;start+1;
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(rvp&#xa0;&amp;&amp;&#xa0;start&#xa0;&gt=
;&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;start--;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;start_pos&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(toremove&#xa0;&gt;&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Heap)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iHe=
ap.FreeObject(l-&gt;Heap,rvp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;Allocator-&gt;free(rvp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;tmp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;toremove--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count--;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;start_pos-&gt;Next&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}
</pre></font>
This function positions the cursor <a href=3D"#tthFtNtAGF" name=3D"tthFrefA=
GF"><sup>65</sup></a> at the element before
the one where the range starts, and then erases until it reaches the end of=
 the range.
<br>

<div class=3D"p"><!----></div>
<b>Finalize</b><a name=3D"Finalize+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Finalize(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;t=3D0;

&#xa0;&#xa0;&#xa0;&#xa0;t&#xa0;=3D&#xa0;Clear(l);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(t&#xa0;&lt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;t;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Allocator-&gt;free(l);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function should free the memory used by the header object. It is funda=
mental that this will never be done with an object not allocated with that =
iterator in the first place, i.e. when the user has called <font size=3D"+1=
"><tt>Init</tt></font> instead of <font size=3D"+1"><tt>Create</tt></font>.=
 This can&#x27;t be tested in a portable manner since there is no function =
to verify that a given memory space belongs or not to a given allocator.<a =
href=3D"#tthFtNtAGG" name=3D"tthFrefAGG"><sup>66</sup></a>
<br>

<div class=3D"p"><!----></div>
<b>GetCurrent</b><a name=3D"GetCurrent+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*GetCurrent(Iterator&#xa0;*it)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li&#xa0;=3D&#xa0;(st=
ruct&#xa0;ListIterator&#xa0;*)it;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;L-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;&#xa0;&#xa=
0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;index&#xa0;=3D=3D&#xa0;(size_t)-1)&=
#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;L-&gt;RaiseError(&qu=
ot;GetCurrent&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;L-&gt;Flags&#xa0;&amp;&#xa0;CONTAIN=
ER_LIST_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;li-&gt;ElementB=
uffer;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;li-&gt;Current-&gt;Data;
}

</pre></font>
Returns the current object pointed by the given iterator. This function sho=
uld be called only after <font size=3D"+1"><tt>GetFirst</tt></font> is call=
ed. It verifies this by testing if a correct value is stored in the <font s=
ize=3D"+1"><tt>index</tt></font> field. This value is stored by the <font s=
ize=3D"+1"><tt>NewIterator</tt></font> function. This simple algorithm avoi=
ds the usage of an uninitialized iterator at the cost of one integer compar=
ison per call.

<div class=3D"p"><!----></div>
<br>
<b>GetFirst</b><a name=3D"GetFirst+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*GetFirst(Iterator&#xa0;*it)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li&#xa0;=3D&#xa0;(st=
ruct&#xa0;ListIterator&#xa0;*)it;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;


&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;li-&gt;L;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;timestamp&#xa0;!=3D&#xa0;L-&gt;time=
stamp)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;RaiseError(&quot;iLis=
t.GetFirst&quot;,CONTAINER_ERROR_OBJECT_CHANGED);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa0;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_LIST=
_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;memcpy(li-&gt;ElementBuffer=
,L-&gt;First-&gt;Data,L-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;li-&gt;ElementB=
uffer;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;L-&gt;First-&gt;Data;
}

</pre></font>
This function should set the iteration at the first element of the containe=
r, ready to get the iteration started. After the error checking phase it re=
turns a pointer to the data in the first element, or a pointer to a copy of=
 that data if the container is read only.
<br>

<div class=3D"p"><!----></div>
<b>GetFlags</b><a name=3D"GetFlags+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;unsigned&#xa0;GetFlags(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iEr=
ror.RaiseError(&quot;iList.GetFlags&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;(unsigned)CONTAINER_ERROR_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;l-&gt;Flags;
}

</pre></font>
Just returns the value of the flags.
<br>

<div class=3D"p"><!----></div>
<b>GetNext</b><a name=3D"GetNext+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*GetNext(Iterator&#xa0;*it)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li&#xa0;=3D&#xa0;(st=
ruct&#xa0;ListIterator&#xa0;*)it;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*result;


&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.GetNext&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;li-&gt;L;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;index&#xa0;&gt;=3D&#xa0;(L-&gt;coun=
t-1)&#xa0;||&#xa0;li-&gt;Current&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;L-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;timestamp&#xa0;!=3D&#xa0;L-&gt;time=
stamp)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;RaiseError(&quot;GetN=
ext&quot;,CONTAINER_ERROR_OBJECT_CHANGED);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa0;li-&gt;Current-&gt;Nex=
t;
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index++;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_LIST=
_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;memcpy(li-&gt;ElementBuffer=
,li-&gt;Current-&gt;Data,L-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;li-&gt;ElementB=
uffer;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;li-&gt;Current-&gt;Data;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
Advances the cursor to the next element and returns either a pointer to it =
or a pointer to a copy if the list is read only. The test for the cursor be=
ing &#xa0;NULL avoids using <font size=3D"+1"><tt>GetNext</tt></font> with =
an uninitialized iterator.
<br>

<div class=3D"p"><!----></div>
<b>GetPrevious</b><a name=3D"GetPrevious+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*GetPrevious(Iterator&#xa0;*it)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li&#xa0;=3D&#xa0;(st=
ruct&#xa0;ListIterator&#xa0;*)it;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*L;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;

&#xa0;&#xa0;&#xa0;&#xa0;L&#xa0;=3D&#xa0;li-&gt;L;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;index&#xa0;&gt;=3D&#xa0;L-&gt;count=
&#xa0;||&#xa0;li-&gt;index&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;timestamp&#xa0;!=3D&#xa0;L-&gt;time=
stamp)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;RaiseError(&quot;GetP=
revious&quot;,CONTAINER_ERROR_OBJECT_CHANGED);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;i=3D0;
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index--;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;index&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(rvp&#xa0;&amp;&=
amp;&#xa0;i&#xa0;&lt;&#xa0;li-&gt;index)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;i++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;rvp-&gt;Data;
}

</pre></font>
There were heated discussions about this function. In single linked lists i=
t is necessary to go through the whole list at each call to this function. =
This is extremely inefficient and its usage should be avoided, it is much b=
etter to use double linked lists if you are interested in bi-directional cu=
rsor positioning. In the other hand this should be a required iterator feat=
ure, and rather than filling this function pointer with a function that jus=
t returns an error, the user is better served with a function that actually=
 returns the previous item. Besides for short lists the performance lost is=
 quite small, and would justify using lists with smaller overhead per item.=
<a href=3D"#tthFtNtAGH" name=3D"tthFrefAGH"><sup>67</sup></a>.
<br>

<div class=3D"p"><!----></div>
<b>GetRange</b><a name=3D"GetRange+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*GetRange(List&#xa0;*l,size_t&#xa0;start,size_t&#xa0;=
end)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;counter;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*result;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;;

&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;iList.Create(l-&gt;ElementSize=
);
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;VTable&#xa0;=3D&#xa0;l-&gt;VTable;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(end&#xa0;&gt;=3D&#xa0;l-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;end&#xa0;=3D&#xa0;l-&gt;cou=
nt;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(start&#xa0;&gt;&#xa0;end&#xa0;||&#xa0;star=
t&#xa0;&gt;&#xa0;l-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(start&#xa0;=3D=3D&#xa0;l-&gt;count-1)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;Las=
t;
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;Fir=
st;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;counter&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(counter&#xa0;&l=
t;&#xa0;start)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;cou=
nter++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(start&#xa0;&lt;&#xa0;end&#xa0;&amp;&amp=
;&#xa0;rvp&#xa0;!=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;re=
sult-&gt;VTable-&gt;Add(result,&amp;rvp-&gt;Data);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Fin=
alize(result);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;res=
ult&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;start++;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
A new list is constructed from the given range of elements. The elements ar=
e copied. Any error during the construction of the new list provokes a &#xa=
0;NULL result: the copied elements are destroyed. Only correctly constructe=
d ranges are returned. A recurring problem arises because it is impossible =
to report any details about the error that stops the copy. The result is ac=
tually boolean, either everything worked and there is a non &#xa0;NULL resu=
lt, or something didn&#x27;t.=20

<div class=3D"p"><!----></div>
An alternative design would have an integer return code, and a pointer to a=
 result. This option was discarded because it is cumbersome and the most li=
kely reason for <font size=3D"+1"><tt>Add</tt></font> to fail is lack of me=
mory.
<br>

<div class=3D"p"><!----></div>
<b>IndexOf</b><a name=3D"IndexOf+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;IndexOf(List&#xa0;*l,void&#xa0;*ElementToFind,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs,size_t&#xa0;*re=
sult)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r,i=3D0;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn;
&#xa0;&#xa0;&#xa0;&#xa0;CompareInfo&#xa0;ci;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;Eleme=
ntToFind&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;RaiseError(&quot;iList.IndexOf&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iEr=
ror.RaiseError(&quot;iList.IndexOf&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;fn&#xa0;=3D&#xa0;l-&gt;Compare;
&#xa0;&#xa0;&#xa0;&#xa0;ci.Container&#xa0;=3D&#xa0;l;
&#xa0;&#xa0;&#xa0;&#xa0;ci.ExtraArgs&#xa0;=3D&#xa0;ExtraArgs;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(rvp)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;fn(&amp;rvp=
-&gt;Data,ElementToFind,&amp;ci);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0=
;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;*re=
sult&#xa0;=3D&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;i++;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_NOTFOUND;
}

</pre></font>
The design of this function went through several iterations. The big proble=
m was the result type: a <font size=3D"+1"><tt>size_t</tt></font>, that in =
most cases is an unsigned quantity. A negative error result then was out of=
 the question. But then, how would you indicate an error? <a href=3D"#tthFt=
NtAGI" name=3D"tthFrefAGI"><sup>68</sup></a>

<div class=3D"p"><!----></div>
A first solution was to return a 1 based index and reserve zero for the &#x=
27;not found&#x27; value. That could work, but was the source of many bugs =
in the rest of the software when the value was used without decrementing it=
 first.=20

<div class=3D"p"><!----></div>
A second solution was to reserve a value within the <font size=3D"+1"><tt>s=
ize_t</tt></font> range to represent the &#x27;not found&#x27; result. That=
 works, and it is doable, but produced other, more subtle, problems in the =
rest of the sofwtare since in all checks of a size_t, it could be that <i>t=
his</i> size_t has a value that is actually the sentinel value of <font siz=
e=3D"+1"><tt>IndexOf</tt></font>: the tests tended to multiply and the hand=
ling of those tests started to become a problem.

<div class=3D"p"><!----></div>
Here you see the third iteration: the function receives a pointer to a size=
_t that will be set if the function returns with a result greater than zero.

<div class=3D"p"><!----></div>
Another, completely different issue is the fact that in lists, this functio=
n is inefficient since it forces the function that uses the result to resta=
rt a list traversal to access the nth element. Much more efficient would be=
 to do something immediately with the result, or to return a list element t=
hat allows the calling software to use it without going again through the l=
ist.=20

<div class=3D"p"><!----></div>
Problems with those solutions is that they are not portable, and that they =
would expose the inner workings of the list container to the users. The <fo=
nt size=3D"+1"><tt>list_element</tt></font> structure is not even mentioned=
 in the public containers.h.

<div class=3D"p"><!----></div>
<br>
<b>InitWithAllocator</b><a name=3D"InitWithAllocator+code for \container41"=
></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*InitWithAllocator(List&#xa0;*result,size_t&#xa0;elem=
entsize,
	&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAl=
locator&#xa0;*allocator)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(elementsize&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Init&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memset(result,0,sizeof(List));
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;ElementSize&#xa0;=3D&#xa0;elementsize;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;VTable&#xa0;=3D&#xa0;&amp;iList;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Compare&#xa0;=3D&#xa0;DefaultListCompare=
Function;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;RaiseError&#xa0;=3D&#xa0;iError.RaiseErr=
or;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Allocator&#xa0;=3D&#xa0;allocator;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
This function initializes a piece of storage to a list container. This allo=
ws the user to use stack storage for the list container, saving an allocati=
on from the heap, and the corresponding need to free that storage.
<br>

<div class=3D"p"><!----></div>
<b>Init</b><a name=3D"Init+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*Init(List&#xa0;*result,size_t&#xa0;elementsize)
{
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;InitWithAllocator(result,elementsize,Cu=
rrentAllocator);
}

</pre></font>
Uses the current memory manager to call InitWithAllocator.
<br>

<div class=3D"p"><!----></div>
<b>InsertAt</b><a name=3D"InsertAt+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;InsertAt(List&#xa0;*l,size_t&#xa0;pos,void&#xa0;*pdata)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*elem;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;pdata=
&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;RaiseError(&quot;iList.InsertAt&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iEr=
ror.RaiseError(&quot;iList.InsertAt&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pos&#xa0;&gt;&#xa0;l-&gt;count)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertAt&quot;,CONTAINER_ERROR_INDEX);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_INDEX;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_LIST=
_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertAt&quot;,CONTAINER_ERROR_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pos&#xa0;=3D=3D&#xa0;l-&gt;count)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;l-&gt;VTable-&g=
t;Add(l,pdata);
&#xa0;&#xa0;&#xa0;&#xa0;}

&#xa0;&#xa0;&#xa0;&#xa0;elem&#xa0;=3D&#xa0;new_link(l,pdata,&quot;iList.&#x=
a0;InsertAt&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(elem&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertAt&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pos&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;elem-&gt;Next&#xa0;=3D&#xa0=
;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;e=
lem;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp&#xa0=
;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(--pos&#xa0;&gt;=
&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;elem-&gt;Next&#xa0;=3D&#xa0=
;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp-&gt;Next&#xa0;=3D&#xa0;=
elem;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count++;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This inserts before the given index. It would have been equally possible to=
 insert after, that is a more or less random decision.
<br>

<div class=3D"p"><!----></div>
<b>InsertIn</b><a name=3D"InsertIn+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;InsertIn(List&#xa0;*l,&#xa0;size_t&#xa0;idx,List&#xa0;=
*newData)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;newCount;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*le,*nle;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&gt;&#xa0;l-&gt;count)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertIn&quot;,CONTAINER_ERROR_INDEX);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_INDEX;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;ElementSize&#xa0;!=3D&#xa0;newData-&=
gt;ElementSize)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertIn&quot;,CONTAINER_ERROR_INCOMPATIBLE);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_INCOMPATIBLE;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(newData-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;newData&#xa0;=3D&#xa0;Copy(newData);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(newData&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.InsertIn&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;newCount&#xa0;=3D&#xa0;l-&gt;count&#xa0;+&#xa0;newD=
ata-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;n=
ewData-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;ne=
wData-&gt;Last;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;l-&gt;Firs=
t;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(le&#xa0;&amp;&a=
mp;&#xa0;idx&#xa0;&gt;&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;le&=
#xa0;=3D&#xa0;le-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idx=
--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;nle&#xa0;=3D&#xa0;le-&gt;Ne=
xt;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;le-&gt;Next&#xa0;=3D&#xa0;n=
ewData-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;newData-&gt;Last-&gt;Next&#=
xa0;=3D&#xa0;nle;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;newData-&gt;Allocator-&gt;free(newData);
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count&#xa0;=3D&#xa0;newCount;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
Inserts the given list at the specified position.

<ol type=3D"1">
<li> Error checking. First argument must be non &#xa0;NULL and read/write. =
Second must be non &#xa0;NULL .
<div class=3D"p"><!----></div>
</li>

<li> If the position given is exactly the same as the length of the receivi=
ng list, the second list is just appended to the first one.
<div class=3D"p"><!----></div>
</li>

<li> Otherwise search the position and insert a copy of the elements in the=
 second list.
<div class=3D"p"><!----></div>
</li>
</ol>
<br>

<div class=3D"p"><!----></div>
<b>Load</b><a name=3D"Load+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;List&#xa0;*Load(FILE&#xa0;*stream,&#xa0;ReadFunction&#xa0;loadF=
n,void&#xa0;*arg)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i,elemSize;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*result,L;
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*buf;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r;
&#xa0;&#xa0;&#xa0;&#xa0;guid&#xa0;Guid;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(loadFn&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;loadFn&#xa0;=3D&#xa0;Defaul=
tLoadFunction;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;arg&#xa0;=3D&#xa0;&amp;elem=
Size;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(fread(&amp;Guid,sizeof(guid),1,stream)&#xa=
0;&lt;=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,CONTAINER_ERROR_FILE_READ);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(memcmp(&amp;Guid,&amp;ListGuid,sizeof(guid=
)))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,CONTAINER_ERROR_WRONGFILE);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(fread(&amp;L,1,sizeof(List),stream)&#xa0;&=
lt;=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,CONTAINER_ERROR_FILE_READ);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;elemSize&#xa0;=3D&#xa0;L.ElementSize;
&#xa0;&#xa0;&#xa0;&#xa0;buf&#xa0;=3D&#xa0;malloc(L.ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(buf&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;iList.Create(L.ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Flags&#xa0;=3D&#xa0;L.Flags;
&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&#xa0;&lt;&#xa0;L.count;&#xa=
0;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(loadFn(buf,arg,str=
eam)&#xa0;&lt;=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;r&#=
xa0;=3D&#xa0;CONTAINER_ERROR_FILE_READ;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;((r=3DAdd(result,bu=
f))&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;free(buf);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&lt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Load&quot;,r);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(result);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>

<div class=3D"p"><!----></div>
The load function is long and complex. As always, the process starts with e=
rror checking. All streams written to by its counterpart <font size=3D"+1">=
<tt>Save</tt></font> are=20
marked with a container specific globally unique identifier (GUID). This en=
sures that a load function from the list container will not crash if passed=
 a file that belongs to an array or a dictionary, or a totally unrelated fi=
le. The guids can be changed to mark the versions of the software and
allow more advanced versions to read older versions.<a name=3D"guid41"></a>

<div class=3D"p"><!----></div>
Then, the header object is read, what gives the data to continue the proces=
s, since we now know the number of elements and the size of each element.

<div class=3D"p"><!----></div>
A new list is created with the given element size, and we start reading <i>=
count</i> elements from the stream. Any error provokes the destruction of t=
he elements read so far and a result of NULL.
<br>

<div class=3D"p"><!----></div>
<b>NewIterator</b><a name=3D"NewIterator+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;Iterator&#xa0;*NewIterator(List&#xa0;*L)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*result;
&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.NewIterator&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;L-&gt;Allocator-&gt;malloc(siz=
eof(struct&#xa0;ListIterator));
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;RaiseError(&quot;iLis=
t.NewIterator&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;it.GetNext&#xa0;=3D&#xa0;GetNext;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;it.GetPrevious&#xa0;=3D&#xa0;GetPrevious;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;it.GetFirst&#xa0;=3D&#xa0;GetFirst;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;it.GetCurrent&#xa0;=3D&#xa0;GetCurrent;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;L&#xa0;=3D&#xa0;L;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;timestamp&#xa0;=3D&#xa0;L-&gt;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;index&#xa0;=3D&#xa0;(size_t)-1;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Current&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;&amp;result-&gt;it;
}

</pre></font>
The creation of a new iterator involves just allocating and initializing va=
lues to their defaults.
<br>

<div class=3D"p"><!----></div>
<b>PopFront</b><a name=3D"PopFront+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;PopFront(List&#xa0;*l,void&#xa0;*result)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*le;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;le&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=3D=3D&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;l=
-&gt;Last&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;l-&gt;First&#xa0;=3D&#xa0;l-&gt;First-&gt=
;Next;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count--;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;memcpy(result,&amp;le-&gt;D=
ata,l-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Heap)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iHeap.FreeObject(l-&gt;Heap=
,le);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;l-&gt;Allocator-&gt;free(le);
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
Contrary to most versions of this function, <font size=3D"+1"><tt>PopFront<=
/tt></font> does not return the data of the element but stores it in a poin=
ter that it receives. If the pointer is &#xa0;NULL , the data is just disca=
rded.

<div class=3D"p"><!----></div>
The problem with returning a pointer to the first element, is that the user=
 code should remember to discard it when no longer needed, and it should di=
scard it using the same allocator that the list used to allocate it. That w=
ould be a very error prone interface.
<br>

<div class=3D"p"><!----></div>
<b>PushFront</b><a name=3D"PushFront+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;PushFront(List&#xa0;*l,void&#xa0;*pdata)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;

&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;new_link(l,pdata,&quot;Insert&quo=
t;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(rvp&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;rvp-&gt;Next&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Last&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;rv=
p;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count++;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
Lists are a good base to implement a stack. PushFront and PopFront take a c=
onstant and small time to complete and they would be much smaller if we wou=
ld eliminate the error checking.
<br>

<div class=3D"p"><!----></div>
<b>RemoveAt</b><a name=3D"RemoveAt+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;RemoveAt(List&#xa0;*l,size_t&#xa0;position)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp,*last,*removed;


&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(position&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removed&#xa0;=3D&#xa0;l-&gt=
;First;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;=
=3D=3D&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;First&#xa0;=3D&#xa0;l-&gt;Last&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&=
gt;First&#xa0;=3D&#xa0;l-&gt;First-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(position&#xa0;=3D=3D&#xa0;l-&gt;=
count&#xa0;-&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(rvp-&gt;Next&#x=
a0;!=3D&#xa0;l-&gt;Last)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removed&#xa0;=3D&#xa0;rvp-&=
gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp-&gt;Next&#xa0;=3D&#xa0;=
NULL;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;rv=
p;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(position&#xa0;&=
gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;las=
t&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pos=
ition&#xa0;--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;removed&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last-&gt;Next&#xa0;=3D&#xa0=
;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Heap)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iHeap.FreeObject(l-&gt;Heap=
,removed);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;l-&gt;Allocator-&gt;free(removed);
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;--l-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
The operation when <font size=3D"+1"><tt>RemoveAt</tt></font> is called wit=
h the index of the last element is equivalent to the <font size=3D"+1"><tt>=
PopBack</tt></font> function, that is absent in the single linked list inte=
rface. After much discussions, we decided that the generic interface would =
have only Push and Pop, and that each container would fill those functions =
with the most efficient implementation available for it. For lists, the mos=
t efficient implementation is PopFront and PushFront. For arrays, the most =
efficient is PushBack and PopBack. For double linked lists is either.
<br>

<div class=3D"p"><!----></div>
<b>ReplaceAt</b><a name=3D"ReplaceAt+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;ReplaceAt(List&#xa0;*l,size_t&#xa0;position,void&#xa0;=
*data)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(position&#xa0;=3D=3D&#xa0;l-&gt;count-1)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;Las=
t;
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;Fir=
st;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(position)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pos=
ition--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memcpy(&amp;rvp-&gt;Data&#xa0;,&#xa0;data,l-&gt;Ele=
mentSize);
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
After error checking (not shown), position the cursor at the right item, th=
en copy from the given data pointer the element size bytes needed.

<div class=3D"p"><!----></div>
An open issue is whether the &quot;timestamp&quot; field should be changed.=
 Nothing in the list structure has been changed, only the data stored in th=
e container. Any iterators will go on working as advertised even if this fu=
nction is called to replace many items in the list. In the other hand, if  =
user programs were making assumptions about the data (for instance a search=
 function doesn&#x27;t always look again at past items to see if they have =
been changed) this could bad consequences. As a rule, any change will provo=
ke the incrementing of the &quot;timestamp&quot; counter.
<br>

<div class=3D"p"><!----></div>
<b>Reverse</b><a name=3D"Reverse+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Reverse(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*New,*current,*old;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;&lt;&#xa0;2)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;old&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;New&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(old)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;current&#xa0;=3D&#xa0;old;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;old&#xa0;=3D&#xa0;old-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;current-&gt;Next&#xa0;=3D&#=
xa0;New;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;New&#xa0;=3D&#xa0;current;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;New;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
After the error checking, the list is reversed in place if the count of its=
 element is bigger than 1.<a href=3D"#tthFtNtAGJ" name=3D"tthFrefAGJ"><sup>=
69</sup></a>
<br>

<div class=3D"p"><!----></div>
<b>RotateLeft</b><a name=3D"RotateLeft+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;RotateLeft(List&#xa0;*l,&#xa0;size_t&#xa0;n)
{
&#xa0;&#xa0;&#xa0;&#xa0;ListElement&#xa0;*rvp,*oldStart,*last=3DNULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;return&#xa0;=
NullPtrError(&quot;RotateLeft&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_READ=
ONLY)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;ErrorReadOnly(l=
,&quot;RotateLeft&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;&lt;&#xa0;2&#xa0;||&#xa0;=
n&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;n&#xa0;%=3D&#xa0;l-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(n&#xa0;=3D=3D&#xa0;0)&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;oldStart&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(n&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n--;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;last-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last-&gt;Next&#xa0;=3D&#xa0;oldStart;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;last;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
The <font size=3D"+1"><tt>RotateLeft</tt></font> and the <font size=3D"+1">=
<tt>RotateRight</tt></font>functions can be implemented without any movemen=
t of the stored objects themselves. It suffices to make the list start at a=
nother place: <i>n</i> places after the start for left rotates, or n places=
 before the end for right rotates.
<br>

<div class=3D"p"><!----></div>
<b>RotateRight</b><a name=3D"RotateRight+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;RotateRight(List&#xa0;*l,&#xa0;size_t&#xa0;n)
{
&#xa0;&#xa0;&#xa0;&#xa0;ListElement&#xa0;*rvp,*oldStart,*last=3DNULL;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;return&#xa0;=
NullPtrError(&quot;RotateRight&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_READ=
ONLY)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;ErrorReadOnly(l=
,&quot;RotateRight&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;&lt;&#xa0;2&#xa0;||&#xa0;=
n&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;n&#xa0;%=3D&#xa0;l-&gt;count;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(n&#xa0;=3D=3D&#xa0;0)&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;oldStart&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;n&#xa0;=3D&#xa0;l-&gt;count&#xa0;-&#xa0;n;
&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(n&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n--;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(last&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;Rot=
ateRight&quot;,CONTAINER_INTERNAL_ERROR);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_INTER=
NAL_ERROR;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;last-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last-&gt;Next&#xa0;=3D&#xa0;oldStart;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;last;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>

<div class=3D"p"><!----></div>
The <font size=3D"+1"><tt>RotateRight/RotateLeft</tt></font> functions chec=
k their arguments to the contrary of their <font size=3D"+1"><tt>ValArray</=
tt></font> counterparts that do not. This=20
implementation shows also a checking of values that <i>should</i> be non-nu=
ll but could be &#xa0;NULL if there is a memory overwrite or another
similar problem.
<br>

<div class=3D"p"><!----></div>
<b>Save</b><a name=3D"Save+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Save(List&#xa0;*L,FILE&#xa0;*stream,&#xa0;SaveFunction=
&#xa0;saveFn,void&#xa0;*arg)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(saveFn&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;saveFn&#xa0;=3D&#xa0;Defaul=
tSaveFunction;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;arg&#xa0;=3D&#xa0;&amp;L-&g=
t;ElementSize;
&#xa0;&#xa0;&#xa0;&#xa0;}

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(fwrite(&amp;ListGuid,sizeof(guid),1,stream=
)&#xa0;&lt;=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EOF;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(fwrite(L,1,sizeof(List),stream)&#xa0;&lt;=
=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EOF;
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;&#xa0;L-&gt;count;&#xa0;=
i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*p&#xa0;=3D&#xa0;=
rvp-&gt;Data;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(saveFn(p,arg,strea=
m)&#xa0;&lt;=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;EOF;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
The format of the saved list container is:

<ol type=3D"1">
<li> The GUID of the list container: 128 bytes
<div class=3D"p"><!----></div>
</li>

<li> The Header object
<div class=3D"p"><!----></div>
</li>

<li> The data for all the elements of the list. This is the siz of the cont=
ainer times the element size.
<div class=3D"p"><!----></div>
</li>
</ol>
<br>

<div class=3D"p"><!----></div>
<b>Seek</b><a name=3D"Seek+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*Seek(Iterator&#xa0;*it,size_t&#xa0;idx)
{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;ListIterator&#xa0;*li&#xa0;=3D&#xa0;(st=
ruct&#xa0;ListIterator&#xa0;*)it;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;


&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(li-&gt;L-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;

&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;li-&gt;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&gt;=3D&#xa0;li-&gt;L-&gt;count-1=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index&#xa0;=3D&#xa0;=
li-&gt;L-&gt;count-1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa=
0;li-&gt;L-&gt;Last;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;if&#xa0;(idx&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index&#xa0;=3D&#xa0;=
0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa=
0;li-&gt;L-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;index&#xa0;=3D&#xa0;=
idx;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(idx&#xa0;&gt;&#=
xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp=
&#xa0;=3D&#xa0;rvp-&gt;Next;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idx=
--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;li-&gt;Current&#xa0;=3D&#xa=
0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;li-&gt;Current;
}

</pre></font>
This function positions the given iterator at the desired position. Several=
 alternatives are possible, for instance position the iterator at a
given item. This can be obtained now only by calling first <font size=3D"+1=
"><tt>IndexOf</tt></font>, then <font size=3D"+1"><tt>Seek</tt></font>, wha=
t forces to go through the list twice.
<br>

<div class=3D"p"><!----></div>
<b>SetCompareFunction</b><a name=3D"SetCompareFunction+code for \container4=
1"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;CompareFunction&#xa0;SetCompareFunction(List&#xa0;*l,CompareFun=
ction&#xa0;fn)
{
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;oldfn&#xa0;=3D&#xa0;l-&gt;Compare;

&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iList.SetCompar=
eFunction&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CONTAI=
NER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;if&#xa0;(fn&#xa0;!=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&amp;CONTAINER_LIST=
_READONLY)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseErro=
r(&quot;iList.SetCompareFunction&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CONTAI=
NER_LIST_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;l-&gt;Compare&#xa0;=3D&#xa0;f=
n;
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;return&#xa0;oldfn;
}

</pre></font>
This function returns the old value of the comparison function and sets it =
to the new one, if the new one is not &#xa0;NULL . This allows to query the=
 comparison function without changing it, avoiding yet another trivial func=
tion like GetComparisonFunction. This is just what in other languages like =
Objective C or others is called a <i>property</i> of the iList object. Obje=
ctive C makes all this automatic with its <font size=3D"+1"><tt>synthetise<=
/tt></font> directive.

<div class=3D"p"><!----></div>
In C there isn&#x27;t any such hand holding and you have to write that code=
 yourself. There are several other functions in the same style like <font s=
ize=3D"+1"><tt>SetErrorFunction</tt></font>, <font size=3D"+1"><tt>Size</tt=
></font> (that returns the <font size=3D"+1"><tt>count</tt></font> field) a=
nd <font size=3D"+1"><tt>SetFlags</tt></font>. They aren&#x27;t listed here=
 but you can look at the code by browsing through the list.c file distribut=
ed
with this software.
<br>

<div class=3D"p"><!----></div>
<b>Sizeof</b><a name=3D"Sizeof+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;size_t&#xa0;Sizeof(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;sizeof(List);
&#xa0;&#xa0;&#xa0;&#xa0;}

&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;sizeof(List)&#xa0;+&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Ele=
mentSize&#xa0;*&#xa0;l-&gt;count&#xa0;+&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;cou=
nt&#xa0;*sizeof(list_element);
}

</pre></font>
Returns the number of bytes used by the given list, including the data, and=
 all overhead. For lists, tghis is the size of the header object, and for=20
each element the overhead of a pointer to the next element and the size of =
each stored object. With a &#xa0;NULL list pointer returns the size of the =
list=20
header object, what allows you to allocate buffers containing a header obje=
ct and use the <font size=3D"+1"><tt>Init</tt></font> function.
<br>

<div class=3D"p"><!----></div>
<b>Sort</b><a name=3D"Sort+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Sort(List&#xa0;*l)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;**tab;
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*rvp;
&#xa0;&#xa0;&#xa0;&#xa0;CompareInfo&#xa0;ci;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.Sort&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;&lt;&#xa0;2)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&amp;CONTAINER_LIST_READONLY)&#=
xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.Sort&quot;,CONTAINER_ERROR_READONLY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;tab&#xa0;=3D&#xa0;l-&gt;Allocator-&gt;malloc(l-&gt;=
count&#xa0;*&#xa0;sizeof(list_element&#xa0;*));
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(tab&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;RaiseError(&quot;iLis=
t.Sort&quot;,CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;l-&gt;count;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tab[i]&#xa0;=3D&#xa0;rvp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;rvp-&gt;N=
ext;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;ci.Container&#xa0;=3D&#xa0;l;
&#xa0;&#xa0;&#xa0;&#xa0;ci.ExtraArgs&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;qsortEx(tab,l-&gt;count,sizeof(list_element&#xa0;*)=
,lcompar,&amp;ci);
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;l-&gt;count-1;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tab[i]-&gt;Next&#xa0;=3D&#x=
a0;tab[i+1];
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;tab[l-&gt;count-1]-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;tab[l-&gt;count-1];
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;tab[0];
&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Allocator-&gt;free(tab);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;

}

</pre></font>
This function basically builds an array and calls quicksort, nothing really=
 fancy. Note that it calls a modified version of the library
function quicksort, since it needs to pass a context to it for the comparis=
on function.
The default comparison function is listed below:

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;bool&#xa0;lcompar&#xa0;(const&#xa0;void&#xa0;*elem1,&#xa0;const=
&#xa0;void&#xa0;*elem2,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;CompareInfo&#xa0;*ExtraArgs)
{
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*Elem1&#xa0;=3D&#xa0;*(list_eleme=
nt&#xa0;**)elem1;
&#xa0;&#xa0;&#xa0;&#xa0;list_element&#xa0;*Elem2&#xa0;=3D&#xa0;*(list_eleme=
nt&#xa0;**)elem2;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*l&#xa0;=3D&#xa0;(List&#xa0;*)ExtraArgs-&=
gt;Container;
&#xa0;&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;fn&#xa0;=3D&#xa0;l-&gt;Compare;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;fn(Elem1-&gt;Data,Elem2-&gt;Data,ExtraA=
rgs);
}

</pre></font>
The default comparison function pulls the list compare function and calls i=
t with the extra arguments needed to
pass a context to it.
<br>

<div class=3D"p"><!----></div>
<b>SplitAfter</b><a name=3D"SplitAfter+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;1&#xa0;static&#xa0;List&#xa0;*SplitAfter(List&#xa0;*l,&#xa0;ListEleme=
nt&#xa0;*pt)
&#xa0;2&#xa0;{
&#xa0;3&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ListElement&#xa0;*pNext;
&#xa0;4&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*result;
&#xa0;5&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;count=3D0;
&#xa0;6&#xa0;
&#xa0;7&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pt&#xa0;=3D=3D&#xa0;NULL&#xa0=
;||&#xa0;l&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;8&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.NullPtr=
Error(&quot;iList.SplitAfter&quot;);
&#xa0;9&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NU=
LL;
10&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
11&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&amp;CONTAINER_READONLY=
)&#xa0;{
12&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ErrorReadOnly(l,&qu=
ot;SplitAfter&quot;);
13&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
14&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
15&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pNext&#xa0;=3D&#xa0;pt-&gt;Next;
16&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(pNext&#xa0;=3D=3D&#xa0;NULL)&#xa0;=
return&#xa0;NULL;
17&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;CreateWithAllocator(l-=
&gt;ElementSize,&#xa0;l-&gt;Allocator);
18&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result)&#xa0;{
19&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;First&#x=
a0;=3D&#xa0;pNext;
20&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(pNext)&=
#xa0;{
21&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;count++;
22&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;if&#xa0;(pNext-&gt;Next&#xa0;=3D=3D&#xa0;NULL)&#xa0;result-&gt;Last&#x=
a0;=3D&#xa0;pNext;
23&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;pNext&#xa0;=3D&#xa0;pNext-&gt;Next;
24&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
25&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;count&#x=
a0;=3D&#xa0;count;
26&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
27&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;return&#xa0;NULL;
28&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;pt-&gt;Next&#xa0;=3D&#xa0;NULL;
29&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;pt;
30&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;count&#xa0;-=3D&#xa0;count;
31&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;timestamp++;
32&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
33&#xa0;}

</pre></font>
After the normal error checking of arguments, this function gets the next e=
lement after the given one. If there is none, it is impossible
to split the list after after the given element since it is the last. We re=
turn &#xa0;NULL (lines 15-16).

<div class=3D"p"><!----></div>
If there is an element, it will be the head of the new list. We create a ne=
w list (line 17) using the source list allocator
and we set the given element (argument <font size=3D"+1"><tt>pt</tt></font>=
) as the first one of the new=20
list. We then count the elements (lines 20 to 24) in the new list
since we need to fill the &quot;count&quot; field in the new list. This mak=
es this operation much more expensive than it would be
if we didn&#x27;t maintain a &quot;count&quot; field<a href=3D"#tthFtNtAHA"=
 name=3D"tthFrefAHA"><sup>70</sup></a>.
In lines 27-31 we set the correct fields in the new list, decrease the &quo=
t;count&quot; field in the source list by the number of elements in the new=
 list,
and we note the fact that the input list has been modified in line 31.
<br>

<div class=3D"p"><!----></div>
<b>RotateLeft</b><a name=3D"RotateLeft+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;1&#xa0;static&#xa0;int&#xa0;RotateLeft(List&#xa0;*&#xa0;l,&#xa0=
;size_t&#xa0;n)
&#xa0;&#xa0;2&#xa0;{
&#xa0;&#xa0;3&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ListElement&#xa0;&#xa0;&#xa0;&#x=
a0;*rvp,&#xa0;*oldStart,&#xa0;*last&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;4&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;5&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#=
xa0;NullPtrError(&quot;RotateLeft&quot;);
&#xa0;&#xa0;6&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;Flags&#xa0;&amp;&=
#xa0;CONTAINER_READONLY)
&#xa0;&#xa0;7&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#=
xa0;ErrorReadOnly(l,&#xa0;&quot;RotateLeft&quot;);
&#xa0;&#xa0;8&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(l-&gt;count&#xa0;&lt;&#=
xa0;2&#xa0;||&#xa0;n&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;9&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#=
xa0;0;
&#xa0;10&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n&#xa0;%=3D&#xa0;l-&gt;count;
&#xa0;11&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(n&#xa0;=3D=3D&#xa0;0)
&#xa0;12&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;13&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&#xa0;l-&gt;First;
&#xa0;14&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;oldStart&#xa0;=3D&#xa0;rvp;
&#xa0;15&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(n&#xa0;&gt;&#xa0;0)&#xa0;{
&#xa0;16&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last&#xa0;=3D=
&#xa0;rvp;
&#xa0;17&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;rvp&#xa0;=3D&=
#xa0;rvp-&gt;Next;
&#xa0;18&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;n--;
&#xa0;19&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;20&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;First&#xa0;=3D&#xa0;rvp;
&#xa0;21&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;last-&gt;Next&#xa0;=3D&#xa0;NULL;
&#xa0;22&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last-&gt;Next&#xa0;=3D&#xa0;old=
Start;
&#xa0;23&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;l-&gt;Last&#xa0;=3D&#xa0;last;
&#xa0;24&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
&#xa0;25&#xa0;}

</pre></font>

<div class=3D"p"><!----></div>
Rotating a list is very simple: Cut the list at the desired place, and appe=
nd the list elements from the start up to the cut point at the=20
end of the list.=20

<div class=3D"p"><!----></div>
After the error checking is done (lines 3-12) we start
a first loop where we find the place to cut: lines 15-19.
Then, we cut (set the previous element&#x27;s <font size=3D"+1"><tt>Next</t=
t></font> pointer to&#xa0;NULL in line 21) and append the
elements we cutted to the end of the list, updating the list&#x27;s header.

<div class=3D"p"><!----></div>
<br>
<b>UseHeap</b><a name=3D"UseHeap+code for \container41"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;UseHeap(List&#xa0;*L,&#xa0;ContainerAllocator&#xa0;*m)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iLi=
st.UseHeap&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(L-&gt;Heap&#xa0;||&#xa0;L-&gt;count)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;RaiseError(&quot;UseH=
eap&quot;,CONTAINER_ERROR_NOT_EMPTY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOT_EMPTY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(m&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;m&#xa0;=3D&#xa0;CurrentAllo=
cator;
&#xa0;&#xa0;&#xa0;&#xa0;L-&gt;Heap&#xa0;=3D&#xa0;iHeap.Create(L-&gt;Element=
Size+sizeof(list_element),&#xa0;m);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function installs a heap to be used by the list. This is very importan=
t for huge lists, since performance goes quickly down if you call malloc=20
for each element you add to the list. Basically, the heap is just a way to =
allocate memory in blocks so that malloc calls are reduced.

     <h3><a name=3D"tth_sEc4.2">
4.2</a>&#xa0;&#xa0;Queues</h3>
Queues are, to use the C++ terminology, <i>adaptor</i> containers, i.e. con=
tainers based on other containers, in this case a list. We describe here
an implementation with the objective to show how those adaptors can be impl=
emented, and how you can restrain the interface of the underlying container
with a small cost.

<div class=3D"p"><!----></div>
The data structure used is very simple:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_Queue&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;QueueInterface&#xa0;*VTable;
&#xa0;&#xa0;&#xa0;&#xa0;List&#xa0;*Items;
}&#xa0;_Queue;

</pre></font>
Just two fields: the interface and the underlying list.
We do not document here some functions of the queue interface that triviall=
y call the corresponding List functions.

<div class=3D"p"><!----></div>
<br>
<b>Back</b><a name=3D"Back+code for \container42"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Back(Queue&#xa0;*Q,void&#xa0;*result)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Q&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iQu=
eue.Front&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;idx&#xa0;=3D&#xa0;iList.Size(Q-&gt;Items);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;iList.CopyElement(Q-&gt;Items,idx-1,res=
ult);
}

</pre></font>
Returns the last element of the queue. We do not want to have any errors is=
sued by the underlying list, so we test for &#xa0;NULL . We use the size as=
 an index, except of course when the queue is empty.
<br>

<div class=3D"p"><!----></div>
<b>CreateWithAllocator</b><a name=3D"CreateWithAllocator+code for \containe=
r42"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;Queue&#xa0;*CreateWithAllocator(size_t&#xa0;ElementSize,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#x=
a0;*allocator)
{
&#xa0;&#xa0;&#xa0;&#xa0;Queue&#xa0;*result&#xa0;=3D&#xa0;allocator-&gt;mall=
oc(sizeof(Queue));

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Items&#xa0;=3D&#xa0;iList.CreateWithAllo=
cator(ElementSize,allocator);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(result-&gt;Items&#xa0;=3D=3D&#xa0;NULL)&#x=
a0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;allocator-&gt;free(result);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;VTable&#xa0;=3D&#xa0;&amp;iQueue;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>
Using the given allocator, we get memory for the Queue object, then for the=
 list using the given allocator.
<br>

<div class=3D"p"><!----></div>
<b>Finalize</b><a name=3D"Finalize+code for \container42"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Finalize(Queue&#xa0;*Q)
{
&#xa0;&#xa0;&#xa0;&#xa0;ContainerAllocator&#xa0;*allocator&#xa0;=3D&#xa0;iL=
ist.GetAllocator(Q-&gt;Items);
&#xa0;&#xa0;&#xa0;&#xa0;iList.Finalize(Q-&gt;Items);
&#xa0;&#xa0;&#xa0;&#xa0;allocator-&gt;free(Q);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
We should free the queue header object with the same allocator we used for =
the list. We obtain it first, before we free the list.
<br>

<div class=3D"p"><!----></div>
<b>Front</b><a name=3D"Front+code for \container42"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Front(Queue&#xa0;*Q,void&#xa0;*result)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Q&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iQu=
eue.Front&quot;,CONTAINER_ERROR_BADARG);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_BADARG;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;idx&#xa0;=3D&#xa0;iList.Size(Q-&gt;Items);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;iList.CopyElement(Q-&gt;Items,0,result);
}

</pre></font>
Same as <font size=3D"+1"><tt>Back</tt></font>. We make the error checking =
to avoid errors when accessing the list.
<br>

<div class=3D"p"><!----></div>
<b>Sizeof</b><a name=3D"Sizeof+code for \container42"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;size_t&#xa0;Sizeof(Queue&#xa0;*q)
{
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(q&#xa0;=3D=3D&#xa0;NULL)&#xa0;return&#xa0;=
sizeof(Queue);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;sizeof(*q)&#xa0;+&#xa0;iList.Sizeof(q-&=
gt;Items);
}

</pre></font>
If passed a &#xa0;NULL queue, we return the size of the Queue header object=
. Note that we do not return the size of the underlying list even if it has=
 been allocated and uses up space. An alternative design would have require=
d to take into account the list header as it would have been part of the ov=
erhead of the Queue object. But in that case we could never know the size o=
f the Queue itself...

     <h3><a name=3D"tth_sEc4.3">
4.3</a>&#xa0;&#xa0;The dictionary</h3>
Dictionary is an instance of a hash table where the key is supposed to cont=
ain character strings (names) that are associated with some data. Hash=20
tables are normal tables that are indexed by a hash function, i.e. a functi=
on that maps character strings into some integer that is used to index the=
=20
table. At each slot of the table we find a linked list of elements that wer=
e classified by the hash function into the same slot. If we have a good has=
h function, i.e. one that spreads evenly the elements across the table, we =
can have a speed up for searching an element of the order of the table size=
, in the best case.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc4.3.1">
4.3.1</a>&#xa0;&#xa0;Hashing</h4>
One of the important aspects of a dictionary implementation is to use a goo=
d hash function, i.e. one that distributes evenly the keys. I have picked
up for this work one of the most used functions of this type. Here is the d=
ocumentation I found for this function in the Apache runtime:

<div class=3D"p"><!----></div>

<blockquote>This is the popular `times 33&#x27; hash algorithm which is use=
d by perl and that also appears in Berkeley DB. This is one of the best
 known hash functions for strings because it is both computed very fast and=
 distributes very well.

<div class=3D"p"><!----></div>
 The originator may be Dan Bernstein but the code in Berkeley DB cites Chri=
s Torek as the source. The best citation I have found
 is &quot;Chris Torek, Hash function for text in C, Usenet message   &lt; 2=
7038@mimsy.umd.edu &gt;  in comp.lang.c , October, 1990.&quot; in Rich
 Salz&#x27;s USENIX 1992 paper about INN which can be found at  <u>http://c=
iteseer.nj.nec.com/salz92internetnews.html</u>.

<div class=3D"p"><!----></div>
    The magic of number 33, i.e. why it works better than many other consta=
nts, prime or not, has never been adequately explained by
 anyone. So I try an explanation: if one experimentally tests all  multipli=
ers between 1 and 256 (as I did while writing a low-level
 data structure library some time ago) one detects that even numbers are no=
t useable at all. The remaining 128 odd numbers
 (except for the number 1) work more or less all equally well.  They all di=
stribute in an acceptable way and this way fill a hash
 table with an average percent of approx. 86%.

<div class=3D"p"><!----></div>
   If one compares the chi<sup>2</sup>=20
 values of the variants (see Bob Jenkins &quot;Hashing FAQ&quot; at <u>
 http://burtleburtle.net/bob/hash/hashfaq.html</u>  for a description  of c=
hi<sup>2</sup>), the number 33 not even has the best value.=20
<div class=3D"p"><!----></div>
 But the
 number 33 and a few other equally good numbers like 17, 31, 63, 127 and 12=
9 have nevertheless a great advantage to the remaining
 numbers in the large set of possible multipliers: their multiply operation=
 can be replaced by a faster operation based on just one
 shift plus either a single addition or subtraction operation. And  because=
 a hash function has to both distribute good <i>and</i> has to
 be very fast to compute, those few numbers should be preferred.

<div class=3D"p"><!----></div>
                 - Ralf S. Engelschall  &lt; rse@engelschall.com &gt;=20
               =20
</blockquote>
Julienne Walker has another twist to this story. She says:<a href=3D"#tthFt=
NtAHB" name=3D"tthFrefAHB"><sup>71</sup></a>

<blockquote>
Bernstein hash

<div class=3D"p"><!----></div>
Dan Bernstein created this algorithm and posted it in a newsgroup. It is kn=
own by many as the Chris Torek hash because Chris went a long way toward po=
pularizing it. Since then it has been used successfully by many, but despit=
e that the algorithm itself is not very sound when it comes to avalanche an=
d permutation of the internal state. It has proven very good for small char=
acter keys, where it can outperform algorithms that result in a more random=
 distribution.

<div class=3D"p"><!----></div>
Bernstein&#x27;s hash should be used with caution. It performs very well in=
 practice, for no apparently known reasons (much like how the constant 33 d=
oes better than more logical constants for no apparent reason), but in theo=
ry it is not up to snuff. Always test this function with sample data for ev=
ery application to ensure that it does not encounter a degenerate case and =
cause excessive collisions.
</blockquote>
<br>

<div class=3D"p"><!----></div>
<b>hash</b><a name=3D"hash+code for \container43"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;unsigned&#xa0;int&#xa0;hash(const&#xa0;unsigned&#xa0;char&#xa0;=
*key)
{
&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Hash&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;const&#xa0;unsigned&#xa0;char&#xa0;*p;
	=09
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(p&#xa0;=3D&#xa0;key;&#xa0;*p;&#xa0;p++)&#=
xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Hash&#xa0;=3D&#xa0;Hash&#xa=
0;*&#xa0;33&#xa0;+&#xa0;scatter[*p];
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;Hash;
}

</pre></font>
Note that I have slightly modified the algorithm by using a scatter table o=
f 256 positions filled with random numbers. The objective is to avoid
that letters that appear frequently in the text would tend to cluster the k=
eys in  the same position.

<div class=3D"p"><!----></div>
This default function may not be the best for the data in the user&#x27;s a=
pplication. The library has reserved a field in the dictionary header objec=
t for a pointer to a hash function that can be changed by the user.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc4.3.2">
4.3.2</a>&#xa0;&#xa0;Creation</h4>
Another important aspect of the dictionary implementation is the decision o=
f how many slots the table should have. I have followed the recommendations=
 of Dave Hanson in his Book &quot;C interfaces and Implementations&quot;<a =
href=3D"#tthFtNtAHC" name=3D"tthFrefAHC"><sup>72</sup></a>, and I use a sma=
ll table of primes to decide what size the table should have:
<br>

<div class=3D"p"><!----></div>
<b>Init</b><a name=3D"Init+code for \container43"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;Dictionary&#xa0;*Init(Dictionary&#xa0;*Dict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;elementsize,size_t&#xa0;hint)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i,allocSiz;
&#xa0;&#xa0;&#xa0;&#xa0;static&#xa0;unsigned&#xa0;primes[]&#xa0;=3D&#xa0;{&=
#xa0;509,&#xa0;509,&#xa0;1021,&#xa0;2053,&#xa0;4093,&#xa0;8191,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;16381,&#xa0;32771,&#xa0;65521,&#xa0;131071,&#xa0;0&#xa=
0;};
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i&#xa0;=3D&#xa0;1;&#xa0;primes[i]&#xa0;&l=
t;&#xa0;hint&#xa0;&amp;&amp;&#xa0;primes[i]&#xa0;&gt;&#xa0;0;&#xa0;i++)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;;
&#xa0;&#xa0;&#xa0;&#xa0;allocSiz&#xa0;=3D&#xa0;sizeof&#xa0;(Dictionary);
&#xa0;&#xa0;&#xa0;&#xa0;memset(Dict,0,allocSiz);
&#xa0;&#xa0;&#xa0;&#xa0;allocSiz&#xa0;=3D&#xa0;primes[i-1]*sizeof&#xa0;(Dic=
t-&gt;buckets[0]);
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;buckets&#xa0;=3D&#xa0;CurrentAllocator-&gt=
;malloc(allocSiz);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Dict-&gt;buckets&#xa0;=3D=3D&#xa0;NULL)&#x=
a0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memset(Dict-&gt;buckets,0,allocSiz);
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;size&#xa0;=3D&#xa0;primes[i-1];
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;hash&#xa0;=3D&#xa0;hash;
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;VTable&#xa0;=3D&#xa0;&amp;iDictionary;
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;ElementSize&#xa0;=3D&#xa0;elementsize;
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;Allocator&#xa0;=3D&#xa0;CurrentAllocator;
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;RaiseError&#xa0;=3D&#xa0;iError.RaiseError;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;Dict;
}

</pre></font>
The primes in the table are the nearest primes to the regular powers of two=
. Table sizes can range from 509 to more than 130000, what gives a really=20
wide range of table sizes. Obviously, bigger tables could be necessary, and=
 other specialized implementations could use the <i>hint</i> parameter
to extend this algorithm or to use a completely different algorithm altoget=
her.

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc4.3.3">
4.3.3</a>&#xa0;&#xa0;Adding elements</h4>
This operation consists of:

<ul>
<li> hash the key to find a slot
<div class=3D"p"><!----></div>
</li>

<li> go through the list at that slot to see if the key is already there
<div class=3D"p"><!----></div>
</li>

<li> if key is already there replace
<div class=3D"p"><!----></div>
</li>

<li> if key is absent add it in a new list item
<div class=3D"p"><!----></div>
</li>
</ul>
<br>

<div class=3D"p"><!----></div>
<b>Add</b><a name=3D"Add+code for \container43"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Add(Dictionary&#xa0;*Dict,const&#xa0;unsigned&#xa0;cha=
r&#xa0;*Key,void&#xa0;*Value)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;DataList&#xa0;*p;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;char&#xa0;*tmp;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Dict&#xa0;=3D=3D&#xa0;NULL)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NullPtrError(&q=
uot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Dict-&gt;Flags&#xa0;&amp;&#xa0;CONTAINER_R=
EADONLY)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;ReadOnlyError(D=
ict,&quot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Key&#xa0;=3D=3D&#xa0;NULL&#xa0;||&#xa0;Val=
ue&#xa0;=3D=3D&#xa0;NULL)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;BadArgError(Dic=
t,&quot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;i&#xa0;=3D&#xa0;(*Dict-&gt;hash)(Key)&#xa0;%&#xa0;D=
ict-&gt;size;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(p&#xa0;=3D&#xa0;Dict-&gt;buckets[i];&#xa0=
;p;&#xa0;p&#xa0;=3D&#xa0;p-&gt;Next)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(strcmp(Key,&#xa0;p=
-&gt;Key)&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;bre=
ak;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(p&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;=3D&#xa0;Dict-&gt;Al=
locator-&gt;malloc(sizeof(*p)+Dict-&gt;ElementSize);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmp&#xa0;=3D&#xa0;Dict-&gt;=
Allocator-&gt;malloc(1+strlen((char&#xa0;*)Key));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(p&#xa0;=3D=3D&#xa0=
;NULL&#xa0;||&#xa0;tmp&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(p)&#xa0;Dict-&gt;Allocator-&gt;free(p);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(tmp)&#xa0;Dict-&gt;Allocator-&gt;free(tmp);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;NoMemoryError(Dict,&quot;Add&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p-&gt;Value&#xa0;=3D&#xa0;(=
void&#xa0;*)(p+1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;strcpy(tmp,Key);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p-&gt;Key&#xa0;=3D&#xa0;tmp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p-&gt;Next&#xa0;=3D&#xa0;Di=
ct-&gt;buckets[i];
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;buckets[i]&#xa0;=
=3D&#xa0;p;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Dict-&gt;count++;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;memcpy((void&#xa0;*)p-&gt;Value,Value,Dict-&gt;Elem=
entSize);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
}

</pre></font>
Following the logical steps outlined above, we:

<ol type=3D"1">
<li> Call the hash function and use its result modulo the size of the slot =
table to fetch the list at the indicated slot.
<div class=3D"p"><!----></div>
</li>

<li> See if the key was absent. If that is the case, we need to add a new k=
ey. We copy the key and allocate memory for a new list element=20
that is initialized afterwards with the copied value of the key and inserte=
d into the list.
<div class=3D"p"><!----></div>
</li>

<li> Copy in the value. If it was a new key, its value is initialized, if t=
he key was already present we overwrite the old contents.
<div class=3D"p"><!----></div>
</li>
</ol>
This function uses strcmp for comparing keys. This has the advantage of sim=
plicity and speed, but in many other contexts a key comparison function=20
would be necessary, to allow for keys in Unicode for instance, or for binar=
y keys, for instance a GUID or similar binary data.

<div class=3D"p"><!----></div>
An important design decision was to replace the data associated with a key =
if the key is already there. This is a decision that has consequences for=20
all associative containers, since it must be coherent in all of them. Since=
 the =CFnsert&quot; function allows for non-destructive insertions, Add was
allowed to replace contents since this is a very common operation for insta=
nce in some symbol tables, where =CFnsert if absent or replace if present&q=
uot;
is used to ensure that a symbol is associated with a certain value. <a href=
=3D"#tthFtNtAHD" name=3D"tthFrefAHD"><sup>73</sup></a>. At the same time we=
 need a <font size=3D"+1"><tt>Replace</tt></font> function since we want to=
 get an error if the element we want to replace was <b>not</b> found.
A small table makes this clearer

<div class=3D"p"><!----></div>
=20
<center>

<table border=3D"1">
<tbody><tr><td align=3D"left">Add </td><td align=3D"left">Insert or replace=
 an item for a key </td></tr>
<tr><td align=3D"left">Insert </td><td align=3D"left">Insert, error if the =
key was present </td></tr>
<tr><td align=3D"left">Replace </td><td align=3D"left">Replace, error if ke=
y was absent </td></tr></tbody></table>

</center>

<div class=3D"p"><!----></div>
      <h4><a name=3D"tth_sEc4.3.4">
4.3.4</a>&#xa0;&#xa0;Implementing iterators</h4>
Iterators in sequential containers are conceptually easy: just start at the=
 first and stop at the last. In associative containers however things are=20
more complicated since there is no obvious way to order them. The solution =
retained in the sample implementation involves going through all elements
starting at the first element of the slots table, and for each slot go thro=
ugh the linked list of items if any. This guarantees to visit all elements=
=20
in a fixed order. As an example of this here is the <font size=3D"+1"><tt>A=
pply</tt></font> function that should go through all elements calling the g=
iven function for each=20
one of them.
<br>

<div class=3D"p"><!----></div>
<b>Apply</b><a name=3D"Apply+code for \container43"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Apply(Dictionary&#xa0;*Dict,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*apply)(const&#xa0;char&#xa0;*Key,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;const&#xa0;void&#xa0;*Value,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs),
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraArgs)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;stamp;
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;DataList&#xa0;*p;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(Dict&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NullPtrError(&q=
uot;Apply&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(apply&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;BadArgError(Dic=
t,&quot;Apply&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;stamp&#xa0;=3D&#xa0;Dict-&gt;timestamp;
&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(i&#xa0;=3D&#xa0;0;&#xa0;i&#xa0;&lt;&#xa0;=
Dict-&gt;size;&#xa0;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(p&#xa0;=3D&#xa0;D=
ict-&gt;buckets[i];&#xa0;p;&#xa0;p&#xa0;=3D&#xa0;p-&gt;Next)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;app=
ly(p-&gt;Key,p-&gt;Value,&#xa0;ExtraArgs);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(Dict-&gt;timestamp&#xa0;!=3D&#xa0;stamp)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>

<div class=3D"p"><!----></div>
As we outlined above, we start at slot zero, going upwards. If we find a no=
n-empty slot, we go through the linked list of items.

<div class=3D"p"><!----></div>
Iterators are implemented using the same algorithm, and need conceptually t=
wo indexes to remember their position: a first index for the slots table,=20
and another for the position in the list of items at that slot.

<div class=3D"p"><!----></div>
The implementation of the dictionary iterator is as follows:
<a name=3D"iterator+Dictionary43"></a>

<font size=3D"+1"><pre>struct&#xa0;DictionaryIterator&#xa0;{
&#xa0;&#xa0;&#xa0;Iterator&#xa0;it;
&#xa0;&#xa0;&#xa0;Dictionary&#xa0;*Dict;
&#xa0;&#xa0;&#xa0;size_t&#xa0;index;
&#xa0;&#xa0;&#xa0;struct&#xa0;DataList&#xa0;*dl;
&#xa0;&#xa0;&#xa0;size_t&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;long&#xa0;Flags;
};

</pre></font>
The <font size=3D"+1"><tt>index</tt></font> field remembers the position in=
 the slot table, and the <font size=3D"+1"><tt>dl</tt></font> field is just=
 a small structure that contains a link to the=20
next item in the linked list and a pointer to the key. Storing the list ele=
ment itself spare us the work of going through all the list to position our=
selves at each advance of the cursor in the list.

     <h3><a name=3D"tth_sEc4.4">
4.4</a>&#xa0;&#xa0;The bloom filter</h3>
This container is a completely different beast as all other ones we have in=
 the library. It is a probabilistic data structure. It was conceived by
Mr Burton Howard Bloom in 1970 according to D. E Knuth in his Art of Comput=
er Programming.

<div class=3D"p"><!----></div>
Bloom filters are designed to cheaply test if a given element is in a large=
 set. It is possible that the filter says that an element is there
when in fact, it is not. But if the filter says it is <i>not</i> there you =
can be ceratin that the element is not in the set.

<div class=3D"p"><!----></div>
You can add elements to the set but not remove them. The more elements you =
add to the filter, the larger the posibility of getting false positives, i.=
e.
getting an answer of =FFes, the element is there&quot; when in fact it is n=
ot.

<div class=3D"p"><!----></div>

     <h3><a name=3D"tth_sEc4.5">
4.5</a>&#xa0;&#xa0;Debugging malloc</h3>
<a name=3D"Malloc">
</a>
The library provides a sample of how a malloc used for debugging allocation=
 problems could look like. It is designed to be enhanced and even if it
has several important features like detection of double free and buffer ove=
rflows, it is not a competitor for the professional versions you can find
in the market like valgrind or similar.
<br>

<div class=3D"p"><!----></div>
<b>Malloc</b><a name=3D"Malloc+code for \container45"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;void&#xa0;*Malloc(size_t&#xa0;size)
{
&#xa0;&#xa0;&#xa0;&#xa0;register&#xa0;char&#xa0;*r;
&#xa0;&#xa0;&#xa0;&#xa0;register&#xa0;size_t&#xa0;*ip&#xa0;=3D&#xa0;NULL;

&#xa0;&#xa0;&#xa0;&#xa0;size&#xa0;=3D&#xa0;ALIGN_DEFAULT(size);
&#xa0;&#xa0;&#xa0;&#xa0;size&#xa0;+=3D&#xa0;3&#xa0;*&#xa0;sizeof(size_t);
&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;malloc(size);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;=3D=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;AllocatedMemory&#xa0;+=3D&#xa0;size;
&#xa0;&#xa0;&#xa0;&#xa0;ip&#xa0;=3D&#xa0;(size_t&#xa0;*)&#xa0;r;
&#xa0;&#xa0;&#xa0;&#xa0;*ip++&#xa0;=3D&#xa0;SIGNATURE;
&#xa0;&#xa0;&#xa0;&#xa0;*ip++&#xa0;=3D&#xa0;size;
&#xa0;&#xa0;&#xa0;&#xa0;memset(ip,&#xa0;0,&#xa0;size&#xa0;-&#xa0;3*sizeof(s=
ize_t));
&#xa0;&#xa0;&#xa0;&#xa0;ip&#xa0;=3D&#xa0;(size_t&#xa0;*)&#xa0;(&amp;r[size&=
#xa0;-&#xa0;sizeof(size_t)]);
&#xa0;&#xa0;&#xa0;&#xa0;*ip&#xa0;=3D&#xa0;MAGIC;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;(r&#xa0;+&#xa0;2&#xa0;*&#xa0;sizeof(siz=
e_t));
}

</pre></font>
The algorithm is as follows:

<ul>
<li> The given size will be aligned to a multiple of <font size=3D"+1"><tt>=
size_t</tt></font>. It is assumed that this size is the size of a register,=
 and will be=20
good for any type of allocation. In some machines this may be completely wr=
ong, for instance for some quantities the Intel processors need an
alignment of 16 bytes, and there is no implementation of <font size=3D"+1">=
<tt>size_t</tt></font> with that size.
<div class=3D"p"><!----></div>
</li>

<li> We reserve three words more than the requested size to store:

<ol type=3D"1">
<li> The &quot;magic number&quot;. This is just an integer that will enable=
 us to ensure that we are dealing with a valid block. Blocks that have this=
 number two=20
words below the address passed to our <font size=3D"+1"><tt>Free</tt></font=
> function will be assumed to be real blocks. There=20
is of course a chance that the memory
could contain that number for other reasons, but choosing a value that can&=
#x27;t be a pointer and that is high above 100 millions give us a fighting =
chance=20
that the
probablity of hitting a bad positive is fairly low.
<div class=3D"p"><!----></div>
</li>

<li> The length of the block. This will allow us to verify that nothing was=
 written beyond the required length of the block.
<div class=3D"p"><!----></div>
</li>

<li> A guard at the end of the block. We will ensure that we can read this =
quantity when freeing the block.
<div class=3D"p"><!----></div>
</li>
</ol>
<div class=3D"p"><!----></div>
</li>

<li> We obtain memory using <font size=3D"+1"><tt>malloc</tt></font>. If no=
t available we just return &#xa0;NULL .
<div class=3D"p"><!----></div>
</li>

<li> We keep a counter of all memory allocated so far. This counter should =
be zero at program exit. It helps to detect the leaks between two=20
operations: it suffices to note the value of the counter before some part o=
f the software and then see if the counter returns to the
same value after the module has finished.
<div class=3D"p"><!----></div>
</li>

<li> We write the two different integers at the start and at the end of the=
 block, together with its size.
<div class=3D"p"><!----></div>
</li>

<li> We set to zero all memory even if the program didn&#x27;t ask us. This=
 ensures that any error that accesses uninitialized memory will=20
always have the same consequences.
<div class=3D"p"><!----></div>
</li>
</ul>
The other functions that complete this memory manager (free, realloc calloc=
) are not shown here (they are available in the source code=20
of the library). They just undo what <font size=3D"+1"><tt>Malloc</tt></fon=
t> has built, calling the error functions if they detect a problem.

<div class=3D"p"><!----></div>
This simple system has several drawbacks.

<ul>
<li> If a buffer =FCnderflow&quot; happens, i.e. something is written to me=
mory <i>before</i> the start of the block, our field &quot;length&quot; cou=
ld be
wrong. Depending on the resulting contents of the length field after the ov=
erwrite we could have a bogus length and access some invalid memory.
<div class=3D"p"><!----></div>
</li>

<li> Memory overwrites <i>after</i> the magic number that guards the end of=
 the block are not detected. This is obviously impossible to detect
unless we would just inspect each memory write, but a few words more after =
the end of the block could give us some extra security.
<div class=3D"p"><!----></div>
</li>
</ul>
For completeness here is the code of the free function for the debugging ma=
lloc sample:
<br>

<div class=3D"p"><!----></div>
<b>Free</b><a name=3D"Free+code for \container45"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;1&#xa0;static&#xa0;void&#xa0;Free(void&#xa0;*pp)
&#xa0;2&#xa0;{
&#xa0;3&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;*i=
p&#xa0;=3D&#xa0;NULL;
&#xa0;4&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;s;
&#xa0;5&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;register&#xa0;=
char&#xa0;*p&#xa0;=3D&#xa0;pp;
&#xa0;6&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(p&#xa=
0;=3D=3D&#xa0;NULL)
&#xa0;7&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return;
&#xa0;8&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;-=3D&#x=
a0;2&#xa0;*&#xa0;sizeof(size_t);
&#xa0;9&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ip&#xa0;=3D&#x=
a0;(size_t&#xa0;*)&#xa0;p;
10&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(*ip&#xa0;=
=3D=3D&#xa0;SIGNATURE)&#xa0;{
11&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;*ip++&#xa0;=3D&#xa0;0;
12&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;s&#xa0;=3D&#xa0;*ip;
13&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;ip&#xa0;=3D&#xa0;(size_t&#xa0;*)&#xa0;(&amp;p[s&#xa0;-&#xa0;sizeof(siz=
e_t)]);
14&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;if&#xa0;(*ip&#xa0;!=3D&#xa0;MAGIC)&#xa0;{
15&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;&#xa0;/*&#xa0;overwritten&#xa0;block&#xa0;size&#xa0;=
*/
16&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;Free&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;CONTAINER_ERROR_BUFFEROVERFLOW);
17&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return;
18&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;}
19&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;*ip&#xa0;=3D&#xa0;0;
20&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;AllocatedMemory&#xa0;-=3D&#xa0;s;
21&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;memset(p,66,s);
22&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;free(p);
23&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
24&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
25&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;/*&#xa0;Wrong&#xa0;block&#xa0;passed&#xa0;to&#xa0;Free&#xa0;*/
26&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;iError.RaiseError(&quot;Free&quot;,CONTAINER_ERROR_BADPOINTER);
27&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
28&#xa0;}

</pre></font>

<ul>
<li> Line 6:
If we receive a &#xa0;NULL argument is not an error (C99 standard).
<div class=3D"p"><!----></div>
</li>

<li> Line 8:
We seek to the start of the real block and we point to it with a pointer to=
 int (line 9).
<div class=3D"p"><!----></div>
</li>

<li>
If we find the signature we erase the signature immediately (line 11). This=
 avoids that
we ever process this block again. We get in line 12 the size of the block a=
nd we point
to the end of it. If we do not find our magic number it has been erased bec=
ause our
block was somehow overwritten. We report that and stop any further processi=
ng.
<div class=3D"p"><!----></div>
</li>

<li>
If we find our magic number all is OK and we free the block. We set it to z=
ero before
to avoid that its data is used again (line 21).
<div class=3D"p"><!----></div>
</li>

<li>
If we do not find the signature after we seek for it we do nothing but repo=
rt an error:
the block has been overwritten or we have been handed a bogus pointer to ou=
r <font size=3D"+1"><tt>free</tt></font>
function. Since our data is written before the start of the block, the soft=
ware assumes
that it is a bad pointer since in most cases buffer overflows go beyond the=
 end
of the block. It could be that it is actually a buffer overflow error howev=
er.
<div class=3D"p"><!----></div>
</li>
</ul>

     <h3><a name=3D"tth_sEc4.6">
4.6</a>&#xa0;&#xa0;The observer interface</h3>
This interface allows arbitrary functions to be called when some interestin=
g event happens.
It supposes several actors that play together:

<ul>
<li> An object that wants to be notified when some event occurs. This objec=
t will be represented by
its callback function.
<div class=3D"p"><!----></div>
</li>

<li> An object that emits events and necessary calls the interface to annou=
nce them.
<div class=3D"p"><!----></div>
</li>

<li> An associative interface that associates objects with their correspond=
ing
observer functions.
<div class=3D"p"><!----></div>
</li>
</ul>
The observer interface has three entry points:

<ol type=3D"1">
<li> Subscribe. This operation is started by an object that wants to be not=
ified of events
happening in a specific container. It calls the associative interface to be=
 notified
when those events occur.
<div class=3D"p"><!----></div>
</li>

<li> Notify. The container sends events descriptions to the interface. The =
interface searches
the observer list and if an interested object exists, its associated functi=
on is called.
<div class=3D"p"><!----></div>
</li>

<li> Unsubscribe Either the container is going out of scope or the object t=
hat receives
the notifications is going out of scope and wants to stop the process. The =
associative
interface is called to break the event stream. It can be that an either obj=
ect is no
longer interested in receiving notifications for a specific container witho=
ut any
change in scope: One of the objects desires to break the relationship.
<div class=3D"p"><!----></div>
</li>
</ol>
The observer object then, is very simple:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_tagObserver&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ObservedObject;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ObserverFunction&#xa0;Callback;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Flags;&#xa0;
}&#xa0;Observer;

</pre></font>
The association is between an observed object (the container) and another u=
nspecified object represented by its
callback here. The flags contain in each bit an event code<a href=3D"#tthFt=
NtAHE" name=3D"tthFrefAHE"><sup>74</sup></a>. If an observer wants to subsc=
ribe to several events
it sets different bits in this field.

<div class=3D"p"><!----></div>
Note that we do not characterize further the observed object: it is just a =
<font size=3D"+1"><tt>void&#xa0;*</tt></font>. This is not
a great idea since the <font size=3D"+1"><tt>InitObserver</tt></font> funct=
ion assumes it is a generic container.

<div class=3D"p"><!----></div>
We need a table of this objects because several containers could have sever=
al observers defined.

<font size=3D"+1"><pre>static&#xa0;Observer&#xa0;*ObserverVector;
static&#xa0;size_t&#xa0;vsize;

</pre></font>
Now we can start describing the functions themselves
<br>

<div class=3D"p"><!----></div>
<b>Subscribe</b><a name=3D"Subscribe+code for \container46"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Subscribe(void&#xa0;*ObservedObject,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ObserverFunction&#xa0;ca=
llback,&#xa0;unsigned&#xa0;flags)
{
&#xa0;&#xa0;&#xa0;&#xa0;Observer&#xa0;result;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;r&#xa0;=3D&#xa0;InitObserver(&amp;result,O=
bservedObject,callback,flags);
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(r&#xa0;&gt;&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;r&#xa0;=3D&#xa0;AddObject(&=
amp;result);
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;r;
}

</pre></font>
We initialize an observer object, and if that succeeds we add it to the ass=
ociation tables.
We use temporary storage for the initialization because the =C4ddObserver&q=
uot; function copies
the contents into the table<a href=3D"#tthFtNtAHF" name=3D"tthFrefAHF"><sup=
>75</sup></a>.
<br>

<div class=3D"p"><!----></div>
<b>InitObserver</b><a name=3D"InitObserver+code for \container46"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;InitObserver(Observer&#xa0;*result,void&#xa0;*Observed=
Object,&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Observ=
erFunction&#xa0;callback,&#xa0;unsigned&#xa0;flags)
{
&#xa0;&#xa0;&#xa0;&#xa0;GenericContainer&#xa0;*gen&#xa0;=3D&#xa0;ObservedOb=
ject;
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;Subjectflags&#xa0;=3D&#xa0;gen-&gt;Fl=
ags;
&#xa0;&#xa0;&#xa0;&#xa0;Subjectflags&#xa0;|=3D&#xa0;CONTAINER_HAS_OBSERVER;
&#xa0;&#xa0;&#xa0;&#xa0;gen-&gt;Flags=3DSubjectflags;
&#xa0;&#xa0;&#xa0;&#xa0;memset(result,0,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;ObservedObject&#xa0;=3D&#xa0;ObservedObj=
ect;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Callback&#xa0;=3D&#xa0;callback;
&#xa0;&#xa0;&#xa0;&#xa0;result-&gt;Flags&#xa0;=3D&#xa0;flags;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(ObserverVector&#xa0;=3D=3D&#xa0;NULL&#xa0;=
&amp;&amp;&#xa0;initVector()&#xa0;=3D=3D&#xa0;0)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
This function assumes that it receives a container that follows the require=
ments of generic containers,
i.e. it has a Get/Set flags field. It sets a bit in the flags field that is=
 tested at each function
that modifies the number of elements within the container logic. This means=
 in most machines a bit
test, a very fast operation that should not really affect the speed of the =
library code in a
significant way.

<div class=3D"p"><!----></div>
A far more important consideration is that the interface is called with a n=
otification for many
functions that the user hasn&#x27;t subscribed at all. This could be speede=
d up simply by storing
the flags somewhere in the container, but the sample implementation doesn&#=
x27;t go that far. The
reason is that it is assumed that observers are seldom used, and the object=
s that have an
observer defined are surely heavyweight objects where the slow down caused =
by the observer
interface is not that significant.

<div class=3D"p"><!----></div>
Of course this assumptions could be very wrong: other, better implementatio=
ns could decide
otherwise.
<br>

<div class=3D"p"><!----></div>
<b>AddObject</b><a name=3D"AddObject+code for \container46"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;&#xa0;AddObject(Observer&#xa0;*ob)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;i;
&#xa0;&#xa0;&#xa0;&#xa0;Observer&#xa0;*tmp;

1:&#xa0;&#xa0;for&#xa0;(i=3D0;&#xa0;i&lt;vsize;i++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(ObserverVector[i].=
ObservedObject=3D=3DNULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;mem=
cpy(ObserverVector+i,ob,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;1;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
2:&#xa0;&#xa0;tmp&#xa0;=3D&#xa0;realloc(ObserverVector,(vsize+CHUNK_SIZE)*s=
izeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(tmp&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;iError.RaiseError(&quot;iOb=
server.Subscribe&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;CONTAINER_ERROR_NOMEMORY);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_NOMEMORY;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;ObserverVector&#xa0;=3D&#xa0;tmp;
&#xa0;&#xa0;&#xa0;&#xa0;memset(ObserverVector+vsize+1,0,(CHUNK_SIZE-1)*size=
of(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;memcpy(ObserverVector+vsize,ob,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;vsize+=3D&#xa0;CHUNK_SIZE;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;1;
}

</pre></font>
The AddObject function is responsible for inserting a new association in th=
e existing table.
First (in <b>1:</b> above) it searches for a free slot. If a free slot is a=
vailable
it copies the new association into it and returns.

<div class=3D"p"><!----></div>
If there isn&#x27;t any free slot it attempts to enlarge the table (<b>2:</=
b>). If an error occurs, the
original table is still valid but no more elements can&#x27;t be added. It =
reports the error
and returns with the error code.

<div class=3D"p"><!----></div>
Otherwise all went well, and a new element is inserted.
<br>

<div class=3D"p"><!----></div>
<b>Notify</b><a name=3D"Notify+code for \container46"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;int&#xa0;Notify(void&#xa0;*ObservedObject,unsigned&#xa0;operati=
on,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraInfo1,void&#xa0;*ExtraInfo=
2)
{
&#xa0;&#xa0;&#xa0;int&#xa0;count=3D0;
&#xa0;&#xa0;&#xa0;size_t&#xa0;idx&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;void&#xa0;*ExtraInfo[2];

&#xa0;&#xa0;&#xa0;ExtraInfo[0]&#xa0;=3D&#xa0;ExtraInfo1;
&#xa0;&#xa0;&#xa0;ExtraInfo[1]&#xa0;=3D&#xa0;ExtraInfo2;
&#xa0;&#xa0;&#xa0;for&#xa0;(idx=3D0;&#xa0;idx&#xa0;&lt;&#xa0;vsize;idx++)&#=
xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(ObserverVector[idx].ObservedOb=
ject&#xa0;=3D=3D&#xa0;ObservedObject)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(ObserverVect=
or[idx].Flags&#xa0;&amp;&#xa0;operation)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Obs=
erverVector[idx].Callback(ObservedObject,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;operation,ExtraInfo);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;cou=
nt++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;return&#xa0;count;
}

</pre></font>
This is a simple linear search function. We search for an association that =
has the same
observed object and in the flags field has a bit set that indicates that is=
 interested in this operation.
If both conditions are true we call the registered function.
<br>

<div class=3D"p"><!----></div>
<b>Unsubscribe</b><a name=3D"Unsubscribe+code for \container46"></a> <hr>



<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa=
0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
static&#xa0;size_t&#xa0;Unsubscribe(void&#xa0;*ObservedObject,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;ObserverFunction&#xa0;callback)
{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;idx,count=3D0;

1:&#xa0;&#xa0;if&#xa0;(ObservedObject&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(callback&#xa0;=3D=
=3D&#xa0;NULL)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;ret=
urn&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(idx=3D0;&#xa0;idx=
&lt;vsize;idx++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(ObserverVector[idx].Callback&#xa0;=3D=3D&#xa0;callback)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;memset(ObserverVector+idx,0,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;count++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;count;
&#xa0;&#xa0;&#xa0;&#xa0;}
2:&#xa0;&#xa0;if&#xa0;(callback&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;for&#xa0;(idx=3D0;idx&lt;vs=
ize;idx++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&=
#xa0;(ObserverVector[idx].ObservedObject&#xa0;=3D=3D&#xa0;ObservedObject)&#=
xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;memset(ObserverVector+idx,0,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;count++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;count;
&#xa0;&#xa0;&#xa0;&#xa0;}
3:&#xa0;&#xa0;for&#xa0;(idx=3D0;&#xa0;idx&lt;vsize;idx++)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(ObserverVector[idx=
].ObservedObject&#xa0;=3D=3D&#xa0;ObservedObject&#xa0;&amp;&amp;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Obs=
erverVector[idx].Callback&#xa0;=3D=3D&#xa0;callback)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;mem=
set(ObserverVector+idx,0,sizeof(Observer));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;cou=
nt++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;count;
}

</pre></font>
Unsubscribe should handle three different situations:

<ul>
<li>The observer object wishes to stop observing. This case is represented =
by a &#xa0;NULL <font size=3D"+1"><tt>ObservedObject</tt></font> argument m=
eaning that all
observed objects for this callback should be affected. This is handled in t=
he code marked <b>1:</b> above.
<div class=3D"p"><!----></div>
</li>

<li> The observed object (the container) wishes to stop being observed. Thi=
s case is represented by a &#xa0;NULL <font size=3D"+1"><tt>callback</tt></=
font> argument, meaning that
all callbacks are affected. This is handled in the code marked <b>2:</b> ab=
ove.
<div class=3D"p"><!----></div>
</li>

<li> Only a single relationship should be stopped between a single object a=
nd a single callback. This is handled in the code marked <b>3:</b> above.
<div class=3D"p"><!----></div>
</li>
</ul>
To erase an item we just set it to zero, supposing that the next time an ob=
ject subscribes the empty slot will be found and used.
Obviously this method could waste some space in case we ever do only a sing=
le relationship in the whole program. The number of slots
that is reserved in the sample implementation is small, to avoid wasting me=
mory in case there are few  observers. More sophisticated
implementations can add features here.

     <h3><a name=3D"tth_sEc4.7">
4.7</a>&#xa0;&#xa0;ValArrays</h3>
<a name=3D"ValArrays,code47"></a>
All ValArrays are implemented using a template file that receives its param=
eters from a small c file. The same is done for the header files, that
are also controlled by a header file. Since header files do not contain any=
 definitions, only declarations, the different headers are grouped into
a single header file that includes the templated file several times. Here i=
s an excertp of valarray.h:

<font size=3D"+1"><pre>&#xa0;&#xa0;1&#xa0;/********************************=
**************&#xa0;&#xa0;*&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;
&#xa0;&#xa0;2&#xa0;&#xa0;*&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&=
#xa0;&#xa0;ValArraySize_t&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#=
xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0=
;&#xa0;&#xa0;*
&#xa0;&#xa0;3&#xa0;&#xa0;*************************************************/=
&#xa0;
&#xa0;&#xa0;4&#xa0;#undef&#xa0;ElementType
&#xa0;&#xa0;5&#xa0;#undef&#xa0;ValArrayInterface
&#xa0;&#xa0;6&#xa0;#undef&#xa0;ElementType
&#xa0;&#xa0;7&#xa0;#undef&#xa0;ValArray
&#xa0;&#xa0;9&#xa0;#undef&#xa0;_ValArray
&#xa0;10&#xa0;#define&#xa0;ValArray&#xa0;ValArraySize_t
&#xa0;11&#xa0;#define&#xa0;ElementType&#xa0;size_t
&#xa0;12&#xa0;#define&#xa0;ValArrayInterface&#xa0;ValArraySize_tInterface
&#xa0;13&#xa0;#define&#xa0;__IS_UNSIGNED__
&#xa0;14&#xa0;#define&#xa0;__IS_INTEGER__
&#xa0;15&#xa0;#include&#xa0;&quot;valarraygen.h&quot;
&#xa0;16&#xa0;#undef&#xa0;__IS_UNSIGNED__
&#xa0;17&#xa0;#undef&#xa0;__IS_INTEGER__
&#xa0;18&#xa0;extern&#xa0;ValArraySize_tInterface&#xa0;iValArraySize_t;
&#xa0;

</pre></font>
Lines 4-9 remove a possible previous definition of the parameters we are go=
ing to use for valarraygen.h. Then we start defining the parameters:

<ul>
<li> <font size=3D"+1"><tt>_ValArray</tt></font> is <font size=3D"+1"><tt>V=
alArraySize_t</tt></font> (line 10)
<div class=3D"p"><!----></div>
</li>

<li> The <font size=3D"+1"><tt>ElementType</tt></font> parameter is the act=
ual type of the elements to be stored into each ValArray.
<div class=3D"p"><!----></div>
</li>

<li> Lines 13 and 14 define symbols used to test for certain attributes wit=
hin valarraygen.h. Some functions are defined in types that=20
correspond to those attributes and omitted in the types where they are not.=
 The attributes defined are:

<ul>
<li> Unsigned. This encloses all unsigned types. In these types bitwise ope=
rations are legal.
<div class=3D"p"><!----></div>
</li>

<li> Integer. This encloses all integer types. The <font size=3D"+1"><tt>mo=
d</tt></font> operation is defined for these types.
<div class=3D"p"><!----></div>
</li>

<li> Not Integer implies float. Operations like <font size=3D"+1"><tt>fcmp<=
/tt></font> are defined only for floats.
<div class=3D"p"><!----></div>
</li>
</ul>
<div class=3D"p"><!----></div>
</li>

<li> All parameters defined, we can include the valarraygen.h file. This fi=
le uses the defines above to define the interface data structure.
<div class=3D"p"><!----></div>
</li>

<li> The really end user visible name is at line 19: the name of the interf=
ace.
<div class=3D"p"><!----></div>
</li>
</ul>
The valarraygen.h (gen for <b>gen</b>eric) defines the interfaces for all t=
he parameter types.
Here is a small part of it so that you get the idea:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;_ValArray&#xa0;ValArray;
typedef&#xa0;struct&#xa0;tagValArray&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;ValArray&#xa0;*AL);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(ValArray&#xa0;*AL,ElementType&=
#xa0;data);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(ValArray&#xa0;*AL,ElementType&#xa=
0;elem);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...&#xa0;snip
}&#xa0;ValArrayInterface;

</pre></font>
In a very similar way, the generic ValArray containers for all basic types =
are organized in a small parameter file &quot;valarrayint.c&quot;, &quot;va=
larraydouble.c&quot;
and others that make the necessary defines so that the underlying valarrayg=
en.c defines a function for each required basic type.
Programming in valarraygen.c is fairly simple. Here is a function that is p=
arametrized by the <font size=3D"+1"><tt>ElementType</tt></font> macro:

<font size=3D"+1"><pre>static&#xa0;ElementType&#xa0;GetElement(const&#xa0;V=
alArray&#xa0;*AL,size_t&#xa0;idx)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;start=3D0,incr=
=3D1,top=3DAL-&gt;count;

&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Slice)&#xa0=
;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;start&#xa0;=3D&#xa0;AL-&gt;Slice-&gt;start;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;incr&#xa0;=3D&#xa0;AL-&gt;Slice-&gt;increment;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;top&#xa0;=3D&#xa0;AL-&gt;Slice-&gt;length;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&gt;=3Dto=
p&#xa0;)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;IndexError(&quot;GetElement&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;MinElementType;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;idx&#xa0;=3D&#xa0;start+idx=
*incr;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;AL-&gt;contents=
[idx];
}

</pre></font>
We see here:

<ul>
<li> Slice management. All operations in a ValArray are constrained by the =
current slice, that starts with a slice that encloses the whole array=20
(the start is zero, the increment is one, and the length of the slice is th=
e length of the array). When a slice is defined for an array, it will be
used, if not, an implicit slice is used that includes the whole array.
<div class=3D"p"><!----></div>
</li>

<li> Error analysis is simplified for ValArrays, and no &#xa0;NULL checking=
 is done. However hard errors like an index error (trying to index an aray =
beyond
its bounds) are always reported.
<div class=3D"p"><!----></div>
</li>

<li> Contrary to the <font size=3D"+1"><tt>GetElement</tt></font> function =
in the <font size=3D"+1"><tt>vector</tt></font> container we do not return =
a pointer to the element but the element
itself. For the basic types this can always be done and is very efficient. =
For more complex types use <font size=3D"+1"><tt>vector</tt></font> instead=
 of <font size=3D"+1"><tt>ValArray</tt></font>.
<div class=3D"p"><!----></div>
</li>
</ul>
The <font size=3D"+1"><tt>valarraygen.c</tt></font> file can be used to pro=
vide for an array of actually <b>any</b> data structure that is small enoug=
h to be returned by value.
It suffices to change the <font size=3D"+1"><tt>ElementType</tt></font> to =
the concerned structure whose definition must be visible to the compiler. I=
n the next chapter we see how this
could be done.

<div class=3D"p"><!----></div>

 <h1><a name=3D"tth_chAp9">
Chapter 9 </a><br>Building generic components</h1>

 <h2><a name=3D"tth_sEc1">
1</a>&#xa0;&#xa0;Pre processing a generic file</h2>
If you take the source code of a container like =E4rraylist&quot;, for inst=
ance, you will notice that all those &quot;void *=E4re actually a single ty=
pe, i.e. the type of the objects being stored in the container.  All generi=
c containers use &quot;void *&quot; as the type under which the objects are=
 stored so that the same code works with many different types.

<div class=3D"p"><!----></div>
Obviously another way is possible. You could actually replace the object ty=
pe within that code and build a family of functions and types that can be s=
pecialized by its type parameter. For instance:

<font size=3D"+1"><pre>struct&#xa0;tag$(TYPE)ArrayInterface;
typedef&#xa0;struct&#xa0;_$(TYPE)Array&#xa0;{
&#xa0;&#xa0;&#xa0;struct&#xa0;tag$(TYPE)ArrayInterface&#xa0;*VTable;&#xa0;
&#xa0;&#xa0;&#xa0;size_t&#xa0;count;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Flags;
&#xa0;&#xa0;&#xa0;$(TYPE)&#xa0;*contents;
&#xa0;&#xa0;&#xa0;size_t&#xa0;capacity;
&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;CompareFn;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;
}&#xa0;$(TYPE)_Array&#xa0;;

</pre></font>
Now, if we just substitute <b> <font size=3D"+1"><tt>$(TYPE)</tt></font></b=
> with <b>&quot;double&quot;</b> in the code above, we obtain:

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>struct&#xa0;tagdoubleArrayInterface;
typedef&#xa0;struct&#xa0;_doubleArray&#xa0;{
&#xa0;&#xa0;&#xa0;struct&#xa0;tagdoubleArrayInterface&#xa0;*VTable;&#xa0;
&#xa0;&#xa0;&#xa0;size_t&#xa0;count;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;int&#xa0;Flags;
&#xa0;&#xa0;&#xa0;double&#xa0;*contents;
&#xa0;&#xa0;&#xa0;size_t&#xa0;capacity;
&#xa0;&#xa0;&#xa0;size_t&#xa0;ElementSize;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;timestamp;
&#xa0;&#xa0;&#xa0;CompareFunction&#xa0;CompareFn;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;ErrorFunction&#xa0;RaiseError;
}&#xa0;double_Array&#xa0;;

</pre></font>

<div class=3D"p"><!----></div>
We use the name of the parameter to build a family of names, and we use the=
 name of the type parameter to declare an array of elements of that specifi=
c type as the contents of the array. This double usage allows us to build d=
ifferent name spaces for each different array type, so that we can declare =
arrays of different types without problems.

<div class=3D"p"><!----></div>
Using the same pattern, we can build a family of functions for this contain=
er that is specialized to a concrete type of element. For instance we can w=
rite:

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>static&#xa0;int&#xa0;EraseAt($(TYPE)_Array&#xa0;*AL,=
size_t&#xa0;idx)
{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;$(TYPE)&#xa0;*p;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&gt;=3D&#=
xa0;AL-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_INDEX;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Flags&#xa0;=
&amp;&#xa0;AL_READONLY)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;count&#xa0;=
=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;return&#xa0;-2;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;=3D&#xa0;AL-&gt;cont=
ents+idx;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&lt;&#xa0=
;(AL-&gt;count-1))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;memmove(p,p+1,(AL-&gt;count-idx)*sizeof($(TYPE)));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;count--;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;AL-&gt;count;
}

</pre></font>

<div class=3D"p"><!----></div>
when transformed, the function above becomes:

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>static&#xa0;int&#xa0;EraseAt(double_Array&#xa0;*AL,s=
ize_t&#xa0;idx)
{
&#xa0;&#xa0;&#xa0;&#xa0;double&#xa0;*p;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&gt;=3D&#xa0;AL-&gt;count)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_INDEX;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;Flags&#xa0;&amp;&#xa0;AL_READONLY)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;CONTAINER_ERROR=
_READONLY;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(AL-&gt;count&#xa0;=3D=3D&#xa0;0)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;-2;
&#xa0;&#xa0;&#xa0;&#xa0;p&#xa0;=3D&#xa0;AL-&gt;contents+idx;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(idx&#xa0;&lt;&#xa0;(AL-&gt;count-1))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;memmove(p,p+1,(AL-&gt;count=
-idx)*sizeof(double));
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;count--;
&#xa0;&#xa0;&#xa0;&#xa0;AL-&gt;timestamp++;
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;AL-&gt;count;
}

</pre></font>

<div class=3D"p"><!----></div>
Now we can build a simple program in C that will do the substitution work f=
or us. To make things easier, that program should build two files:

<ul>
<li> The header file, that will contain the type definitions for our array.
<div class=3D"p"><!----></div>
</li>

<li> The C source file, containing all the parametrized function definition=
s.
<div class=3D"p"><!----></div>
</li>
</ul>
We separate the commands to change the name of the file from the rest of th=
e text by introducing in the first positions of a line a sequence of three =
or more @ signs.  Normally we will have two of those &quot;commands&quot;: =
one for the header file, another for the c file.

<div class=3D"p"><!----></div>
Besides that, our program is just a plain text substitution. No parsing, no=
r anything else is required. If we write <font size=3D"+1"><tt>&quot;$(TYPE=
)&quot;</tt></font> within a comment or a character string, it will be chan=
ged too.

<font size=3D"+1"><pre>#include&#xa0;&lt;stdlib.h&gt;
#include&#xa0;&lt;string.h&gt;
#include&#xa0;&lt;stdio.h&gt;

#define&#xa0;MAXLINE_LEN&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;2048
#define&#xa0;MAX_FNAME&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;1024
#define&#xa0;EXPANSION_LENGTH&#xa0;256

int&#xa0;main(int&#xa0;argc,char&#xa0;*argv[])
{
&#xa0;&#xa0;&#xa0;FILE&#xa0;*input,*output=3DNULL;
&#xa0;&#xa0;&#xa0;char&#xa0;buf[MAXLINE_LEN],
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmpLine[MAXLINE_LEN+EXPANSI=
ON_LENGTH];
&#xa0;&#xa0;&#xa0;char&#xa0;tmpBuf[MAX_FNAME];
&#xa0;&#xa0;&#xa0;char&#xa0;outputFile[MAX_FNAME];
&#xa0;&#xa0;&#xa0;char&#xa0;*TypeDefinition;
&#xa0;&#xa0;&#xa0;unsigned&#xa0;lineno&#xa0;=3D&#xa0;1;

&#xa0;&#xa0;&#xa0;if&#xa0;(argc&#xa0;&lt;&#xa0;3)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&quot;Usage:&#xa0;%s&#xa0;&=
lt;template&#xa0;file&#xa0;to&#xa0;expand&gt;&#xa0;&lt;type&#xa0;name&gt;\n=
&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;argv[0]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EXIT_FAIL=
URE;
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;input&#xa0;=3D&#xa0;fopen(argv[1],&quot;r&quot;);
&#xa0;&#xa0;&#xa0;if&#xa0;(input&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;Unable&#xa0;=
to&#xa0;open&#xa0;file&#xa0;&#x27;%s&#x27;\n&quot;,argv[1]);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EXIT_FAILURE;
&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;TypeDefinition&#xa0;=3D&#xa0;argv[2];
&#xa0;&#xa0;&#xa0;while&#xa0;(fgets(buf,sizeof(buf)-1,input))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(buf[0]=3D=3D&#x27;@&#x27=
;&#xa0;&amp;&amp;&#xa0;buf[1]&#xa0;=3D=3D&#xa0;&#x27;@&#x27;&#xa0;&amp;&amp=
;&#xa0;buf[2]&#xa0;=3D=3D&#xa0;&#x27;@&#x27;)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;i=3D0,=
j=3D0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(buf=
[i]&#xa0;&#xa0;=3D=3D&#xa0;&#x27;@&#x27;)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;i++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(buf=
[i]&#xa0;!=3D&#xa0;0&#xa0;&amp;&amp;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;buf[i]&#xa0;!=3D&#xa0;&#x27;\n&#x27;&#xa0;&amp;&=
amp;&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;i&#xa0;&lt;&#xa0;MAX_FNAME-1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmpBuf[j++]&#xa0;=3D&#xa0;buf[i];
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;i++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmpBuf[j]=
&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(=
strrepl(tmpBuf,&quot;$(TYPE)&quot;,TypeDefinition,NULL))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,&quot;File&#xa0;name&#xa0;&#x27;%=
s&#x27;&#xa0;too&#xa0;long\n&quot;,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;tmpBuf);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EXIT_FAILURE;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;strrepl(t=
mpBuf,&quot;$(TYPE)&quot;,TypeDefinition,outputFile);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(=
output&#xa0;!=3D&#xa0;NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;fclose(output);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;output&#xa0;=3D&#xa0;fopen(outputFile,&quot;w&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;if&#xa0;(output&#xa0;=3D=3D&#xa0;NULL)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;=
&quot;Impossible&#xa0;to&#xa0;open&#xa0;&#x27;%s&#x27;\n&quot;,outputFile);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return(EXIT_FAILURE);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;els=
e&#xa0;if&#xa0;(lineno&#xa0;=3D=3D&#xa0;1)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;fprintf(stderr,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&quot;Error:&#xa0;First&#xa0;line&#xa0;should&#xa0;contain&#xa0;th=
e&#xa0;file&#xa0;name\n&quot;);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;exit(EXIT_FAILURE);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;els=
e&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;/*&#xa0;Normal&#xa0;lines&#xa0;here&#xa0;*/
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;if&#xa0;(strrepl(buf,&quot;$(TYPE)&quot;,TypeDefinitio=
n,NULL)&#xa0;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&gt;=3D&#xa0;sizeof(tmpL=
ine))&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;fprintf(stderr,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&quot;Line&#xa0;bu=
ffer&#xa0;overflow&#xa0;line&#xa0;%d\n&quot;,lineno);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;strrepl(buf,&quot;$(TYPE)&quot;,TypeDefinition,tmpLine=
);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;fwrite(tmpLine,1,strlen(tmpLine),output);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;lineno++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fclose(input);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;fclose(output);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;EXIT_SUCCESS;
}

</pre></font>
The heart of this program is the =DFtrrepl&quot; function that replaces a g=
iven character string in a piece of text. If you call it with a &#xa0;NULL =
output parameter, it will return the number of characters that the replacem=
ent would need if any. For completeness, here is the code for strrepl:

<font size=3D"+1"><pre>int&#xa0;strrepl(const&#xa0;char&#xa0;*InputString,&=
#xa0;const&#xa0;char&#xa0;*StringToFind,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;con=
st&#xa0;char&#xa0;*StringToReplace,&#xa0;char&#xa0;*output)
{
&#xa0;&#xa0;&#xa0;&#xa0;char&#xa0;*offset&#xa0;=3D&#xa0;NULL,&#xa0;*Current=
Pointer&#xa0;=3D&#xa0;NULL;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;insertlen;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;findlen&#xa0;=3D&#xa0;strlen(StringToFind);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;result&#xa0;=3D&#xa0;0;

&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(StringToReplace)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;insertlen&#xa0;=3D&#xa0;strlen(St=
ringToReplace);
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;insertlen&#xa0;=3D&#xa0;0;
&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(output)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(output&#xa0;!=3D&#=
xa0;InputString)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;mem=
move(output,InputString,strlen(InputString)+1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;Inp=
utString&#xa0;=3D&#xa0;output;
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;else
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#xa0;=3D&#xa0;strlen(Input=
String)+1;

&#xa0;&#xa0;&#xa0;&#xa0;while&#xa0;(*InputString)&#xa0;&#xa0;&#xa0;&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;offset&#xa0;=3D&#xa0;strstr&#xa0;(!offset&#xa0;?&#x=
a0;InputString&#xa0;:&#xa0;CurrentPointer,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;StringToFind);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(offset&#xa0;=3D=3D&#xa0;=
NULL)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;break;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;CurrentPointer&#xa0;=3D&#xa0;(off=
set&#xa0;+&#xa0;(output&#xa0;?&#xa0;insertlen&#xa0;:&#xa0;findlen));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(output)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;strcpy&#x=
a0;(offset,&#xa0;(offset&#xa0;+&#xa0;findlen));
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;memmove&#=
xa0;(offset&#xa0;+&#xa0;insertlen,
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;offset,&#xa0=
;strlen&#xa0;(offset)&#xa0;+&#xa0;1);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;if&#xa0;(=
insertlen)
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#x=
a0;&#xa0;&#xa0;memcpy&#xa0;(offset,&#xa0;StringToReplace,&#xa0;insertlen);
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result++;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;else&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#x=
a0;-=3D&#xa0;findlen;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;result&#x=
a0;+=3D&#xa0;insertlen;
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;}
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;result;
}

</pre></font>

<div class=3D"p"><!----></div>
And now we are done. The usage of this program is very simple:
=20
<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;expand&#xa0;&lt;template&#xa0;file=
&gt;&#xa0;&lt;type&#xa0;name&gt;

</pre></font>

<div class=3D"p"><!----></div>
For instance to substitute by &quot;double&quot; in the template file =E4rr=
aylist.tpl&quot; we would use:

<div class=3D"p"><!----></div>

<font size=3D"+1"><pre>&#xa0;&#xa0;&#xa0;expand&#xa0;arraylist.tpl&#xa0;dou=
ble

</pre></font>

<div class=3D"p"><!----></div>
We would obtain doublearray.h and doublearray.c

<div class=3D"p"><!----></div>
BUG: Obviously, this supposes that the type name does NOT contain  any spac=
es or other characters like &#x27;*&#x27; or &quot;[  ]&quot;. If you want =
to use types with=20
those characters you should substitute them with a &quot;_&quot; for instan=
ce, and make a typedef:

<div class=3D"p"><!----></div>
<font size=3D"+1"><tt>typedef long double long_double;</tt></font>

<div class=3D"p"><!----></div>
And use that type (&quot;long_double&quot;) as the substitution type.

 <h2><a name=3D"tth_sEc2">
2</a>&#xa0;&#xa0;Using the pre-processor</h2>
Instead of using a separate program we can try to use the pre-processor to =
make the grunt of the editing work. This is the path taken by the
sample implementation. We will describe here the <font size=3D"+1"><tt>list=
gen.c</tt></font> and <font size=3D"+1"><tt>listgen.h</tt></font> files tha=
t implement a type-generic list container.

<div class=3D"p"><!----></div>
Each type needs two files:

<ol type=3D"1">
<li> A header file where the data structures are declared. The name of this=
 file is composed from the name of the type and the name of the
container. For instance for a double linked list of integers we would have:=
 <font size=3D"+1"><tt>intdlist.h</tt></font>.
<div class=3D"p"><!----></div>
</li>

<li> An implementation file where the code for the data type resides. The n=
ame is the same as the header file but with a <font size=3D"+1"><tt>.c</tt>=
</font> extension
<a href=3D"#tthFtNtAHG" name=3D"tthFrefAHG"><sup>76</sup></a>.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
In the sample implementation the different files (<font size=3D"+1"><tt>int=
list.h</tt></font>, <font size=3D"+1"><tt>doublelist.h</tt></font>, etc) ar=
e very small files that mainly define a single macro,=20
including afterwards a generic file with the bulk of the code. For instance=
 here is the <font size=3D"+1"><tt>intlist.h</tt></font> file:

<font size=3D"+1"><pre>#include&#xa0;&quot;containers.h&quot;
#undef&#xa0;DATA_TYPE
#define&#xa0;DATA_TYPE&#xa0;int&#xa0;//&#xa0;The&#xa0;name&#xa0;of&#xa0;the=
&#xa0;type
#include&#xa0;&quot;listgen.h&quot;&#xa0;&#xa0;//&#xa0;The&#xa0;generic&#xa=
0;header&#xa0;file
#undef&#xa0;DATA_TYPE
#undef&#xa0;LIST_TYPE
#undef&#xa0;LIST_TYPE_
#undef&#xa0;INTERFACE
#undef&#xa0;ITERATOR
#undef&#xa0;ITERFACE_NAME
#undef&#xa0;LIST_ELEMENT
#undef&#xa0;LIST_ELEMENT_

</pre></font>
The <font size=3D"+1"><tt>#undef</tt></font> statements allow to include se=
veral files of the same type in a source file.

      <h4><a name=3D"tth_sEc2.0.1">
2.0.1</a>&#xa0;&#xa0;The generic header file</h4>
The generic list file above (<font size=3D"+1"><tt>listgen.h</tt></font>) h=
as the following tasks:

<ol type=3D"1">
<li> Define the container data type: <font size=3D"+1"><tt>[type][container=
]</tt></font> in this case <font size=3D"+1"><tt>intList</tt></font>. Since=
 we are defining a list, we define a list element=20
component:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;LIST_ELEMENT&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;LIST_ELEMENT&#xa0;*Next;
&#xa0;&#xa0;&#xa0;&#xa0;DATA_TYPE&#xa0;Data;
}&#xa0;LIST_ELEMENT;

</pre></font>
This will be expanded by the pre processor to:

<font size=3D"+1"><pre>typedef&#xa0;struct&#xa0;intListElement&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;struct&#xa0;intListElement&#xa0;*Next;
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;Data;
}&#xa0;intListElement;

</pre></font>
<div class=3D"p"><!----></div>
</li>

<li> Define the interface structure (the function table) using generic nota=
tion:

<font size=3D"+1"><pre>struct&#xa0;INTERFACE_STRUCT_INTERNAL_NAME(DATA_TYPE=
)&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;LIST_TYPE&#xa0;*L);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;LIST_TYPE&#xa0=
;*L);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(LIST_TYPE&#xa0;*L,unsigne=
d&#xa0;flags);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;LIST_TYPE&#xa0;*L,c=
onst&#xa0;DATA_TYPE&#xa0;element);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(LIST_TYPE&#xa0;*L,const&#xa0;DATA=
_TYPE);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(LIST_TYPE&#xa0;*l,const&#xa0;D=
ATA_TYPE);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...
};

</pre></font>
This will be translated into:

<font size=3D"+1"><pre>struct&#xa0;__intListInterface&#xa0;{
&#xa0;&#xa0;&#xa0;&#xa0;size_t&#xa0;(*Size)(const&#xa0;intList&#xa0;*L);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*GetFlags)(const&#xa0;intList&#xa0;*=
L);
&#xa0;&#xa0;&#xa0;&#xa0;unsigned&#xa0;(*SetFlags)(intList&#xa0;*L,unsigned&=
#xa0;flags);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Clear)(intList&#xa0;*L);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Contains)(const&#xa0;intList&#xa0;*L,con=
st&#xa0;int&#xa0;element);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*Erase)(intList&#xa0;*L,const&#xa0;int);
&#xa0;&#xa0;&#xa0;&#xa0;int&#xa0;(*EraseAll)(intList&#xa0;*l,const&#xa0;int=
);
&#xa0;&#xa0;&#xa0;&#xa0;//&#xa0;...
};

</pre></font>
<div class=3D"p"><!----></div>
</li>
</ol>

      <h4><a name=3D"tth_sEc2.0.2">
2.0.2</a>&#xa0;&#xa0;The implementation file</h4>
There are two posibilities:=20


<ul>     =20
<li> Replicate all code of the container. This has the advantage of sparing=
 an extra call instruction at run time and making possible use of
specialized code tailored to the specific data type being compiled.
<div class=3D"p"><!----></div>
</li>

<li> Make a thin translation layer to reuse the code of the container. This=
 has the advantage of minimizing the source code, making bug fixing
easier since the bugs will be fixed in only one place and not in many diffe=
rent specializations.=20

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
This first edition of the sample implementation has chosen the second strat=
egy since the code is new, and probably a lot of changes will be necessary
before it stabilizes. In general we have three types of functions:


<ul>     =20
<li> Functions where the signature has changed: instead of working with a <=
font size=3D"+1"><tt>void&#xa0;*</tt></font> they receive the concrete data=
 type of the container specialization. This allows for compile time checkin=
g of arguments, what is a very good improvement over the generic <font size=
=3D"+1"><tt>void&#xa0;*</tt></font> functions.
An example of those functions looks like this:

<font size=3D"+1"><pre>static&#xa0;int&#xa0;Add(LIST_TYPE&#xa0;*&#xa0;l,&#x=
a0;const&#xa0;DATA_TYPE&#xa0;elem)
{
&#xa0;&#xa0;&#xa0;&#xa0;return&#xa0;iList.Add((List&#xa0;*)l,&amp;elem);
}

</pre></font>
<div class=3D"p"><!----></div>
</li>

<li> Functions that have the same signature and are replaced by the equival=
ent functions of the generic container at the creation of the new
container.
<div class=3D"p"><!----></div>
</li>

<li> Functions that for performance reasons are rewritten in a generic way,=
 i.e. their body is present in the specialized container. An example
is the quick sort function, that receives an expression parameter in the fo=
rm of a compile time macro that is expanded in the body of the
function. This enables a big performance boost: Instead of the sorting func=
tion calling a function that does a <font size=3D"+1"><tt>memcmp</tt></font=
> of the data, the
comparison expression is used, avoiding two function calls of overhead at e=
ach comparison.

<div class=3D"p"><!----></div>

<div class=3D"p"><!----></div>
</li>
</ul>


<div class=3D"p"><!----></div>
The implementation file receives several other optional parameters.
<a name=3D"COMPARE\_EXPRESSION20"></a>=20

<font size=3D"+1"><pre>#define&#xa0;COMPARE_EXPRESSION(a,&#xa0;b)&#xa0;\
&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;&#xa0;((*b)-&gt;Data&#xa0;&gt;&#xa0;(*a)-&gt;=
Data&#xa0;?&#xa0;-1&#xa0;:&#xa0;(*b)-&gt;Data&#xa0;!=3D&#xa0;(*a)-&gt;Data)

</pre></font>

<div class=3D"p"><!----></div>
This expression is used to return -1 for a  &lt;  b, zero for equality and =
1 for a  &gt;  b<a href=3D"#tthFtNtAHH" name=3D"tthFrefAHH"><sup>77</sup></=
a>.=20
<br clear=3D"LEFT"><br><br>


<center>

 <h1><a name=3D"tth_chAp10">
Chapter 10 </a><br>API Overview</h1>
</center>

<br>
<a name=3D"API Overview00"></a>

<div class=3D"p"><!----></div>
Here is a table of all functions of the library. It indicates which functio=
ns are implemented in each container. Some containers are fused=20
together since they implement exactly the same functions: all the <font siz=
e=3D"+1"><tt>ValArray</tt></font> containers are displayed in a single colu=
mn, the containers=20
<font size=3D"+1"><tt>StringList</tt></font> and <font size=3D"+1"><tt>wStr=
ingList</tt></font> share the same column also.



<font size=3D"-3">


<div class=3D"p"><!----></div>
<a name=3D"tth_tAb1">
</a>=20
<center>     =20
<table border=3D"1">
<tbody><tr><td width=3D"118"><font size=3D"-4"><b>Function</b></font>  </td=
><td align=3D"center"><font size=3D"-4"><b>List</b></font> </td><td align=
=3D"center"><font size=3D"-4"><b>Dlist</b></font> </td><td align=3D"center"=
><font size=3D"-4"><b>Vector</b></font> </td><td align=3D"center"><font siz=
e=3D"-4"><b>Val</b></font> </td><td align=3D"center"><font size=3D"-4"><b>B=
it-</b></font> </td><td align=3D"center"><font size=3D"-4"><b>String</b></f=
ont> </td><td align=3D"center"><font size=3D"-4"><b>Queue</b></font> </td><=
td align=3D"center"><font size=3D"-4"><b>Deque</b></font> </td><td align=3D=
"center"><font size=3D"-4"><b>Dict.</b></font> </td><td align=3D"center"><f=
ont size=3D"-4"><b>Hash</b></font> </td><td align=3D"center"><font size=3D"=
-4"><b>Tree</b></font> </td><td align=3D"center"><font size=3D"-4"><b>Prior=
ity</b></font> </td><td align=3D"center"><font size=3D"-4"><b>Stream</b></f=
ont>=20
</td></tr>
<tr><td width=3D"118"><font size=3D"-4"><b>Name</b></font></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"><font size=3D"-4"><b>array</b></font> </td><td align=3D"center"=
><font size=3D"-4"><b>string</b></font> </td><td align=3D"center"><font siz=
e=3D"-4"><b>collection</b></font> </td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"><font size=
=3D"-4"><b>table</b></font> </td><td align=3D"center"><font size=3D"-4"><b>=
map</b></font> </td><td align=3D"center"><font size=3D"-4"><b>queue</b></fo=
nt> </td><td align=3D"center"><font size=3D"-4"><b>buffer</b></font>
</td></tr>
<tr><td width=3D"118"></td></tr>
<tr><td></td></tr>
<tr><td width=3D"118">

<div class=3D"p"><!----></div>
Abs                 	</td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cent=
er"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"c=
enter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Accumulate          	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Add                 	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </=
td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"c=
enter"> X </td><td align=3D"center"></td></tr>
<tr><td width=3D"118">AddRange            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"=
></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">And                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">AndAssign           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">AndScalar           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Append              	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Apply               	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Back                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"></=
td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"=
></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">BitBlockCount       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">BitLeftShift        	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">BitRightShift       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">CastToArray         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">Clear               	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"=
> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td alig=
n=3D"center"> X </td><td align=3D"center"> X </td></tr>
<tr><td width=3D"118">Compare             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">CompareEqual        	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td></tr>
<tr><td width=3D"118">CompareEqualScalar  	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td></tr>
<tr><td width=3D"118">CompareScalar       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Contains            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Copy                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"> X </td><td align=3D"center"></td></tr>
<tr><td width=3D"118">CopyBits            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">CopyElement         	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">CopyTo              	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td></tr>
<tr><td width=3D"118">Create              	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"=
> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td alig=
n=3D"center"> X </td><td align=3D"center"> X </td></tr>
<tr><td width=3D"118">CreateFromFile      	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"> X </td></tr>
<tr><td width=3D"118">CreateSequence      	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">CreateWithAllocator 	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"></td><td align=3D"center"> X=
 </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"c=
enter"> X </td><td align=3D"center"> X </td></tr>
<tr><td width=3D"118">Dequeue             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">DivideBy            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">DivideByScalar      	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">DivideScalarBy      	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Enqueue             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Equal               	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"c=
enter"> X </td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Erase               	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">EraseAll            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">EraseAt             	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">EraseRange          	</td><td align=3D"center"> X </t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FCompare            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FillSequential      	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Finalize            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"=
> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td alig=
n=3D"center"> X </td><td align=3D"center"> X </td></tr>
<tr><td width=3D"118">FindFirst           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FindNext            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FindText            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FindTextIndex       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FindTextPositions   	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">FirstElement        	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">ForEach             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Fprintf             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Front               	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"></=
td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"=
> X </td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetAllocator        	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </=
td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cent=
er"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetCapacity         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">GetData             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"> X </td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"> X </td></tr>
<tr><td width=3D"118">GetElement          	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </=
td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"c=
enter"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetElementSize      	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </=
td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"c=
enter"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetFlags            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetHeap             	</td><td align=3D"center"> X </t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">GetKeys             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">GetLoadFactor       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">GetPosition         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">GetRange            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">GetSlice            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">IndexIn             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td></tr>
<tr><td width=3D"118">IndexOf             	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Init                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"c=
enter"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">InitIterator        	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">InitWithAllocator   	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">InitializeWith      	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </=
td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cent=
er"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Insert              	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">InsertAt            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">InsertIn            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X </td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Inverse             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">LastElement         	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">LessEqual           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Load                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Max                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Memset              	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">Min                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Mismatch            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td></tr>
<tr><td width=3D"118">Mod                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">ModScalar           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">MultiplyWith        	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">MultiplyWithScalar  	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">NewIterator         	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Not                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">NotAssign           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Or                  	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">OrAssign            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">OrScalar            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Pop                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">PopBack             	</td><td align=3D"center"></td><=
td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"cente=
r"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">PopFront            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"> X </td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">PopulationCount     	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Print               	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Product             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Push                	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">PushBack            	</td><td align=3D"center"></td><=
td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"cente=
r"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">PushFront           	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td><td align=3D"center"> X </td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">Read                	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">ReadFromFile        	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">RemoveRange         	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">Replace             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">ReplaceAt           	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Reserve             	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">ResetSlice          	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Resize              	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"> X </td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"> X </td></tr>
<tr><td width=3D"118">Reverse             	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></=
td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"=
></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">RotateLeft          	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">RotateRight         	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">Save                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Search              	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SearchWithKey       	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Select              	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">SelectCopy          	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">SetCapacity         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center">=
 X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td></tr>
<tr><td width=3D"118">SetCompareFunction  	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"></=
td><td align=3D"center"></td></tr>
<tr><td width=3D"118">SetDestructor       	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X </=
td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"c=
enter"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">SetElement          	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SetElementData      	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">SetErrorFunction    	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">SetFlags            	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X=
 </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=
=3D"center"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">SetHashFunction     	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">SetPosition         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">SetSlice            	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Size                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"=
> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td alig=
n=3D"center"> X </td><td align=3D"center"> X </td></tr>
<tr><td width=3D"118">Sizeof              	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td=
 align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"center"=
> X </td><td align=3D"center"> X </td><td align=3D"center"> X </td><td alig=
n=3D"center"> X </td><td align=3D"center"></td></tr>
<tr><td width=3D"118">SizeofIterator      	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"> X </td><td align=3D"center"> X </=
td><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"c=
enter"></td><td align=3D"center"></td></tr>
<tr><td width=3D"118">Sort                	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"> X </td><td align=3D"ce=
nter"> X </td><td align=3D"center"></td><td align=3D"center"> X </td><td al=
ign=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td><td=
 align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></td>=
<td align=3D"center"></td></tr>
<tr><td width=3D"118">Splice              	</td><td align=3D"center"></td><=
td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SplitAfter          	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">StringToBitString   	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SubtractFrom        	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SubtractFromScalar  	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">SubtractScalarFrom  	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SumScalarTo         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">SumTo               	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Union               	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">UseHeap             	</td><td align=3D"center"> X </t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">Write               	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center">=
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"> X </td></tr>
<tr><td width=3D"118">WriteToFile         	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"></td><td align=3D"center"> X </td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"> X </td></tr>
<tr><td width=3D"118">Xor                 	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">XorAssign           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"></t=
d><td align=3D"center"> X </td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">XorScalar           	</td><td align=3D"center"></td><=
td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"> X =
</td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cente=
r"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"ce=
nter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D=
"center"></td></tr>
<tr><td width=3D"118">Totals              	</td><td align=3D"center">56</td=
><td align=3D"center">57</td><td align=3D"center">60</td><td align=3D"cente=
r">94</td><td align=3D"center">56</td><td align=3D"center">65</td><td align=
=3D"center">11</td><td align=3D"center">28</td><td align=3D"center">35</td>=
<td align=3D"center">26</td><td align=3D"center">28</td><td align=3D"center=
">13</td><td align=3D"center">15</td></tr>
<tr><td width=3D"118">Total APIs          	</td><td align=3D"center">544 </=
td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"center"=
></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"cent=
er"></td><td align=3D"center"></td><td align=3D"center"></td><td align=3D"c=
enter"></td><td align=3D"center"></td><td align=3D"center"></td><td align=
=3D"center"></td></tr>
<tr><td width=3D"118">

<div class=3D"p"><!----></div>
</td></tr><tr><td></td></tr></tbody></table>
</center>
<div class=3D"p"><!----></div>
</font><a name=3D"tth_sEcindex"></a>

<h2> Index (showing section)</h2>

<table width=3D"100%"><tbody><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>Abs</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Abs+%5Ccontainer133">13.=
3</a></dd>
 <dt><b></b></dt>
	<dd>Accumulate</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Accumulate+%5Ccontainer1=
33">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Add</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Add+%5Ccontainer11">1.1<=
/a>,=20
		<a href=3D"#Add+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Add+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#Add+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Add+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Add+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Add+%5Ccontainer122">12.2</a>,=20
		<a href=3D"#Add+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Add+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Add+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#Add+code%20for%20%5Ccontainer43">4.3</a></dd>
 <dt><b></b></dt>
	<dd>AddObject</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#AddObject+code%20for%20%5Ccontainer46">4.6</a></dd>
 <dt><b></b></dt>
	<dd>AddRange</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#AddRange+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#AddRange+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#AddRange+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#AddRange+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#AddRange+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Advance</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Advance+%5Ccontainer11">=
1.1</a></dd>
 <dt><b></b></dt>
	<dd>Alloc</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Alloc+%5Ccontainer30">3.=
0</a></dd>
 <dt><b></b></dt>
	<dd>Allocator, <a href=3D"#Allocator160">16.0</a></dd>
 <dt><b></b></dt>
	<dd>And</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#And+%5Ccontainer12">1.2<=
/a>,=20
		<a href=3D"#And+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#And+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>AndAssign</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#AndAssign+%5Ccontainer42=
">4.2</a></dd>
 <dt><b></b></dt>
	<dd>API Overview, <a href=3D"#API%20Overview00">0.0</a></dd>
 <dt><b></b></dt>
	<dd>Append</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Append+%5Ccontainer11">1=
.1</a>,=20
		<a href=3D"#Append+%5Ccontainer32">3.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Append+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Apply</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Apply+%5Ccontainer11">1.=
1</a>,=20
		<a href=3D"#Apply+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Apply+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Apply+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Apply+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Apply+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Apply+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#Apply+code%20for%20%5Ccontainer43">4.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; general, <a href=3D"#Apply+general122">12.2</a=
></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>Back</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Back+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Back+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Back+%5Ccontainer92">9.2</a>,=20
		<a href=3D"#Back+%5Ccontainer101">10.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Back+code%20for%20%5Ccontainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>BitBlockCount</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#BitBlockCount+%5Ccontain=
er42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>BitLeftShift</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#BitLeftShift+%5Ccontaine=
r42">4.2</a>,=20
		<a href=3D"#BitLeftShift+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>BitRightShift</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#BitRightShift+%5Ccontain=
er133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>BitString, <a href=3D"#BitString40">4.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure definition,=20
		<a href=3D"#BitString+structure%20definition39">3.9</a></dd>
 <dt><b></b></dt>
	<dd>Bloomfilter, <a href=3D"#Bloomfilter120">12.0</a></dd>
 <dt><b></b></dt>
	<dd>Buffers, <a href=3D"#Buffers140">14.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>CalculateSpace</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CalculateSpace+%5Ccontai=
ner122">12.2</a></dd>
 <dt><b></b></dt>
	<dd>Calloc</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Calloc+%5Ccontainer30">3=
.0</a></dd>
 <dt><b></b></dt>
	<dd>CastToArray</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CastToArray+%5Ccontainer=
52">5.2</a>,=20
		<a href=3D"#CastToArray+%5Ccontainer62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>Clear, <a href=3D"#Clear20">2.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Clear+%5Ccontainer11">1.=
1</a>,=20
		<a href=3D"#Clear+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer22">2.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer30">3.0</a>,=20
		<a href=3D"#Clear+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Clear+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Clear+%5Ccontainer122">12.2</a>,=20
		<a href=3D"#Clear+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Clear+%5Ccontainer141">14.1</a>,=20
		<a href=3D"#Clear+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Clear+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Compare</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Compare+%5Ccontainer133"=
>13.3</a></dd>
 <dt><b></b></dt>
	<dd>COMPARE_EXPRESSION, <a href=3D"#COMPARE%5C_EXPRESSION20">2.0</a></dd>
 <dt><b></b></dt>
	<dd>CompareEqual</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CompareEqual+%5Ccontaine=
r32">3.2</a>,=20
		<a href=3D"#CompareEqual+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>CompareEqualScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CompareEqualScalar+%5Cco=
ntainer32">3.2</a>,=20
		<a href=3D"#CompareEqualScalar+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>CompareFunction, <a href=3D"#CompareFunction72">7.2</a></dd>
 <dt><b></b></dt>
	<dd>CompareScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CompareScalar+%5Ccontain=
er133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Contains</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Contains+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#Contains+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Contains+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Contains+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Contains+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Contains+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Copy</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Copy+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Copy+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Copy+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Copy+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Copy+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Copy+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Copy+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Copy+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Copy+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>CopyBits</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CopyBits+%5Ccontainer42"=
>4.2</a></dd>
 <dt><b></b></dt>
	<dd>CopyElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CopyElement+%5Ccontainer=
11">1.1</a>,=20
		<a href=3D"#CopyElement+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#CopyElement+%5Ccontainer62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#CopyElement+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>CopyTo</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CopyTo+%5Ccontainer32">3=
.2</a>,=20
		<a href=3D"#CopyTo+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Create, <a href=3D"#Create10">1.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Create+%5Ccontainer11">1=
.1</a>,=20
		<a href=3D"#Create+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Create+%5Ccontainer22">2.2</a>,=20
		<a href=3D"#Create+%5Ccontainer30">3.0</a>,=20
		<a href=3D"#Create+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Create+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Create+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Create+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Create+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Create+%5Ccontainer122">12.2</a>,=20
		<a href=3D"#Create+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Create+%5Ccontainer141">14.1</a>,=20
		<a href=3D"#Create+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Create+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>CreateFromFile</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CreateFromFile+%5Ccontai=
ner52">5.2</a>,=20
		<a href=3D"#CreateFromFile+%5Ccontainer141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>CreateFromMask</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CreateFromMask+%5Ccontai=
ner12">1.2</a></dd>
 <dt><b></b></dt>
	<dd>CreateSequence</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CreateSequence+%5Ccontai=
ner133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>CreateWithAllocator, <a href=3D"#CreateWithAllocator62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#CreateWithAllocator+%5Cc=
ontainer11">1.1</a>,=20
		<a href=3D"#CreateWithAllocator+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#CreateWithAllocator+%5Ccontainer141">14.1</a>,=20
		<a href=3D"#CreateWithAllocator+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#CreateWithAllocator+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#CreateWithAllocator+code%20for%20%5Ccontainer42">4.2</a></dd>
</dl></td></tr><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>DefaultListCompareFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#DefaultListCompareFunction+code%20for%20%5Ccontainer41">4.1</=
a></dd>
 <dt><b></b></dt>
	<dd>DefaultListLoadFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#DefaultListLoadFunction+code%20for%20%5Ccontainer41">4.1</a><=
/dd>
 <dt><b></b></dt>
	<dd>DefaultSaveFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#DefaultSaveFunction+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>deleteIterator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#deleteIterator+%5Ccontai=
ner11">1.1</a>,=20
		<a href=3D"#deleteIterator+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#deleteIterator+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#deleteIterator+%5Ccontainer82">8.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#deleteIterator+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Deque, <a href=3D"#Deque100">10.0</a></dd>
 <dt><b></b></dt>
	<dd>DestructorFunction, <a href=3D"#DestructorFunction76">7.6</a></dd>
 <dt><b></b></dt>
	<dd>Dictionary, <a href=3D"#Dictionary60">6.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure definition,=20
		<a href=3D"#Dictionary+structure%20definition36">3.6</a></dd>
 <dt><b></b></dt>
	<dd>DivideBy</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#DivideBy+%5Ccontainer133=
">13.3</a></dd>
 <dt><b></b></dt>
	<dd>DivideByScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#DivideByScalar+%5Ccontai=
ner133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>DivideScalarBy</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#DivideScalarBy+%5Ccontai=
ner133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Dlist, <a href=3D"#Dlist20">2.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure definition,=20
		<a href=3D"#Dlist+structure%20definition34">3.4</a></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>EmptyErrorFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#EmptyErrorFunction+%5Cco=
ntainer40">4.0</a></dd>
 <dt><b></b></dt>
	<dd>Equal</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Equal+%5Ccontainer11">1.=
1</a>,=20
		<a href=3D"#Equal+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Equal+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Equal+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Equal+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Equal+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Equal+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Erase</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Erase+%5Ccontainer11">1.=
1</a>,=20
		<a href=3D"#Erase+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Erase+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Erase+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Erase+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Erase+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Erase+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>EraseAll</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#EraseAll+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#EraseAll+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#EraseAll+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>EraseAt</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#EraseAt+%5Ccontainer11">=
1.1</a>,=20
		<a href=3D"#EraseAt+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#EraseAt+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>EraseRange</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#EraseRange+%5Ccontainer1=
1">1.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#EraseRange+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>error-codes, <a href=3D"#error-codes41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>ErrorFunction, <a href=3D"#ErrorFunction75">7.5</a><br><br></dd>
 <dt><b></b></dt>
	<dd>FCompare</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FCompare+%5Ccontainer133=
">13.3</a></dd>
 <dt><b></b></dt>
	<dd>FillSequential</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FillSequential+%5Ccontai=
ner133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Finalize, <a href=3D"#Finalize20">2.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Finalize+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#Finalize+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Finalize+%5Ccontainer22">2.2</a>,=20
		<a href=3D"#Finalize+%5Ccontainer30">3.0</a>,=20
		<a href=3D"#Finalize+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Finalize+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Finalize+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Finalize+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Finalize+%5Ccontainer122">12.2</a>,=20
		<a href=3D"#Finalize+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Finalize+%5Ccontainer141">14.1</a>,=20
		<a href=3D"#Finalize+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Finalize+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#Finalize+code%20for%20%5Ccontainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>Find</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Find+%5Ccontainer122">12=
.2</a></dd>
 <dt><b></b></dt>
	<dd>FindFirst</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FindFirst+%5Ccontainer52=
">5.2</a></dd>
 <dt><b></b></dt>
	<dd>FindNext</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FindNext+%5Ccontainer52"=
>5.2</a></dd>
 <dt><b></b></dt>
	<dd>FindTextPositions</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FindTextPositions+%5Ccon=
tainer52">5.2</a></dd>
 <dt><b></b></dt>
	<dd>FirstElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FirstElement+%5Ccontaine=
r11">1.1</a></dd>
 <dt><b></b></dt>
	<dd>ForEach</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#ForEach+%5Ccontainer133"=
>13.3</a></dd>
 <dt><b></b></dt>
	<dd>Fprintf</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Fprintf+%5Ccontainer133"=
>13.3</a></dd>
 <dt><b></b></dt>
	<dd>Free</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Free+code%20for%20%5Ccontainer45">4.5</a></dd>
 <dt><b></b></dt>
	<dd>FreeObject</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#FreeObject+%5Ccontainer2=
2">2.2</a></dd>
 <dt><b></b></dt>
	<dd>Front</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Front+%5Ccontainer11">1.=
1</a>,=20
		<a href=3D"#Front+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Front+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#Front+%5Ccontainer92">9.2</a>,=20
		<a href=3D"#Front+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Front+%5Ccontainer113">11.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Front+code%20for%20%5Ccontainer42">4.2</a></dd>
</dl></td></tr><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>Generic Container</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure, <a href=3D"#Generic%20Container+str=
ucture31">3.1</a></dd>
 <dt><b></b></dt>
	<dd>GetAllocator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetAllocator+%5Ccontaine=
r11">1.1</a>,=20
		<a href=3D"#GetAllocator+%5Ccontainer62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>GetCapacity</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetCapacity+%5Ccontainer=
32">3.2</a>,=20
		<a href=3D"#GetCapacity+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>GetCurrent</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetCurrent+%5Ccontainer5=
1">5.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetCurrent+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetData</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetData+%5Ccontainer32">=
3.2</a>,=20
		<a href=3D"#GetData+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#GetData+%5Ccontainer92">9.2</a>,=20
		<a href=3D"#GetData+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#GetData+%5Ccontainer141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>GetElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetElement+%5Ccontainer1=
1">1.1</a>,=20
		<a href=3D"#GetElement+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#GetElement+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#GetElement+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#GetElement+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>GetElementSize</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetElementSize+%5Ccontai=
ner11">1.1</a>,=20
		<a href=3D"#GetElementSize+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#GetElementSize+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#GetElementSize+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>GetFirst</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetFirst+%5Ccontainer51"=
>5.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetFirst+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetFlags</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetFlags+%5Ccontainer62"=
>6.2</a>,=20
		<a href=3D"#GetFlags+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#GetFlags+%5Ccontainer101">10.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetFlags+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetFlags / SetFlags</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetFlags%20/%20SetFlags+=
%5Ccontainer11">1.1</a>,=20
		<a href=3D"#GetFlags%20/%20SetFlags+%5Ccontainer32">3.2</a></dd>
 <dt><b></b></dt>
	<dd>GetLast</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetLast+%5Ccontainer51">=
5.1</a></dd>
 <dt><b></b></dt>
	<dd>GetLoadFactor</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetLoadFactor+%5Ccontain=
er62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>GetNext</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetNext+%5Ccontainer51">=
5.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetNext+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetPosition</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetPosition+%5Ccontainer=
141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>GetPrevious</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetPrevious+%5Ccontainer=
51">5.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetPrevious+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetRange, <a href=3D"#GetRange50">5.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetRange+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#GetRange+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#GetRange+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#GetRange+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#GetRange+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>GetSlice</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#GetSlice+%5Ccontainer133=
">13.3</a></dd>
 <dt><b></b></dt>
	<dd>guid, <a href=3D"#guid41">4.1</a></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>hash</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#hash+code%20for%20%5Ccontainer43">4.3</a></dd>
 <dt><b></b></dt>
	<dd>HashTable, <a href=3D"#HashTable80">8.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>iAssociativeContainer, <a href=3D"#iAssociativeContainer153">15.3</a><=
/dd>
 <dt><b></b></dt>
	<dd>iBitString, <a href=3D"#iBitString41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>iDeque, <a href=3D"#iDeque101">10.1</a></dd>
 <dt><b></b></dt>
	<dd>iDictionary, <a href=3D"#iDictionary61">6.1</a></dd>
 <dt><b></b></dt>
	<dd>iDlist, <a href=3D"#iDlist20">2.0</a></dd>
 <dt><b></b></dt>
	<dd>iError, <a href=3D"#iError40">4.0</a></dd>
 <dt><b></b></dt>
	<dd>iGenericContainer, <a href=3D"#iGenericContainer151">15.1</a></dd>
 <dt><b></b></dt>
	<dd>iHashTable, <a href=3D"#iHashTable81">8.1</a></dd>
 <dt><b></b></dt>
	<dd>iHeap, <a href=3D"#iHeap22">2.2</a></dd>
 <dt><b></b></dt>
	<dd>iList, <a href=3D"#iList10">1.0</a></dd>
 <dt><b></b></dt>
	<dd>IndexIn</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#IndexIn+%5Ccontainer32">=
3.2</a>,=20
		<a href=3D"#IndexIn+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>IndexOf</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#IndexOf+%5Ccontainer11">=
1.1</a>,=20
		<a href=3D"#IndexOf+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#IndexOf+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#IndexOf+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Infinite arrays, <a href=3D"#Infinite%20arrays30">3.0</a></dd>
 <dt><b></b></dt>
	<dd>Init</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Init+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Init+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#Init+%5Ccontainer62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Init+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#Init+code%20for%20%5Ccontainer43">4.3</a></dd>
 <dt><b></b></dt>
	<dd>InitHeap</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#InitHeap+%5Ccontainer22"=
>2.2</a></dd>
 <dt><b></b></dt>
	<dd>InitializeWith</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#InitializeWith+%5Ccontai=
ner11">1.1</a>,=20
		<a href=3D"#InitializeWith+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#InitializeWith+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#InitializeWith+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>InitObserver</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#InitObserver+code%20for%20%5Ccontainer46">4.6</a></dd>
 <dt><b></b></dt>
	<dd>InitWithAllocator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#InitWithAllocator+%5Ccon=
tainer11">1.1</a>,=20
		<a href=3D"#InitWithAllocator+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#InitWithAllocator+%5Ccontainer62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#InitWithAllocator+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Insert</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Insert+%5Ccontainer62">6=
.2</a></dd>
 <dt><b></b></dt>
	<dd>InsertAt</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#InsertAt+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#InsertAt+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#InsertAt+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#InsertAt+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>InsertIn</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#InsertIn+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#InsertIn+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#InsertIn+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#InsertIn+%5Ccontainer62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#InsertIn+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Inverse</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Inverse+%5Ccontainer133"=
>13.3</a></dd>
 <dt><b></b></dt>
	<dd>iPool, <a href=3D"#iPool30">3.0</a></dd>
 <dt><b></b></dt>
	<dd>iSequentiaContainer, <a href=3D"#iSequentiaContainer152">15.2</a></dd>
 <dt><b></b></dt>
	<dd>istrCollection, <a href=3D"#istrCollection50">5.0</a></dd>
 <dt><b></b></dt>
	<dd>Iterator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure, <a href=3D"#Iterator+structure310">=
3.10</a></dd>
 <dt><b></b></dt>
	<dd>iterator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Dictionary, <a href=3D"#iterator+Dictionary43"=
>4.3</a></dd>
 <dt><b></b></dt>
	<dd>Iterators</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; General, <a href=3D"#Iterators+General123">12.=
3</a></dd>
 <dt><b></b></dt>
	<dd>iTreeMap, <a href=3D"#iTreeMap70">7.0</a></dd>
 <dt><b></b></dt>
	<dd>iValArray, <a href=3D"#iValArray130">13.0</a></dd>
 <dt><b></b></dt>
	<dd>iVector, <a href=3D"#iVector30">3.0</a>, <a href=3D"#iVector31">3.1</a=
></dd>
 <dt><b></b></dt>
	<dd>iWstrCollection, <a href=3D"#iWstrCollection50">5.0</a></dd>
</dl></td></tr><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>LastElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#LastElement+%5Ccontainer=
11">1.1</a></dd>
 <dt><b></b></dt>
	<dd>List, <a href=3D"#List03">0.3</a></dd>
 <dt><b></b></dt>
	<dd>ListIterator, <a href=3D"#ListIterator310">3.10</a></dd>
 <dt><b></b></dt>
	<dd>lists</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code, <a href=3D"#lists+code41">4.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; double linked, <a href=3D"#lists+double%20link=
ed20">2.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; single linked, <a href=3D"#lists+single%20link=
ed10">1.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure, <a href=3D"#lists+structure33">3.3<=
/a></dd>
 <dt><b></b></dt>
	<dd>Load</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Load+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Load+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Load+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Load+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Load+%5Ccontainer101">10.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Load+code%20for%20%5Ccontainer41">4.1</a><br><br></dd>
 <dt><b></b></dt>
	<dd>Malloc</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Malloc+code%20for%20%5Ccontainer45">4.5</a></dd>
 <dt><b></b></dt>
	<dd>mapcar, <a href=3D"#mapcar30">3.0</a></dd>
 <dt><b></b></dt>
	<dd>mapcon, <a href=3D"#mapcon30">3.0</a></dd>
 <dt><b></b></dt>
	<dd>Mask</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure definition,=20
		<a href=3D"#Mask+structure%20definition38">3.8</a></dd>
 <dt><b></b></dt>
	<dd>Max</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Max+%5Ccontainer133">13.=
3</a></dd>
 <dt><b></b></dt>
	<dd>Memset</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Memset+%5Ccontainer133">=
13.3</a></dd>
 <dt><b></b></dt>
	<dd>Merge</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Merge+%5Ccontainer82">8.=
2</a></dd>
 <dt><b></b></dt>
	<dd>Min</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Min+%5Ccontainer133">13.=
3</a></dd>
 <dt><b></b></dt>
	<dd>Mismatch</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Mismatch+%5Ccontainer32"=
>3.2</a>,=20
		<a href=3D"#Mismatch+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#Mismatch+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>MoveBack</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#MoveBack+%5Ccontainer20"=
>2.0</a></dd>
 <dt><b></b></dt>
	<dd>MultiplyWith</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#MultiplyWith+%5Ccontaine=
r133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>MultiplyWithScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#MultiplyWithScalar+%5Cco=
ntainer133">13.3</a></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>NewIterator</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#NewIterator+%5Ccontainer=
11">1.1</a>,=20
		<a href=3D"#NewIterator+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#NewIterator+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#NewIterator+%5Ccontainer82">8.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#NewIterator+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>newObject</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#newObject+%5Ccontainer22=
">2.2</a></dd>
 <dt><b></b></dt>
	<dd>NextElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#NextElement+%5Ccontainer=
11">1.1</a></dd>
 <dt><b></b></dt>
	<dd>Not</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Not+%5Ccontainer12">1.2<=
/a>,=20
		<a href=3D"#Not+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#Not+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>NotAssign</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#NotAssign+%5Ccontainer42=
">4.2</a></dd>
 <dt><b></b></dt>
	<dd>Notify</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Notify+%5Ccontainer62">6=
.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Notify+code%20for%20%5Ccontainer46">4.6</a></dd>
 <dt><b></b></dt>
	<dd>NullPtrError</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#NullPtrError+%5Ccontaine=
r40">4.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>observer, <a href=3D"#observer60">6.0</a></dd>
 <dt><b></b></dt>
	<dd>ObserverFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#ObserverFunction+%5Ccont=
ainer62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>Or</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Or+%5Ccontainer12">1.2</=
a>,=20
		<a href=3D"#Or+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#Or+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>OrAssign</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#OrAssign+%5Ccontainer42"=
>4.2</a></dd>
 <dt><b></b></dt>
	<dd>OrScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#OrScalar+%5Ccontainer133=
">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Overlay</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Overlay+%5Ccontainer82">=
8.2</a></dd>
</dl></td></tr><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>PeekFront</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PeekFront+%5Ccontainer14=
2">14.2</a></dd>
 <dt><b></b></dt>
	<dd>Pop</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Pop+%5Ccontainer113">11.=
3</a></dd>
 <dt><b></b></dt>
	<dd>PopBack</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PopBack+%5Ccontainer20">=
2.0</a>,=20
		<a href=3D"#PopBack+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#PopBack+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#PopBack+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#PopBack+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>PopFront</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PopFront+%5Ccontainer11"=
>1.1</a>,=20
		<a href=3D"#PopFront+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#PopFront+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#PopFront+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>PopulationCount</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PopulationCount+%5Cconta=
iner12">1.2</a>,=20
		<a href=3D"#PopulationCount+%5Ccontainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>PreviousElement</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PreviousElement+%5Cconta=
iner20">2.0</a></dd>
 <dt><b></b></dt>
	<dd>Print</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Print+%5Ccontainer42">4.=
2</a></dd>
 <dt><b></b></dt>
	<dd>Priority queues, <a href=3D"#Priority%20queues110">11.0</a></dd>
 <dt><b></b></dt>
	<dd>Product</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Product+%5Ccontainer133"=
>13.3</a></dd>
 <dt><b></b></dt>
	<dd>Push</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Push+%5Ccontainer113">11=
.3</a></dd>
 <dt><b></b></dt>
	<dd>PushBack</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PushBack+%5Ccontainer20"=
>2.0</a>,=20
		<a href=3D"#PushBack+%5Ccontainer101">10.1</a></dd>
 <dt><b></b></dt>
	<dd>PushFront</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#PushFront+%5Ccontainer11=
">1.1</a>,=20
		<a href=3D"#PushFront+%5Ccontainer101">10.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#PushFront+code%20for%20%5Ccontainer41">4.1</a></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>Queue, <a href=3D"#Queue90">9.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>RaiseError</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#RaiseError+%5Ccontainer4=
0">4.0</a></dd>
 <dt><b></b></dt>
	<dd>Read</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Read+%5Ccontainer141">14=
.1</a></dd>
 <dt><b></b></dt>
	<dd>ReadFromFile</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#ReadFromFile+%5Ccontaine=
r141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>ReadFunction, <a href=3D"#ReadFunction74">7.4</a></dd>
 <dt><b></b></dt>
	<dd>RemoveAt</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#RemoveAt+%5Ccontainer42"=
>4.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#RemoveAt+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>RemoveRange</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#RemoveRange+%5Ccontainer=
11">1.1</a>,=20
		<a href=3D"#RemoveRange+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#RemoveRange+%5Ccontainer52">5.2</a></dd>
 <dt><b></b></dt>
	<dd>Replace</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Replace+%5Ccontainer51">=
5.1</a>,=20
		<a href=3D"#Replace+%5Ccontainer82">8.2</a></dd>
 <dt><b></b></dt>
	<dd>ReplaceAt</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#ReplaceAt+%5Ccontainer11=
">1.1</a>,=20
		<a href=3D"#ReplaceAt+%5Ccontainer32">3.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#ReplaceAt+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Reserve</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Reserve+%5Ccontainer32">=
3.2</a></dd>
 <dt><b></b></dt>
	<dd>ResetSlice</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#ResetSlice+%5Ccontainer1=
33">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Resize</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Resize+%5Ccontainer32">3=
.2</a>,=20
		<a href=3D"#Resize+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Resize+%5Ccontainer141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>Reverse</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Reverse+%5Ccontainer11">=
1.1</a>,=20
		<a href=3D"#Reverse+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Reverse+%5Ccontainer42">4.2</a>,=20
		<a href=3D"#Reverse+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Reverse+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>RotateLeft</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#RotateLeft+%5Ccontainer1=
1">1.1</a>,=20
		<a href=3D"#RotateLeft+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#RotateLeft+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#RotateLeft+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>RotateRight</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#RotateRight+%5Ccontainer=
11">1.1</a>,=20
		<a href=3D"#RotateRight+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#RotateRight+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#RotateRight+code%20for%20%5Ccontainer41">4.1</a></dd>
</dl></td></tr><tr><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>Save</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Save+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Save+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Save+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Save+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Save+%5Ccontainer101">10.1</a>,=20
		<a href=3D"#Save+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Save+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>SaveFunction, <a href=3D"#SaveFunction73">7.3</a></dd>
 <dt><b></b></dt>
	<dd>SearchWithKey</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SearchWithKey+%5Ccontain=
er32">3.2</a></dd>
 <dt><b></b></dt>
	<dd>Seek</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Seek+%5Ccontainer51">5.1=
</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Seek+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Select</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Select+%5Ccontainer11">1=
.1</a>,=20
		<a href=3D"#Select+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Select+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>SelectCopy</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SelectCopy+%5Ccontainer1=
1">1.1</a>,=20
		<a href=3D"#SelectCopy+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#SelectCopy+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Set</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Set+%5Ccontainer12">1.2<=
/a>,=20
		<a href=3D"#Set+%5Ccontainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>SetCapacity</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetCapacity+%5Ccontainer=
32">3.2</a></dd>
 <dt><b></b></dt>
	<dd>SetCompareFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetCompareFunction+%5Cco=
ntainer11">1.1</a>,=20
		<a href=3D"#SetCompareFunction+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#SetCompareFunction+%5Ccontainer52">5.2</a>,=20
		<a href=3D"#SetCompareFunction+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#SetCompareFunction+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>SetDestructor</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetDestructor+%5Ccontain=
er11">1.1</a>,=20
		<a href=3D"#SetDestructor+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#SetDestructor+%5Ccontainer62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>SetElementData</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetElementData+%5Ccontai=
ner11">1.1</a></dd>
 <dt><b></b></dt>
	<dd>SetErrorFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetErrorFunction+%5Ccont=
ainer11">1.1</a>,=20
		<a href=3D"#SetErrorFunction+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#SetErrorFunction+%5Ccontainer40">4.0</a>,=20
		<a href=3D"#SetErrorFunction+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#SetErrorFunction+%5Ccontainer82">8.2</a></dd>
 <dt><b></b></dt>
	<dd>SetHashFunction</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetHashFunction+%5Cconta=
iner62">6.2</a></dd>
 <dt><b></b></dt>
	<dd>SetPosition</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetPosition+%5Ccontainer=
141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>SetSlice</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SetSlice+%5Ccontainer133=
">13.3</a></dd>
 <dt><b></b></dt>
	<dd>Size, <a href=3D"#Size140">14.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Size+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Size+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Size+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Size+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Size+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Size+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Size+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Size+%5Ccontainer141">14.1</a>,=20
		<a href=3D"#Size+%5Ccontainer142">14.2</a></dd>
 <dt><b></b></dt>
	<dd>Sizeof</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Sizeof+%5Ccontainer11">1=
.1</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer12">1.2</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer22">2.2</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer62">6.2</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer82">8.2</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer113">11.3</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer133">13.3</a>,=20
		<a href=3D"#Sizeof+%5Ccontainer142">14.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Sizeof+code%20for%20%5Ccontainer41">4.1</a>,=20
		<a href=3D"#Sizeof+code%20for%20%5Ccontainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>SizeofIterator, <a href=3D"#SizeofIterator152">15.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SizeofIterator+%5Ccontai=
ner11">1.1</a></dd>
 <dt><b></b></dt>
	<dd>Sort</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Sort+%5Ccontainer11">1.1=
</a>,=20
		<a href=3D"#Sort+%5Ccontainer32">3.2</a>,=20
		<a href=3D"#Sort+%5Ccontainer133">13.3</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Sort+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>Splice</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Splice+%5Ccontainer20">2=
.0</a></dd>
 <dt><b></b></dt>
	<dd>SplitAfter</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SplitAfter+%5Ccontainer1=
1">1.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#SplitAfter+code%20for%20%5Ccontainer41">4.1</a></dd>
 <dt><b></b></dt>
	<dd>strCollection</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure, <a href=3D"#strCollection+structure=
37">3.7</a></dd>
 <dt><b></b></dt>
	<dd>StrError</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#StrError+%5Ccontainer40"=
>4.0</a></dd>
 <dt><b></b></dt>
	<dd>StringCompareFn, <a href=3D"#StringCompareFn52">5.2</a></dd>
 <dt><b></b></dt>
	<dd>StringToBitString</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#StringToBitString+%5Ccon=
tainer42">4.2</a></dd>
 <dt><b></b></dt>
	<dd>Subscribe</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Subscribe+%5Ccontainer62=
">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Subscribe+code%20for%20%5Ccontainer46">4.6</a></dd>
 <dt><b></b></dt>
	<dd>SubtractFrom</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SubtractFrom+%5Ccontaine=
r133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>SubtractFromScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SubtractFromScalar+%5Cco=
ntainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>SubtractScalarFrom</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SubtractScalarFrom+%5Cco=
ntainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>SumTo</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SumTo+%5Ccontainer133">1=
3.3</a></dd>
 <dt><b></b></dt>
	<dd>SumToScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#SumToScalar+%5Ccontainer=
133">13.3</a></dd>
</dl></td><td valign=3D"top" width=3D"48%"><hr>
<dl compact=3D"compact">
 <dt><b></b></dt>
	<dd>TreeMap, <a href=3D"#TreeMap70">7.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>Unsubscribe</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Unsubscribe+%5Ccontainer=
62">6.2</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#Unsubscribe+code%20for%20%5Ccontainer46">4.6</a></dd>
 <dt><b></b></dt>
	<dd>UseHeap</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#UseHeap+%5Ccontainer11">=
1.1</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; code for Observer,=20
		<a href=3D"#UseHeap+code%20for%20%5Ccontainer41">4.1</a><br><br></dd>
 <dt><b></b></dt>
	<dd>ValArray, <a href=3D"#ValArray130">13.0</a></dd>
 <dt><b></b></dt>
	<dd>ValArrays,code, <a href=3D"#ValArrays,code47">4.7</a></dd>
 <dt><b></b></dt>
	<dd>Vector, <a href=3D"#Vector30">3.0</a></dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; structure, <a href=3D"#Vector+structure35">3.5=
</a><br><br></dd>
 <dt><b></b></dt>
	<dd>Write</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Write+%5Ccontainer141">1=
4.1</a></dd>
 <dt><b></b></dt>
	<dd>WriteToFile</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#WriteToFile+%5Ccontainer=
52">5.2</a>,=20
		<a href=3D"#WriteToFile+%5Ccontainer141">14.1</a></dd>
 <dt><b></b></dt>
	<dd>WstrCollection, <a href=3D"#WstrCollection50">5.0</a><br><br></dd>
 <dt><b></b></dt>
	<dd>Xor</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#Xor+%5Ccontainer42">4.2<=
/a>,=20
		<a href=3D"#Xor+%5Ccontainer133">13.3</a></dd>
 <dt><b></b></dt>
	<dd>XorAssign</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#XorAssign+%5Ccontainer42=
">4.2</a></dd>
 <dt><b></b></dt>
	<dd>XorScalar</dd>
<dd>&#xa0;&#xa0;&#xa0;&#xa0; Observer, <a href=3D"#XorScalar+%5Ccontainer13=
3">13.3</a></dd>
</dl></td></tr></tbody></table>

<hr><h3>Footnotes:</h3>

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAB"></a><a href=3D"#tthFrefAAB"><sup>1</sup></a>&quot;Pr=
ecise Reasoning for programs using containers&quot; Isil Dillig, Thomas Dil=
lig, and Alex Aitken, available on line at
http://www.stanford.edu/<font size=3D"+1"><tt>!~!isil/popl2011.pdf</tt></fo=
nt>or at POPL 2011 Proceedings of the 38th annual ACM SIGPLAN-SIGACT sympos=
ium on Principles of programming languages
ACM New York, NY, USA =C2=A92011=20
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAC"></a><a href=3D"#tthFrefAAC"><sup>2</sup></a>We were =
discussing=20
the specifications of the <font size=3D"+1"><tt>mismatach</tt></font> funct=
ion of the C++ STL and why any error analysis is absent. The C++ STL prescr=
ibes a bounded=20
region for the first container, but just a starting point for the second on=
e. If the second is shorter than the specified range of the first
 <i>undefined behavior</i> ensues and anything can happen. In many cases th=
is =E4nything&quot; is different each time the same error occurs. In our
specific case <font size=3D"+1"><tt>mismatch</tt></font> would read from me=
mory that doesn&#x27;t belong to the container it started with. Depending o=
n the contents of
that memory a crash could happen, or worst, a wrong result returned to the =
calling software, etc.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAD"></a><a href=3D"#tthFrefAAD"><sup>3</sup></a>Donald K=
nuth, the author of the TeX typesetting program can be without doubt be qua=
lified as a good programmer (and an excellent computer scientist). But he, =
like anybody else, is not without flaws. See:=20
www.tug.org/texmf-dist/doc/generic/knuth/errata/errorlog.pdf. There are hun=
dreds of entries in that log.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAE"></a><a href=3D"#tthFrefAAE"><sup>4</sup></a>Matthew =
Wilson uses a more restrictive definition of a container in his book =CBxte=
nded STL (Vol 1, page 16)&quot; :
<div class=3D"p"><!----></div>
  A container is a=20
collection that owns its objects and provides operations by which those obj=
ects may be accessed and modified and, optionally, added removed and=20
rearranged.
<div class=3D"p"><!----></div>
  By this definition, containers that have just pointers to their elements =
wouldn&#x27;t be containers at all.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAF"></a><a href=3D"#tthFrefAAF"><sup>5</sup></a>There is=
 no automatic cleanup of objects left by active functions in the stack. Thi=
s can be a problem or not, depending if your use a garbage collection or no=
t. If you use a garbage collector, this problem doesn&#x27;t even appear: t=
he unused objects will be automatically collected. If you don&#x27;t, you s=
hould test for the return code of each function.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAG"></a><a href=3D"#tthFrefAAG"><sup>6</sup></a>In gener=
al most return values could be a <font size=3D"+1"><tt>+size_t+,</tt></font=
>but it would be very difficult to differentiate a huge unsigned number fro=
m a=20
negative error code. Under some versions of UNIX there exists the <font siz=
e=3D"+1"><tt>+rsize_t+</tt></font>for a signed version of <font size=3D"+1"=
><tt>+size_t+</tt></font>but it is not in the C=20
standard.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAH"></a><a href=3D"#tthFrefAAH"><sup>7</sup></a>This cor=
responds to ENOMEM in the POSIX1 standard.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAI"></a><a href=3D"#tthFrefAAI"><sup>8</sup></a>The most=
 similar error code using the POSIX standard would be <font size=3D"-2">EPE=
RM</font> here.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAAJ"></a><a href=3D"#tthFrefAAJ"><sup>9</sup></a>In the C=
99 standard this error is reserved for a wrong sequence of wide character b=
ytes. Here it would=20
be used for a wrong sequence of operations what somehow changes the meaning=
 of the error code. It is used since the standard has only three error=20
codes.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABA"></a><a href=3D"#tthFrefABA"><sup>10</sup></a>The POS=
IX error number would be here EIO: error in input/output
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABB"></a><a href=3D"#tthFrefABB"><sup>11</sup></a>The cor=
responding POSIX error number would be EFBIG: file too big
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABC"></a><a href=3D"#tthFrefABC"><sup>12</sup></a>In POSI=
X this would=20
be EFAULT.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABD"></a><a href=3D"#tthFrefABD"><sup>13</sup></a>The cor=
responding POSIX error would EBADF: bad file
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABE"></a><a href=3D"#tthFrefABE"><sup>14</sup></a>POSIX: =
EDOM, domain error
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABF"></a><a href=3D"#tthFrefABF"><sup>15</sup></a>This wo=
uld be the ENOENT error under POSIX
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABG"></a><a href=3D"#tthFrefABG"><sup>16</sup></a>
Hashtables are present in all major computer languages:

<ul>
<li>  C# features a hashtable class that &quot;Represents a collection of k=
ey/value pairs that are organized based on the hash code of the key.&quot;=
=20
according to the documentation from Microsoft.
<div class=3D"p"><!----></div>
</li>

<li>  Java has relatively recently added a HashTable class that &quot;... m=
aps keys to values. Any non-null object can be used as a key or as a value.=
&quot;
<div class=3D"p"><!----></div>
</li>

<li>  Fortran doesn&#x27;t include them in the language itself but there ar=
e librares that implement hash tables in Fortran. For instance=20
Herbert J. Bernstein implemented a hash table library in Fortran 2003.
<div class=3D"p"><!----></div>
</li>

<li>  In Common Lisp hash tables are standard:=20
<font size=3D"+1"><tt><i>make-hash-table</i></tt></font>
 and other functions implement all the needed functionality.
<div class=3D"p"><!----></div>
</li>
</ul>
They were absent from the C++ STL for unknown reasons. They have been now i=
ncoporated into the latest C++ standard.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABH"></a><a href=3D"#tthFrefABH"><sup>17</sup></a>This in=
credibly useful feature has been made now optional by the C99 committee, ev=
en if it was mandatory when the C99 standard was published.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABI"></a><a href=3D"#tthFrefABI"><sup>18</sup></a>
Other frameworks use a similar method. For instance Apple Foundation classe=
s has several classes that take an =E4llocator&quot; argument, for instance=
 the
<font size=3D"+1"><tt>CFBundleCreate</tt></font> and other functions that c=
reate objects.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtABJ"></a><a href=3D"#tthFrefABJ"><sup>19</sup></a>In prev=
ious versions these functions returned some useful information in case of s=
uccess, for instance the number of elements left. The problem is that an in=
t can&#x27;t span all the possible values of a <font size=3D"+1"><tt>size_t=
</tt></font> data type but it is needed to return negative
error codes. If the result type would be a <font size=3D"+1"><tt>size_t</tt=
></font> the negative error codes would be transformed in other values, etc=
. After some iterations=20
the present solution was used: a positive number is equal to success, witho=
ut specifying what the positive number is, or what information (if any)=20
should be coded in it. The sample implementation always returns 1.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACA"></a><a href=3D"#tthFrefACA"><sup>20</sup></a>Usually=
 this value is 1 of course
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACB"></a><a href=3D"#tthFrefACB"><sup>21</sup></a>In gene=
ral it is a bad idea to save elements containing pointers without a custom =
save/load function. The=20
pointers restored are with almost certainty wrong when restored in another =
environment
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACC"></a><a href=3D"#tthFrefACC"><sup>22</sup></a>Note th=
at the container is not declared as <font size=3D"+1"><tt>const</tt></font>=
 and could possibly be modified either directly or=20
indirectly by the function being applied to it. Some modifications like mod=
ifying the number of elements could lead to undefined behavior since it
is not required that the Apply loop tests at each iteration if the containe=
r has been modified
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACD"></a><a href=3D"#tthFrefACD"><sup>23</sup></a>This is=
 completely=20
different to the C++ language. In C++ you may have an invalid iterator or n=
ot if you change the underlying container, depending on the=20
operation and the specific container involved. This interface was discarded=
 for the following reasons:

<ol type=3D"1">
<li>  There are many rules to remember without underlying principles.
  You have to know the specifics of each container to know
  if the iterators are invalidated or not. This breaks the independence
   of the algorithm code from the underlying container.
<div class=3D"p"><!----></div>
</li>

<li>  Any error leads directly to catastrophic consequences instead
   of being caught and signaled in an orderly fashion. Worst, errors
   do not produce always the same consequences, depending on what
   were the contents of the invalid memory you are using, on the
   memory allocation pattern, etc. In short, any error leads to
   very difficult maintenance problems.
<div class=3D"p"><!----></div>
</li>

<li>  Any modifications of the container type lead to a review of
   all code that uses that container since the rules change from
   container to container. Iterators that worked could be invalid
   now. This another source of errors.
<div class=3D"p"><!----></div>
</li>
</ol>

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACE"></a><a href=3D"#tthFrefACE"><sup>24</sup></a>Contrar=
y to C++ <font size=3D"+1"><tt>const</tt></font> directive this is done at =
run time and an explicit check of this flag is needed. This has disadvantag=
es=20
(one instruction and a conditional jump are needed) but it has also advanta=
ges: you can set it when you pass some container to another module, and uns=
et it when you need to update the container. This solution is more flexible=
 than the static solution at the cost of a very small runtime cost.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACF"></a><a href=3D"#tthFrefACF"><sup>25</sup></a>In C++ =
the allocator receives the number of items to allocate.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACG"></a><a href=3D"#tthFrefACG"><sup>26</sup></a>An open=
 issue is whether the interface of the memory allocator should be extended =
with functions like
<font size=3D"+1"><tt>GetSize</tt></font> for instance, that would return t=
he size of a given memory block, or other query functions like <font size=
=3D"+1"><tt>isMallocBlock</tt></font> that would
allow to verify if a memory block belongs to the pool. Some proposals were =
discussed in the discussion group <font size=3D"+1"><tt>comp.std.c</tt></fo=
nt> but nothing official
has emerged from the committee meetings
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACH"></a><a href=3D"#tthFrefACH"><sup>27</sup></a>An alte=
rnative design would have been to specify not one type of
observer function but to define a different function type for each possible=
 message the containers could send. We would have then a SubscribeAdd
SubscribeErase SubscribeReplace functions, combined with NotifyAdd, NotifyE=
rase, NotifyReplace functions. That design would have been easier to
control at compile time. It was rejected because of the increased complexit=
y of the interface and the necessity for the user to define a lot
of functions just to know when something as simple as &quot;Was this contai=
ner modified?&quot; happened.

<div class=3D"p"><!----></div>
Obviously implementations can add that type of interface if they wish. In f=
uture revisions of this specifications this question will be posed again, w=
ith more actual use data to make more informed decisions.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACI"></a><a href=3D"#tthFrefACI"><sup>28</sup></a>See the=
 full list and the description of all notifications at the end of this sect=
ion
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtACJ"></a><a href=3D"#tthFrefACJ"><sup>29</sup></a>
The single linked list container corresponds to the C++ STL <font size=3D"+=
1"><tt>forward_list</tt></font>.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADA"></a><a href=3D"#tthFrefADA"><sup>30</sup></a>Since t=
he allocator&#x27;s free()=20
function will be used by the finalize function to free the memory used by t=
he list, it is imperative that both lists share the same allocator.=20
<div class=3D"p"><!----></div>
 Some implementations could make a copy of the second list using the first =
list allocator, then append, then release all the storage but that would
change significantly the execution time. It is better to return an error in=
 this case.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADB"></a><a href=3D"#tthFrefADB"><sup>31</sup></a>Java, C=
++ and C# have a similar &quot;Clear&quot; functionality.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADC"></a><a href=3D"#tthFrefADC"><sup>32</sup></a>The sam=
ple implementation does not
use a pointer to the data but the data is stored directly after the pointer=
 to the next element. This saves space but it is not possible to reuse the
list elements to store other types of data since they could be of different=
 size: the element size of other lists storing other types of data
would be different. In an implementation where each list element stored two=
 pointers: one to the next element and another to the data, it would be
possible to reuse them for any kind of list, saving allocations. In those s=
ystems, this program would yield different results.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADD"></a><a href=3D"#tthFrefADD"><sup>33</sup></a>An alte=
rnative would have been to return the average string length, but that solut=
ion would have needed a result type different from a=20
size_t (a floating point number would be needed), making this interface dif=
ferent from all other containers where this function returns a
size_t. A size_t of zero was choosen as a compromise solution. It would als=
o have been possible to eliminate this function but that would have needed=
=20
also an interface change.
<div class=3D"p"><!----></div>
  In all specializations it is needed to make compromises since the special=
ization is different from its original=20
interface. One=20
way to solve this is to try to keep the interface identical at the cost of =
some redundant or unnecessary functions. In this case the only function=20
affected is <font size=3D"+1"><tt>GetElementSize</tt></font> but in other s=
pecializations the differences could be more profound and other solutions c=
ould be better.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADE"></a><a href=3D"#tthFrefADE"><sup>34</sup></a>Again, =
implementations could improve this by storing a byte count that
is increased when a string is added and decreased when a string is eliminat=
ed, but that introduces more complexity and would penalize all users
of the string list, even those that never use Sizeof at all.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADF"></a><a href=3D"#tthFrefADF"><sup>35</sup></a>A simil=
ar function exists in the C++ STL:=20
<font size=3D"+1"><tt>max_size()</tt></font>
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADG"></a><a href=3D"#tthFrefADG"><sup>36</sup></a>The lat=
est
C++ standard adds this operation calling it <font size=3D"+1"><tt>std::vect=
or::shrink_to_fit</tt></font>
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADH"></a><a href=3D"#tthFrefADH"><sup>37</sup></a>
The equivalent in C# is the <font size=3D"+1"><tt>BitArray</tt></font> clas=
s in <font size=3D"+1"><tt>System.Collections</tt></font>. In Java the equi=
valent is the BitSet class.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADI"></a><a href=3D"#tthFrefADI"><sup>38</sup></a>The Jav=
a language provides an interface in the class <font size=3D"+1"><tt>java.ut=
il</tt></font>. C# offers a Queue class in <font size=3D"+1"><tt>System.Col=
lections</tt></font>,=20
implemented as a circular array that is icreased automatically if needed. T=
here is also a generic Queue class.

<div class=3D"p"><!----></div>
 In C++ the definition is:
<font size=3D"+1"><tt>template &lt; class T, class Container =3D deque&lt;T=
&gt; &gt; class queue;</tt></font>
Where

<ul>
<li>  <b>T</b>: Type of the elements.
<div class=3D"p"><!----></div>
</li>

<li>  <b>Container</b>: Type of the underlying container object used to sto=
re and access the elements.
<div class=3D"p"><!----></div>
</li>
</ul>

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtADJ"></a><a href=3D"#tthFrefADJ"><sup>39</sup></a>This ex=
ample requires C99. The snprintf function is specific to C99 but that would=
 be easy to replace by plain sprintf. The=20
<font size=3D"+1"><tt>,}\end</tt></font>\end
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEA"></a>\tthhref{#tthFrefAEA}{$^{40}$}{Moreabout bloom f=
ilters in:
http://pages.cs.wisc.edu/&#xa0;cao/papers/summary-cache/node8.html,
<div class=3D"p"><!----></div>
  and at the NIST: http://xw2k.nist.gov/dads/html/bloomFilter.html
<div class=3D"p"><!----></div>
  The original paper about them was published by Burton Bloom: <b>Space/tim=
e trade-offs in hash coding with allowable errors.
Communications of ACM, pages 13(7):422-426, July 1970</b>.
<div class=3D"p"><!----></div>
  The idea behind this data structure is to allocate a vector of m bits, in=
itially all set to 0, and then choose k independent hash functions, h<sub>1=
</sub>, h<sub>2</sub>, =85, h<sub>k</sub>,each with range {1,=85,m}. For ea=
ch element a  &#x2208; A, the whole set, the bits at positions h1(a), h2(a)=
, ..., hk(a) in v are set=20
to 1. (A particular bit might be set to 1 multiple times).=20

<div class=3D"p"><!----></div>
Given a query for some key b we check the bits at positions h1(b), h2(b), .=
.., hk(b). If any of them is 0, then certainly b is not in the set A.=20
Otherwise we conjecture that b is in the set although there is a certain pr=
obability that we are wrong. This is called a &quot;false positive&quot;. T=
he=20
parameters k (the maximum number of elements) and m (the probability) shoul=
d be chosen such that the probability m of a false positive (and hence a=20
false hit) is acceptable.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEB"></a><a href=3D"#tthFrefAEB"><sup>41</sup></a>This wa=
y it is possible to return &#xa0;NULL to stop the iteration of course
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEC"></a><a href=3D"#tthFrefAEC"><sup>42</sup></a>The rat=
ionale for this is that speed in these containers is very important. It is =
assumed that numerical software=20
using this types is optimized, and a test for &#xa0;NULL and the correspond=
ing jumps would slow down the number crunching.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAED"></a><a href=3D"#tthFrefAED"><sup>43</sup></a>In C++ =
the sequence <b>n,0,1</b>
is called <i>iota</i> as in the APL language. This can be obtained with <fo=
nt size=3D"+1"><tt>CreateSequence(n,0,1)</tt></font>
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEE"></a><a href=3D"#tthFrefAEE"><sup>44</sup></a>Some im=
plementations can provide a debug mode where the left argument is somehow p=
reserved, or provide a mode that replaces zero by one and continues. In all=
 cases a division by zero should provoke an error.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEF"></a><a href=3D"#tthFrefAEF"><sup>45</sup></a> Knuth,=
 Donald E. (1998). The Art of Computer Programming.  Volume
2: Seminumerical Algorithms. Third edition. Section 4.2.2,
p. 233. Reading, MA: Addison-Wesley.  ISBN 0-201-89684-2.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEG"></a><a href=3D"#tthFrefAEG"><sup>46</sup></a>
University of Michigan Center for the Study of Complex Systems
<div class=3D"p"><!----></div>
 <font size=3D"+1"><tt> &lt; mailto:Ted.Belding@umich.edu &gt; </tt></font>
<div class=3D"p"><!----></div>
 <font size=3D"+1"><tt>http://www-personal.umich.edu/~  streak</tt></font>
<div class=3D"p"><!----></div>
=20
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEH"></a><a href=3D"#tthFrefAEH"><sup>47</sup></a>The rat=
ionale for this API is to simplify the <font size=3D"+1"><tt>Apply</tt></fo=
nt> function allowing full optimization for the compiler.
This function is used to implement all trigonometric/roots, and hyperbolic =
functions
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEI"></a><a href=3D"#tthFrefAEI"><sup>48</sup></a>For obv=
ious reasons: using integers the inverse can have only a value of
one for the integer one, and zero for all others since we use integer divis=
ion.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAEJ"></a><a href=3D"#tthFrefAEJ"><sup>49</sup></a>The sma=
llest element is the identity value for the operation Max since <font size=
=3D"+1"><tt>Max(a,smallest) =3D=3D&gt; a</tt></font> for all a
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFA"></a><a href=3D"#tthFrefAFA"><sup>50</sup></a>The big=
gest element is the identity value for the operation Min since <font size=
=3D"+1"><tt>Min(a,biggest) =3D=3D&gt; a</tt></font> for all a
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFB"></a><a href=3D"#tthFrefAFB"><sup>51</sup></a>Keep in=
 mind that in circular buffers new items can overwrite old items. Do not be=
 surprised if you keep pointers to data in=20
a circular buffer, that your data changes as you add items into it
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFC"></a><a href=3D"#tthFrefAFC"><sup>52</sup></a>Buffers=
 exist in many languages. The C++ STL doesn&#x27;t explicitely provide them=
, but other STL extensions do, like the one proposed by=20
Matthew Wilson. In that implementation, buffers store only objects of a sin=
gle type. In contrast to that this library proposes no typed buffers: each =
buffer can store
objects of any type without any limitations, the buffer doesn&#x27;t care a=
bout the type of its objects.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFD"></a><a href=3D"#tthFrefAFD"><sup>53</sup></a>Here, a=
s in other APIs from the <font size=3D"+1"><tt>buffer</tt></font> interface=
 it was preferred to have a friendly interface than to cater for errors. In=
 case of a zero return, you should test for a &#xa0;NULL pointer, but it is=
 even better to test for it before calling this function.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFE"></a><a href=3D"#tthFrefAFE"><sup>54</sup></a>The sam=
ple implementation allocates all the memory necessary for the container whe=
n creating it. This means that all n=D7ElementSize are allocated, copying t=
he elements into it as they are added. This simplifies the management of ci=
rcular buffers but is wasteful when the buffer is half empty.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFF"></a><a href=3D"#tthFrefAFF"><sup>55</sup></a>
The Objective-C language has a similar constructs with its &quot;Protocols&=
quot;. Several classes can share a common interface without any inheritance=
 between them. Obviously in C there is no compiler support for this kind of=
 programming, what forces your implementation to be careful about the order=
 of the function pointers within all objects. A change in the order of thos=
e function pointers makes the object incompatible with the protocol specifi=
cations, and this can&#x27;t be checked by the compiler.
All of this can be avoided, of course, if you just use the protocols design=
ed and implemented by someone else.

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFG"></a><a href=3D"#tthFrefAFG"><sup>56</sup></a>Two spe=
cial cases of specialized arrays have been presented: an array of strings a=
nd an array of bits. Many other arrays are possible and surely necessary fo=
r numeric work, and they could be used as basis for vector extensions with =
hardware support. Another subject not mentioned in this specification  is m=
ulti-dimensional arrays.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFH"></a><a href=3D"#tthFrefAFH"><sup>57</sup></a>The =CB=
rase&quot; function  has been added to the generic interface because it has=
 the same interface both in associative and sequential containers.The =C4dd=
&quot; function was left out because in associative containers you need a k=
ey argument to add data. This could have been fixed by defining a structure=
 with two fields that would be passed as a single argument, but that would =
make things more complex than they need to be
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFI"></a><a href=3D"#tthFrefAFI"><sup>58</sup></a>For ins=
tance you can use <font size=3D"+1"><tt>iList_Add</tt></font> for <font siz=
e=3D"+1"><tt>iList.Add</tt></font>, or similar conventions. The specificati=
ons of the library do not define those macros to avoid invasion of the user=
&#x27;s name space
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAFJ"></a><a href=3D"#tthFrefAFJ"><sup>59</sup></a>http://=
www.jsoftware.com/papers/eem/infinity.htm
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGA"></a><a href=3D"#tthFrefAGA"><sup>60</sup></a>http://=
cartesianprogramming.com/2012/05/22/programming-with-infinite-arrays-factor=
ial/
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGB"></a><a href=3D"#tthFrefAGB"><sup>61</sup></a>Early v=
ersions of the library used the vector interface to maintain the associatio=
n between an object and its callbacks. That meant that the vector interface=
 would be pulled in too. And since the vector interface uses the heap inter=
face object, that one would be pulled in also.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGC"></a><a href=3D"#tthFrefAGC"><sup>62</sup></a>The con=
stant <font size=3D"+1"><tt>MINIMUM_ARRAY_INDEX</tt></font> is defined as 1=
 if we are compiling in=20
C90 mode or as nothing if we are compiling in C99 mode. In C99 mode we have=
 a flexible structure, that consists of a fixed and a variable part. The=20
fixed part is the pointer to the next element. The variable part is the obj=
ect we are storing in the list.=20

<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGD"></a><a href=3D"#tthFrefAGD"><sup>63</sup></a>Modern =
versions of the operating systems that use SPARC catch the exception, load =
the data with several instructions and return control
to the program transparently. This wasn&#x27;t the case in the older versio=
ns, and anyway the SPARC example is an example for a whole class of machines
that require alignment.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGE"></a><a href=3D"#tthFrefAGE"><sup>64</sup></a>The fun=
ction <font size=3D"+1"><tt>newContainer</tt></font> would clear the &#x27;=
changed&#x27; bit, and the iterator=20
functions would test if it is still clear. All modifications function would=
 set it to one. This simple schema becomes problematic when you consider=20
what happens when an invalid iterator is used again. In the simple one bit =
schema if the flag has been cleared, the iterator goes on, in the more=20
expensive schema of the sample  implementation, the stalled iterators are n=
ever restartable until the counter wraps around to the same value.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGF"></a><a href=3D"#tthFrefAGF"><sup>65</sup></a>Very of=
ten I use the name &quot;rvp&quot; for <b>r</b>o<b>v</b>ing <b>p</b>ointer
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGG"></a><a href=3D"#tthFrefAGG"><sup>66</sup></a>This ha=
s been
discussed several times in the comp.lang.c discussion group, but the commit=
tee never followed any of those proposals
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGH"></a><a href=3D"#tthFrefAGH"><sup>67</sup></a>But the=
n, if the lists are small, the greater overhead of the double linked lists =
is small too. You see, there were a lot of good arguments from both sides
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGI"></a><a href=3D"#tthFrefAGI"><sup>68</sup></a>The fun=
ction <font size=3D"+1"><tt>Contains</tt></font> started its life as a way =
of avoiding all this problems
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAGJ"></a><a href=3D"#tthFrefAGJ"><sup>69</sup></a>Looks e=
asy isn&#x27;t it? It isn&#x27;t. It took me a while to arrive at the code =
above. Even worst is the reversing of a double linked list
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHA"></a><a href=3D"#tthFrefAHA"><sup>70</sup></a>This is=
 an exception however, most of the time the &quot;count&quot; field will sa=
ve us a lot of work when we can
return a precalculated field instead of going through all elements of the l=
ist each time we need to know that count. Besides we need to=20
set the pointer to the last element, so we would need to count anyway.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHB"></a><a href=3D"#tthFrefAHB"><sup>71</sup></a>In the =
very interesting web page=20
<div class=3D"p"><!----></div>
 http://eternallyconfuzzled.com/tuts/algorithms/jsw_tut_hashing.aspx
<div class=3D"p"><!----></div>
  In that page she also proposes to replace the addition operation with an =
XOR operations. She says that that improves the algorithm.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHC"></a><a href=3D"#tthFrefAHC"><sup>72</sup></a>C Inter=
faces and Implementations, David R. Hanson, Addison Wesley. ISBN 0-201-4984=
1-3 3rd printing June 2001 page 149
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHD"></a><a href=3D"#tthFrefAHD"><sup>73</sup></a>Note th=
at the C++ <font size=3D"+1"><tt>map::insert</tt></font> does not replace a=
n element
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHE"></a><a href=3D"#tthFrefAHE"><sup>74</sup></a>Accordi=
ng to the C99 standard, an unsigned int is at
least 16 bits what gives up to 16 different events.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHF"></a><a href=3D"#tthFrefAHF"><sup>75</sup></a>In the =
first versions the Vector interface was used
to implement the table. This had several advantages, but since the observer=
 interface is used by all
containers, the vector interface would be also included by all other contai=
ners, what would
mean too much code bloat. The solution was to replicate a subset of the fun=
ctionality of the vector
interface here
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHG"></a><a href=3D"#tthFrefAHG"><sup>76</sup></a>The sam=
e constraint applies here to types composed of two words or including chara=
cters that should not appear in file names, for instance=20
the character <font size=3D"+1"><tt>*</tt></font>. A typedef should be used=
 in these cases.
<div class=3D"p"><!----></div>
<a name=3D"tthFtNtAHH"></a><a href=3D"#tthFrefAHH"><sup>77</sup></a>The rea=
son for using this expression instead of the simpler a &gt; b is that it is=
 coherent with the other uses of the comparison function in other APIs
<br><br><hr><small>File translated from
T<sub><font size=3D"-1">E</font></sub>X
by <a href=3D"http://hutchinson.belmont.ma.us/tth/">
T<sub><font size=3D"-1">T</font></sub>Hgold</a>,
version 4.05 (hacked by jacob navia).<br>On  2 Jul 2012, 08:30.</small>

</body></html>
------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Containers.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nOzdeVxU5f4H8M+wDfsOgoiCuCAquKC4
4YKapqJGmppdc21R+bmkqZXd7jXTUirDkrqUmpaSS2KQG2qKWqIBKS4om+IAAoKyDcvMnN8fXOY6
zaAoDIPweb9evS485znnfIe89uE553kekSAIWwHMBBERERGRFujpugAiIiIiat4YOImIiIhIqxg4
iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJ
iIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImI
iIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiI
iEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiI
SKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhI
qxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiIiEirGDiJiIiISKsYOImIiIhIqxg4iYiImqDg
4GCMHDkSkZGRui6FqN4YOImIiP5rzZo1mDVrFo4fP67rUhAXF4eYmBhkZmbquhSiemPgJCIi+q+o
qChs27YN165d03UpRM2Kga4LICIiaiqCgoLQq1cvdOvWTdelEDUrDJxERET/tWLFCl2XQNQsMXAS
EVGzJggCTp8+jZs3b6KyshJt2rRBu3bt4O3tDZFIpNI3OTkZpaWlcHV1hYODg7K9qKgIKSkpMDAw
gLe3NwCgvLwcsbGxSEtLQ+/eveHr6/vIOoqLi3Hx4kVcv34dXbp0Qd++fWFqaorExEQoFAp07NgR
FhYWT/TZSkpKcPHiRSQlJcHd3R1+fn6wt7d/omsQNQYGTiIiarZSUlIQFBSEy5cvqx0rLS2Fqamp
StuMGTMQFxeH0NBQLFy4UNl+9uxZjBkzBnZ2dsjPz0dISAhWr14NqVSq7PPGG29gy5YtGuvYt28f
Zs2aheLiYmWbs7MzIiIiMHr0aJSVlSEmJgbDhw+v82eLjo7GK6+8gvv37yvbzM3NsWPHDkycOLHO
1yFqDJw0REREzdbUqVNx+fJljBo1Crt378aRI0fwySef4OWXX4a+vv5TXXP9+vVYtmwZnJ2dsXTp
UgwYMAAAEBYWhqioKLX+27dvx6RJk1BcXIz58+fj0KFD2L17N0aOHInhw4erhNa6ioiIQGBgIMRi
McLDw3HmzBmEhIRALpcjKCgI8fHxT/XZiLSFI5xERNQs5efn488//wQAfPvtt3BxcQEAPPfcc099
zYKCAqxatQpffPEFgoODle3du3dHUlISjh49inHjxinbS0tLsXLlSgDAv/71L7z//vvKY1OmTEFQ
UBBefPFFyOXyOtcglUqxfPlyCIKAyMhI+Pn5AQAGDhwIkUiEpUuXYt26ddizZ89Tf06ihsYRTiIi
apbMzc1hZWUFAPjtt98a5JqCIGDNmjUqYROA8v3NO3fuqLT/+OOPyMnJgZWVFZYuXap2vQkTJkAs
Fj9RDbt27UJmZiZ8fHyUYfPh6wHVj9uJmhKOcBIRUbNkbGyMyZMnIzw8HK+88goOHz6M5cuXKyf9
PA1bW1u89957au3Ozs4AqgPpw65evQoA6NmzJ8zNzZ/6vg+7cuUKAEBfX1/tndGKigoA1aOgeXl5
KhOfiHSJgZOIiJqtTZs2wdjYGF9++SV27tyJnTt3YuLEidiwYQM6dOjwxNf7+6z2x0lJSQEA5eP8
hnDz5k0AQHx8PObPn19rv6ysLAZOajIYOImIqNkyNTVFaGgoJk2ahLVr1+LYsWM4cOAAfvvtN5w5
cwZdu3bV+v0BPNXEoNrULJ00fvx4LFmypNZ+Hh4eDXZPovpi4CQiomZvyJAhGDJkCI4fP46ZM2fi
zp07+Oabb7Bp0yat3rd9+/YAgNTUVI3Hq6qqoFAonuiaXl5eAACJRIKhQ4fWqz6ixsJJQ0RE1GIM
Hz4cq1evBgBERkZq/X7+/v4AgL/++gsXLlxQOfbgwQM8//zzKC8vf6prJiYmIjExsWEKJdIyBk4i
ImqWcnJylJN2HlYT0tq0aaP1GsaMGaOcST527Fhs2bIFR48exQcffIDevXsDqJ7cBABGRkZ1uubg
wYMxefJkyOVyzJo1CxKJRK1PRUUFqqqqGuhTENUfH6kTEVGzlJKSAn9/fwwYMAADBw5E69atceLE
CRw6dAgikajR9k2v2fnn6tWrKpN8OnfujL179yonFNUEz7rYtGkTkpKSkJiYCC8vL7z00kvo3Lkz
7ty5gz/++AMJCQm4fPkyOnXq1OCfh+hpMHASEVGz5OTkhOeffx7x8fE4d+6csr19+/b45JNPEBgY
2Ch1dOzYEefPn8eOHTtw8eJFGBkZYcSIERgxYgRMTEyUj9Stra3rfE1nZ2fEx8fjnXfewXfffYfw
8HCVY8OGDYOlpWWDfxaipyUSBGErgJm6LoSIiEhbsrOzkZKSgjZt2qBdu3bQ02sab5Rdv34dXbp0
gZ6eHqRSaZ0fq/9dRkYGJBIJPD09YWdn18BVEtUfRziJiKjZc3Z2Vi7O3pSEhoYCAF544YWnDpsA
4ObmBjc3twaqqunJz8/H7t27kZ6ejjZt2qBLly7o1asXHB0d63XdU6dOQSwWo1+/fg1UKdWGI5xE
RERaFBoaitzcXLzwwgvo2LEjTE1NkZGRgdDQUISGhkIQBCQkJMDHx0fXpTZJf/zxB8aMGYMHDx7A
19cX9+/fx40bN7Bs2TJs2LChXtf28PCAk5MTzp4920DVUm04wklERKRFp0+fxt69e/Hhhx8CqN6S
Ui6XA6jeKvPTTz9l2HyEOXPmQKFQ4NatW8qVBW7duoXc3FyVfsuWLUNOTg527txZ52t//vnnTzRZ
i54eRziJiIi0KC8vD1euXMG1a9dw/fp1ZGdnw93dHR07dsSECRO4/eQjlJWVwczMDC+++CL27t1b
az+5XI6+fftCKpXi8uXLAKqDfc0xkUikfG/3+vXr8PDwgKGhodoxTf1zcnJgYWEBMzMzjfcWBAFp
aWmwsbGBra0tFAoFBEFQ3p+qMXASERFRk9WzZ0+kpKTg3Llz6N69u8Y+dnZ2KCgoUGmLj49Hz549
lY/N16xZgxkzZkAikeD27dtwdXXV+Ei9pm379u2YMmUK4uPjYWFhgddeew0bN25UucfBgwcxd+5c
5OXlQSQSYeLEiTA1NcUPP/yAwsLCJ1p5oLlrGtP0iIiIiDRYtGgRSkpK0KdPH3z66aeQyWRqfY4d
OwZPT0+4ubnh/PnzOH/+PDp37qw8LpFIMG/ePLz22ms4cuTIY2fyZ2dnIyAgAAMGDEBUVBSGDh2K
kJAQ3LhxQ9nn999/x8SJE9GjRw/cuHEDt27dQt++ffHTTz813IdvRvgOJxERETVZM2fOhIGBAYKD
g/HWW29h69at+Pbbb9G3b19ln169esHMzAwikUilvUZWVhYOHTqE4cOH1+me6enp+M9//oO5c+cC
ACwsLPDLL78gMjISy5cvBwC8//77EAQBoaGh6NixIwBg5cqVuHXrFsLCwur7sZsdjnASERFRk/bK
K6/g2rVrmD59OpKSkjBw4EBERETU+fw+ffrUOWwCgJ+fnzJsAoCrqysAoKSkRNkWFxeH1q1bq4yk
AuC7m7Vg4CQiomYrODgYI0eORGRkpNbvdeHCBYwcORIvvvii1u/1OOPGjcPIkSORkJCg61IajJOT
E3bu3ImdO3dCX18fb731FgRB0Mq9/h4aRSKRyvelpaUoKipC165dtXL/5oiBk4iImq24uDjExMQg
MzNT7diaNWswa9YsHD9+vEHulZ+fj5iYGJw6dapBrlcfJ0+eRExMjNpEmuZg+vTpmDhxIiQSCS5e
vKiTGszMzGBtba0x0CsUCh1U1PQxcBIRUYsUFRWFbdu24dq1a7ouhZ5QVVUVgOp3K2uYmZkhLy9P
a6OefzdkyBDk5+fj0KFDyrY9e/Zg27ZtANRHRVs6Bk4iImqRgoKC8MYbb6Bbt266LoVqcf36dYwb
Nw579+5FZmYmcnJy8NVXXyEyMhKDBg1SeX9y/PjxyM/Px1dffYV79+5pnM3ekNasWQMLCwuMGTMG
AwYMgJeXF1avXo0XXngBAOq1VWlzxFnqRETUIq1YsULXJdBjGBkZ4fLly5g8ebKyTSQSYdKkSQgN
DVUZRZw+fTqOHz+ORYsWYeHChbh+/brahJ6G1L17d8TFxeGzzz5DWloahg8fjrlz52LVqlUwMDDg
DkZ/w8BJRM+ce/fu4fDhwwCATp06oU+fPjquiJ5FycnJKC0thaurq8puP0VFRUhJSYGBgQG8vb0B
AOXl5YiNjUVaWhp69+4NX1/fJ75fQkICBEFAu3btNK4DWVJSgosXLyIpKQnu7u7w8/ODvb39I69Z
UlKCuLg4JCcno2vXrvD19YWpqekT19ZUtW/fHrdu3UJRURGuXLkCuVyOjh07olWrVmp9nZyc8Ouv
vyI3NxcymQytW7cGAKSmptZ6fU3HNLW5ublpfFTv6emJr7/+Wvm9TCbD4cOH4eHhwUfqfycIwlaB
iOgZEhcXJwAQAAgLFizQdTnUhPXt21cAIISGhtb52K+//ioAEOzs7ARBEISNGzcKJiYmyj9zAIQ3
3nhD7Xp/P+9h7777rgBA8PHxEYqKitSOR0VFCdbW1ir3MDc3F37++edaP9uBAwcEMzMzlXOcnZ2F
06dPC6ampgIAISYm5rE/I3o6BQUFwrFjx4SSkhJBEATh3r17wpo1awQAwueff67j6poevsNJRM1S
UFAQzMzMYGZmhnv37um6HHpGrV+/HsuWLYOzszOWLl2KAQMGAADCwsIQFRVVp2uEh4dj7dq1cHFx
QVRUlMpEFwCIiIhAYGAgxGIxwsPDcebMGYSEhEAulyMoKAjx8fFq19yzZw+CgoIglUqxcuVKHDt2
DNu3b4evry8CAgIglUrr/+HpkeLj4zFy5EhYW1vD29sbTk5OWL16NV566SW8/vrrui6vyeEjdSJq
lioqKlBWVgYAjTZrlZqXgoICrFq1Cl988QWCg4OV7d27d0dSUhKOHj2KcePGPfIaR44cwZtvvglz
c3NERUWhTZs2KselUimWL18OQRAQGRkJPz8/AMDAgQMhEomwdOlSrFu3Dnv27FGeI5PJsGrVKigU
CoSGhmLhwoXKYzNmzMDu3bvxyiuvQC6XN8SPgWoxfPhw5ObmQiKRIDs7G+bm5mjbti3atWun69Ka
JAZOImqW2rZtCy8vLwCAgUHD/lWXmZmJ69evIzs7G2PGjHnse3b0bBIEAWvWrFEJmwDg6+uLpKQk
3Llz55HnJyYmYvLkyRAEAT/99BN69Oih1mfXrl3IzMyEj4+PMmzWmDBhApYuXYro6GiV9v379yM1
NRXW1taYM2eO2jWnTp2KOXPmKH/hamqK7qUgP/tPPMhPRlmRBOXSeyguSENFWT4gEkFsYgtDI4vH
X6iJKQKQdANIqmN/fUNjdO23GK6dxmizrCaDgZOImqUtW7Zo7dpr165VThSIj49n4GymbG1t8d57
76m1Ozs7A3j0yHlmZibGjh2L4uJihIWF4fnnn9fY78qVKwCqd7b5+5/ZiooKANWjoHl5ecqJTX/9
9RcAwMfHByYmJk/4qXSjsqIIqZd+wM2EbSi5n/HIvmXFWY1TVBOQ8NsHDJxEREQt2dPOMlYoFBg/
fjyysrIwaNCgR77Pd/PmTQDVv7jMnz+/1n5ZWVnKwJmeng6gelb2s0CSchTnj7yF8tJcXZfS5Di5
DdV1CY2GgZOImqWYmBjlI89p06ZBLBZr7FdaWoodO3bg2rVruH37NqytreHq6gpXV1eMHj0arq6u
yr7x8fG4dOkSkpOTlW0HDx5UjjgB1XtYc8SzZdPT00NwcDDmzJmDM2fOYMOGDVi+fLnGvjUTiMaP
H48lS5bUek0PDw/l14WFhQDU9/tuim7Ef4eLMatU2kR6BrB37gU7516wtPWAiUVrGBqZo0JaCD19
I5hZttZRtY1L38AEFjZuui6j0TBwElGz9Nlnn+HXX38FUB0CNQXO6OhozJ49G7m5mkdevv76a7z2
2mvK7/ft24ePPvpIpc8HH3yg8v358+cZOAmzZ89Gfn4+VqxYgbfffhsODg6YOXOmWr+a94wlEgmG
Dh1ap2u3bdsWAJCTk9NQ5WpFxrWfVcKm2MQOXfv9H9y7TYHYxEaHlZEuMHASUYuUkpKCadOmobi4
GFZWVnjuuecwYMAAVFZW4ubNmzh9+rTaI9WOHTti9OjRuHLlCjIzMwEAAwYMgKWlpbKPlZVVo34O
arrefvtt5ObmIiQkBHPnzoWtrS3Gjx+v0sff3x9A9QSjxMREjROL/q5mtPP8+fMoLi5WW2YpNjZW
+f6nrhQXZiDuyFvK71u188eg8d9AbGKrw6pIlxg4iahF2rNnD4qLiwFUj4bOmjVLrY9CoVD5fubM
mZg5cybeeOMN5aShzZs3o2fPntovmJ5JGzZsQH5+PrZv344pU6bg6NGjypAJAIMHD8bkyZOxZ88e
zJo1C1FRUXBxcVG5RkVFBfT09GBoaAigegvH999/H6WlpVixYgW+/PJLiEQiyGQybN++HUuWLNH5
UmAXY1ZBVlkKALB18sGQoB0wMHw2JjiRdnDhdyJqkWpmBwNAQECAxj56evwrkupHJBIhPDwcgYGB
KC8vR2BgIC5duqTSZ9OmTejSpQsSExPh5eWFefPmYePGjVi8eDH69esHS0tL5UQhAHBxccGiRYsA
VK/G4OHhgVGjRsHe3h7z5s1DWFiYTvfxzko7gez0EwCq39fsP3YzwyYxcBJRy/TwKNI///lPnT+C
pObLwMAAERER8Pf3x4MHDzBq1CikpaUpjzs7OyM+Ph5LlixRBtTly5dj06ZNuH37NoYNG6by2gYA
fPzxx1i3bh1MTEyQnp6Oo0ePwtbWFps3b8bLL7/c2B9RSRAUSDy1Rvl9xx6vwsquk87qoaZDJAjC
VgAzdV0IEVFdXbhwAX379gUALFiwAJs3b1brM3bsWOWkoby8PLWJPMnJyejevTuqqqoAAJ06dcIH
H3yASZMmKR9d1ubhR+rx8fF8pE4NKiMjAxKJBJ6enrCzs3tkX5lMhqtXr8LMzExlJruu3EzYhgvH
VgAADI0sEPjaHzA25SQ64ggnEbVQnTt3xvbt22FkZAQAuHHjBl5++WW0b98eYWFhqKys1HGF1FK5
ublh4MCBjw2bQPXoqbe3d5MIm4W5V5Dw27+U33cbsJRhk5QYOImoxZo2bRouXryIwMBAZdudO3fw
5ptvws/PD7dv39ZhdUTPjpyM0zgRMRmyqurtNO2ce6Gz72uPOUu77t+/z/3kmxAGTiJq0bp3746D
Bw8iKSkJs2fPVi6FlJiYiJEjR3Kkk6gWCoUcObdiEXtgNk78NBkV0nsAALGJLQaO/xp6ek+/EM7l
y5fRpUsX/P777yrtixYtgo+Pj/JVmBpDhw7FL7/8AgCIiIiAq6srbGxsYGZmBm9vb5w9e/ap6khM
TESXLl1UNnegp8NlkYiIAHTt2hXffvst5s6di8mTJ0MikeDGjRvYt28fpk2bpuvymr0KaQGkJTmo
KCtAhbQA5dICVEjvoaq8CLKqsof+KYVcVg6FXAaFvBJlJdmQVZYAEMHI2BJik8c/hqa6k8sqIass
hqVdR1g7doUgl6GyshjS4izcy0n878/+f8Sm9hg+ZS/MrdrW676enp7IzMzE4cOH0b9/f2X73r17
kZWVhcTERPTp0wdA9fvYp06dwo8//oiEhARMnz4d8+bNw7Jly1BVVYUjR46ovJe9Y8cOWFpaYsKE
CY+tw9LSEv7+/mqTtujJMXASET2kf//+ePvtt5XLzly7dk2tz8MLwufl5TVabc+yqopiFBWkoLgw
DcX3M1By/xbKirNQViRBWXE25DJpve8hLZFCWnK3Aaqlv5OW3sXd22ce2ae1x0j0fW4jTC3qv8e7
oaEh/P39ceLECfzrX9XvhaalpSEnJwcikQjnzp1TBs7Dhw/D29sbrVu3xvfffw8A+OSTT5QL4nt6
eqpc++OPP0a/fv3qFDjbt2+Pb775pt6fh/hInYhaqEe921WzIDzwv20EH9amTRvl10eOHGnYwp5x
VRXFyLsTh5sJ23Dx2CrE7A7C/i+7Yc+mDjiyYzTORc3H5TOfID0pAndvxaK4MK1BwibplrGpA9y7
Tm6QsFkjICAA58+fR2lp9QLysbGx8PHxQdeuXVUekR8+fBijRo0CUL3ahFwuR1RUlMZrvvDCC0hJ
ScH+/fvRvXt3/N///R8A4K+//kL37t0RFxeHWbNmwd7eHlevXlW2P7x26ogRI7Bx40YcOnQIAwcO
ROvWrZWjqQ8LDQ2Fp6cnbG1tMWXKFGzcuBHdu3dvsJ/Ps4YjnETUIo0dOxbu7u6YN28eevbsCZFI
BIVCgXPnzuGzzz4DUD3Koml/a29vb+XXe/fuxYQJEzB48ODGKr3JKCvOQkHOXyjMTUJh7hUU3k1C
aVGmrssiLRDpGUJsbA1BkENWJVX7JaG8LA9nD76GnIzT6Dtqo9q2sE8jICAAVVVViI2NxejRo3Hm
zBkMHjwY5eXlykBZXl6OU6dOYfny5QCq/3/duXNnTJ8+HRcuXMC//vUvla0/V69ejcTERHTt2hUr
V66ErW31VptlZWVISkrC3LlzMWjQIGzduhUuLi64evUqkpKSUFZWprxGcnIy7t27B5lMhoULF6K8
vByLFy/GkCFDlBMQv/jiC7z11lsIDg7G66+/joSEBCxevBh377bcEXgGTiJqkYqKihAWFoawsDCY
mJigU6dOuHv3LnJycpR9QkND0aFDB7Vzx44diz59+uDChQu4ffs2hgwZgvbt20MsFiM6Ohru7u6N
+VEaRVlxFu5lJ6Ig5y8U5CSi4O5l5SSRhmBgaApTi9YQm9pDbGL70D82MDA0hYGhGQyMTKFvaAoD
A2Po6RtCT88QCkEBaXE2RCIDmFq2bpCgQ6oMDE1hbt0OItH/HopWlt9HflY8JKlHkHFlH6oqq58K
pF7aCQNDE/Qe/mG979uzZ09YW1vjxIkTGD16NGJjY/HRRx+htLQUX3/9NW7duoXr169DT08PgwYN
AgCIxWKcPXsWCxcuxGeffYbdu3fjq6++wsSJEwEAvXr1gpmZGZycnJTnPCwwMBBr1659bG3FxcWI
jY2Fs7MzAGD9+vU4dOgQAgMDIQgC1qxZA39/f3z66acAqpdhk0gkWLZsWb1/Ls8qBk4iapFeeukl
VFZWIiEhAVKpVGUWavfu3fHRRx9h3LhxGs/V09PDvn378Nprr+Hw4cMAoNw5pjksw1IhLcS9nEQU
ZCfgXnYC7uUkoLy0fu+q6ukZwtzaDRa2HrCwcYe5tRvMLNvAzLI1TC1cYGRs9fQXd+bC+43NyNga
rdsHoHX7APj4r8LF4+8i48peAEDyn/+Bc/vhaO0+rF730NPTw9ChQ3HixAnk5ubixo0b8Pf3V77y
cu7cOcTFxSEgIEC5ni4A2NnZYdeuXZg7dy5mz56NoKAg/PDDD3Wa/PfwEmmPMmHCBGXYrLlnzW5l
WVlZyM/Px/Dhw5/k4zZ7DJxE9Mzp06cPBEF4ZJ/o6OhHHl+8eDEWL16MwsJCpKSkQCKRwMLCAh07
doSrq+tjR8pcXV1x6NAhZGRk4Nq1axCLxfD09ETr1q2f+PPoUlVlKQrvXvpvwEzEvZwElNy/9dTX
E4n0YWnbAdYOXWDl0AVWdp1gZe8Jc+t20NPTb8DKqakwMrbGgLFfQk9kgLSk3QCAP2NWwWnO2Xr/
Ow8ICMDixYvxyy+/oHPnznBwcICDgwOcnZ1x7tw5xMTEYOHChRrPHT58OBITE+Ht7Y3Nmzc32moT
MpkMAKCvzz/vD2PgJKIWzcbGBn369FHOeH1Sbm5ucHNza9iitKSyogiFd5NQePcSCu5eRkHOXygq
SAHw6PBeG31DU9g4doVtK2/YOHaDTavusLLrBH0DccMWTs+E3sM/hCQtBhVl+SguTMeta/vh3nVy
va45bNgwKBQKrFu3TmXEcODAgdi/fz+ysrIwevToWs+v+f/36dOnlW0ikUg5GqkNrq6usLS0xOnT
p7Fy5UoAgFQqRUxMjNbu+Sxg4CQiamYUCjlK7mfgft413M+7ivt511CYm4TSB0+/c5K+gQlsWnWD
nVMP2Dr5wNbJB5a2HVTe66OWzVBsgS593kTiqTUAgKt/hMLNa1K93qvt1q0bHB0dkZqaqlweCagO
nHv37kWHDh1UtvX84YcfYG1tjREjRsDIyAhnzpzBr7/+iilTpij7DBo0CNHR0cjNzYWjo+NT11Yb
PT09rFixAu+++y6GDRuG/v3745dffoGLi4vKeqAtDQMnEdEzqkJaUL2mZWE6igpSUVSQgqJ7N1FU
kAKF/Ol3SBKJ9GHt0AV2zj1h69QDds49YWXvyUfi9Fgde7yKq398gcqKB3hwLxm3rv0MN6+gel1z
2LBhiIiIUFkJYuDAgQCgNrqZnJyMTz75BDKZDBYWFnjw4AGmTJmCzZs3K/u8+eabOHfuHFxcXPCP
f/wD3333Xb3q0+Sdd96BjY0Nfv75Z6SkpOCjjz7ChQsXcP78+Qa/17NCJAjCVgAzdV0IEVGN+3nX
cSf1CGSVpbCw8YCR2FzXJTUIkZ4B7Fv7wthU8244CoUc8qoyVFWWorK8QHXXnbI8lBZloaxYgrL/
/m/NvtX1rAqWth1g6+zz39HLHrBt1R36BsYNcG1qiS6fC8HlM58AqN55aNQ/DtV756EnIZfLkZKS
gsLCQnh4eMDBwUFjv9u3b9L2DsIAACAASURBVMPR0RHGxo3zZ93X1xf6+votNnRyhJOImgxpyV3E
HpiD/KwLui5Fq/T0xdDTM6h+HC0SQVDIIZdXQlBUPf7kehCJ9GFp1wm2rbrBppV39buXrbrD0MhM
q/ellsWr7wJkXN2H4oJUVJTl4+jOMeg7KgRtOoxqlPvr6+ujc+fOj+2naVOHhnLu3DkkJSXB398f
IpEIP/zwA/7880/s3LlTa/ds6jjCSURNQn52PH7bMx2V5QW6LqVZMDZzgJW9J6ztu8Da0Qs2Dl6w
svfkhB5qFAU5lxCzeyJklaXKNit7T7TtHAjHNv1g5eAJY1N7HVaoXefOncPevXshkUhQVVUFR0dH
jB8/HmPGjNF1aTrDwElEOld0LwVHdoxWLh5NdaNvYAJz63awsHGHhY07LG07wMK2A6zsOkFsYqPr
8qiFy71zHrE/z6p1gwB9A2MYiq0gqyyBoJBB39AEphatgRa+eL8IIlg7eKHvqA3N6tUWBk4i0imF
vAqHto/Eg/xrui6lydLTM4S1gxdcPJ6DjVN3mFm4wNSyNcQmtrou7Zk3btw4VFRU4JNPPkHPnrpd
QD44OBjXr1/HwoULMWHChDqfd+HCBbzzzjuwtLTEvn37tFjhkysvy0fib2uQcW1/vSaytUQDAsPg
1uUFXZfRYPgOJxHp1PULYRrDpkjPAGITO5iYt4KZZRsdVNawFAoZKqX3YWXfEXbOvSCrLIG09C7K
irNRXJCG+/nXav0PskJRhYK71XuWu3kFoWu/xQybDeTkyZMoKytDQYHuX+WIi4tDXFzcE4VNAMjP
z0dMTAzs7DRPRtMlY1N79BuzCT2Gvo/byb8gN/Mc7udeQcmD2wygj2BgZA7bVt66LqNBMXASkc5U
VhThyvkv1NotbD0wYuoBmJg3/Bp5TZVcVoGCu5eQnX4SmTd+1RjCBUGO9Ct7kH5lLzy8p8PHfyWM
zTTPwCVqSoxN7dCp50x06jlT2VZZfh+V5Q9QUnQHFaX5MDF3hKGRhe6KbELMrFzrt91rE8TASUQ6
czNhG6oqilTaRCJ9DBr/nxYVNgFA30AMB5c+cHDpA+9Bb6O4MB2pl35A2uXdKC/7+z7mAlIv7cSt
6wfQfcBb6Oz7GvT0+Nc5PVuMjK1hZGwNc+t2ui6FGgG3iCAinRAEBVISv1dr9/B+GTaOXXVQUdNi
YeOOHkPew8Q3EzBg3FewtOuk1kdWWYKE3/6Fw98/h8K7STqokoiobvgrMRHpxN1bsSgtylRr79J3
gQ6qabr09A3h5vUi2nUJQuaNKFyK/RhFBTdV+tzPvYLD3z8Hr37/h+4D3oKefsvdPq82JSUliIuL
Q3JyMrp27QpfX1+YmprW6dycnBxcunQJN2/eRLt27eDt7f3INRwvXboEmUyGDh06wNLSUuVYeXk5
rl69CgDo0aMH9PRqH/cRBAEJCQmIi4tDx44d0adPH7Xr1VVJSQkuXryIpKQkuLu7w8/PD/b2zXdZ
Imp6GDiJSCcyrh1Qa3NqNwQWNu46qKbpE4lEaNs5EG06Po+bCVtx+cwGVFY8UB4XBDmu/P4ZstNP
YMC4MFjattdhtU1LZGQkpk+fjtLS/60J6ezsjIiIiEeeJ5VKsXz5cnz55ZdqxyZPnoywsDDY2qpP
3goICMC9e/cQHR2ttu5ieno6evfuDQAoLi6GubnmXbQuXLiAcePGITc3V9nm4OCAn376CUOHDn1k
3X8XHR2NV155Bffv31e2mZubY8eOHZg4ceITXYvoafGROhE1OkFQ4M7NQ2rt7l0n66CaZ4uengE6
956HwNf+gJvXJLXjBTl/4fD24Ui/slcH1TU9e/bsQVBQEKRSKVauXIljx45h+/bt8PX1RUBAAKRS
qcbz5HI5Bg8ejC+//BLt27dHWFgYTp06ha1bt8LX1xd79uxBz549UVRUpPH8+khNTcW4ceNgZGSE
2bNnY9GiRWjXrh3y8vIwcuRIXL9+vc7XioiIQGBgIMRiMcLDw3HmzBmEhIRALpcjKCgI8fHxDV4/
kSYMnETU6O5lx6OyvFClTU/PEC4dG2fru+ZAbGKLAeO+xJCgHTAxb6VyTFZVht+jF+DCsRWQt+Cl
Z2QyGVatWgWFQoFNmzZh3bp1GDFiBGbMmIGDBw9ix44dtT7S/vrrr3Hx4kW4uLggLi4Or7/+OgYP
HoyZM2ciNjYWvr6+uH37NtasWdPgdW/atAlTp05FRkYGvv32W3z++ee4cOEC3N3dIZPJ8OGHH9bp
OjUjtIIgIDIyEnPmzMHAgQOxdOlSrF27FoIgYN26dQ1eP5EmDJxE1Oiy0k6qtTm69oeR+OneT2vJ
XDo8h7GzT8O10zi1YzcTtuH4rhcgLc3VcGbzt3//fqSmpsLa2hpz5sxROz516lSIxZq3+vz4448B
AAsWLFBb39LY2Bhvv/02gOpwWF5e3qB1L1q0CJs2bYK+vr6yzcHBAW+++SYAYN++fRAE4bHX2bVr
FzIzM+Hj4wM/Pz+VYzVrfUZHRzdg5US14zucRNTocjPPqrU5uw/TQSXNg5GxNfwnfouUv3biz+Pv
Qi77XwDKz7qII9+PxpCg72HTqpsOq2x8f/31FwDAx8cHJiYmdT6vpKQEt2/fBgD0799fY5+a9qqq
KqSkpKBbt4b72Xp4eGhs79u3L4DqiUc5OTlwdnZ+5HWuXLkCANDX18eWLVtUjlVUVACoHgXNy8uD
gwPXcyXtYuAkokYll1UgP+tPtXandoN1UE3z0sHnFdg59UBs5GyU3L+lbC8rluDYj4EYNPE7tG5B
wT49PR0A4OTk9ETn3bz5v1UAXFxcNPZxcnKCnp4eFAoFbty40aCBszatWv3v1Yns7OzHBs6azxEf
H4/58+fX2i8rK4uBk7SOgZOIGlXB3UtqW9oZia1g7eilo4qaF5tW3TB6xjGcOTgPORmnlO2yqjKc
2jsdfUeHwKP7NB1W2HgKC6vfE3740XRdPPyYvaqqSmMfmUwGhUIBoPoRe2MoKytTfl2XEG1hUb1r
z/jx47FkyZJa+9U2okrUkBg4iahR3ctOUGuza90bIhFfKW8oRsZWGDppF+JPvI8b8eHKdkGQ4/yh
xagouwcvv4U6rLBx1KyVmZOT80TndejQQTl6KZFI4OWl/suQRCJRft2pk/qi/LV5ODQ+qezsbADV
Afdxo5sAlHVLJJInXkqJqKHxb3gialSaAqe9i68OKmne9PT04TtiLXoPXwtApHIs8dQaJPz2b90U
1ohqRu7Onz+P4uJiteOxsbHKdxkfZmRkhO7duwMAjhw5ovHav/76KwDA2toabm5uKscMDKrHctLS
0lTaCwsLMXPmzCf6DA+rqaV///4QiUSP6Q34+/sDABITE5GYmPjU9yVqCAycRNSoCnPVt2C0c+qp
g0pahs6958J/4rfQ01edjX0t7kvEHVkGQVDoqDLtmz59OsRiMUpLS7FixQrlzG6ZTIZvv/0WY8eO
rXW299q1awEA4eHhyp2Baty+fRsbN24EAHzwwQfKgFnD3b1684LTp08rr5+eno4xY8Yo3yt9lC1b
tiAhQfUXs+TkZOzYsQMAsHr16sdeAwAGDx6MyZMnQy6XY9asWSqjsjUqKipqfW2AqCExcBJRo5HL
ylFckKLWbuvkrYNqWg7XTmMR8FIEDIxUd7VJ+WsHfo8OhkIh11Fl2uXi4oJFixYBqA5xHh4eGDVq
FOzt7TFv3jyEhYXV+v7l2LFj8Y9//AMPHjxA//79sWDBAnzxxRdYtGiRcg3OwYMHY8EC9a1YX3rp
JQDVi857enqib9++aN++PTIzM/Hjjz8+tu4HDx7Az88PL730Ej799FMsWbIEgwYNwv379zF9+nQM
G1b3iV+bNm1Cly5dkJiYCC8vL8ybNw8bN27E4sWL0a9fP1haWtYpBBPVF9/hJKJG8yA/WW1EzcS8
FYxNuaeztjm69seIaQdwcs9UVJTlK9szru6FQl6BAYFh0NNrfv9J+Pjjj2FjY4N///vfSE9PR3p6
Otzd3fHRRx/h5Zdfxrx582o99/vvv4e/vz9Wr16Nr776Stlua2uLdevWYfny5RonJAUHB+PatWv4
z3/+gxs3bsDIyAgBAQH45ptvUFn5+IX4t27disuXL+Of//wn9uzZA6B6AtD777+PDz744Ik+v7Oz
M+Lj4/HOO+/gu+++Q3h4uMqxYcOGPfX+7ERPQiQIwlYAM3VdCBE1f+lJe/D7r6qTVZzdh2HY5N06
qqjlKbqXguMRkyAtyVZpb9NxDAaN/wZ6+oY6qky7ZDIZrl69CjMzs6ealZ2dnY3U1FS0b98erVu3
rtM5d+/eRVpaGry9vWFmZvbY/hKJBBUVFXB1dYWhoSEUCgWuXbsGhUKBrl271ror0pPIyMiARCKB
p6en2oL2RNrEwElEjSbx1Ie4ej5Upc2zz5voNewD3RTUQpXcv4XjEZNQ+uC2SrtLh1EYNCEc+vpG
OqqMiJorvsNJRI3mwb2bam1W9p11UEnLZm7dDiOmHYC5tZtKuyTlCGIPzG7R+68TkXYwcBJRoyku
TFNrs7LrqINKyMzSBSOmRcLCVvXxclbqMYZOImpwDJxE1CgEQYGS+xlq7RY23OVEV0wtnDBi6gFY
2qqGfoZOImpoDJxE1CjKiiTqW1oaW0NsYqOjiggATMwdMXzafo2h88yBOQydRNQgGDiJqFGU/G2C
CgC1dwhJN0zMNIdOSepRnImcC4WcC4MTUf0wcBJRo9AYOK3a6qAS0qTW0JlyBLEMnURUTwycRNQo
Su9rGuFk4GxKTMwcMXzqfljadlBpl6QcxpmD8xg6ieipMXASUaPQNMJpxhHOJsfE3BHDp/6sNnv9
zs1Dz2ToDA4OxsiRIxEZGan1e124cAEjR47Eiy++qPV7Pc64ceMwcuRItT3ZiXSFgZOIGsXfFxkH
AHOrdjqohB7HxNwRI6b+DAub9irtd24eQmzk3GdqIlFcXBxiYmKQmZmpdmzNmjWYNWsWjh8/3iD3
ys/PR0xMDE6dOtUg16uPkydPIiYmBgUFBbouhQgAAycRNZLS4iy1NjPLNjqohOrCxLxV9Ujn30Kn
JOVws1kyKSoqCtu2bcO1a9d0XQpRs8fASURaJwgKSIuz1dpNLeu2JzXphqmFk8bQmZV6DKf3vwq5
rFxHlTWMoKAgvPHGG+jWrZuuSyFq9gx0XQARNX/lpXkQBLlKm5GxNQwMTXVUEdWVqYUTRkw7gOO7
g1BUkKJsz04/gd/2vYIhQd8/s/8eV6xYoesSiFoMBk4i0royDaObJubOOqiEnoaJeSsMn/Yzju9+
EUX3bijb796KxcmfpmDopB9hKLbQYYVPJzk5GaWlpXB1dYWDg4OyvaioCCkpKTAwMIC3tzcAoLy8
HLGxsUhLS0Pv3r3h6+v7xPdLSEiAIAho164d7Ozs1I6XlJTg4sWLSEpKgru7O/z8/GBvb//Ia5aU
lCAuLg7Jycno2rUrfH19YWr6bP4CQM0bH6kTkdZJSzQ8Trdw0kEl9LRMzBwxYup+WNl3UWnPk8Qh
ZvcLKC/L11FlT2/GjBno3bs3IiIiVNrPnj2L3r17IyAgAAAQEhICW1tbPPfcc3jjjTfQp08fvPnm
m090r/feew+9evXC7NmzYWRkpHY8Ojoarq6uGDZsGIKDgzFu3Di4u7vjwIEDtV4zMjISTk5OGD58
OObPn48hQ4agQ4cOiI2NfaLaiBoDAycRaZ205K5am4lZKx1UQvVhbOaAEdN+hm0rb5X2wruXcezH
8SgtkuioMu1Zv349li1bBmdnZyxduhQDBgwAAISFhSEqKqpO1wgPD8fatWvh4uKCqKgoWFiojgZH
REQgMDAQYrEY4eHhOHPmDEJCQiCXyxEUFIT4+Hi1a+7ZswdBQUGQSqVYuXIljh07hu3bt8PX1xcB
AQGQSqX1//BEDYiBk4i0Tlqaq9ZmYs4RzmeR2MQGAVP3wb616iPl4oJUHN05Fvfzms+M74KCAqxa
tQpffPEFUlNTERISgrNnzyonGR09evSx1zhy5AjefPNNmJubIyoqCm3aqK7MIJVKsXz5cgiCgMjI
SMyZMwcDBw7E0qVLsXbtWgiCgHXr1qmcI5PJsGrVKigUCmzatAnr1q3DiBEjMGPGDBw8eBA7duyA
nh7/805NC/9EEpHWlZfmqbUZmzvqoBJqCEZiSwS89BOc3YaqtEtLsnHsh0DcvXVGN4U1MEEQsGbN
GgQHB6u017y/eefOnUeen5iYiMmTJ0MQBPz000/o0aOHWp9du3YhMzMTPj4+8PPzUzk2YcIEANWP
2x+2f/9+pKamwtraGnPmzFG75tSpUyEWix//AYkaEScNEZHWaRzhNHXQ0JOeFQZGZhj84g78HrUA
t5MPKturKotxcs9U9Bm1AR7dp+mwwvqztbXFe++9p9bu7Fw94U0QhFrPzczMxNixY1FcXIywsDA8
//zzGvtduXIFAKCvr48tW7aoHKuoqABQPQqal5ennNj0119/AQB8fHxgYmLyhJ+KSDcYOIlI6zSO
cJoxcD7r9PWNMHD81xDH2OFmwlZlu0JRhfOHFuNBfjJ6Dn0fItGz+TBNJBI91XkKhQLjx49HVlYW
Bg0ahNdff73Wvjdv3gQAxMfHY/78+bX2y8rKUgbO9PR0AICTE19LoWcHAycRaV2FVH0Gs9j00cu9
0LNBJNJDn5HrYWbpisRT/1Y5dv3CFhTmJmFgYBiMW9C/bz09PQQHB2POnDk4c+YMNmzYgOXLl2vs
WzOBaPz48ViyZEmt1/Tw+N/e9oWFhQCqR0WJnhUMnESkdeVl99TaWlIAaQm8/BbAzKoN/vj1/1R2
ILp7KxaHto3AwPFfw7GN3yOu0LzMnj0b+fn5WLFiBd5++204ODhg5syZav28vLwAABKJBEOHDq3T
tdu2bQsAyMnJaahyibTu2XzOQUTPDLmsArLKEpU2kUgfRsbWOqqItKWd5wSMfPmg2goE0pJsHN81
EZfObIBCIa/l7Obn7bffxltvvQUAmDt3Lg4ePKjWx9/fH0D1BKPExMQ6XbdmtPP8+fMoLi5WOx4b
G6t8/5OoqWDgJCKtqpAWqrUZmdg89ftx1LTZOvlg9KvH4Og6QKVdEBRIOrcRx3aOxf386zqqrvFt
2LABr776KuRyOaZMmaK2KPvgwYMxefJkyOVyzJo1CxKJ+lqmFRUVqKqqUn4/ffp0iMVilJaWYsWK
FcrJSzKZDN9++y3Gjh37yAlNRLrAwElEWlUhVX+cLjax1UEl1FhMzBwRMGUvvPwWqh27l5OAw9tG
IOn3z6CQV2k4u3kRiUQIDw9HYGAgysvLERgYiEuXLqn02bRpE7p06YLExER4eXlh3rx52LhxIxYv
Xox+/frB0tJSOVEIAFxcXLBo0SIAwJYtW+Dh4YFRo0bB3t4e8+bNQ1hYGIyNjRv1cxI9DgMnEWlV
pYYRTgbO5k9PTx89hqzGsJci1FYkUCiqcCl2PaK/GwxJaoyOKmw8BgYGiIiIgL+/Px48eIBRo0Yh
LS1NedzZ2Rnx8fFYsmSJMqAuX74cmzZtwu3btzFs2DBYWlqqXPPjjz/GunXrYGJigvT0dBw9ehS2
trbYvHkzXn755cb+iESPJRIEYSuAmbouhIiap9vJv+BM5FyVtjYdx2DwC1trOYOam/KyfFw4ugKZ
NzRvBensNhTe/ith59yzkStrmjIyMiCRSODp6Qk7O7tH9pXJZLh69SrMzMxUZrITNTWcpU5EWqVp
hJMThloWY1N7+E/8FreTo3Dh2ApUlKkuk5Wd8RuyM36Ds/swdO2/pEXNZtfEzc0Nbm5udeprYGAA
b2/vx3ck0jEGTiLSqopyTY/UGThboradx6FV2wH46/Q6pF7aCUFQqBzPTj+J7PSTsLLvgo49ZsDN
60UYGVvpqFoiakh8h5OItKqy/L5am5GxjQ4qoaZAbGKLvqM2YPSrMXBsO1Bjnwf513AxZhX2bfbC
iYiXcCN+K4oKUhu5UiJqSBzhJCKtqix/oNbGUSuyceyKEVP3IyfjFC6f+xR5d/5Q6yMoZMi5dQo5
t04BqP5Fxb51b1jadYS5VTuYWbnC0MgcVRVFMDAyU1v/k559+gbGMLN00XUZ1AAYOIlIqzStwynm
CCf9l5PbEDi5DUFu5u+4fvFrSFKOQhA0Lw5fWV6IrLQYZKU1/5nt9D8Obfoh4KWfoG8g1nUpVA8M
nESkVVUVRWptHOGkv3N07Q9H1/6QltxF6uUfkXFlH4oKbuq6LGoC8u78AUnqUbTtHKjrUqgeGDiJ
SKs0vcNpKGbgJM1MzFuhW/8l6NZ/CYoK0nDn5iHkZJzCvex4VFWqb+NILYOxqcPjO1GTxsBJRFpV
yRFOekqWtu3h5bcAXn4LIAgCiu7dQGFuEkru30LJg9soK5Lgfv71/74nLMDQyJxLbjUz+gbGcPOa
BEfXfrouheqJgZOItKqKk4aoAYhEIljZd4aVfWddl0JET4HLIhGR1giCoHGE01BsqaE3ERE1Vwyc
RKQ1ssoSAIJKm76hKfT0+HCFiKglYeAkIq3R+P4mRzeJiFocBk4i0pqqCvX3N/k4nYio5WHgJCKt
qaxQX8aGI5xERC0PAycRaU2VhsBpKLbQQSVERKRLDJxEpDWadhniI3UiopaHgZOItEbjtpYMnERE
LQ4DJxFpDR+pExERwMBJRFqkae9rQyMGTiKiloaBk4i0hiOcREQEMHASkRZVVnLSEBERMXASkRZV
VZSotRkameugEiIi0iUGTiLSGr7DSUREAAMnEWmRjO9wEhERGDiJSIs4wklERAADJxFpkcZ3ODnC
SUTU4jBwEpHWaB7h5KQhIqKWhoGTiLRCoZBBLiv/W6sIBkZmOqmHiIh0h4GTiLRCVsklkYiIqBoD
JxFpBXcZIiKiGgycRKQVVRpGOA04wklE1CIxcBKRVmgKnFwSiYioZWLgJCKt0Bg4xRzhJCJqiRg4
iUgrNO4yxEfqREQtEgMnEWkFdxkiIqIaDJxEpBWcNERERDUYOIlIK7gsEhER1WDgJCKt4Cx1IiKq
wcBJRFqheYSTj9SJiFoiBk4i0gpOGiJqGoKDgzFy5EhERkbquhRqwRg4iUgruJc6UdMQFxeHmJgY
ZGZm6roUasEYOIlIKzhpiIiIajBwEpFWcNIQERHVYOAkIq2orChSa+MIJxFRy2Sg6wKIqHnSuLUl
Ayc1oBs3buDChQsQBAH9+vVDhw4dcPfuXUgkEpibm6NTp04az7t58ybi4uIglUrRu3dv+Pj4QE9P
ffylqKgIKSkpMDAwgLe3NwCgvLwcsbGxSEtLQ+/eveHr6/vIGktKSnDx4kUkJSXB3d0dfn5+sLe3
r9O9JBIJjhw5gp49e6Jnz57KvlVVVTh//jzS09NRWFiINm3aYODAgWjVqlWdf3ZEjY2Bk4i0grPU
SVsKCwvxj3/8A9HR0Srtc+fORdu2bfH+++9j0KBBiI2NVTleXFyMmTNnYv/+/SrtY8eOxQ8//AAr
KyuV9rNnz2LMmDGws7NDfn4+QkJCsHr1akilUmWfN954A1u2bNFYZ3R0NF555RXcv39f2WZubo4d
O3Zg4sSJtd7r7t27mDRpEg4cOAAA2LhxozJwrlixAl9//TUePHigcr6ZmRm++uorzJgxo9afG5Eu
8ZE6ETU4WWUpBEGh0qZvYAw9fUMdVUTNRUVFBQYMGIDo6Gh4eHggPDwcJ06cwIYNGxATE4MPP/xQ
43kymQz+/v7Yv38/pk+fjmPHjiE6OhoBAQGIjo7Gq6+++sj7rl+/HsuWLYOzszOWLl2KAQMGAADC
wsIQFRWl1j8iIgKBgYEQi8UIDw/HmTNnEBISArlcjqCgIMTHx9d6r8WLFyMyMhIDBgzAqlWr0L17
d+WxU6dOoVevXti8eTOOHj2KnTt3YujQoSgtLcWCBQuQn59flx8jUeMTBGGrQETUgMqKc4QfPnZU
+WdfaFddl0XNQEhIiABAaNWqlXD37l2VY4WFhcLw4cMFAMKgQYNUjoWGhgoAhOeff16lXSqVCo6O
joJIJBIuX76scuzXX38VAAgikUgAIHzxxRcqx7t16yYAEIKDg1Xay8rKBFdXVwGA8Mcff6gc+/TT
TwUAwqRJk2q9l6mpqXD+/HmNnz8nJ0etLTMzU1nj0aNH1Y737dtXACCEhoZqvCZRY+AIJxE1OE4Y
Im0JCQkBACxYsACOjo4qx6ytrTFq1CiN533yyScAgNdee02l3djYGKNGjYIgCGqP6GsIgoA1a9Yg
ODhYpb3m/c07d+6otO/atQuZmZnw8fGBn5+fyrEJEyYAQK33AoAdO3agb9++Go9pek+zTZs26Ny5
s8ZaiJoKvsNJRA2uSmPgtNRBJdScPHjwAFlZWQCAwYMH1/m8oqIi5aLnCQkJyM7OVjle8/3t27c1
nm9ra4v33ntPrd3Z2RlAdSB92JUrVwAA+vr6au93VlRUAACkUiny8vLg4OCgdq+goKA6fS65XI7c
3FzcvXsXVVVVAACFQvGYs4h0g4GTiBqcpkXfjRg4qZ5SUlKUX7u4uDzVef/+979r7VcTZv9OJBLV
+V5A9Sx4AIiPj8f8+fMfeb+/B87HkUql2LFjB8LDw/Hnn38yYNIzg4GTiBqc5hFOPlKn+jE1NVV+
/fBM8cexsPjfn739+/fDxsZGYz9NyxU9jZr7jR8/HkuWLKm1n4eHxxNdVyqVYuzYsTh58iS8vb2x
YsUKDBo0CL169cKwYcNw/fr1etVNpE0MnETU4CorHqi18ZE61ZebmxtEIhEEQUBqaqrK7O0a5eXl
am3t27eHWCxGRUUFDA0NMXToUK3W6eXlBaB6Hc2GvNeGDRtw8uRJ+Pv749ixYxCLxcpjhoZcAYKa
Nk4aIqIGp/mRupWGnkR1Z2JiopyoEx4ernZ8z549+Oijj9Ta9fX1lcsYbdu2Tas1AoC/vz8AIDEx
EYmJiQ123VOnTgGo1INA5AAAIABJREFUnnj0cNgkehYwcBJRg6ss1zTCyUfqVH8172BGR0dj2rRp
iIqKwvfff4+XX34Z06dPx5AhQwAARkZGKud9/vnnMDAwwL59+2pdqL2kpKRBahw8eDAmT54MuVyO
WbNmQSKRqPWpqKhQTvSpq5p3SQ8ePKjSvm/fPmRkZAAA0tLSnq5oIi1j4CSiBqfpkbqRMUc4qf5G
jx6NNWvWQE9PD7t370ZgYCBeffVV7Nq1C5s2bcLw4cMBVC939DBvb2+sX78e+vr6mD9/PgYNGoR3
3nkH69evx6RJk9CmTRu1JZPqY9OmTejSpQsSExPh5eWFefPmYePGjVi8eDH69esHS0tLpKenP9E1
J02aBAA4ffo0PD098frrr6NXr16YPn26chmlnTt3YteuXQ32OYgaCt/hJKIGp3nSEAMnNYz33nsP
AQEBOHToEG7cuAFfX1+MHDkSPXr0UC5fZG1trXbeW2+9hf79+2PBggX4/fffcfbsWQCAWCxGly5d
1NbMrA9nZ2fEx8fjnXfewXfffafyCoCzszOGDRsGS8sne6/59ddfR3p6OkJCQpCcnIzk5GT07dsX
cXFx8PDwQNeuXXHr1i1Mnz4dzz33HOzs7Brs8xDVl0gQhK0AZuq6ECJqPn7bOx1ZaTEqbYNf2I42
HUfrqCJqKaZOnYqIiAi8++67tW5zCQClpaW4cuUKzM3N0alTJxgYaHf8JSMjAxKJBJ6envUOgvfu
3UNycjI6duyosqySTCbD/7N331FRHe0fwL/bWDoC0kSKCiIWFIEYjcEesZsoGowxamKi0deYqImp
JvnZiD1qYnz1tUSN0dgNdhRbKAoKKog0kd77Alvm9wfZK8vepe3CsjKfczyHnTv37rMLyLNzZ56J
ioqCq6sra8JNUdpEE06KojTu0qHxyEuPUGgbGXAa1g6vaikiqj1ITU1Fjx49UFlZifv378PDw0Pb
IVEU9S86h5OiKI1jWzSkp0/LIlHqE4lEmDRpEo4dO4bnz59DKpWiqKgIQUFBGDVqFEQiEd58802a
bFJUG0PncFIUpXHVlYVKbXr67MW2KaopkpKScObMGWalNo/Hg1QqZY5PmDAB27Zt01Z4FEWpQBNO
iqI0jn2Eky4aotTn5uaGmJgYxMXFITY2FnFxcTAwMICrqyt8fHwwfPhwbYdIURQLmnBSFKVREnEF
ZNJqhTYuVwC+wFDFGRTVeHw+H71790bv3r21HQpFUU1A53BSFKVR1ZVFSm16BvR2OkVRVHtGE06K
ojSqSqQ8f1NI529SFEW1azThpChKo6pZEk49A1oTkKIoqj2jCSdFURpVJSpQahMa0B1PKIqi2jOa
cFIUpVGVrAmnhRYioSiKotoKmnBSFKVRVaJ8pTYhXTREURTVrtGySBRFaVRVBUvCaUhvqVMvrzNn
ziA0NBSvvvoqJk6cqO1wKKpNoiOcFEVpFFvCqW/YUQuRUFTr2L17N9auXYuIiAhth0JRbRYd4aQo
SqMqK/KU2oQ04aTUVFpaiqdPn4LH46Fv374q+8XGxkIkEsHNzQ1GRkYKx54+fYrw8HCIRCJ4eXmh
b9++4HJVj7tIJBLEx8cjNjYWGRkZ6NSpE5ydneHi4gIzMzOUl5fjyZMnKC6u2VkrMzMTkZGRAAAz
MzN069ZN6ZpZWVmIjo7G06dP4eTkBA8PDzg6OrI+f0lJCRISEsDn85m94dPT03Hx4kV4enrC09Oz
/jeNotoSQsheQlEUpSHndr9ODgVaK/wryIrRdliUjisoKCBCoZAAINHR0ax9srKyiEAgICYmJqSs
rIxpLykpIW+99RYBoPBv3LhxpKioiPVat2/fJu7u7krnACDLli0jhBBy584d1uPya9dWUVFBFi5c
yNrX39+f5OfnK8UQFBREABBLS0sikUjI5MmTmXM2bNjQ3LeSorSCjnBSFKVRlRW5Sm36RlZaiIR6
mZibm2PixIk4duwY9u/fjw0bNij12bdvH8RiMebMmcOMbkokErz++ut48OAB3nnnHcyePRvV1dXY
uHEj/v77b7z33ns4deqUwnVOnjyJqVOnQiaTwdXVFQsXLkSPHj2QlJSE6OhodO/eHQDg5OSEdevW
Yf/+/YiNjcXw4cPxxhtvAABcXFyY60mlUvj6+uLu3bvo2rUrPv/8c7i7uyMpKQk7duzAsWPHEBYW
hpiYGJiamrK+/iVLluD06dMYNGgQhgwZgj59+mjkfaWoVkPoCCdFURoilVQrjW4eCrQhUqlY26FR
L4Fz584RAMTGxoaIxYo/UzKZjLi4uBAAJCIigmnftm0bAUDGjBmj0F8kEhFra2vC4XBITMyLEfiy
sjLSuXNnAoB4eXmRwsLCBuOaMGECAUC++eYb1uM7duwgAIi9vT3Jy8tTisPb21th5FROPsLJ4XCI
oaEhCQsLazAWimqr6KIhiqI0RlSeo9QmNLQEl0tvplDqGz16NGxsbJCdnY0LFy4oHAsJCUFCQgL6
9esHb29vpv2nn34CAHz44YcK/fX19TF69GgQQvD3338z7UeOHEFaWhoAYMOGDejQQf1dsgIDAwEA
CxcuhKWlYsUGfX19fP755wCArVu3orKykvUav//+O1555RW1Y6EobaF/BSiK0hhRebZSm4GRtRYi
oV5GfD4fM2fOxMaNG7F//36MHz+eOfbf//4XADBv3jymraSkBM+fPwcAREVFITMzU+F68sepqalM
W2xsLADAwsICQ4cOVTvmsrIy5voDBw5k7SNvF4vFSEhIQO/evRWOW1hY4K233lI7ForSJppwUhSl
MaLSTKU2QxM7LURCvaxmzZqFjRs34uzZsygoKICFhQUKCgpw/PhxGBoa4p133mH6JiQkMF//+OOP
Kq+ZkZHBfB0fHw8A6Nq1q0biffr0KfO1vb09ax9bW1twuVzIZDLEx8crJZwU9TKgCSdFURpTUZal
1GZgTBNOSnM8PDzg6emJqKgo/PHHH1i4cCF+//13VFVVYfbs2TAzM2P6mpiYMF+fOHEC5ubsO151
7PiibJf8HFW3tptKKBQyX4vFYtY+EokEMpkMQM0tdop6GdGEk6IojakoSVdqMzSx1UIk1Mvsvffe
Q1RUFPbv34+FCxey3k4HakYphUIhqqqqIBAIGnWL3N3dHQCQmJgIiUQCPl+9P5MuLi7M6GV6ejp6
9uyp1Cc9/cXvjXwFPEW9bOiiIYqiNKaiNEOpzdC0sxYioV5mM2bMgEAgQEREBPbs2YNHjx6hZ8+e
GDRokEI/Ho/HtO3bt69R1/b19QUAiEQi7Nmzp1Hn8Hg8AEBOjvKiOT09PaaE0cWLF1nPDwoKAgB0
6NABzs7OjXpOitI1NOGkqHZu7dq1+Pjjj/H111+rfa3y4udKbUYmndS+LkXVZmVlhTFjxgAAFi1a
BEB5dFNuy5Yt4PP5OH78OH799VfWPmVlZczXvr6+mDx5MgDg66+/xs2bNxX6VldXIykpSaHNyckJ
AJRWzsutXr0aQM0WmI8fP1Y4lpqaytQU/f7779UeUaWotopDCNkLYLa2A6FaV15eHo4cOYLY2Fik
pqbCyckJPXr0QI8ePeDu7q5ycjvV+goKCpg/Uq6urrCxsdHo9fv374+oqCg4ODgorNZtjpO/eEBU
prhSfcK8UJiYd1HruhRV18mTJ5mV20KhEBkZGbCwsGDtu3HjRnzxxReQSqV47bXX4OvrC1NTU9y9
exehoaHw9fXF4cOHmf7Pnj3DiBEjkJiYCD6fjxEjRsDd3R3R0dH4559/4OfnhxMnTjD9r1+/jmHD
hgEAvLy8MH36dLi6ujKJK1Cz2On333+HqakpZs6cCTc3NyQmJuKPP/5Abm4ufH19cfXqVYWE8/z5
8xg7diwsLS2Rl6e8ZSxF6RRCC7+3O7/88gsxNzdXuSUbALJt2zZth0n96/Tp08z3Zc+ePRq/vqen
JwFAHBwc1LqORCxiLfoukVRpKFKKeqGqqopYWloSACQgIKDB/rdv3yb9+vUjXC6X+X0SCoWkX79+
ZMuWLUr9i4uLyTvvvEP09fWZ/nw+n7i7u5O1a9cq9d+wYYNC3xkzZij12bVrF7GxsVH4v9bCwoKs
XbuWSCQSpf61t7akKF1Hx+7bmQMHDuDjjz8GAHA4HAwYMADjxo1DSUkJHj16hGvXrkEkEoEQouVI
KV1TXpym1GZgbAseT08L0VAvOz09vSaN+g0aNAhRUVEoLy/Ho0ePYGxsjO7du6u8hW1qaoqDBw9i
3759ePToEQghcHd3V1h1XtvSpUsxb948xMbGwsDAgHXxz7x58zBv3jxkZmYiMTERXbt2RadOqqec
jBkzhv5fTL00aMLZjuTm5jLJprOzM65fv87MPZIrKyvD2bNnYWdHS9m0tF27diE4OBjZ2dm4du2a
yn49e/Zkdkvx8fFprfCarKxY+Xa8cQdHLUTS+p4/f464uDhkZmZi7NixCmV2qLbFyMioSTv28Pl8
9O3bt1F9TU1NMWDAgAb72dnZ0f9jqXaHJpztSGhoKMrLywEA3333nVKyCQDGxsYICAho7dDapXPn
zuHs2bPgcDj19nNxccHy5ctbKarmKytKUWozNlP+GXsZrV69Gr/99hsAIDIykiacFEVRddBV6u3I
w4cPma/19DRzmzM3NxfZ2crbGTaGWCxWe5GKpkgkEiQmJqoszNwUaWlpGisa3RyVlZVITExEbm5u
qz5vaWGSUhtdLERRFEUBdISzXbG1fVGAe8+ePQpbwDVFUVERli5diuDgYKSkpACo2bJt8uTJ2LBh
Q4M7Zfz+++/YuXMnIiMjUVlZCXNzcwwcOBCbN29GTk4O3n//fQDAN998g3fffVfh3F27dmHjxo0A
gD///BP9+vVTur5YLGa2hvPz88PWrVtVxnLixAls3LgRUVFREIlEEAqF6Nu3L9avX8/U46srODgY
CxYsAACsWbMGU6ZMQXR0NHbs2IFLly4hJSUFPB4Pw4YNw65du9Cli2LStW7dOuzdu5cp9kwIgZub
G3Pc3t4ewcHB9T5fbSKRCOfPn8fJkydx+fJlhQ8AxsbGmDlzJn744QdYW7fsnuYlBYlKbSbmDW8P
WFRUhFOnTgGoWYX/2muv1ds/JSUF169fBwCMHj1a6dYkIQQ3btxAWFgY7t27BwsLC3h5eWHMmDGN
rr6QlJSEsLAwxMbGIi4uDoaGhnBycoKzszN69uzJ3DaNjIxEdHQ0njx5wpx75swZPHjwgHk8fvx4
1hHP8vJyhISEICYmBjExMdDX10efPn3g4eEBX19fprYjm7y8PJw7dw4A0KNHD7z66quQyWTMz0Bm
ZiZ++OEH1t+PtkQqqUJB1gPkZdxFcd4TlBWnoig3FtVVxQAh4HL54AsMgQbuAlCtg8Plw8ZhIAb4
bYFAaKztcCgdQxPOdmTYsGHQ09NDdXU1rl27hhUrVmD16tX1/mGr68GDB3jrrbeYOnS2trYoKytD
eno6duzYgfDwcAQFBbH+gZXJZFixYgXWr1/PtFlZWaGwsBBBQUG4efMmZs6cyexlXFRUpHSNgoIC
5nh9o4jyPh4eHqzHpVIpvvzySyYWPT09ODg4IC0tDeHh4Rg5ciR+/fVXJvmtraysjLl+cXExwsPD
8cYbb6C4uFjh+leuXMFrr72GuLg4mJqaMsdycnKY8+vGCwBVVVX1Pl9dly9fVkhCDQ0NYWBggPz8
fJSVlWHnzp24e/cuwsLCwOW23E2NkvynSm2NSThNTEzw5ZdfIisrC126dEFiYmK90wxWrVqFPXv2
wMTEBJmZinu3FxcX47333sPp06eVzrO0tMTRo0cxfPhwldeurKzEjz/+iPXr10MikbD28fb2RkRE
BADg+PHjWLNmjcLx77//XuFxWFiY0u/D7du3MWvWLKV6jnIDBw7E77//jm7durEeT05Oxpw5cwAA
CxcuhJubGyZMmIDbt28zfebPn98mE06ZVIy0hItIeXwcmSnXIRVXqO4rE9ckn1SbkfrkLDpY9UTv
QZ9pOxRKx9Bb6u2Is7Mzli5dyjwODAzEq6++iqioqEadX1ZWBj8/PyQlJcHLywvx8fHIzMxESUkJ
/vjjDxgYGCAiIgKBgYGs52/ZsoVJ8Pz8/JCSkoKcnBwUFRUhKCgIDg4OCoWZW3J1pjwWHo+HTZs2
oaysDKmpqcjKysLIkSMhFouxePHiBm9L//PPPxg1ahSTwN64cQN//PEHPD09AQCZmZnYvHmzwjnL
ly9HTEwMhgwZwrTJR7liYmJU7kZSn969e2PHjh1ITU1FWVkZcnJycPPmTXh7ewMA7t69i+PHjzf5
uo0lEVegvES56LupBXvCVBuPx8PMmTMB1CRSN27cUNm3tLQUR44cAQAEBATAyMiIOZaTkwMfHx+c
Pn0a+vr6WLBgAXbs2IEVK1bA1tYW+fn5GD16NEJDQ1mvXVxcDE9PT6xdu5bZ0nD06NH45ptvsHr1
aixYsABeXl4KH9BcXV3h5+cHBwcHpm3QoEHw8/Nj/tXe2xsAfvnlF/j6+iIpKQmGhoYICAjATz/9
hB9//BETJ04Eh8PBP//8g379+uHq1asNvn+EELz55ptMsuno6Ih+/fpBIBA0eG5rEleV4VHozzi1
0xO3Tr+PtKdB9SabVNslod83qhnoCGc7s3r1alRUVDC3me/evQtvb2/MnTsXa9eurXexw/r165GV
lQWhUIjjx48zi444HA7efvttREREYNOmTdi5cye++uormJubM+dWVFQwK609PT1x5swZ5g+ikZER
xowZg+HDh2Px4sXYtWtXS718ADWjpKtWrQJQU6bk008/ZY5ZW1vj8OHDcHR0ZN4neV82u3fvhrOz
M86fP48ePXow7a+//jocHBxACGFGw+TkK1Tlo54cDoeZAtAco0ePxsSJExXaOBwOBg8ejMWLF2PW
rFkAgOjoaPj7+zf7eepTnBev1GZk6gC+nhFLb2Xvvfces9vKvn37FJLx2v744w9m4duHH36ocGzl
ypV4+vQphEIhbt++jf79+zPHFi1ahP79+yMnJwerVq1ibkfX9s033yAuLg5Azcj70aNHWfferq6u
Zr6ePXs2Zs+ejfnz5zOLhrZv38584KgrLS0Ny5cvh0wmg729Pc6ePavU9+zZswgICEBZWRnmz5+P
R48e1Tvn+tixY8jNzcX06dOxbNky5kNGW0EIQcKDA4i+9ROqKmjxcl3XwboX3LzYd3WiqPrQhLOd
4XA42LJlCwYMGIDFixcjLy8PMpkMu3fvxunTp/Hzzz/j7bffVjpPJBIxCcG4ceNYV7hPnTqVGS28
evUqpk6dyhzbvXs3M7dwwYIFrKMvQqEQU6ZMYRLOhlZvN9e2bduY2/XyMlG1WVlZwdfXF5cuXcKp
U6fqTTjNzMxw+fJluLi4KLTb29szu4M8e/ZMsy+gDlV1AQEw2/8BaNE4inIfK7WZdVSuQ6hK7969
0b9/f0RGRuKvv/7C9u3bFUYv5f773/8CqPnQ4uXlxbTHxsYyx+bPn6+QbAI134/58+fjxx9/xN9/
/43Y2Fi4u7szx6OiovDLL78wjw8fPsyabALqLbj7/PPPUVFRMzr0008/sSamEyZMwOLFi7F27Vok
JCRg8+bN+OKLL1ReMzc3F6NHj8ahQ4eaND2mNRTnP0XYhU+Rlx6hso+pZXfYOvnCrGN3mFq4QN+w
IwAueHwBBEIzledRrY/L5UMgNNF2GJSOoglnOxUQEIBRo0Zh2bJlOHDgAAghyM3NRUBAAIKDg7Fz
506F+X7x8fHMH8q+ffsqjPLI1d5yse7q89q3MceNG6fpl9Mk9+/fBwDo6+vDxcWF9bXIizE3tIr+
u+++U0o25czMzJiEXlsMDAyYr6VSaYs9T2HOI6W2DlbuLD1Ve++99xAZGYmysjIcP36cGZmVu3//
Pu7evQtAed/sgwcPMq9v/PjxrNevXXvx/v37CgnniRMnmO/T0KFDMXLkyCbF3hjV1dU4evQogJrf
lfpGmxctWoR169aBEIKDBw/Wm3C6u7vj6NGjbS7ZfBq1D/eCv4NMWqV0TGhgCVfP2ejWJwBGZg4s
Z1MU9bKhCWc71rFjR+zbtw8LFizAvHnzEBMTA6BmFInL5WLnzp1M39qLWlauXImVK1fWe+26iZp8
cQSXy23x1dINqb3oyNDQsN6+paWlKCoqQocOHViPq2oHWm6EVhWZTIbLly/jzp07yMzMRFZWFnJy
clrluQuy7iu1dbBu2jSBGTNmYNmyZRCLxdi3b59SwikfwTQ0NMSMGTMUjtX++YyPj2fdgSYx8cUq
+ro/n7VXmY8dO7ZJcTdWUlISkxT37t273jmWnTp1grW1NbKzs5GQkACZTKZywdfw4cMVFqVpm1Ra
jfCLy5D88E+lY3yBIfq8thzd+88Fj19/NQuKol4uNOGkMGDAANy7dw+ffPIJs2hn165d+Oijj5hb
fmlpytsW1ic/P1/hcXJyMgDAwsJC5VZyraU5r6W+xLIt2L59OzZs2MDcNjc1NYW9vb3CCGdLkcmk
rCOc5k1MODt27Ihx48bh1KlTuH79Op49e8ZM3RCJRDh06BAAYNq0aUoLcWonnAsXLmzwuepLOLt2
bXhlfXPUjrEx5Zns7e2RnZ2NyspKPH/+nHUaS1tTXVmEkBOzkJsWpnSss+tYeI9cC0MTW5YzKYp6
2dGEkwIACAQC/PLLLwgLC0NkZCQIITh58iSTcDo7OzN99+zZg7lz5zbp+vKRHflteW1ydnZGdHQ0
HBwc2kzheXWsWrUK3377LQDA398fy5cvZ7bALC8vh7Fxy9bLK8p5BKlEpNDG1zNu1Ar1ut577z2c
OnUKhBAcOHCAeV3Hjh1jSkLVvZ0OvCgXxePxMHjw4Aafx9FRccvN2uWmLCwsmhx3Y9QedW3MiGTt
Pvn5+W0+4SwvSce1o9NRUqBYHovH14f3yLXo5jFDxZkURbUHNOGkFEybNg2RkZEAXoxKAjX7ecvd
unWryQmns7Mz8vPzUVFRgdLSUpiYqD/xXFXZpIZ2C+rZsyeio6Px/PlzpKamKiUfuuTx48dMUjZv
3rwWX+HPJjdDeUGIpZ0nOJymV10bN24cOnbsiLy8POzfv595bfLb6b169cKgQYOUzuvRoweePXsG
qVSKI0eOKGxy0Bhubm7M6HBycjKGDRvW5NgbUnvkNCsrq8H+tWuMttSoq6aU5Ccg+Og0VJSmK7Qb
mnbGkLcOwNy6l5YiaxofHx+kp6fj9OnTzIc2iqI0g9bhpBTULjRde1SzW7duTJJ44cIFlJWVNem6
tXfbqV2cui5VhbDlas+LVBXDsmXL6r1G7ZXBf/31V719WwMhpMnvp1ztmpUfffSRpkJqkpzUO0pt
He28WHo2TCAQICAgAEDNnMtbt24hNjYWt27dAgB88MEHrOfV/UDUVLUXED1+rLziXhO6d3+xaj8j
I6PB/vKdqKysrNr0lI7CnEe4/MckpWTT0s4LfrMu6kyyCQDZ2dnIzMxkXUhIUZR6aMLZjhQWFjbY
58KFC8zXtev58fl8/PDDDwBqRl7kI0+NVbs8z88//8w6Orl161YsWrSIeczWR756HACePlXe2WbV
qlUKxePZLFiwgJlD9/333zd5Tqem1B6Fa0yBbzbyrUWBmjqbddUeJas7r1YTCJEh57lywmntOLDZ
15w9ezbz9b59+7B7924ANeWf6i4kkhs48MXz7d27t8nPWXvUdM+ePY36Xamt9gchVZsFdOrUCVZW
VgBq6t/WN8p59epV5kNInz59mhRLa8rLuIurf7ypVF/T3sUPI94+/m+Jo5Z369YtuLq6so5+N8Xp
06cRGhqKvn37aigyiqLkaMLZjixZsgQ+Pj749ddflbaNlEql2Lx5M/bs2QOgZhRw9OjRCn0WL17M
jA5u2bIFc+fORUFBgUKfyspKnD9/HmfPnlVonzVrFjPKef78ebzzzjvMH90jR45gypQpWLJkSb3b
DgKKf3w3bNiAP//8E+Xl5QgPD8ekSZPw7bffYvLkyfVew8TEBD///DOAmlXogwYNYi0EnpiYiC1b
tjCFxjWtV68XIz+165Q2Re2tO3/66SfcvHkTQM2uO5s3b1YYzb13757GSzTlZ91HlUjxZ4DD5cOq
U/NvR/bv358phH/s2DEcOHAAADBlyhSV8yunTp3K7MEeFBTE7EbUWP7+/sz+6EVFRfjss8+aVEaq
c+fOzNf17RQlr+5QXV3N/AzWRQhhNkkA0OQPd60lKyUEV//0V9p6smufGXh98v/AF7T8gjW5oqIi
JCQkqP276unpiQEDBrT4vGeKapcIIXsJ1S7MmjWLACAACIfDIU5OTsTPz4/4+fkRe3t75pilpSVJ
Tk5mvUZSUhIZOHAg05fL5ZJu3bqRYcOGkZ49exJ9fX0CgCxatEjp3KCgIGJoaMicW/ff/PnzyYUL
F5jHP//8M2sMEydOVHmN6dOnk/Lycubx1KlTVb4fmzdvZuIFQMzMzMiAAQPIwIEDiZ2dHdOel5en
cN7p06eZY3v27FF5fRcXFwKA9OzZk/V4cXGxwvPw+XwydOhQEhAQ0Ojnq6ysJL1791Z4D8zNzZmv
x44dS1asWME87t27Nzl8+LDCNTw9PQkA4uDgoPK1qPLgxjpyKNBa4d/lP95s8nXqWr9+vdL39tq1
a/WeExMTQwQCAQFAeDweWb58OSkoKFDok5WVRfbs2aP0HhBCSEREBOFyuczzDR8+nISFhZHKykpC
CCE5OTnkzz//JFOmTFE698yZM8x5jo6OJCQkhDVGiURCevXqxfwOrly5krk+IYTk5eWRyZMnM9fy
9/dnvU54eDjTZ+HChfW+Ly0h5fFJ8sd6e6Xv/b2r32n0eeLj48mcOXNInz59SOfOnYmPjw+ZMmUK
yc7OZvp89913ZPDgwczvsL+/P/H391d6XxYsWED8/f1JXFwcefbsGfnqq69Iv379yMqVK1n7qDq3
qqqKbN++nUxVT8FRAAAgAElEQVScOJF06dKFTJw4kTx69Ejla8jPzyefffYZGTRoEHF1dSUBAQEk
LCyMXLlyhfj7+5P/+7//08ybRVFtHE0425EtW7YQJycnlcmaUCgkS5YsITk5OfVeRyKRkNWrV5NO
nTopXYPP55MBAwaQI0eOsJ57//590rNnT4VznJ2dyaeffkokEgm5ePFigwlnXl4eeeuttxSu0a1b
N7JixQoikUhIdXV1oxJOQgh59OgRGTp0KBEKhUqvxdbWlkybNo2Ul5crnKOphJMQQu7du0c8PDwU
nrdfv35Ner7k5GQyYsQIhWvY2dmRHTt2EEIIqaioIG5ubsyxcePGKZyvTsJ59r+vKSUdj8N2NPk6
dWVkZBAej8fE7OrqSmQyWYPnBQUFEVtbW4X3olOnTsTT05NYWVkxbUuWLGE9/6+//iJmZmYK5wsE
AmJkZMQ81tfXVzpPKpUSHx8fhfO6du1K3N3dSVJSkkLf2NhY0qdPH4Xr9+3bl3Tt2lXh/NGjRysk
VrVpM+F8HLZD6Xt+KNCaRN/6SaPP8+TJE2JqakoAkC5dupDRo0cTBwcHAoDEx8cz/caPH09MTEyY
DxqWlpbE0tKS9O/fX+F68nPPnTvH/D7o6ekp/CzI+9y6dYv13KtXr5Lx48cz37faH1azsrKUXkN0
dDTzf66NjQ154403iKOjI9HT0yPDhw8nAMioUaM0+r5RVFtFE852KC0tjZw5c4bs3LmTrF69muzd
u5fcuHFDaSSvMXJzc8nVq1dJUFAQiYqKIqWlpY06Lycnh1y8eFHhDwchpFEJp9yzZ8/I+fPnSUJC
QpPjrkssFpOHDx+S06dPkxs3bqgc4W0JEomExMXFkbNnz5Lw8HBSUlLSrOskJCSQoKAg8vTpU6Vj
MpmM3Lp1izx48IBIJBJ1QyaEEJKf+YA18SgpSNbI9ceMGcP8LAQGBjb6vLy8PPLOO+8oJY7yBGPw
4MHk+PHjKs9PTEwkI0aMYP0Q0rlzZzJr1izW81JTU4mfn5/SOWzfj8rKSvLpp58SCwsLpf4ODg7k
119/rfc1aiPhlEiqyD9Bn7B+z2PD64+3ORYuXEiAmjsfteXn55OqqiqFtrNnzxIAxMPDQ+X15Emj
g4MDGTRoELlw4QKprq5WGGFuKOHs1q0bsbW1Jfv27SNFRUXk4cOHTEK5Zs0ahXNkMhnzYe6dd94h
1dXVCvFaWloSAGTkyJFNfm8oShfRskjtkL29faMKTzdGx44dG5x3ycbKygpvvPGGWs/t6OiosZJG
fD4fvXr1UphX2Vp4PB7c3Nzg5uam1nW6deumUGWgNg6Hw8xx1JSEB78rtVnYeMDE3Fkj1w8KCmrW
eZaWljh48CCAmv3jY2JiwOfzYWdnh+7duzdYDL9r1664cuUKxGIxHj58iOTkZFhZWcHJyanenzcH
BwecP38eKSkpiI2NhVAoRI8ePRQWuskJhUJs2rQJmzZtQlpaGqKjo2FmZobevXsrFbVn4+Pjo7Is
WEsoL36OW6fnIT8rSqGdw+FhwJjN6Np7usafU774qu7PtLp1Ug0MDHDu3DmYm5s3+dyCggJcv36d
mTttZmaGoUOHYv/+/QqF/YGa+cdRUVEwNzfHb7/9prCz1Pjx47F69WrMnz9frddCNU1KSgq2bNmC
Tz/9tM3XtX0Z0YSToqgmE5XlIPnRUaX2rn0CtBCNak5OTs3+wyIQCODp6amw8KoxnJ2dFUqKNaRz
584Ki47amqSHR3HvylcQV5cqtPMEhhg88b+w76b5feeBmoVgR48eZRZaLVy4UCM7Z23fvr1ZySZQ
Uw+29kI9oKYGLFCzYLI2+QK+CRMmwMjISOla8q1KW3sL3PYsMzMTW7duxdtvv00TTi2gq9Qpimqy
6FvrIJUo/oHlCwzRpZe/liKiNK0o9zEuH56I0KD/KCWbhiad8MaMsy2WbALApEmTMHv2bFRUVGD5
8uVwcHDAqlWrUFpa2vDJ9TA0NGz2uWwbCvB4PNa+8rJtNLGh5H7//XecPn1a22FoDR3hfMnIpGJU
iQohk0nAF+hrO5wmq64qYb4WV5crldyhtIvHN0Da0yAkRh9SOubqORsCofo7SFHaQwhBTuptxN39
DemJl1j72Dr5YtCEX1u8xqaenh727t2LKVOmYPny5YiLi8O3336L/fv34+LFi21+9yX5iCefT//M
UjUCAwPx6quvYtKkSdoORSvob8JLQiKuxLWj/shNj0DNWgLdVFgixfxpNUmLLGs9jm/brOWIqMbg
8vRQXVWCyOCVEAhN/k08ObVuF3JQVZGPkoIEEEJgaGIH4w505EcbOBwuzK17o6O9N6ori1BamISS
gkTkpN5BRnIwKstzWM/jCQzR9/Uv4eY1r1VvA48fPx7jxo3DX3/9hcWLFyMhIQGbNm3C9u3bWy2G
5ujatStCQkLw/PlzbYeis/bu3Ytdu3bh9u3bzBSEpUuXIjg4GKGhoRAKhQDAjHwHBgaioqIC33//
Pc6cOYNnz57B1tYWS5cuVdpU5LvvvsPhw4dhYmKCL774Am+//TZzfMOGDQgODkZERAQcHR3x9ttv
Y/ny5czx9evX49KlS9iwYQM++eQTlJSUMFtCq/Lmm28iISEBGRkZCAsLw7Bhw1TW4n1Z0YTzJSCp
Lse5Pa8rbS2ni8xNeXjdq/UKRlOaIZNWI/HBQW2HQbUQe5fR8BqxCsZmmlmk11QcDgf+/v4wNTWF
n58fjh49qpBwyhPgkpISVZdodV5eXti7dy9Onz6N7du3M8kRAMTFxWHdunVajE439OvXD6GhoYiI
iMCAAQMgkUjwv//9D0VFRbh16xZGjBgBQgh27dqFwMBAADVTMe7cuYOtW7di+PDhePbsmdIc2iVL
lsDOzg6BgYE4fPgw5s+fjzfffJP5HqWnpyMgIADbtm3D4cOH8cUXX8Df35+Zm52ZmYm7d+9i7ty5
CAgIwCuvvNLga/n2229x//599OrVCytWrFB78ZsuonM4XwK3znz4UiSbFEW1LbZOvhgZcApD3jrQ
6snmkydPlNry8mq20DQxUZy6IV90lZKSgsTExJYPrhHmzp0LOzs75ObmYvz48QgJCUFYWBhWr16N
QYMGMduc1l69Tiny9PREp06dmIoVISEhMDU1xYABA3DpUs2Uj/DwcOTm5mLChAm4du0arly5glmz
ZuGDDz5A165dMWzYMKWEsGfPnjh58iSmTJmCTz/9FMXFxbhz58UWvZs3b8a7776Lbt26Yfny5SCE
4Pz58wrXqKiowK+//oply5bB19e3wdfSv39/GBkZwdbWFoMHD0bPnj3VfXt0Dh3h1HFJMUeQkXRF
22FQFPWy4HDRqctw9BvyNTpYae+P4vTp0yGVSjFx4kS4urri4cOH2L9/PwDgP//5j0Jfd3d3ODs7
IyUlBRMnTsT7778PR0dHTJ06VRuhA6gpv3Tw4EH4+/vjypUruHLlxf/TixYtgoeHB8LCwhRGPill
Y8aMwfnz5/HDDz/g1KlTmDx5Mjp06IAzZ84gMDAQx44dg5+fH4yNjREdHQ0ADc6R/Oijj5hRcUtL
SwA1283KicVinD17Fvfu3WO2HK5bhcDGxqZRI5vUC3SEU4fJpGI8uElvy1AUpUFEhoykK4iP3AuZ
VKy1MEaNGgWJRIJ169Zhzpw52LhxIwgh2LJlC5YsWaLQV09PD4cPH4azszMeP36MpUuXYtWqVVqK
/IXhw4cjMjISa9asgb+/P7744gtcvnwZW7ZsYVbbd+jQQctRtm3jxo3D3bt3kZ2djdOnT2Py5MkY
PXo0Hjx4gJycHPz111/w96+pjiGTyQCoV4kgLy8Pnp6eWLduHezs7PD+++9r5HVQdIRTp6XEnoCo
LFPFUQ54fD3w+AYAaJ03Sj1isRhEWo76FqQZmnaGs/tbkEmrQYgMAKlVnJygojQDZcXPAUIgNLSE
maUL6M9m66uqKIRUWom8jAhUlueq7Jfw4ADKip/Bd/Je8PWU60i2tPXr12P9+vUoLy/Ho0ePYGZm
hq5du6q8BT1w4EDEx8cjPj4eIpFIaSOF1NTUBp9TVZ/6zl2+fLnCgpK6nJyc8OWXXyq1y8smdenS
pcG42rORI0eCz+dj7dq1KC8vx+uvvw4OhwMzMzOsWbMGWVlZmDBhAgCgb9++AIATJ0406jY3m/37
9yMxMREJCQka2yBFjsPhoKqqSqPX1CU04dRhyQ+VC28DgKlld4x57wp4fHqrhtKsuLu/ITL4O9Zj
FSVpMO7gCJe+77ZyVFRzyGQShByficzkayr7ZKWE4MbJORgy9SB4PL1WjO4FIyOjRt+6FAgEWtkt
rKlycnJw+PBh8Hg8TJ+u+V2aXiYmJibw9fXF9u3bMXPmTKbM1MiRI7F9+3aMGzeOmdM7fPhwDBky
BAcOHMCoUaMwYsQIPH78GKWlpRgyZEijns/S0hKVlZWIjo5GWVkZfv31VwA1u5apa/Dgwfj777+R
k5MDa2trta+na+gtdR0lKstBdupt1mO9B35Kk02qRbh4zKx3tCsyeCWqRIWtGBHVXFwuH4Mn7YGR
qUO9/bKehSD8wmetFNXL5ZNPPsEnn3yCixcv4smTJ4iNjcXhw4cxcOBAlJSUICAgAN27d9d2mG3e
2LFjIZVKMXnyZKZt9OjRkEqlzO10uePHj8PX1xcTJ06EgYEBhgwZojB/tiFvv/02Ro8ejfHjx8PT
0xMWFhZYsWIFfv75Z2zatEmt17FgwQKYm5vD3t4ec+fOVetauohDCNkLYLa2A6GaJvnhMfwTtEip
XSA0xZRFj8Hl0ZWPVMv45+9FSH50TOVx91cWwnMo+ygo1fakJ1xCyImGR6VfeWM9XPrNaoWIXh4j
RoxAcHCwUjuXy8XHH3+M1atXw9TUVAuRvfzKysqQn58PR0fHZtWNzcnJQYcOHaCnVzOyn5aWBjs7
O5U7SzVFamoqrK2toa+ve5uzqIPeUtdRWc9usLbbd3uDJptUi+rsOqbehPPJ3V3o4T0fBsbt75aR
LrJ3eQOWdv2Rn1m3cDUHtefs3r36NTrae2t15bquuXr1KrKzsxEbG4u4uDhUVVXBxcUFvXv3plte
tjBjY2MYGxs3+/y6t7zlpbdU2b9/Px48eMB6zNbWFp9//jnz2NFRO/VstY0mnDoqNz2ctd3WuXkT
pSmqsWydfMHhcP9dGKRMJhPjyb1d6Dfkm1aOjGoud58FuHVmXp1WAi5XAJmsZqW6TFqN0PNLMPrd
C+Bw6GysxrKxsYGNjQ2GDh2q7VCoFmRvb69yQZC5uXkrR9M20YRTB1VXlaCsKIX1mHXnV1s3GKrd
EQhNYG7dGwXZ0Sr7xEftRa9Xl0AgbP4IA9V6OruOgdCwI6oq8hTaBfpmCm0FWQ+QcP8AXD1nt3KE
1MtGVJ6DnNQ7KMp9jKxnt/79m0ZgZOoAgb7uTTPgAOhmpuKgDLj655/Nui6Pr49eAxbDqrPu1/yk
CacOKsyOYW3X0+9A96emWkVHe596E05JdRmSH/+F7jQx0QlcngBOPSYjPnK3QntVRR6sHQYh5/mL
XViib/0E555T6YcJqlnyMu4h5vaGf6sjKJdZqxIVtH5QbVx5cRrGzb2u7TDURu+L6KDivHjWdnOb
Pq0cCdVeWdj2a7BPfOT/WiESSlMce0xkbTcycwBP8KKQdpUoH7HhO1orLOolQQjBgxtrcOngWGQm
B6O+mr6UIgub3toOQSPoCKcOKi1k3yvYzJKW16Bah0UjPtyU5D9BbnoErOx9WiEiSl1W9j4QGlii
SpSv0J6RdBXuPgvw8M5Gpi3u3m9w8/4QQgPdnpvm5uaG58+f4+rVqxg4cCDTfuDAAcyfPx/Dhw/H
uXPntBjhyyP65lo8Ct3KPOZwuLB2fA1W9gNgaGKHKlEheAJ9mFq4gkvnCDN4AgNY2vXXdhgaQRNO
HVRSwJ5wmlq4tHIkVHtlauECDpcPIpPU2y/54VGacOoIDocLW+cheBZ7QqG9qiIPVvavKCSjkupy
xEXsRF9f5R10dIlIJIJIJGK2RJSTSCQQiURtbleYI0eO4LPPPoOvry+OHDmi7XAaLS/jrkKyaddl
OHzeCISxWftcrd1e0Y8ROqi8+Dlru7E53SKNah1cngCm5t0a7JcSexJSSWUrRERpgp0z+24s2am3
0HOAYt3f+Mg9qK4qaY2wqH9VVFQgMzMT+fn5DXduQx7+s4X52q7LcAydeogmm+0QTTh1UEVZBmu7
kWn9dcIoSpNMLRseUZdUlyIj6WorRENpgrXjINb2jORguHrOhtDAgmkTV5fiadTe1gqtXbh16xZc
XV0xaBD792HChAkIDQ3Ftm3bWjmy5hOV5yAz6UXxe59Ra2lZrXaKftd1THVVCSTV5azHjEztWzka
qj0zaeSI+rO40y0cCaUpxmaOMDC2VWovynkEqaQSbt4fKbQ/uftfOoKtQUVFRUhISEB5Ofv/8VZW
VhgwYAB69OjRypE1X+7zUBAiBVBT3cK4g7N2A6K0hiacOkZUls3aLhCagl9rJSlFtbTG/uFIT7gE
ibiiZYOhNKZjJ2/W9pzn/6B7/7ng670oh1RZkYukmJadS/jw4UMsWLAAQ4YMgaOjI/r374+33noL
f7LUNQwPD8cHH3yAAQMGoGvXrpgwYQLWrl2r8bmYxcXF+PzzzzF48GA4Oztj0qRJCAoKUtlfIpHg
559/xtSpU9GzZ09069YNw4cPx9y5c1FWVgYAWLlyJQIDAwEAz549w7Rp0zBt2jQsWvRiKsO1a9cw
bdo0rFq1ivV5qqqqEBgYiAkTJqBr16545ZVX8P777yM0NJS1f93rRUZG4rPPPkOfPn3Qv39/BAYG
QiqVNus9kiuptci1o52XWteidBtNOHVMVQX73B0DI7qNINW6TDo0boRTKhEhM/l6ywZDaYylnSdr
e25aOPSEpnCts596bMQvkMnUS0pUWbNmDfr374+dO3ciOjoaXbp0QXl5OU6fPo2QkBCFvqtXr8Zr
r72Gffv2oaqqCq6urggPD8dXX30Fb29vPHnyRCMxxcXFwdvbGxs2bIBEIoGbmxuCg4Mxfvx4/PLL
L0r9nz59Ch8fH3zyySc4efIkAKBTp06IiorC3r17UVFR82EsMjKS2RqxrKwMwcHBCA4Oxj///MNc
Kzk5GceOHVN67bWfZ8WKFQgLC4OLiwvEYjEOHDiAwYMH48cff1Q6p/b1rly5gsGDB2Pz5s2Ij49H
VFQUVqxYgW++UW/HsKqKF3U1DYxt1LoWpdtowqlj6pYskdOnCSfVyozMHBrdN+2p6tEfqm2xsPFg
bc9NjwAA9PCeDy5XwLSXFT3D8ydnNR7H5cuX8fXXX0MsFmPx4sXIzc1FSEgInjx5gtLSUnz77bdM
3ytXruCbb76BmZkZbty4gfv37+PixYtIS0vDvHnz8PDhQ8yZMweEqF/7cc6cOUhISMCRI0cQGhqK
ixcvIioqCiYmJvjyyy9RVFTE9CWEYM6cObh//z4cHBwQHh6Ox48f4+bNmygsLMSzZ89gYVEzL/bs
2bM4fPgwAKBXr17Iy8tDXl4e7t2716i45s6di5iYGMyePRtpaWm4dOkSoqKicPv2bVhaWmLlypW4
cOEC67mxsbGYMGECpk6dioiICBQXF+Prr78GAGzdulVpFX9TyKQvRpd5fINmX4fSfTTh1DGVdbae
k9M3tGzlSKj2ztCkE2o2dGtYeuLlFhsFozTLXEWR6cLsaEil1TAwtkGX3tMUjtUueaMpn3zyCQDA
19cXW7duBZ//ooqfoaEh7OzsmMefffYZAODzzz9XWHAjEAiwbds22NjY4J9//sGxY8fUiunkyZMI
DQ3F66+/jmnTXrwHLi4uCAgIQElJCZM0AsCxY8dw+/ZtAMC+ffvg5aV4S9nR0VHhdTXXiRMncOvW
LVhaWuKXX36Bnp4ec+yVV17BV199BeDF+1RXeno63nnnHRw4cADe3t7Q19fHBx98AKCmdNTz5+yV
USiqKWjCqWPElexlSPT0dbsAM6V7uDwB9I2sGtW3urIIef+OkFFtm9DAgvXWp0wmRnFuLADA/ZWF
qP1hoyj3MdITLmkshqKiIsTG1jyXPPFUpbi4GDExNdv9+vv7Kx0XCoWYOLFmF6WbN2+qFdf169cB
AH379kV2drbCP1vbmsVW8fEvdoK7c6dmS9A+ffpg+PDhaj13feSva9y4cTAwUB5FlL8vsbGxrCWV
+vbti99++02hzdnZGUKhEABQWdn8hWFc3ovkVyarbvZ1KN1HE04do6runZ5+h1aOhKLYS3FxuOwj
NhlJl1s6HEpDOnR0Z20vyI4GAJhadIOj2wSFYzF3Nmjs+WvPt2xoRbY8weNwOLC3Z6/U0blzZ4W+
zSU/f/v27bC1tVX498MPPwCAwmig/HW09KpyeVwODuzTXGxtbZmRVLb3wMrKCjweT6mdra2pat9G
l4hFal9PlWvXrsHHxwdisbjFnoNSD91pSMeIq2nCSbUdbCV0TDo4o6QgQak9PfEK+g35VqmdanvM
rNyRmXJdqb0w5yHzda+BS5D65AzzuCDrAdKeXkBnVz+1n7+6+sVImKFh/dU35CWE+Hw+BAIBax99
fX0AYBboqBvXuHHj4O3Nvprf1dVVqX9Dr0Fd8vdA/jrr4nK5EAgEkEgkar8HTcXXe/HapS1YraKo
qAh3797VyDxdqmXQhFPHiKvKWNsFekatHAlFAQbGyovVDIxtWRPO4rw4VJRm/Dv3k2rLzCxdWduL
ch4zX5tb90Jn17EKC8Ie3FiDTt1GgctVb2Ss9ohgQkICnJ2dVfaVJ3hisRi5ubmwtlb+mUxPTwdQ
M9dSHe7u7ggODoajoyO+//77Bvv36NEDwcHBSEhQ/n3QJFdXV4SEhCAjg31TkMLCQohENaOL6r4H
TVW7XF9LjnBSbR+9pa5jVNUzrF0bj6JaC1t1BEE9P4u0PJJuMLFgT0qK8uIUHnsM/hy153IW5z9B
wv0Daj+/lZUVnJycAAC///57vX07deoEc/OaOey1SwjVduvWLQA1q7/VIR/V/Pvvvxs1r9HHxwcA
EBYWhqdPnzbYn8OpeS9LSpq2ZWjv3jULvRp6/SYmJipvu7cUHk/IfC2Vql8Ptbq6GgcPHsSKFSvw
/fff49y5c0p9goODsXLlSty4cUOhvbCwEBcuXMAPP/yA3377TSlBv3TpEv7++29kZWVhy5YtuHbt
mtrxUi/QhFPHqLolIRCatHIkFAUYGCkvLiEgKjchyEym/4HrAlMVCae4qgQVpZnM4w5W7kor1h/c
XKNyg4qmWLt2LQDg4MGDOHr0qNJxefkhDofDrMJet26d0i3j48ePIzIyElZWVpg3b55aMc2cORMe
Hh5ITU3FsmXLWIui176lO3PmTPTs2RMSiQQffPABCgsLFfpWVlYqJK7yuaYpKSlITExEY82dOxe2
tra4f/8+U+tTrry8HKtXrwYArFixAlxu6/7Z59Qa7SYyiVrXKioqgpeXF+bOnYvMzEyUlpYyybTc
Dz/8gA8//BDR0dEYMWKEwgYBn3zyCdatWweZTIZDhw7B29tboeTT3r17ERgYCD8/P1y9elXljk9U
89Bb6jpGImG/JcGn9c0oLWBbpV5VkQ8r+1dY5wBmPbsJQmR0L+U2Tt/QEgKhKcQsixSL85/A0ORF
SaK+r3+F50/OMndfxFUl+CfoPxjmf0St73NAQABOnDiBv/76C9OnT8f+/fvh4+OD5ORkhISEwN3d
HefPnwcALF68GEePHkVoaCgGDRqEGTNmoGPHjggLC8OePXvA5/OxZcsWmJmZNTseoGae6J49e+Dn
54cdO3YgNDQUkyZNgp2dHR48eIDQ0FB0794dhw4dYvrv2rULY8eOxY0bN+Dh4YEJEybAwsICN2/e
RFhYGEJCQjBgwAAANbfsnZ2dkZKSgokTJ+L999+Ho6Mjpk6dWm9cJiYm+PnnnzFjxgz4+/vjww8/
hI+PD7Kzs3Ho0CE8fPgQnp6eWLp0qVqvvzlql0PjcNSbarFq1So8fPgQkZGR8PRk36AgISEB8fHx
4HK58PPzw7FjxzB9+nQANaWp5An3vHnz4ODggDt37mDw4MHM+eHh4UwRfEqzaMKpY6Qq5sDwBDTh
pFofW/3XKlE+OnUdwZpwVlcWojDnESxs+rRCdJQ6TDo4M6vSayvOi4ed81DmsaGJLTxeX4HI4O+Y
tqyUEDy8swl9XlumVgxHjx7Fpk2bsGbNGgQFBSEoKAhcLpfZtlFOT08Pt27dwtdff42dO3fiiy++
AFAz+ikv+VO7vzq8vb0RExODBQsW4MKFC0xhdj6fDzc3N6VE6LXXXkNUVBRmz56NO3fu4NdffwUA
mJqawsvLC5aWL36H9PT0cPjwYcyYMQOPHz/G0qVL0bdv3wYTTqCm9JGzszM++OAD7Ny5k3keExMT
fP755/jxxx+ZMketqbryRSF8vpprDUJCQtC9e3eVySYA/O9//2OSSmdnZ8TFvZgGwuVyUVBQgLt3
7zLzenNychTOf+ONN2iy2UJowqljpBL2OTA8PvvqRIpqSUKDjkptVaJCWHV+VeU52c9u0oRTBxh3
cGJNONkWhLl5zcPz+CDkpr3Yszvm9gaYWrrCqcekZsfA4XCwdOlSLF26FMnJycjPz4e7uzuMjJQT
Fz09Paxfvx4//fQTEhMTUVRUpLKvXGpqKmv73LlzMXfuXJXn2dnZ4dSpU5BIJIiLi4NUKoW7u7tC
wfXaunbtihs3bqC8vByPHj2CjY0NM0e1roEDByI+Ph7x8fEQiURwc3NrdFw+Pj548OABSkpKEBsb
yzyPfG5oU1+nJm4plxYmMV+ru2CwqKiowRJTqioVADVbpW7fvh2jRo1SmbSqeq8o9dGEU8eoKpxL
E05KG4SGFkpt1ZVFMLfxAIfLZ52zlfXsJtxf+bg1wqPUoGrr0pJ85cUvHA4Xgyfuwvl9I1BZkftv
K8Gdc+rgo2IAACAASURBVB8DhMDJfbLa8XTp0gVdunRpsB+Hw2m1ldh8Pp9ZsNMYRkZGjRppFQgE
ai1wMjU1ZW7Ta5NMJkVmcjDzWNW2qY3l7u6Oq1evQiQSsRa4r09CQgK+/vprnDp1CpMmTYJYLMan
n36qVjxU09CJVDpGKmUvasvjqf5UR1EtRU9oylronciqYWHNPoqZmxYKmYqfY6rtMDJ1ZG1nG+EE
AANjG7w28TeFnwcik+D22Y/w4MYayNRcMELpnmexJ1BZXvMBxMDYBh3tfdS63tKlS1FRUYGPP/4Y
ycnJKCoqUlo0VB8Oh4OSkhLk5eVh/fr1AIDsbPUXuFGNQxNOHSOTso9w1t4+jKJak5BlW9UqURE6
2rMXxpaIK5Cfdb+lw6LUZGTKvmtPZXkOxFWlrMdsHF/DwHHbUbtUElCz13rQ/4YgNe4MTTzbidz0
CERcXsE87ubxrtr1WYcMGYIDBw7g1KlTcHV1hY2NDVPNoCEuLi74z3/+g3nz5sHR0RElJSWYN28e
li9fjqtXr6oVF9U4HELIXgCztR0I1TjHt7mjSlSg1P7WwoeN3teaojTp3O7XlEa93nj3PMqLn+P2
mQ9Zz/F4/Uv0HrikNcKjmqkw5xHO72Pf/9tv1iVY2PZVeW5K7EmE/v0fyGTKI9lCw46w6zIUHax6
gcik4PIEMOnQhW5eoaM4XB46WPWEnr4ZZFIx8rPuI/nhn0iMPgxCalaoG5k6YNzcELUXDckRQpCa
mgo7OzuV82ZVKS4uhp6eHnNLPiMjA5060c0oWgOdw6ljVI0OcOktdUpL2LZVra4sRsdOXirPyXl+
B6AJZ5tWu/RRXSUFifUmnM7ub8LQ2A63z86HqCxT4VhVRR5SHv0F4C9NhUq1AVye3r9TZUiddiFs
nAYj5fFxWDkMVLmLVVNwOByVi64aUrc0Fk02Ww9NOHUMITLWdnXrm1FUc7ElnOKqEhiZdoa+kRUz
h6u2vPQIyGQScFnmf1Jtg9DAAlyeEDKW3WFqrzxWxdrhVYydcw0PbqxGYvQhlf93US8HVdO9ZNIq
JMX8gaSYPwAAnV3HomMnLwgNLSHQMwGPrw8eTw8cLh9cLh8yIkV50TOAw4WJeZeXZtU4j6ePDtY9
23UNYvq/vY5RnXC23x9iSrv0DFgSzspiAIClXX+kJ1xUOi4RV6Aw+yEs7fq1eHxU8xka26Ks+JlS
e2lhcqPOFxqY45XRG+Dm/RHiI3cj5dFxiKvZ539S7UPa0yCkPQ3Sdhha4eg2EYMn/VfbYWgNTTh1
japRAppwUlqip2eq1Fb976ISS9t+rAknULNanSacbZuBsY2KhLPhEc7azCxd4TMqEF4jViMv/S7y
s6KQkXgFxXlPIJOJIRCawsi0M/CSjGa1FzKZDGJRIYzNndDZdRwMjKzA5fIgk0kgk1ZDIqmEpLoM
lRX5KMyOxvP4v7UdslblpkdoOwStogmnjiEy5b17AcX9aimqNQmEJkpt8lEsS7v+Ks/LSQtDD5/5
LRYXpT4DY1vW9qYmnHJcLh/WDq/C2uFVuPssUCc0SgeV5CcgK/UWyopSUFmRC0l1OaRiEaQyMYhM
AiKTorIiD5XleQCn5gOPnlD5Doou4vH10KOd/8zThJOiKLUIhMojnPKyOfWNYOZltO9P+7pA38ia
tb26sgjVlUWs83cpShVTSxeYWrZOUX6q7aH3YXUMqbMCkKK0rb4RTj39DjDu4Mx6XmV5LsqKUlow
MkpdBsY2Ko+VNHOUk6Ko9okmnC8JDujcJ0o7BHrKCaekuoz52tJW9Shne5/T1NbVV9u3rJELhyiK
ogCacL406MgnpS0CPWOlNnGthLO+eo15GXdbJCZKMwxU3FIHGr9SnaIoCqAJp85RWf6I0IST0g4+
S8IpqS5nvraw8VB5bl7GvRaJidIMfUPVI5w04aQoqilowqljVCWctKgypS1sWxJKxBXM1+a2qhPO
opzHkIhFLRIXpT59o44qjzV3pTpFUe0TTTh1jcoRTppwUtrBF7AlnC9GOPWEpjA2Y9+GjhApCrKj
Wyw2Sj1CQ5pwUhSlGTTh1DGqtvmiI5yUtrDfUq9QeGxu01vl+fn0tnqbxePpsS4KA2pKI1WJClo5
IoqidBVNOHUMl8NeOpUQ9oLwFNXS2G+plys8Nrfpo/L8/MwojcdEaU59t9VLChJbMRKKonQZTTh1
DIfLnnDKZJJWjoSiavAEBkptdedlmlvXM8JJE842TWhgqfJYKU04KYpqJJpw6hhVW1iq2vKSoloa
l8tn+SBEIJVUMo/MrXupPL+85DkqK/JaKDpKXfXN4ywpSGjFSCiK0mU04dQxXDrCSbVBfIGhUlvt
UU5Dk07Q0zdXeX5+5v0WiYtSn76h6hFOmnBSFNVYNOHUMVyugLVdJhW3ciQU9QKf5ba6VKJ4W72D
dU+V5xdk0YSzrarvlnpJ/tNWjISiKF1GE04dw+WpSDhlNOGktIfHb8Q8TivVt9XzacLZZtU3wlla
mEw/7FIU1Sg04dQxXJ4ea7tMWt3KkVDUC2y31GvP4QToCKeuqjvCWfvDBSFSlBTShUMURTWMJpw6
RuUIJx1loLSIx9dXalO6pd7RXeX5leW5qCjN0nhclPqEhnUTTsXvdXHek9YMh6IoHUUTTh2jcg4n
vaVOaRF7wlml8NisoxsA9o0LAKAg+4Gmw6I0QGhgofC4bqWMotxYtZ8jIiICo0aNwpQpU9S+FkVR
bRNNOHUMly9kba97+5KiWhN7wqn4M8kXGMDE3FnlNQqyaMLZFgkNFRNOUqciRlHuY7WfIy8vD1eu
XEFISEiTz/2///s/zJkzB1evXlU7jtaiizFTlLpowqljeHQOJ9UGNSbhBACzem6r04Szbao7h1Mi
Vty2tDD7YWuGo+TcuXPYt28fYmPVH2ltLboYM0Wpi72oI9Vmsf1hB+gIJ6VdjU04O1i5I+1pEOs1
CrKjNR4XpT6BnhG4PD3mQ61MWg0Ohw9CakY6K0rTUSUqULr13lreeust9O/fH717K+5mlZubi927
dyMzMxNbtmwBl6v++MqZM2cQGhqKV199FRMnTmz2dVTFTFEvM5pw6hhVq9SldIST0iIey1SPunM4
Afk8TnaV5TkQleXAwNhao7FR6hMamENUls08NrXsprBYKD/rATp1GaaN0PDFF1+wtj9//hxfffUV
AGDz5s0aea7du3fj7Nmz+Oabb9RKOFXFTFEvM5pw6hgej30Op4zljztFtRbWhJPlQ1CHjj3qvU5B
9gPYG4/SWFyUZggNLBUTTnMXhYQzL/2uxhPOgoICBAcHQyQSwcfHBz16sP/sPHnyBOXl5XBwcICV
lRUAICEhAXFxcUyfyMhI8Hg1i5169OgBQ8MXZbwIIbhx4waePn2K6upqdO7cGU5OTvDw8ACHU7PI
rby8HE+ePEFxcTEAIDMzE5GRkQAAMzMzdOvWDQBQUlKChIQE8Pl8eHh4AADS09Nx8eJFeHp6wtPT
U2XMqs6vrKzEzZs3kZSUBC8vL3h7e9f7vpWWluLu3buIi4uDu7s7XnnlFRgaGuL+/fuQyWRwdXWF
iYmJwjmNeQ8oSl004dQxPJYdXQBAQm+pU1rE4ynfUpdJlT8EmZh3BYfLV1p4IleQHQ37bjThbGvq
3i436uCo8DgvI0Jjz0UIwdy5c3HgwAHIZDKm/d1338WuXbugr6/4szZr1iyEh4f/P3vnHR5VlTbw
38yk914IkBBCqKFFem8KSAeBRURjA9uHsoKLq9hQF0UUEbHRpCzFFqUJLEjvJRAIJZSEQHqvk2Qy
3x9jJkxmJnVKJpzf8+Rx7rnnnvPei8m8960sW7aMl19+GYCXXnqJ3bt3q+d0795d/fnUqVNqpS02
NpYJEyZw8eJFLTny8/PViumFCxfo3bu3+tzKlStZuXIlAI8++ijbtm0D4MiRI4wcORJPT0+Sk5OZ
NGkSv/32GwCLFy9WK5y6ZK58fVpaGp999hlvv/02hYUVJcZmzZrFihUrdD67n3/+mYiICHJzc9Vj
/v7+bN68meHDh1NQUMDevXsZMmSI+nxNn4FAUF+Ewmlh6I/hLNQ5LhCYAl2hHmWl2hZOqcwaF/eW
ZKfrrt1o7gQUgW4qK5z2Tr4ax2n3TlNWVopUWv+vlLlz57Jhwwb69etHr169iImJITIyknXr1qFU
Klm3bl21azzzzDO0bt2aZcuWAfDRRx+pYzibNm2qnjd16lQuXrzII488QkREBO7u7kRFRXH+/Hm1
RRQgMDCQ//znP6xdu5aYmBgGDx7Mww8/DEBISIhOGV599VUiIyPp3bs3AwYMICwsrFbP4T//+Q/z
588nODiYcePGcfz4cY4ePco333zDo48+yqhRozTmr127lqeeegqAF198kdGjR5Odnc2OHTsYMmQI
paW6X/Jq+gwEgvoiFE4Lw0okDQkaILpd6rr/n3T1CtWrcIrEoYZJ5dJIUqk1tg5eyAvSACgtzicj
KQqvJuH12icjI4PNmzdz8uRJOnfurB5fvHgxc+fOZePGjbz11lu0bq0/Fhhg8uTJhISEqBXOefPm
aSlPaWlpnDlzBlBZLAMCAgDUiuT9NGnShDfeeIMjR44QExND7969q4zDzMjIYNWqVRw/flzDulpT
MjIymD9/Pl9++SWvvPKKejwsLIzo6Gh2796toXDm5+fzr3/9C4D33nuPBQsWqM9NmTKFCRMmMHHi
RBQKRZ2fgUBQX0RZJAtDr4WzRCicAvOhK7ZYocPCCVUnDhXkJCAvzDSYXALDULk0krwwA7/mfTXG
kuIO1Xsfe3t7LWUT4JVXXsHDw4OysjJ+/fXXeu8D4OTkhKurKwB//fWXQda8n3Xr1tVJ2QRVWMEH
H3ygoWwC6lCAhIQEjfGNGzeSlJSEq6src+bM0Vpv7Nix2Npq/44a+xkIBPcjFE4LQ28MZ6XaeAKB
KdHVclVf9ytXz6qtU5nJ2rFkAvNS2aUuL0zHN1BT4bx3c2+997G3t8ff3197f1tbdRLNrVu36r0P
gJ2dHY899hgA06dP54knnuDCBcNY2D08PJgwYUK9rn/rrbe0xsufjVKp1Bi/fFlVfL9Lly44OTnV
eB9jPgOBoDJC4bQwrKx1B3CLGE6BOZHqsHDqa0bg4hVa5VqZKSKOs6GhpXAWZNAkeIjGWPq9M8gL
M4wmg6+vKm40MTHRYGsuXbqUl19+GYlEwvr16+nUqRPjx48nNjbWYHvUhdpmhpfLW+4Srw0N9RkI
Gh9C4bQwrKx0K5ylJULhFJgPmZWOpCGFbguni3tLJBL9yQgZwsLZ4KgcwykvzMDBuQlu3u3UY0pl
GQnXdxpNhoIClRfHz8/PYGs6ODiwbNky9u/fz7BhquoIv/32G926dePSpUsG28fYlGeS35/NXptr
G8MzEDR8hMJpYVjZ6FM4hUtdYD6kUl0Kp24Lp1RmjVMVPdWFhbPhYWfvpXFcVJAOQLPQRzXG42Ii
jSZDuWUzODjY4GsPGDCA3bt3s3fvXpo2bUpWVhbfffedwfcxFuXP5MaNGzrPl5SUaJSY0oWlPwNB
w0conBaGzEp3DKdCKJwCM1KbGE6oOo4zNyNWWOwbGNoWTlV2emBbzTjF5PhDFOQmGXz/5ORkoqKi
ADTqYVbF/VnpKSkpNbpmyJAhvP322wBERmorz+Vr1nQ9U9GvXz8AoqKiOHVKsyZqdnY2I0aMoKio
Zoml1T0DgaCuCIXTwtAXw1lSkm9iSQSCCnQqnFW0W3X1bKX3nFJZRlbqZYPIJTAMWlnqBapYTReP
YDx8O6rHlcoyYqOqr5Opj8zMTN5++21KSjRfVt577z1KSkro378//fv3r9FagYGB6s+7du3SOp+U
lKROtrmf8+fPA5r1OiuvqWs9czJy5Eh69OgBqArRr1ixgt27d/Puu+8SHq4qVVVeMN/GpsIbUZdn
IBDUFVGH08KwsnHUOV5aLBROgfmQSnVZOHUXmgZwqULhBFWmen1rOgoMh8zKFisbR/XfGaVSQXFR
NjZ2rgSH/UOjfmps1I+07/l/OmuzVoednR3Lly/np59+YtSoUfj4+LBnzx727NmDm5sbixcvrvFa
bm5uDBw4kL/++ovZs2dz9OhR2rdvzxNPPIGnpyexsbH069eP3r1706dPH5o0acK+ffvYuXMnEolE
Z53NcePGsXTpUuLj43nooYeYMmUKrVq1Yty4cbW+V0Ozbt06xo0bx+XLl3nxxRfV461bt+ann35S
JxTd36mpLs9AIKgrQuG0MKys9SicwqUuMCM6Ow3pSRoCcPWsLlNdJCs0NOzsvci778W2qCBNpXB2
mELUoY8pkeeoxvNTuH5+LW0eer7We3Tp0oV169Yxffp0tXIpkUjo0qULGzdu1NtPXR+rVq1i6tSp
nDx5kh9++AFQWQA9PT3x8/NjxIgRnD17lqNHj6qvCQ4O5pNPPmH06NFa6w0cOJDFixfz1ltvcebM
Gc6cOcO0adMahMLZqlUrTpw4wbp16zh9+jQ2NjYMHTqUoUOHYm9vr3apu7m5qa+pyzMQCOqKRKlU
rgaeMrcggppRkJvEbys6aY3bOXoz4SWRbCEwD8lxh/nf5okaY35BAxg8eYvO+aXF+Wz5Qn/yh6d/
Vx55wngZz4La8+e6kaQnnlEfD5v2B95NVYXNz+5/lyunKvp729p7Mvq5o9jYuWmto4vCwkISExNx
cnLCx8cHULnXY2JiaNOmDR4eHtWsoB+lUsnNmzdJTEwkODiYJk2aaM1JTEwkNjaWpk2bEhgYqG6D
qY+cnBxiYmKwt7cnNDRUq797Q+PKlSu0bdsWqVRKYWGhhlu9nNo+A4GgtggLp4VhLVzqggaIRGfS
kH6XupWNIw7OARTk3tV5Pis1hrIyBVKp6OXcULBz0IzjLCpIVX9u2+1Frp9bo64HLC9M59Sef9Fn
9Dc1Wtve3l4r+9zd3b3GCUJVIZFIaNmyJS1bttQ7x9/fX2fBeX24uLioYyYtgfIWn+PHj9epbELt
n4FAUFvEK4yFoTeGs6RAq/uEQGAqpFLtd1dlFS51ABfPEL3nFKWF5GbqLvEiMA+2DpVLI6WpP9s7
+dCux8sa5+NifuXyieUmkU2gUirffvttzp49S25uLgqFghs3bvDqq6/yzTffIJFI1NnnAoE5EAqn
hSGRSPWWRhJxnAJzoUvhLCtTVHlNtXGcySJEpCFhV4XCCdCuxyu4VPo3PX/gfc4fWFiltVtgGA4e
PMjChQsJDw/HxcUFW1tbQkJCWLp0KW5ubqxevZpOnbTDsQQCUyFc6haItY2TzlaWpcV5el3uAoEx
keiycFZRhxPAxUO/hRNUBeCD2tW9H7XAsNg5emscF+WnahzLrGzpM/obdm8YpVEX+PKJZdy6/As+
Ad2wdfDExaMldo4+JpH5QeLdf01i5lMDSUpKJyk5neycPLw83fD2dqdTWCucnRyIv/qHQfeUSKS4
+7THyS3IoOsKGidC4bRArGwcoSBVa7ykOA97fM0gkeBBR3fh96qtWtWWRhIdhxoUWhbOfO2/Qe4+
7ek7+lsO/haB8r5//8Lcu8Rd0R2vKzAsUqCJFTTxAJRACkT9z3j7SaRW9B+/loCWQ423iaBRIFzq
Foi1jZPO8dLiPBNLIhCokEh0WTirdqm7eFSncIrSSA0J+0pWySIdL70AASEPM3DiBmxsXU0hlsDM
KMtKuRW9ydxiCCwAoXBaIFZ6FM4Sea6JJREIVOjKJi9TVm3htHfywdrGWe95eUEahXnJ9ZZNYBi0
Xer62zv6txjIyKcPENRuIiAxsmQCc+Pm097cIggsAOFSt0CsbXV/SZcUC4VTYB4kOhTO6iycoHKr
pyee1Xs+M+US9k4iTKQhUPnfobqXAQdnf3qP+prOAxZw7ewPJFzfRWlJATZ2Lji5BSORCEXU0pFI
pHj6d6F1+HPmFkVgAQiF0wKxsXXROV4iFy51gXmoi0sdwMWjZTUKZzRNggfXSzaBYbCxc0Mqs6FM
UQyoqmKUFufrLdVWjoOzH50HvEXnAW+ZQkyBQNBAES51C0RfDKewcArMhU6Xeg1K4YjEIcuicnZ5
gQh5EAgENUQonBaIcKkLGho6XerVxHBCzUojCRoODk5+GseFeUlmkkQgEFgaQuG0QKz0JFqIpCGB
udBdh7Os2uuqUzhzM26KhgYNCHsthTPRTJIIHiQyMjJ49dVXOXLkiLlFEdQDoXBaIPpjOHNMLIlA
oEKi40+JUll9DKeTewskkqr+DCnJSo2ph2QCQ+LgrNlruyBXKJwC45Obm8uKFSu4dKn2pdJKS0tJ
SEigpKTqRhQC4yMUTgtEn0u9WFg4BWZCItWhcNYgaUgms8HRtXmVc7JEPc4Gg4NzE43jgtx7ZpJE
8CARGBiIXC7n+eefr/W1q1evplmzZsTHxxtBMkFtEAqnBWKt18KZbWJJBAIVEomuGM7qFU4QcZyW
RGWFMz9HdA8SGJ979+7RtWtXfvrpJ/XYjz/+SNeuXcnMzGThwoW0a9eOTp06sWbNGo05CxcuBGDM
mDF07dqVHTt2mFp8wd8IhdMC0edSLxYudYGZ0J00VH0MJ9RE4RQWzoaCg0uAxnFBToKZJBE8SBQX
F3Pu3DlSUyu6WyUnJ3Pu3DleeeUVNm7cyNSpU3FxceGZZ54hOVlVPaFTp070798fgGnTpjFr1ixC
Q0PNcg8CUYfTItFv4RQudYF50GnhrIFLHVS1OKsiK/UySqVSFApvADi6NNM4zs++YyZJBAIVt2/f
5uzZs9jZ2fHoo4/y0EMP8fvvv/Pcc8+pFc7169czdepUWras+m+NwLgIC6cForcskrBwCsyELmWw
xi71ampxlpYUkJd1uy5iCQyMvZMvUpmN+rhYni1edAVmZePGjdjZ2QGoFcq0tDRziiTQg1A4LRAb
W1ed48VFWSaWRCCooHK2eU1d6s7VWDhBxHE2FCQSCY6umlbOXPEyIDAjjo4Vna6EF6RhIxROC0Tl
Utf+xSotKaCshm5MgcDgVFneSD/2jj5Y66ktW05mslA4GwrObkEax8L6LBAIaoJQOC0QiURShVtd
ZKoLzIOuepqGSxwSCmdDwcmthcZxTsYNM0kiEFSPra0toCoeLzAvQuG0UPS71UUcp8A81EfhrM6t
LhTOhkPlmNucjOtmkqT2vPLKKwwbNozIyEhziyIwEcOGDUMqlfL999+Tk5NDaWn1LXcFxkEonBaK
tZ2oxSloYOhSOA2UqV6Yl0RRQXqdxBIYlsr/VrnptbdwKhQKZs2aRUREBIcPH67RNZ988gkRERGc
OXOm1vuVc/LkSfbu3cudO9Vn1588eZKIiAgiIiK4du1anfcUmBd/f39ef/11Nm/ejKurK7///ru5
RXpgEWWRLBSROCRoaOjOVDeMSx0gKyUav6ABtZZLYFgq/1tl18HCKZPJSEtL4+effyYrK4u+fftW
OT8zM5MFCxYgkUj44osvar1fXfjss8/YsmULAO7u7ixZssQk+wq0CQoKQqlUaozNnTuXuXPnaoy5
urpqzQNYtGgR7777LsnJyTRvXnVnM4HxEBZOC8XGzk3neHGRsHAKzIWODFGDZqqLAvANAQdnf41a
wKXFeXWqxxkREQHA9u3bNQp662LLli3I5XJGjx6Nq6vul21Dkpqaym+//aY+XrduHcXFxUbfV2A8
7O3tCQoKQqqjDa/ANIgnb6HoVziFhVNgHnTHcGpbG3Th7B5c7RwRx9lwcPNuq3GcmXq51msMHz4c
f39/SkpKWL9+fZVz161bB8ATTzxR633qwtq1aykuLiYgQNVZKS0tTUMBFRgHhaKYosJMSorzTf5T
WlJo7ttv9AiXuoViY6fPpS4snALzoFPhpGYWTitrexycAyjI1d+bOyP5Yp1lExgWN++2pCacUB9n
pcbQNOSRWq0hk8mYPn06n376KWvWrOG1117TOe/GjRscOXIELy8vhg8frnU+Pj6e8+fPc+fOHezs
7GjdunW1Lvrq+P777wFYsmQJb731FtevX+eHH35g8uTJOufn5OQQGxuLlZUVHTt2BODu3bv8+eef
dOnShS5dugBw9epV8vPzadasGd7e3pSWlnL48GEuX77Miy++WOv7Kl/Py8tLr6s4Ly+Pa9euYWdn
R7t27er1XAxFQe49kuIOk5VyiczUS+Rl3qaoIBVFaZFZ5WraaiT9x682qwyNGaFwWih6LZxyYeEU
mAtdLvWaWThBFRtYlcKZmxFLaUkhVtb2dRFOYEDcvDUVl8zkC3VaJyIigk8//ZQLFy5w9uxZunbt
qjWn3Po5ZcoUrK2t1ePR0dE8+eSTnD17Vuua3r17s2vXLpydq67vqosDBw5w7do1fHx8GD9+PLdv
3+aNN95g79693L59m6CgIK1rjhw5wsiRI/H09CQ5OZlJkyapLaKLFy9WK5wzZszg5MmTLFu2jPbt
2zN+/Hiys7NxcnJSK5y1ua/vvvuOJUuW0K5dOy5d0h1y8vnnn7NgwQKee+45vvvuu1o/D0NRUpzP
zYv/Je7Kb6TdPWU2Oaoi4foO5IWZ2Nq7m1uURolwqVsoIoZT0NCoT1kkAGePqt3qSmUZ2WlXai2X
wPB4+HbSOM5IqpvC2bZtW3r06AHA6tW6LUv63Ol37twhPj6eOXPmsGnTJvbt28ebb76Js7MzR48e
5aOPPqqTTOVK2ZNPPom1tbX6v0qlklWrVlV7/auvvkpkZCS9e/dm/vz5hIWFac25du0aEydOxMbG
hmeffZYXXnihTvf1zDPPAHD58mVOnDihtY9CoVBba2fOnFm7B2EgFKVFxJxawe/fPsSZ//27Rsqm
RGqFlbWDSX+sbZxp1flJoWwaEWHhtFD0udTlhZkmlkQg+BudbeVqZ+Gsjszki3j6d6mFUAJj4Obd
FonUCmWZqqZhfs4divJTsXP0rvVaERERnDhxgo0bN/LZZ59hY1PRq/3o0aPcuHGD0NBQtWJaTu/e
DuBp+gAAIABJREFUvUlISFAX9gYYNGgQqampfP/99xw8eLDWsmRkZPDzzz8D8NxzzwHg6+vLmDFj
+Pnnn1m9ejXvvPMOMplM7/WrVq3i+PHjdO/eXe8+X331FZMnT2bDhg1aa9Xmvtq1a0fPnj05fvw4
q1ev1npGO3bs4M6dO3Tt2pXw8PDaPQwDkJpwkmM7XiYvK05j3NbBC7/A/vg274OLRwhOboHYOXoj
lWqrJLdv3+aLL77gtddeIzAw0FSiC4yAsHBaKLZ2ut/CRNKQwFxIdLjUa2PhrInCmSEShxoEMitb
3H06aIyl3Ttdp7WmTJmCnZ0dGRkZWjUSy62b06dP17rO1dVVQykrZ8iQIQAkJCTUWpYff/wRuVzO
wIEDadWqosB9ufKZkJDAn3/+WeUa69atq1LZBOjRowdr1qzRqbjW9r7KrZybNm2isFAz8eWbb74B
zGPdvHT8S/ZsHKOhbHr6h9N37A+Mf/ECfUavIKTTdHya9cTB2V+nsgmQmJjI0qVLSUxMNJXoAiMh
FE4LRZ9LXV4kLJwCM6HTwFlzC2d1LnUQPdUbEt4B3TSOU+4cr9M6bm5ujB8/HtB0qxcXF7N582Yk
EolOhbMyeXl5XL9+nbg4lYJTVlbzl51yyt3Pzz//vMb4sGHD1Na1H374Qe/1Hh4eTJgwodp9Hn/8
cezs7GokU3X3NXXqVBwdHcnOzuaXX35Rj8fFxbFr1y6cnJz4xz/+UaO9DEFZmYLjO18j6uCHlHs4
bOzc6TnySx55YgfNW49GKtVtIRY0boRL3UKxtdcTw1koLJwCc6HLwllzhdPRpSlSmS1lCrneOVmp
l1Eqy3TGiwpMi3fTnlw98736OPnOkTqvFRERwX//+1/+/PNPEhMT8ff3Z9u2bWRmZtK3b19atGih
87qoqChWrFjBli1byMys38v2kSNHuHz5MjKZjMLCQjZs2KBxvm3btsTFxbFt2zaSk5Px9fWt135V
UZv7cnJyYvLkyaxevZrVq1fz+OOPAyrluaysjGnTptUpeaouKJVlHNv+MnExFYqvh18n+o9fi4Oz
v0lkEDRcxF9tC8VGr0tdWDgF5kFXp6HaxHBKJFKc3XUrFuUoSgvJyYitpWQCY+DTrJfGcWbyRYoK
0uq01pAhQ2jWrBkKhULtRq+u9uYff/xBt27dWLt2LSNHjmTFihVcvHixRok9uii3bioUCp555hmm
T5+u8bNr1y4ASkpKWLt2bZ32qAl1ua9yt/q+ffuIi4ujpKSElStXAtrWWmNyavc8DWWzWegohk37
3eDKZn5+Pq+++iotW7bExcWFXr16aYU6fPrppwwbNozExEQmTZqEj48PEyZMICYmRmPe6dOn6du3
Ly4uLnTr1o0tW7YQFhbG7t27DSqzQFg4LRZrWxckEqlWjFxpSQFlihKkMms9VwoExqJ+Fk5Q9emu
LhM9M/kirp6htVpXYHjsHDxx9+mgUZA/8eZ+WnR4rNZrSaVSZsyYwYcffsiaNWt45pln2LFjB7a2
tjz2mPZ6crmcKVOmUFJSQmRkJCNGjFCfq0vf86ysLHUby8WLF+Pi4qJz3urVqzl27BgrV65k3rx5
td6nOup6X3369KFNmzZcuXKFNWvW0L59e5KSkggPDzdZstCFQ4uIjVqnPg5sO4Fej35lFPf5uHHj
uHbtGvPnz6d79+6sWLGC4cOHs3PnTnWt1sTERM6cOcPDDz/MmDFjmDp1KnPnzuXjjz/mxx9/BODW
rVv069eP3r17s3PnTqRSKf/+97+Jjo4mJyfH4HI/6AiF00KRSCRY27rqtGjKCzOxd/Ixg1SCB5v6
WTgBnN2rb3GZkXyRoHYTa7WuwDg0CR6qoXDeub6jTgonwFNPPcWHH35ITEwMr732GsXFxUyYMAF3
d21vzsmTJyksLMTZ2VlnMfjasmHDBgoLC+nduzf//Oc/9c7z9vZm/PjxXLt2jYMHD9K/f/96730/
9bmvp59+mnnz5rFmzRp1CIKprJuxUeuIPlbRaz6w7Xh6j1pulNCXAwcOsHfvXr7++mtmzZoFqKzT
f/31F2+//bbGc8vJyWH16tWMHTsWgEOHDrFx40b1+U8++QS5XM6mTZvw9lZVWFizZo3IhjcSwqVu
weirFybc6gJzUF+XOoCLZ81KIwkaBgEhD2sc37v5P0rkuXVaKyQkRN1Jpzp3evn/a7m5uezfv189
npKSorZeJSUlaWVt66O89mZ1CtqoUaPw8/MDqk4eqiv1ua8ZM2ZgZWXF7du32b9/P05OTkybNs3g
MlbmbuxuTu2usPb6txhMr5HLjBZnHRUVBcDAgQM1xgcOHMjFixc1kqqaNGmiVjYBPD09kcsrYsSj
oqLo2LGjWtkUGBehcFowtvYeOsdFLU6Beai/S71GPdWFwtlg8GoSjoNzgPq4TCEn7kpkndeLiIhQ
f/bw8GDkyJE654WHh6uteCNHjmTKlClMnDiR0NBQEhMT8fLyorS0lDlz5hAbW3XM78mTJ7lw4QKu
rq463ff3Y2VlxVNPPQXATz/9RHa2YRtt1Oe+fH19GTVqlPp42rRpODk5GVS+yqTcOcbh359Th3Z5
+HWi39gfjBrSVVxcDICDg4PGuL29PQqFolbVCUpLS/XWVBUYHqFwWjA2eiyc8sIME0siEOijtjGc
1Vs4i+XZ5GXH11UggYGpHN5w/Vzde1E/9thjODo6Aqr6nPcXgb8fe3t7fvnlF9q2bYtcLmfLli3s
3buX2bNnc+TIERYsWIBEIuGbb77hyy+/rHLPcuvm9OnTtZQYXTz77LNIJBIKCws13LOGoL73VZ48
BMavvZly5xh//TRN3f/c0bU5Ayaux8rG0aj7lveDr1zY/6+//iIkJAQrq5pHCrZv356oqCiNF4fK
tWAFhkPEcFow+ou/CwunwAzocqnX0sJpa++Orb1HtS9NmckXcXJtXqu1BcahZcdpXD5RofxkpkST
eOsv/FsMrPVazs7O5OXl1Whu586duXjxIlevXkUul9OxY0e1teqVV15h3Lhx5Obm0qZNG/U1uto/
/vDDD7Vyj7ds2VLLijZixIgaWfN17V+ZutxXOeXu4vDwcJ196Q1F4q2/OPjrUyhKVa59WwcvBk/e
gr2j8XMHHnnkETp27MiXX35JcHAwHTp04IcffiA6OlqdmV9T/vnPf7Jx40bCwsJ44oknOH/+vDqs
wdpaJN4aGqFwWjD6LZyiFqegYaCspYUTVG716hTOjKQomoU+WlexBAbE2b0FTVoO496NPeqx8wcX
4hfU3+j1UmUymdriVZlmzZoZdW9jUtf7WrJElbhjTOvm1TPfc3bfOyiVCkDVhGTw5C3VljQzFDKZ
jD/++IOnnnqKfv36YW1tja2tLZ999pk63KGmdOjQgUOHDrF48WJOnDjB4MGDGTFiBNu3b1db2gWG
QyicFoy+pCF5YbqJJREIdLe2rAsuHiHVtknMSL5gkL0EhqF9z9kaCmdm8kViTiynXc9XzCjVg8WJ
Eyc4evQozs7ORuksVJCbxOm980m4vkM9ZufozaBJm3D3aW/w/crp1auXlvW4efPm7Nu3j5ycHDIy
MggMDNRKWlyyZIlaAS9nwYIFLFiwQGOse/fu6pJYAIsWLUIikWi0NhUYBqFwWjAiaUjQ4KmlSx1q
2FNdJA41KLwDutG01UgNZSTq0Ec4uAQQ1K76Vo+C+lOuXBk6WagwL4Xr59dw5fS3lBZXhDu4erVl
4KT1OLo0NdhetcXFxUVvzdSaUFBQwOeff07//v1p1aoV27dvZ8WKFYwZM0aURjICQuG0YPQrnCJp
SGAGDFAWCcDZQ1ctTonGWvKCNApy7+Hg3KTW6wuMQ/iQhSTFHVQrJUplGUe3vcD1c2tw9W6Ds3sL
7B2N1w7yQWfUsDaMHPwW7dsFc/vyL9Vf8DcSiRR33zBc/v69K8pPJTfrNun3zpB4+wDJcYcoKyvR
uCa06zN0HvA2Vtb2Br0HU5Obm8vhw4dZuXIlqampeHl5MWLECBYuXGhu0RolQuG0YPQpnMVC4RRY
MC46FE6p1ErrSy898bxQOBsQji4B9Br5JYd+e1pjPPXuCVLvVp8sI6gfsr9/rh2D2vdaqhlW1o44
ODchPfE8+7dMRiK1Qiq1Uv1XZo1UaoVUao1EaoVEKlOdk8iQSKVIkIJEqnJ9S6QVITgSCSXyPLJS
L6NUKlQvJk5+RroDbT6c1wPooTEWd2EZcVVcI5XKCAgZjndAN6PK1tgQCqcFoz+GUyicAtOjK4az
Dh51nNxbaLVtraxsgiqOs1mo7jqNAvPQLPRRuj/8Kaf2vKHVdldg+ZSW5JOTcd2oe2QknTfq+obi
6tlVTHwp2uhloBoTog6nBWNr76lzXCicAktGJrPB0bX6DGNL+WJ60AjpPINBk7eIslWCRo1Mao3E
CH3iGzPCwmnB6CuLVFyUhVJZZvSSJAKBsXDxCCEvqyqnlqo0kqBh4hfYj1HPHef6udXcuPhfSuQ5
2Ni54uweLP4uNTAyky9RXJyDPD8NpbK0yrkOLk3p1PdfOHu0oKxMgbKslLKyEsoUpX9/Vh0rFaWU
KUtRlilQKhUoy8pQUgbKMpXlW6msKJmmVFJaUkhmSjRKpQIXjxDsHLxMcOd1RyKV4d9iMDIrO3OL
YlEIhdOCkclssLJx0sgcBFWwfnFRlt4YT4HAdNTBpw44e4TAzf9pjEkkMnXtP1BZ8vOz79TIGiow
PVKpjNbhz9I6/FlziyKoAWVlCvZvmUxy/GG9cwpyEjix6zV6jPiCFu0nmVA6QWNAvGpaOHYOut3q
RQWiFqfActGVOGRtq13+JF241QUCgyCVyhg0eXO1ZcnKyko4tv0lLp9YbiLJBI0FoXBaOCKOU9AY
cfHQLrpcubAzQHriOVOIIxA8EEilVgyctAGJpPrYxPMH3ufK6W9NIJWgsSAUTgvHVo+FU16QZmJJ
BALDocvKUlKs3WNbKJwCgWFxcgui9UPP6z0vldmoP5/dt4CE6ztNIZagESAUTgtHFH8XNEbsnXyw
stHsllKmKNaal5EcJcrvCAQGpkOvV5HKbHWeK1MUa3jWjm5/iZyMG6YSTWDBCIXTwhExnILGii4r
p8xKs7NJaXE+2enGKnMtEDyY2Ni5EdJpht7z8sJ07Bx9ANXv4OHIZ1GUyk0lnhaLFi1i8ODBZttf
UDOEwmnhiBhOQWPFxVNb4dTVWSj93llTiCMQPFC0Dn+myvNW1o5IpCr3elbqZc4fMF87yODgYLp3
727SPU+dOsUnn3xi0j0tHaFwWjj6YziFhVNg2eiycFrbOmmNpScKhVMgMDTO7i3wbtpT7/m8rFsE
tR2vPr565juSbh80hWhaPPbYY/znP/8x6Z47duzgww8/NOmelo5QOC0cO30WTpE0JLBwdGWqlym0
C1On3TtjCnEEggeOlmH/qPJ86t0TNAkepj4+vnM2xfIco8jy1Vdf0adPHxwdHWnZsiUXLlxQn/v0
008ZNqxCjiVLlhAWFqb107t3b401V6xYQZs2bXB2dmbEiBHcvXu3RrJ88803fP311+Tl5anXLinR
br8r0EQUfrdwbB1E0pCgcaKrFqeuF6ms1BhK5Hk6rZ8CgaDuNAt9lBN//hNlme4ORHlZt2nX/WXS
E88iL0ynIPcep/fMp/cow9bojImJYfbs2WzZsoVu3bpx+fJlfH191ecTExO5evWq+njChAkaLvZr
167x/PPPM3r0aPXYihUrePPNN1m+fDmhoaHMmTOHqVOncujQoWrlGTlyJCdPnmTz5s2sWLECACsr
oU5Vh3hCFo6tve4WYCJpSGDpOLsHAxLu71ZUmJ+Mo2tz8rPj75upJD3xLH5B/U0tokDQqLG2dcY/
aCD3bu7VO+fGhQ10f+RTDv32NAC3L/9EQMjDBLYZazA5oqJUbWyDgoJo3rw5zZs3r3J+UFAQQUFB
AKSlpREREUHnzp1Zv369es67777LY489xrRp0wCYPXs2kyZN4saNG7Rsqf2yez/NmzcnMDAQKysr
+vbtW487e7AQLnULR1/P2SLhUheYGKXONpbaxdpriszKFic37S8WXa721Hun6ryPQCDQT9NWI/Sc
Uf1upyedw97ZnxbtJ6vPnPzzdfKz7xhMhjFjxtCtWzd69uzJjBkzSEhIqNF1RUVFjB07luLiYrZt
24ajoyMA9+7dIyUlhb/++ov+/fvTv39/PvroIwBu375tMLkFmggLp4VjbeuEVGajVaOwTCEXbkaB
xePi0Yq8rDiNMTtHb615aQknTSWSQPBAEdBymJ4zFS+Y18+u5qGhH5OScJz87HhK5DkcjnyOodMi
kVnprudZGxwcHDhy5Ajffvstn376KW3btuWXX37RiNvUkk6p5Mknn+TSpUscOXIEPz8/9bmyMlXt
3kGDBjFq1CiN6zp06FBveQW6ERbORoCwcgoaKy6e2tZMqcxaayzt3hlRAF4gMAL2Tr64eberck78
1d9RKhX0Gf0NEqnKjpWedI6Tu+caTA6ZTMaLL77I5cuXadmyJUuXLq1y/vz58/n111/56aefaN++
vca5pk2b4uXlRXR0NKNHj9b4uT82tCokEgklJSVq5VVQPULhbAToUzjlhULhFJgXHe3Pa4Wu0kjF
hZlaXYhKinPJSo2p32YCgUAn/i0G6RwvVy4VpUXcuvwTXk3C6TroXfX5W9GbDVKfc+/evfzxxx/k
5+eTm5tLTk6O2j2ui++//55Fixbx4Ycf0qVLF9LT09U/5XzwwQccPXqU999/n/j4eORyOcePHycp
KalGMvXt25fCwkK2bdtW7/t7UBAKZyPAVp+FM18onAITotQVw1k/dFk4czJi8Q7opjWeknDc4PsL
BALwC9RMyJNKVV6G+7PXb17YCEDr8OcIvq+c0uUTyzi5ex5lZYo673/r1i2eeeYZPDw8aNWqFeHh
4SxZskTv/LVr1wIwb948vLy8NH7kclVHpFmzZrF8+XI+//xzgoKCcHFxYcqUKdy5U7PY04EDBzJh
wgQmTZqEh4fuajECTYTC2QjQ395SKJwCy8ZVh8KZm3kTrwDtriKpd4TCKRAYA++AbkgkMvXx/a+W
5eOZKdFkplwCoPsjiwkIeUQ9J/b8Wv7a+g8K81LqtP9zzz1HSkoKN2/eJDk5ma1btxIQEKA+v2TJ
EuLjKypXHD58GKVSqfPH1rYipvTFF18kIyODW7dukZKSQlxcHN26ab/M6kIqlfLzzz+TlJTE9evX
63RfDxoiaagRoM/CKS8UpZEE5qZ+PnVbew9s7T006sqWKYpxdmuhNTcl4Vi99hIIBLqxsnHE078L
afdOA6AsqyhyLrO2p7Q4D4CbFzcRPuQDpFIr+o1dyfGdr3L78k8AJMUdYPvKvoT1nUdIpyfqlEx0
v5JpKCQSCYGBgRpja9euVZdiqoyfnx/z5s1THwvrZs0RFs5GgJ2DdtYuCJe6wLToLotUf/QlDkll
ml9YRfmp5KTHGkUGgeBBx6tSGIvkb7d6ubIJcDvmF8r+drNLZdb0evQrOvR+nfIXz2J5Nmf+928i
vw3n/IEPSEs82yCT/RwdHXF1ddX54+QkKr/UFWHhbAQIl7qgwVLfrCHA1TOU1IQTGmN5WbfxatKV
lDuaVs3kO0dw8dRONBIIBPXDO6A7V06tUB/b2rtTlK9ykVvbulAiz0FekEbizX0EhDwMqKyHHfvO
xbd5b07++U9yM28BqpfDyye+4vKJr5BZO+Dm1RZbB0+K8pMBVdMHeyc/zEWwJwTr7SORwtn979Z4
LalURkDIcJ1x5w8aQuFsBOh1qYtuQwJTYoSkIdCdqZ6dfg2fZn20Fc64Q7Tq/KRR5BAIHmS8Ah7S
OC4pzld/trX3oOTvHuq3Lm1RK5zl+Dbvw8iIA8RG/cjlE8spzEtUn1OUFJCeeEZjfkaSbne2pXL1
7ComvhSNlY3+zPoHAeFSbwTor8OZamJJBAJNJPWM4QRw8QzVGstJv45foHZLueT4oyiNpPgKBA8y
9o4+ODhXxFAqSioUzoK8ilJCCbF/UlyUrXW9zMqW1uHPMXbWGQZMXE9wh6nYO/kbV+gGgkxqjUQq
q35iI0dYOBsBdo5C4RQ0BIyj6Ll6aSuc2enX8GwSjszKHkVpoXpcXphOVupl3H3aa10jEAjqh6d/
Fwpy76qPbR28kBekUVZahLN7S3Izb1CmKCb+SiQhnWfoXEMqlRHQcpi6g1FRfio5GbHkpMeSFH9Y
tZZHS72GFEtDIpXh32IwMis7c4tidoTC2QjQW/i9IB2lsgyJRBiyBWbCADGcDs4BWFk7UFpSoB4r
Lc5DXpCOd9PuJN0+oDE/Oe6QUDgFAiPg6d+VO9cqCp3bOXgj/ztXwMm1ObmZNwC4Gb1Zr8JZGTtH
b+wcvfFp1ouQzk8YXmhBg0FoIo0AmZUd1jbOWuNKZZlGORmBwJjodmXXX+GUSCQ6M9Wz069qFaQG
SIo7VO89BQKBNp7+nTWOy+4rjyQvzFB3Hkq7d5qcjBsmlU3Q8BEKZyNBr1s9X7jVBZaPToUz7Rp+
gf20xpPvHEWhKDaFWALBA4W7TweN4/zsBPXnzJRomrQYrD6+efG/JpNLYBkIhbORoLcWpyiNJDAZ
2hZOiQFc6gCunq21xnLSr+HuG4atvWbhZUVJgVYZJYFAUH9s7FxxdG2uPi5TFOH8dxUJpVKBu29H
9bmb0ZvUNTkFAhAKZ6PBzlFf8Xdh4RSYEwMpnF7aCmd22lUkEqlOt3rirX0G2VcgEGhS2crpdJ8C
WlqSh72TL6D67rkb+6dJZWus7N+/n1dffdXcYtQbkTTUSNCrcIpMdYHJMF45Il0Wzuy0qwD4txhE
3JXfNM7dvbGXLgPfMdj+CoWCQ4cOcfz4cc6fP09QUBDdunXj4YcfxtnZmV9//ZXs7GxkMhlPPKGd
+LB161by8/Oxt7dnypQpOvcoLCxk8+bNADRr1owhQ4bolUepVHLw4EFOnDjBmTNn8PDwIDw8nBEj
RlTZ/i82NpbDhw8D0KtXL1q31n6uAMeOHePqVdXzHTNmjN72fXWVQ2C5uPt2IOH6DvXx/dnXKXeO
Exw2jUvHPgfg+vm1NAt91OQy1pdBgwYxYsQIjRaW5uTs2bMsXbqUL774wtyi1AuhcDYS9Le3FAqn
wDQYK2kIwMmtOTIrOxSlReqxYnk2hXkp+LcYpDU/J/0aednxGtaXupKdnc1jjz3Gnj17tM6Fhoby
888/8+abb3LlyhXs7e11Kpyvv/468fHx+Pr66lU4s7OziYiIAFRKnj6FMzs7myeffJLIyEitc56e
nmzZsoXBgwfruBIOHTrE008/DcCKFSv0Kpxr167l22+/BVRfdroUzvrIIbBc3L3baRyrCr5LACWZ
yRfoOeJLLh9filJZRtLtA+Skx1pc96/u3bvTokULc4vR6BAKZyNBuNQFDRFDxXBKJFJcPELITInW
GM9Oi8EvaAAevh3JSL6gce5u7G5ahz9br31TUlIYMGAAV65cAWDgwIEMHDgQmUzGoUOH2L9/Pz16
9EAqNU10UkpKCn379uX69evY2dkRERFBhw4duHPnDmvWrCEpKYlHHnmEQ4cO0bNnz0Yvh8D0uHm3
1TjOTr+Gu28HMpMvolSWUZCbQEDIIyRc3wnA1TPf0e3hT8whap1ZtGiRuUVolIgYzkaC/m5DImlI
YCqM2+HH1buN1ljW3271Jn8Xkb6f8i+8+vDRRx+plc13332X/fv388477/DWW2/x559/curUKUJC
QsjLy6v3XjXhnXfe4fr169ja2nLkyBG+/vprXnzxRT7++GNOnz6Nj48PpaWlLFy48IGQQ2B6HF0D
kVnbq4+L8lPw9O+qPk6OP0LrrhUvejejNxvke2jfvn2EhYVx925F4flTp04RFham/h0FGDp0KIsX
L2bnzp306dOHJk2a8Prrr1NSUlHCKTMzk5dffpng4GDc3Ny0LPHla9zPsmXLaNOmDR4eHkyZMoXF
ixcTFhamPh8VFUVYWBjnz59nwYIFhISE0KVLFzZt2qSxTm5uLk8//TS+vr40adKE+fPno1AoNOZ8
9dVXtG7dWr1XamrjMBwJhbORYOfoo3NcxHAKzIthLJwAbp7aCmd2muqLJqDlw1rnUu4cQ16YWef9
kpKS1G7lTp068c472jGhnTp14tSpUwQGBtZ5n5oSExPD999/D8CsWbPo2rWrxvmAgABmzZoFwPbt
24mJiWnUcgjMg0QiwbVSu1mH+1pUptw5jm9gXzz8OgGgKC0i5uTyeu+bm5tLdHQ0xcUVJc/y8/OJ
jo6msLCi29jVq1fZsGED8+bNY8aMGbzxxht89tln7Nq1Sz1n+fLl/O9//yMyMpJjx44xZ84cjb2u
Xr1KYmJFv/cvv/ySOXPmMHLkSI4dO8b48eNZvHgx0dEVHpeCggKio6OZOXMmFy5cYNGiRQQHBzNr
1izkcrl63tixY7l27RqRkZEsXbqUb7/9luXLK57Pd999x+uvv86ECRM4fvw4w4cPZ9WqVfV+fg0B
oXA2EvTFcBbmpZhYEsEDi/FCOAE9Fs5UlcLp6d9Zqy+zUqkgIXaX1jU1ZdWqVRQVqWJGn3nmGb3z
bGxssLe313veUKxfv15tCRk1apTOOd27d1d/Pn/+fKOWQ2A+KifxSWXW6s8ZSecpLc6nfc+KrOpr
Z1dTkJuIqcjNzWX37t3MnDmT2bNn4+fnx86dFR6Pc+fO4eDgQFBQEG3bttX7/zGoYtM/+OAD+vXr
x5IlS2jdujVTp05l7ty5Oue3a9eOX3/9lYkTJ/Laa6+RnZ3N0aNHAThw4IDaS9KzZ08ee+wxhg0b
xtq1a9XXL1y4kAEDBvDxxx8TGhpKREQEb7zxhoGejHkRMZyNBHs9MZxy4VIXmAilkV3qbl46LJzp
V1AqlUgkEpq1GsG1c5qWgPgrkbQM+0ed9ivP0ga0rHjm4Nq1axqf09K0f7dv3Kjo7hIfH98/nqnN
AAAgAElEQVSo5RCYj8oWzvzseNy825GVehmlUkHqvVM0Cx2Ju28YmckXUZQWEnXwQ3o9+pVJ5Bs7
diz+/hUvoJ6enhpWxjlz5jB27FhatWrFnDlzeO2117C2tta1FPfu3SMtLa3KqhH3M3PmTHXsuqen
J4DaKnvu3DlAFZLywQcfABAXF0dubi4A6enp3LlzR53Y19gQCmcjwcrGUavfNKhaj8kLM7G1dzeT
ZIIHBh1Z6hIDmjgdXZthZeNEaXFFvGRpcT75OXdwcm1Os9BHtRTOpLhDFBWkY+fgWev9bt26pf7s
5+dXd8ENxP2K3ksvvVTtfFMonOaUQ2A+Knf+ykq7ik+zXmSlXgYgJf4Y/kED6TrwXf63eSIAty5t
JThsGr7Ne5tc3sr06dOHS5cusXDhQhYsWMDatWs5duwYLi4uWnNLS1XF62UyWb33La/kMXPmTI3K
D+VJh+np6QB6y5BZOkLhbETYOXqTlxWnNV6UnyIUToF5MFCWejluXm1Iu3daYywrNQYn1+b4NO+N
naO3RmUGZVkp8Vd+J7RrRK33un37tvpzQ/gCyM7OBlRffH379q12fvPm9S8J1ZDlEJgPl0oWzpz0
a7QOf45rZ1cCkHJH5UL2DexL89ajib/6BwAndr7KiKf2YW3rVOs9y5Wy+xP0du/eXSf5AXx9fVm2
bBlPP/004eHh/Prrrzz55JNa85o1a4aLiwsHDx7kX//6F6Cqmbt3795a79m5s6oXfWZmpt69JBIJ
J05odkprLElDQuFsRNg5+uhUOAvzU3R2ahEIDIuRgzhRlWTRpXA2DXkEiURK89Zj1F965dy6tLVO
CqeTU8WXYkZGBu7u5n1pa9OmDXFxcSgUCjZt2mQ2q2tDkUNgPpzcmiORWqH8u3WlvDADV68KJTQ9
8RylJYVYWdvTdfBCkm4fpFieTV52HCd3z6XP6BW13rNXr15YWVmxfv16IiIiWLlyJVu2bKmT/N9/
/z2dO3cmPDycxMRElEqlxu/7/UilUt544w3+/e9/M2jQIHr16sUff/xBQECAXje8PgYNGsSQIUNY
smQJPj4+jBs3joKCAs6fP8/QoUOxt7dnzJgxbN++neXLlzNgwADWr1/P+vXr63SfDQ2RNNSIsNeX
qZ4vEocExkd34XfD4lap6DSgduMBBLWboHU+PfGMuitRbQgKClJ/vj9jtT5U9YwyM6vOqG/XruLe
y7sFmUMWQ8shsDykUiuc3YI0xuQF6WrLZ1lZCen3zgDg4OxHt0c+Vc+Li/mF6KNLar2nl5cX//rX
v/j6668JCwsjLi5OXUWituzcuZP+/fvj5OTEiy++yFtvvcWECdp/O8p58803+frrr7G2tiY2NpaP
PvqI7t274+joWOu9t27dyoABA3jyySfx8PAgICCABQsWqM8vX76c1q1b8/LLLxMeHk5KSgqzZ8+u
0302NISFsxGhrzRSoVA4BWbCUIXfy9GpcKZUKJxeTR7C2aMluRk3NObEXthA+OD3a7XX/Z1Gdu3a
pdd9fP36dZKTk6tcq9wdWO6OrkxxcbG6y5A+evXqxeefq1oGrl69mkmTJlU5vyo5qpIlMjKSrVu3
GlUOgeXj7NGSnIxY9XFO+nV8m/cmJ10V45scfwTfQNXvTGCbsSTHHSY26kcALhxehERqRfue/1er
PT/44APeeOMNlEolzs7OgPaL0507d7Suu798EcAvv/yCQqEgISFBZ0kzXWu88MILvPDCC+rj9957
j9DQCqtur169tGRp27at1pi7uzvr1q1j5cqV3Llzh+bNm2tYSgMCAjhx4gSJiYm4uLiolVp9WfGW
hLBwNiL0WzgbR/yHoKFjGpd6ZXIzb2i0vAzuMFVrzq2Lm7QS6qpj8uTJ6s+rVq3SGUd14MABevbs
Wa11svxLTS6XExsbq3GuoKCAiRMnasVtVWbSpEn06dMHgB07dmgVlK4J93+5Vv4SLl/38ccfr9L6
aQg5BJaPs3uwxnF2+nV8m/VRHyffOaJx/qFhH+MXOEB9HHXwQ45uf4kSee2aJjg5OamVzfogk8lq
XD/36NGjfPfdd8TExHDlyhXefvttzpw5w//9X+0U5vuxsbGhZcuWet3y/v7+dbKgNmSEwtmI0Fv8
XVg4BaZAV5a6gS2cNnauODgHVNq2TF2PEyA4bCoSqabzplieza1L+q12uhgwYAADBw4EVC71vn37
smXLFq5cucLmzZt5+umnGTZsGB4eHtV+cXXp0kX9+fHHHycyMpK4uDjWr19Ply5d2LZtGxMnTqxy
DYlEwjfffKP+gpo+fTrz5s3TUnaTk5NZtWoV//3vf7XWaN++vfr6n376iTfffJPY2FhOnTrFzJkz
GTNmDNbW1lX2QDeEHALLx8WjpcZxTsZ1fJr1Uh+n3ztLaUlFQXap1Ir+41fjF9hfPXb70k/88X1P
rpz+juKiLOMLXUeSk5P58ccfGThwID169CAyMpJvv/2Wxx9/3NyiWRQSpVK5GnjK3III6k9C7J8c
/GWG1rhf0AAGT65bcLVAUFO2Lm1FiTxHY2zS/13Fxs7NoPsc+PkJ7t7QzE7tMXwJLTtW/PE/8vtM
4q78pjHH2T2YUc8eQSKp+Xv2hQsXGD58uN4YTicnJ/bs2UNERARXrlzB3t6eggJtS2piYiJt2rQh
JydHxyqquoHLli1TZ3SPGTOGyMhInXN37tzJ008/TVJSknqsSZMm+Pr6kpCQoLbEvvrqq2rX9/3M
mzePTz/9VGscwNnZmd9++40tW7ao4+POnj2roTAbSg6BZZMcf4T/baqIe3R0acbYWafZvrI/2emq
mOnBk7fgFzRA4zpFqZxTe97g5kXNFxGJ1OrvgvJKpFJrnD2CsXcSCWk1RSqVERAyHO+AbuYWRS8i
hrMRIVzqArOi0w1rWAsngLtPBy2FMzNZ0z0cGv6slsKZm3mTuCuRBLUdX+O9OnbsyJkzZ3j88cc5
cOAAZWVl6nO9evVixYoVdOrUqdp1/P392bVrFzNmzNBwqXt5eTF37lzmzp1bbRxoOSNGjCA6OprZ
s2ezbds2srOzuXfvHvfu3QNUrrru3bvTr18/ndd/8MEHlJaW8sUXX2i4zocOHaruF12T7N/6yiGw
bJzdW2gc5+ckUFpSiG9gX7XCmRR3SEvhlFnZ0nPEF/i3GMS5/e9SkKv6/0VZVkpW6iX1vIzkKCPf
QePj6tlVTHwpGiubhumKFxbORkR+zl0iv9HuiGLr4MXEly/puEIgMBxbvwihpDhXY2zS7OvY2GoX
U64Pd65t59Bvmp04vAO6M+zxPzTG9mwcQ2qCZlyks0dLHn36IFJp7d+18/LyOHv2LLm5ubRq1Uoj
YaBt27ZVWjjLKS0tJSYmhhs3buDn50fnzp2xs7OrtSz3ExcXx8WLF7GyssLf35/Q0NAatdpMTU3l
woULFBcX07ZtW42sfFPKIbBMlEolWz4P0oifHvHUPvKy4jj0myoBzsOvM8Nn/Kl3DUVpETcvbuJm
9GbSE88aXebGjo2tK+NfuoDMqn5/U4yFsHA2Iuz0trdMp6ystE5fsgJBTdHV2tKQnYbKcfdprzWW
mRKtbnFZTvter/HXVs0EotyMG1w/t5rW4c/Vel8nJyf69+9f/cQqsLKyIiwsjLCwsHqtcz+BgYE1
Tn64H29v7xq36zOmHALLRCKR4OQWRHZaRfx0bsYN/IIGIJFIUSrLyEiKorgoS29YjczKjlZdnqJV
l6coLsoiKf4wCdd2UVqSh7N7MHYOXqa6HYtHIpXh32Jwg1U2QSicjQqZzAYbO3eKiypnzCopyk/D
wVnEwwiMiWlc6k5uQVjbOGtYU0tLCsjNvKmRyNCkxSC8m/bQsnJGHfqYpq1G4OjS1OCyCQQPEpUV
zpyMWJq3GYOHX+e/LZZKkuIO07z1qGrXsrFzo3noKJqHVj9XYJmILPVGhr2Tr87xovyaxYcJBHVG
VwyngbPUy3H31bYQZiRf0BrrMuhdrbHS4nyO/D4ThaLYGKIJBA8MleM4c/6uf3t/3GbS7b9MKZKg
ASMUzkaGvaNuhbMwTyicgsaDToUzSTvJwMu/KyGdntAaT7t3mkO/RtS6BqBAIKjAyVUzhKK8ELx/
i0HqsXs395lUJkHDRbjUGxl2TrrjOAuFhVNgZEzjUFfh4dtRa0yXhROgy8B3SLx9gPzseI3xezf3
8svy9tg7+WPv6I2zR0id64Y+0s+H7h2dsZJJObFrTp3WeFCRSKR4+HWiZcfHa1WySmB+nNyDNI7L
O3x5NQlXh70U5N4lK+0Kbl5tzCChoCEhFM5Ghl4Lpyj+LjA2JnSpe/p11hrLTLqglTgEYG3rTJ8x
37J34zjKFHKNc4rSIvKybpGXdYvUuyfrLE/3kIrPNy7cqvM6DyxR60hPPEeP4bXvsS0wH5X7qZcU
51KYn4K9ow/+LQYSf1VVOeJu7G6hcAqES72xoTeGU7jUBUbHdDZOZ49grVpzJcW5Wj3Uy/Hy70qf
0SuQSGRGkUdQf25c2Ehpcb65xRDUAkeXplpW6dyMmwAEhDyiHrsbq780kuDBQSicjQxh4RSYC139
tw3d2rJiXSkevtoF19MTz+m9plnoo/Sf8CPWBq4LKjAMMitbrZakgoaNVGaNvXMTjbHcTNVLX5Pg
oWplNO3eGQrzxHfQg45QOBsZ+iycImlI0Njw9Ndut5iepF/hBAhoOZRHnz6g0c9Z0DDoPOBtZFa2
5hZDUEuc3ConDqkUTlt7d7zVvdWV3Lm2zWgyHD16lB07dhht/YKCArZs2cKNG7o9KLWd96AiXicb
GXZ62lsKhVNgfEyZNgSe/tpdtaqycJbj4NyEwVO2kpl6mVsXN1NclI2Dsz8OLgHGEFNQDSprdUfc
fTuYWxRBHXByDSSFI+rjnPvCWgJbjyElXnUu7kokoV2f1rreECxevJioqChGjhxplPVTUlKYMmUK
X3/9NS+88EK95z2oCIWzkaHPpV4kXOoCY2PCpCHQbeHMTImmTFGCVGZd7fXu3u1wH/yeMUQTCB4Y
Kls474+jbhb6KKf3zkepLCM14Th52fE4uTY3tYiCBoJwqTcyrG2dkFk7aI2XlZUgL6zcgUggMBy6
WlsaE0eXAK12rmWKYjJTLplUDoHgQaayApmXdZuyMgWgard8f03OW5e2mlQ2QcNCKJyNEHt9bnVR
i1NgYozRS/1+PP20rZxpiWeMuqdAIKigsoWzrKyEgpw76uMWHaaoP9+4sBGlsqxe+2VkZDB16lS8
vb1p3bo1n3/+uc6ERYAffviBhx56CGdnZzp06MD7779PaWmp+vzFixfp2rUr+/fv17huypQpvPLK
KzrXXLduHd27d8fDw4Nx48aRklK99/DYsWP07dsXFxcXunTpwp49e2pxx40HoXA2QkRpJIFZMLFL
HcCzSbjWWNrd00bdUyAQVKDLRZ7zd2kkgKYhw7G19wCgICehXp2HFAoFAwYM4MSJE6xYsYJFixax
a9cunQlD7733HjNnzmTEiBH8/vvvPP/883zyySdMnz5dPSc/P59z586RlZWlcW1MTAyxsbFaa+7Y
sYP333+fYcOG0adPHyIjIxk+fHiVMp86dYqBAwcSGBjIunXrCAwMZOTIkQ9kYpGI4WyE6IvjLBAK
p8ComNalDuDd5CGtsbR7QuEUCEyFnaM3MmsHFCUF6rGcjFiaBA8GVOWugsOmEnPyawCunv6OgJZD
67TXpk2biI6O5uDBg/Tr1w+AsWPHMmTIEOLi4tTzkpKSWLRoETNnzuSDDz4AYNCgQVhZWfHSSy8x
e/ZsevXqpXOPqsjKyuLUqVO4ubkB8M9//pMlS5awb98+Bg8erPOaf//73/j7+7NhwwYAhg4dipub
G99++y2ffPJJrWWwZISFsxFi7+Snc7wwL8nEkggeJHS7tYxs4fTvolV4Oj873qQ1/+Li4tiwYQMb
Nmzg8uXLJttXIGgoOLk00zjOzdC0DrbqEqFuupAUd4CM5It12mfPnj04OTmplU1Q1fotVwDLOXny
JIWFhYwePVpjfNSoUQAcOHCgTvtPmzZNY6++ffsCEB0drXN+WVkZBw8eJDg4mM2bN7N582a2bduG
n58fV65cqZMMloywcDZChMIpaCgYq/B7OVY2jrh5tyMzRfMPfurdkzRvPcqoe5dz/PhxtZtu0aJF
tGvXziT7CgQNBUe35mSnX1Uf52Te1Djv5Nqc5m3GEhfzCwCXjy+l79gfar1PXFwcXl5eNZoH4OOj
mc9Qfny/NbQ+hIWFAaq4Ul2kpKQgl8uJiorizTffVI/b2NhgbV19JY3GhrBwNkL0F38XCqfAmJje
pQ7gFdBNayw14bgZJBEIHkwqx3HmpGvHP7br8bL6c/zVP2pUM7cyNjY23Lt3D7lcXuU8X1/Vd2Dl
2MzyYz8/3UaZcvQlIVUmNzcXgKZNm+o87+3tjY2NDQMGDODGjRsaPz///HON9mhMCIWzEeKg18Ip
YjgFpsa4Fk4An6Y9tcZSE04YfV+BQKCissJZmJdIaXG+xpi7T3uat65wcZ/d/06NFbtyQkJCKC4u
5vz58+qxjIwMLfd0586dkUgkHD16VGP88OHD6vMA9vb2gCrms5xNmzZx6ZLu0mqV5T127BgA3bpp
v/QCyGQyevTowbZt22qUzd7YEQpnI8ROtLcUPEB461A4M1OiKZHnmkEageDBw9G1mdZYZbc6QOcB
byGVqlzJqQknuH5+ba32efbZZwGYMWMGGzduZO3atQwePJiSkhKNeaGhoUybNo3PP/+c3bt3I5fL
OXXqFPPmzaNr166MGTMGgI4dOxIQEMD69evZv38/7777LvPnz1dbSCvzzjvvsHnzZvLz8zl9+jQf
f/wxjzzyCJ06ddIr8+LFi1EoFEyaNImtW7eSnZ3NoUOH2Lr1watJKhTORoheC6eowykwMcaO4QRw
cPbDyVWzFqBSWUaKcKsLBCah8u8fQE76de15bkG06VbR8vH8X++RnX6txvt06dKFFStWEB8fz+OP
P868efOYP3++Opbyfr777jsmTpzIqFGjsLOzo2fPnnTo0IHt27er/y5JJBLef/99bt26xeDBg/n1
11/ZtWsX3t7eWusBvPbaa3z8/+zdd1hTZ/sH8G9Cwt57iwIKKMMBOMC90WrF1lVftdNVa99atba2
vq1ttWpbtVat1lEtjjrqXrWiVusGFQERlL33HknO7w9+ORJzwgwEk/tzXV5XOOM5d6LCzTPu59tv
YWhoiICAAHh5eWHfvn31xhwQEIC//voLmZmZeP3112FqaooxY8ZoZC1OHsMwOwHMVHUgRLkO/NBR
pkyFVOj7MWxNNEKUhWEY7Fsj/4vO1MVt80vOv6cX4FnUAZljHv5z0GPQilZ/9oEDBzB58mQAtYuG
Fi9e3OrPJKQ9qa4swqENnWWOdev7EXyC5P8viMXVOLt7OIpyYwDUJqvDp5+Grn7Di4GkampqkJKS
go4dOzb4S211dTUSExPh5OTEDqG/SCQSIScnB3Z2dpznxWIxcnNzYW5uDqFQiPT0dOjp6cHMzKzR
MQNATk4OysvL4ezs3Ca/jLc3tEpdTekb2qCk4Jnc8YrSTEo4idqxcQ6SSzizkv9RWvupqakIDw/H
jRs3UFxcjF69emHAgAH1DqVxycjIwN9//43bt28jNTUVvr6+CAwMxPDhw1scR2JiIsLDwwEAvXr1
Qrdu3eTu/+OPP1BWVgY9PT1MmjRJ7jwAVFRU4MCB2s/SyckJQ4YMURgPwzC4cuUKbt68ibt378Lc
3Bw9e/bEqFGj4ODg0Kj3RF5+2romEOoYo6aqmD3G1cMJAFpa2ug7ZhPO7w2BWFSB0qIk/BU2DoNe
2885NM9FKBSiU6dOjYtNWxudO3eu9xqBQKAw2ayNWUtmmN3e3r5Rz36Rop5TTUEJp5rSM7RVkHBm
w9SKyrYQZVPNCnUpG+d+cscKsh6isjwPuvoWLWr70KFDmDFjBsrLn48Y7NmzBzweD8uWLWt0GaTj
x4/jP//5D4qKithj0pWqU6dOxfbt2xX2wDQ2jlmzZgGo7WnlSjgXLVqE5ORk2NjYKEw4i4qK2HZe
eeUVhQlnUVERZsyYgWPHjsmds7CwwMGDBxUWwybqx9DEWaY8WXG+/Ep1KTPrrggatw1XjvwHDCNB
cX48zuwaAt/+y9DJewq0BDptETJpY5RwqilFuw1RaSSijgyMHWBo6oLSwkSZ41lJV9HBc3yz212/
fj0+/PBDMAwDKysrjBs3Dt26dcOjR4/w119/4euvv1a4wKCu77//HosWLQLDMPD398e4ceNgYGCA
S5cu4fjx4wgLC0NRURFOnjzZqnEoS3Z2NoKCgvDkyRPo6upi1qxZ6NatG1JSUrBr1y5kZmZixIgR
uHr1Knr3ll/URdSPgVzCmQCGkchtzCDl4DoMfUI24caZDyARV6O6qgi3LyxBxOWvoGdoC4FQH8bm
rgrrSqszPl8LDm4jYcVR8u1lRgmnmlL0n7ScEk7SClSxy9CL7FwG4ElkosyxjMTwZiecGRkZWLp0
KRiGQadOnXDhwgWZYTyRSISVK1fi66+/rredpKQkfPrpp2AYBlOmTMFvv/0GgaD2W+/ChQvx2Wef
4euvv8apU6dw584d9Oolu12nsuJQpi+++AJPnjyBjo4Orl27hh49erDn5s+fjx49eiA7OxsrV65U
mEQT9fJiaSSJuAplRckwNHVReI+L1wQYmDjh2vH3UF6SBgAQVZeyOxUVZD1otXjbu8f3diB0XhQE
2gaqDkVpaJW6mqLi76RtqXZIHQBsXQbKHUt/erHJtf6kvvvuO1RWVgIA1q1bJzdnTCAQYMWKFdi0
aVO97SxbtgyVlZXQ1dXFunXr2GRTasmSJTA0NARQW0KlteJQlpiYGGzbtg0AMHv2bJlkEwAcHBww
e/ZsAMCpU6cQExPTJnER1eKaf1mU2/AKdCsHf4x95zp8gj+BvjF3AXVNpMUXgsfXUnUYSkU9nGqK
trckqtbWqzBtOwSDx9MCw4jZY5Vl2SjIeghzW58mtSUSibB161YAtbuWSPdg5mJiYqLwXFVVFfbv
3w8A6NmzJ+fCBCMjI3h4eODOnTuIiJDdfUVZcSjT3r17IRbXfsaK4gkICGBfR0ZGwtPTs01iI6rz
Yg8nABTlxcHBreEFcVoCXXTrsxDd+ixEVvJ1JDwIg6i6FEbmnZq0el1d8PhasOs4GFoCXVWHolSU
cKopfSPuFXflJRltHAkhbUOoYwQrxwBkp/wrczwt4VyTE86UlBRUVFQAqN0v+cVeycaKj4+HRCIB
ULtaVpp8vkiawCUnJ7dKHMoUFxcn8zo3N1fumoSEBPb1i++JqCfuHs7HHFfWz8a5L2yc+yojJNLO
qP67F2kVeobcCSf1cJJW0Q7mcAKAg+twuYQz5ckZePf7uEntPHv2vMJDQ/su16ducnbp0iVcunSp
3usrKyuRk5PDlk9RVhzKVPc9zZs3r8HrKeHUDNw9nE1POIn6ooRTTSmaw1lZlg2JRAy+ms0NIQQA
HNxGICL8fzLHCrMfobQwCYam8ruhKJKYmMi+Njdvft3auiWQXF1d4ejY8Bw1aY+oMuNQJul70tLS
QlBQUIPXOzvLJyJE/Qi0DaCjZ4Gqijz2WFHeEzAMo5FFzok8SjjVlECoB20dE1RXFckcZxgJKsty
oG/UPnpLiHpg2sGiIQAwNneFsbmbXA3A5Njj8Or9fqPbkS7iAYD8/Pxmx+Ph4cG+Hjp0KLZs2dKk
+5UVhzJ5eHggKSkJYrEY+/fvbzc9r0T1DE2cZRJOcU05yoqS6l2pTjQHrVJXY3oK5nFWlNI8TtIG
VNSr4dzlFbljiTFHmtSGi4sL+zojo/n/X+oulvnnn6bvfKSsOF5U38r9goKCeu+tW+i+Oe+JqC8D
U/ne7MKcWKW0nZiYiIULFyIpKUkp7ZG2RwmnGtOnleqkrTSz9FBrcPaQTzgLc6JRmNP48jwdO3Zk
X//7778yQ+MvunbtmsJzJiYmbIIWHR2NW7duNToGZcYhxefXfstX1E51dTW7y5Aiffr0YV/v3Lmz
wWcSzcE1j7MwVzllsTIyMrB+/Xql/uJF2hYlnGpMUQ9neQklnER9mVp5wsSii9zxhIf7Gt2GlZUV
Bg4cCAAoLy/Hxo0b5a6pqqrCtGnTOM/V9cMPPwCo7VV85513UFVVpZI4AKBDhw7sPfHxstMOysvL
ERoaips3b9bbxsSJE9GvX+1WoqdPn1a48p5oHq550oXZj1QQCWmPKOFUY4prcdJviES9dfKeLHcs
8dEfEIsqG93GihUr2NfLly/HokWLcP36ddy5cwfffPMN/P39ERYWhqFDh9bbzvDhwzF5cm08Dx48
QI8ePXDlyhWZxUFisRj//PMPlixZIrNXujLjAIDu3buzr6dNm4Zjx44hKSkJe/fuRffu3XHy5EmE
hobW2waPx8OWLVsgFAoBAG+88QYWL14sNxSflZWFHTt2YN++xif65OXG1cNZQAkn+X+UcKoxRUPq
VIuTtAWeCsoiSbl4TQSPJ1uJoaoiH4nRjZ/LOWDAAMydO5f9et26dejXrx/8/f3x6aef4uHDh3jt
tdfw9ttvN9jW1q1bMX36dAC1Q+sDBgyAgYEBfHx84O7uDgMDAwQHB+O7775DTU1Nq8WxePFiGBsb
AwBu3bqF8ePHw8XFBdOnT0dcXBzGjRvH9sjWp1u3bjh27BhsbW0hFouxZs0amJubw8HBAT169IC1
tTVsbW3x1ltvNXkaAXl5GZjI93CWFDxDTXVZqzyvrKwMCxcuhKurK4yNjdGnTx+cO3dO5po1a9Zg
2LBhyMjIwMSJE2FtbY0JEybI7YB1584dBAUFwdjYGP7+/jh48CC8vb1x/vz5VoldE1HCqcYULxrK
auNIiPprP3M4AUDP0BqO7qPkjsfe3tKkrS43bdqELVu2wNTUVOa4sbExli9f3ujhZB51mRkAACAA
SURBVGNjY/z22284fPgwPDw8wOfzUVlZiYcPHyI+Ph5VVVVwcnLCtGnToKOj02px2NnZ4ezZs3Bz
c5M5bmlpidWrV+Po0aNsz2VDRo0ahaioKEybNo3d5Sg9PR0RERHIycmBtrY2goKCEBwc3Kj2yMvP
wMQRPN6LaQWDwpzoVnne+PHjcfToUXz88ccIDw9Ht27dMHLkSJw9e5a9JiMjA3fv3sXw4cPRpUsX
/Pzzz4iIiMC3337LXvPs2TMEBwdDR0cHZ86cwYYNG7BlyxZERUWhuLi4VWLXRFQWSY3pKyj+Xk5D
6kQDdOn5NlLiTsocK8p7jJS4k3DuMrbR7bz33nt49913kZCQgEePHsHS0hK+vr5syaJJkyZh0qRJ
jWprwoQJmDBhAsrLyxEVFYXU1FTY2NjA2dkZTk7yO7U0JY7G6tOnD2JiYhATE4OEhATY2trCz88P
urq12+jZ2to2Oim3sLDA3r17AQBJSUl4+PAhBAIB7Ozs0LlzZ+jp6TUpNvJy4/MF0DdyQFlxiszx
/Mz7sHLwV+qzLl++jL/++gs///wzZs+eDQDYtm0bwsPDsXz5cowcOZK9tri4GDt37sS4ceMAAFev
XkVYWBh7/rvvvmO3oZVuurBr1y52zjNRDko41ZjCOZw0pE40gLVTH5jb+iE/M1Lm+P0rX8PBbQS0
tLQb3RaPx4Obm5tcz2Bz6evrIyAgQGbP8baMQyAQwNvbG97e3i1qp64OHTrQD2gCQ9MOHAlnpIKr
m+/+/fsAwC6qkxo4cCD27NkDiUTCVmWwt7dnk02g9heluov37t+/Dx8fHzbZJK2DhtTVmK6Bpdw8
NgCoqS6BqJXm1BDSnnj3/UjuWEnBM0TfbHhFNyGk6bhWqudlKD/hrK6uBlD7y1tdenp6EIvFMovy
GiISiaClRbvvtTZKONUYj8dX2MtJC4eIJnBwGw5L+15yx6OurZPbc50Q0nKyCWftwsHi/CeorlLu
XEhpfdsrV67IHA8PD4ebmxsEgsYP4Hbt2hX379+XqU97/Phx5QRKWDSkrub0jexQXpImd7y8NAPG
FsoZHiSkPes19Buc/W0E6i5sYhgxwg+9Ab8Bn8LaqS+EOk2bB9keVZY/31KwurIQZcWpKoym8YQ6
xtDWMVZ1GERJ6m5jKdQxQs3/J5q56Xdh33GQ0p4zYsQI+Pj4YMOGDejUqRO6deuG7du3IyoqCr/+
+muT2vroo48QFhYGb29vTJ8+HZGRkez+741dREcaRgmnmtNXtFKdir8TDWFu6wsP/9mIvb1Z5rio
phR3/vpERVEpX2WZBCvmmgEAzKp/wbEtTfuhq0puvv+B//Dv2B/y5OVlVCfhrDulKzf1llITTi0t
LZw4cQIzZ85EcHAwhEIhdHR0sG7dOsycObNJbXXr1g1Xr17F2rVrcfPmTQwePBijRo3CqVOnYGBg
oLSYNR2PYZidAGaqOhDSOu5eXI7Hd3+RO+7bfxm69v5ABRERdSQWVeLA97Jzt/h8ISYvah+9bGJx
Nf4KG4e8jHuqDoUo0CfkJ3Ts+pqqwyAtVF1ZiEMbanf64mtpQyKunWtp0yEYQyYdapVnFhcXIz8/
Hx06dFDaLy2rV6/GJ598gmfPntFiOCWhOZxqTlEPJ83hJMrVvnumtLS0MSB0L4zN3VUdClGgKDdW
1SEQJdDWNYW2bm29WGmyCQC5aXcgEdcouq1FjI2N4eLi0uxks7y8HF9//TWuXr2KzMxM/Prrr9i8
eTNeeeUVSjaViBJONad4P3VKOIlm0dW3wPA3TsHaqa+qQyEc7DoOUXUIREmMTDuyr/UMbQAAYlEF
8jIiVBVSvYqKinD+/HlMnDgRdnZ2WLp0KQYNGoTt27erOjS1QnM41Zy+kT3n8YqS9DaOhBDV09Y1
wdApRxH174+Ivb0FNdUlAAChthEEQv0G7iatQVvXBJ4Bc2HjTL8IqAtDMxfkZdYml4amHdnd7bKS
/4GVY9Nqz7YFOzs7XL58GQBQVVXFudsXaTm1SThFIlGT6m5pCm1dKzAcHdmlxZlsHTPSOAKBgC0k
TBrGtLPtLuvq1mchuvVZqOowCFFLRmad2Nfauibs68zkf9Ct739VEVKjUbLZel7ahLOkpASXLl1C
eno6ampaZ16I2tBbxnl469atbRyIetDT04OrqyuCg4ObVOtNrdHqYkLI/6s7pI4626Tmpt6CqLoM
Am1a+a2JXsqfllevXkVkpOzOBTwej0pqkFYl7UGvqKhAVFQUYmJiMGLECLi6uqo4MkIIaT+MzJ8n
nGUlaTC18kJhTjQkkhpkJv8DR7cRSnlOQUEB/ve//2HWrFnw9fVVSptSiYmJ+PHHH/Hhhx/Wu3Do
zz//RGRkJFasWKHU56ujly7hPHPmDOLj4wEAjo6O8PX1hb29PXR1dVUcGVF3DMOgrKwMSUlJuHv3
LoqKinD69GkMGTKE3fVCU/G4Vqkz7XdInRDSeozMnv8SXlLwDF16vIXCnGgAQFr8eaUlnCUlJVi/
fj2CgoKUnnBmZGRg/fr1mDx5cr0J55UrV3Do0CFKOBvhpZqQ9uDBAzbZDA4OxquvvopOnTpRskna
BI/Hg6GhIbp27Ypp06ahc+fOAICLFy+isLBQxdGpGI0uEEL+n46eGbR1azchENeUw8K+J3suLeEc
GIbWW2iilyrhvHbtGgCgV69e8PPzU3E0RJNpaWlh2LBhsLevrQJw7tw5FUdECCHth7H5815OgdAA
OvqWAIDKshzkpN5SVVhEhV6ahDMuLg4ikQj6+vrw9/dXdTiEgM/no3///gCA7OxsiEQiFUekSlw9
nDSkToimMjKvO6z+FE6dQ9ivk2KPNqvNe/fuISgoCMbGxvD398fVq1c5r/v999/Ro0cPGBoawsPD
A19++aXM9+elS5di8uTJMvd8/fXXCAkJebEp1NTUYM6cOXBwcICLiwtWr14NpoHpQpGRkQgODmZH
xE6fPt2Md6t+XpqEMza2dhcKV1dXWhlM2g0rKyuYmdUOHcXFxak4GtXhWrDX0DdlQoj6MjZ3Y18X
5z1BB49x7NdJMccgFjetLF9aWhqCg4NhbGyMCxcuYO3atdi8ebPcdb/88gtmzZqFgQMH4vr163jr
rbewceNGvPfee+w1KSkp7PQ8qfT0dM7v4R988AG0tbWxYcMG+Pj4YOnSpdi9e7fCOJOTk9GvXz8E
BATg1q1bGDNmDMaPH4/k5OQmvV919NIknKWlpQDA/nAnpL0wNzcHAOTn56s4EkIIaR9kEs78J7B2
6gt9IwcAQHVlAVKfnGlSe99//z0qKioQFhaGwMBADBgwAGFhYXLXLV++HEFBQfj+++/h4+ODjz/+
GO+88w527tyJp0+fNvl9zJ8/H+vXr0doaCiOHz8OGxsb/PLLLwqvX716NfT19bF69Wp4eXnhyy+/
hJaWFmesmualSTiltTaFQqGKIyFElvTfZGVlpYojUR0ej+tbCfVwEqKpTCw6s6+L856Ax+Ohk/fz
Yey4ezua1F5ERAQ8PT1hamqq8JqMjAxkZ2dj4MCBMscHDRoEhmHw4MGDJj0TgFwFkj59+iAhIUHh
9ZGRkRCJRBg8eDD69++PYcOGgcfjITExscnPVjc0Nk0IIYQQpTI0cwGfL4REUoPyknTUVJXCzXc6
Hv37AxhGgpzUG8jLiISFXeMWAOfl5bGjSYpId8/T15fdplZayUYZm8QwDCPX/ovn7e3t8fHHH8sc
d3R0bPGzX3YvTQ8nIYQQQl4OfL5AZuFQUd5j6BvZwbnOXM6o6+sa3Z6zszPu3r0rs/gnNzdX7hpD
Q0N2X3Sp8PBwAICnp+f/x8Znp+kBtVP2/v3330bF8e+//9Zbd9nPzw+PHz+Gr68vxo4dy/7p3r17
o9pXZ5RwEkKUhGpxEkKeM7Hswr4uyn0MAPAKfJ89lpZwHtkpjUv0pkyZgoqKCsyZMwdRUVHYu3cv
Zs2aJXMNj8fDokWLEB4ejh07dqCiogInTpzA7t27MXLkSHTr1g0AMGDAADx58gRXrlzBlStXEBIS
Ipe8Sn3zzTdISUlBaWkpvvrqK2RnZ2PhwoUK41y6dCl0dXUxZ84cXLt2DRKJBE+ePEFERESj3qc6
o4STEKIUtFKdEFKXqaUH+7owJwYAYGbdFR08xrPHb51fDLGoqsG2Jk+ejA8++AA7duyAt7c3vvvu
O2zatEnuumXLlmHevHmYO3cuTE1N8eqrr6JHjx7Yu3cve83EiRMxaNAgDBw4EOPHj8fkyZMxduxY
zucGBQXBz88PVlZWWLVqFX766ScMGzZMYZzOzs4IDw9HamoqgoKCoK+vj4CAACqNBIDHMMxOADNV
HUhDdu/ejeLiYtpGkLQ7Fy5cQGxsLDw9PTF06FBVh6My+9bYg2HEMsemfJyhYEERIUTdpT45gytH
ZwIAbDoEY8ikQwCAsuJUnPw1GOKacgCAm98MBAz/rlFtlpWVobi4GHZ2dvVeJxKJkJSUBAcHB4W7
EWZlZcHS0hJaWlpy52pqalBQUAArKyswDIPk5GQ4Ojo2qSxjfn4+ysrK4OTk1Oh71Bn9JCCEKAf1
cBJC6jC1et45VJj9iH1tYOwIv/6fsl/HR+7Gg6urG9WmgYFBg8kmAAgEAri6uta79bWNjQ1nsgnU
Vh+xtrYGj8cDn8+Hi4tLk2uAm5ubU7JZB61SJ4QoBY/H5yiERAknIZrK0LQDhNpGqKkuQVVFPspL
0qFvVLsdcJeebyM75TpS4k4BAKL+/R65GXfh6T8XppaeEOgYqjL0NsXj8SEQ6qk6jFZHCWcdeXl5
iIuLg56eHiwsLGBtbQ0dHR1Vh0XIS4Jj0RD1cBKi0cxsurELg/KzHrIJJwD0CdmE6qpiZCXVblGZ
mXgZmYmXOdtRd47uo9H/1Z2qDqNVafSQukgkwurVqzFo0CDY2NjA0tISffv2Rffu3eHs7AwDAwN4
e3tjxowZbFkFTRIYGIiAgABs27ZN1aGQlwDXXE2GkaggEkJIe2Fm7c2+Lsh6KHNOINTDwNDf4d59
ZhtH1f6kPjmNqooCVYfRqjS2h/P+/fuYOXMmIiMj2WOmpqbw9PRETk4OkpKSUFNTg6ioKERFRcHJ
yUlu9wJ1d+vWLQDA6NGjVRwJeSlwzOGkIXVCNJuZzfOEM/+FhBMAtAQ68B+2Gq4+b+De38uRk3oL
DCMGjy+AlpZ2W4aqMjyeFly8JkBHT7237tbIhPPo0aOYNGkSampqwOPxsHTpUrz77rtwcXFhr5FI
JHj48CFOnTqF06dPK5xYrCpJSUkIDw9HRkYG5s2bByMjI6U/Y9SoUQAAd3d3pbdN1A+VRSKEvMjC
1pd9nZdxT+F15jbeGDrlz7YIiaiIxiWcZWVlWLBgAWpqamBsbIywsDCEhITIXcfn8+Hr6wtfX18s
W7YMEkn7Gho8f/483n33XQDAf/7zn1ZJOKluGGkarjmc7ev/DSGkbRlbuEOgbQBRdRkqy7JlFg4R
zaJxczi//fZbpKamAqjdEYAr2eTC5zf8UVVXVytlr9bq6mqIxeKGL2wGkUiEkpKSVmlbqrnxtzSu
qqoqVFZWKjxfVlbG7rVLlI97Dif1cBKiyXg8Psxtn++XnpdBO+5oKo1KOAsLC7F27VoAgIWFBd5/
//0G7mhYYmIiZsyYAW9vbxgaGsLAwAA+Pj6YNWsWUlJSFN63fft2BAYGIjAwEAAgFouxfv16jBw5
EqampjA0NMTw4cMRHx8vc19mZiYCAwPxzTffsMdCQkLYtv773//KXJ+fn49du3Zh3LhxcHBwgI6O
DoyNjWFhYYHQ0FDExcUpjFHaJteioebG/6Jbt25h7NixsLW1hbGxMRwdHTFlyhRkZWU1Oq7du3cj
JCQEZmZmmDt3rsy1cXFxmDZtGqytrWFoaAhdXV3Y2toiICAAjx8/rjc20jTcBd4p4SRE01naPd9H
PDf9rgojIaqkUUPqMTExqKqq3UJr+vTpMDRsWZ2v3377DfPnz2d75pydncEwDB4+fIiHDx/i6NGj
2Lx5M6ZMmSJ3b1paGrsoRyQS4Y033sCBAwdkrrlw4QL69u2Lx48fw8ysdjJxVVUVe59U3YVPlpaW
Muc2btyIFStWAAB0dXXRpUsXPH36FPn5+Thy5AiuXr2K2NhYmJuby8UofY50Lqcy4q9r69atWLBg
Aaqrq2FpaYmuXbsiLi4O+/fvxz///IPz58/D09Oz3ri2bt2K2bNny10DAE+ePIG/vz+Ki4sBAE5O
TtDV1UVKSgpu376NggL1XhHY1ng8+XnOtEqdEGJh15N9nZt2W4WREFXSqB7OJ0+esK/d3Nxa1Nbt
27cxc+ZMlJSUYMiQIUhPT0dSUhKSk5ORmpqKgQMHoqioCNOnT8f9+/frbWvy5Mk4cOAAxo8fj337
9uH+/ft4++23AQA5OTnYuHEje62TkxMyMzPZnlqgNuHMzMxEZmYmfv/9d5m2DQ0N8d577+HevXso
KytDdHQ0cnJy8NVXX7Htb968uUWfRVPil7p27Rpmz54NkUiEX375BTk5OYiKikJKSgr8/f2RmpqK
JUuW1Pvcy5cvY/78+QgODsbmzZsRGxsrc8+yZctQXFwMS0tLPH36FMnJyYiLi0NxcTGuXbsGV1fX
Fr1vIovKIhFCuFg5+LOv8zLvQyymqU2aSKN6OOsOH9ddkd5UDMNgwYIFYBgGLi4uOHv2rMyWVw4O
Djh//jxcXV2RkpKCBQsW4PJlxcVsDx8+jFWrVskkS7/88gvOnDmDtLQ0mR5MPp8PGxsbGBsbs8es
rKxgY2PD2fZHH30kd8zIyAj//e9/sWrVKpSVlSEmJqZJ778l8UstWrQIADBt2jS888477HEbGxts
2LABffr0wcmTJxEVFYVu3bpxPjc8PBzjxo3DkSNHOOfY3rtXuyIyNDQUHTt2ZI8LhUL07du3eW+W
KMa5Sp0STkI0na6BFQxNXVBamAiJuAr5GZGwcgxQdVikjWlUD2diYiL72tHRsdnt3Lt3Dzdu3AAA
zJ8/n3N/VaFQiPnz5wMArly5gqioKIXtLV68WK43j8fjsUlSffMZm0tfXx/du9fOq8nIyGhRW02N
/86dO+znN3nyZLn2evfuDT09PTAMg3/++Ufhc/38/PD7778rXNBlYmICADh16lS982mJcnDO4aSE
kxACwNqpD/s6K+W6CiMhqqJRPZx1ewGzs7Ob3U7dxSb+/v4Kr+vVq5fMPYp66latWsV5XF9fH4Dy
V/qWl5cjKyuLXdHd0vabGn9sbCz7OioqijOh1tfXR0VFBZKTkxU+d9y4cTAwMFB4/q233sL8+fOR
mpoKLy8vLFmyBO+99x6srKzqfT+keWiVOiFEERunfnj6cB8AIDv5GtBnoYojIm1NoxLOuvM2ExIS
MGzYsGa1U3do3sHBQeF1dc/Vtxqcq2C2MuXm5uK3337D3r17kZCQwC6iUZamxl/3s2honmZLeibn
zp2LhIQE/PDDDygtLcXy5cvxzTffYO7cufjkk09gYWHR7LaJPO5FQ61T3osQ8nKx6dCPfZ2dehOi
mgoIhHpNbodhGNy8eROHDh1CTEwMbG1tYWRkhD59+mDSpEnKDJkomUYlnHV3zKm7gKippCvdAUBb
W/HWW3WH2lVV//HSpUsYM2YMysvLoa+vj8DAQAQFBcHPzw/Lly9HdHR0m8dUt9frs88+q3cXJ0W9
wo3B4/Hw/fffY+LEiVixYgUuXLiAiooKrFu3Dn/88QdOnjwJb2/vhhsijcLjmNpAczgJIQCgb2QP
Y3M3FOfHQyKuQk7qTdh1HNjkdo4cOYKZM2fio48+wtixYxEbG4sdO3agvLycEs52TqMSzi5durCv
w8LC8OWXX9Y7JKtI3cQ1LS0NTk5OnNelpaVx3tNW4uLiMHbsWJSXl2PWrFnYunUrhEIhe379+vVt
HhMAeHl5sa9fffVV9OjRo1Wf17dvX5w/fx6PHj3CBx98gIsXLyI5ORlTp07F/fv3G1XUnzSMejgJ
IfWxdRmI4vza2sxpCRealXAePHgQY8aMYcv9AcCZM2eUFKGsPXv2wNjYGOPGjWuV9jWNRv2kdXJy
QmhoKADIlRZqirqJa33Fw+uu/u7cuXOzntUYinb1OXnyJMrKymBgYIAtW7bIJJuqVDfh/Pvvv9vs
uV27dsVff/2FqVOnAqidP9qSnm4iizPhbGdbwhJCVMfedSj7Oi3hfLPauHr1qsJOHmVbvXo1Tpw4
0SbP0gQalXACwJo1a6Cjo8O+Pnv2bKPuy8vLY1/36tWLXYG9detWhff8/PPPAGrnjvr4+DQ3ZE51
906/fZu7kG5ERO0WYtra2pxJqfRYfdtBtgYfHx+2LNGqVauQm5vbps+vW8i+7vQI0jLci4aoh5MQ
UsvGuR8E2rWjimVFySjIUly95UUFBQXw9vZGTk4Odu7cCW9v73pH6WJiYjB69GhYWlrC3t4er7/+
OrutNVBbnWXBggXo3bs3zMzMMHbsWFy6dIk9/+qrryI+Ph5HjhyBt7c3FixY0Ix3TOrSuISzY8eO
bA3IsrIyjB49GosXL+ZcSFNWVoZffvkFfn5+WL16NXtcR0eH7R39999/sXz5cpl5iSKRCB988AEe
PHgAAPjhhx/qnevZHHV7WQ8ePAiRSCR3jTQpLigowLp169h93jMzMzFt2jRcu3YNAPDw4UNI2rAn
isfjYcuWLRAIBMjLy8OYMWM4a4FmZGTg7t3mbYPGMAzef/999u9Aqrq6Gps2bQJQm7R37dq1We0T
eTw+DakTQhTT0tKGfcch7NfJj483+l4jIyNs3rwZRkZGGDZsGDZv3qxwqDs1NRUBAQGoqanBgQMH
8PPPPyMpKQmBgYHszoCFhYUQCoX48ssvce3aNZSXl2Pp0qVsG8uXL4ednR369u2LzZs3K9zRjjSe
xiWcAPDVV19hw4YN0NfXB8MwWLNmDUxNTeHm5obQ0FCMHj0abm5uMDExwXvvvce5U9CECRPYvdhX
rlyJzp07Y9q0aXjttdfg6uqKDRs2gMfj4cMPP8SYMWOU/h78/PzYXsIDBw7AyckJb775Jn788Uf2
mlmzZrHbdy5fvhzOzs7w8vKCvb09zp49i08++QQAUFpaipEjR7bp8La3tze2bdsGAwMD3Lx5E35+
fggICMD06dMxceJE+Pn5wcHBAVu2bGn2M3766Sf4+vrC09MToaGhmDJlCqytrdkaoFu2bKl3wRJp
Gs4eTgklnISQ55w9nieJidFHGl06TSAQICgoCNra2nB0dERQUJDCDVykm5qEhYVhyJAhGD9+PLZu
3Yr09HR2Zz1PT0+sW7cOw4cPh5eXF2bOnIlbt26xI249evSAgYEBbG1tERQUJDMVjDSPRi0akuLx
eHj//fcxevRozJ07F1euXEFlZSUSEhKQkJAgc62/vz9mzJjBuR/6hg0bMGzYMHz44YeIj49HfHw8
276npyfWr1/f7NJLjXkPv//+O2bMmIErV64gMzMTO3fuZOcnArU9nMeOHcNbb72FxMREZGZmsj2K
W7Zsgb29PR4+fIiTJ0/iwoULsLS0xODBg1slXi4zZ85EUFAQ5syZg6tXr+L27dvs9ABzc3P0798f
wcHBzWqbx+PhzTffREREBB49eiRT+7NLly5YtWoVxo8fr5T3QWpx93DSHE5CyHP2nYZAoG0IUXUp
yopTkJ1yHTbO/Rq+sQkiIyPh5eUlU3PZx8cHZmZmMh1I2dnZ+OOPP/D06VN2ZzqaZtV6NDLhlHJ1
dcW5c+cgkUjw9OlTREdH49mzZ7CysoKTkxM6duzY4I5EY8eOxdixY1FUVIT79+9DV1cXXbt2bXD1
+xdffIEvvvii3mvOnTtX73kXFxeEh4fj2bNniI+Ph62trdzipMGDByMuLg4xMTEoKCiAv78/W5Ad
AE6cOIH79+9DS0tL7je4+n7zVEb8QO381gsXLkAkEuHx48fIzMyEh4dHvfVNG/sb8a+//goAqKmp
waNHj5CXlwc3Nzc4OTnRyvRWwOPJfzuhHk5CSF0CoR5cPF9F/P09AID4yN+UnnDW1NTI/Qzm8/nQ
0dFhSxSeO3cO48aNw5QpUzBixAhYW1sjPDxcqXEQWRqdcErx+Xy4ubnJFIZvKhMTE/Tv31+JUTUO
j8dDp06d0KlTJ4XXCIXCehct+fr6tkZoTSIQCNC1a9dWmVMpFArh5+en9HaJLD5HD6eEkZ9bTAjR
bK4+b7AJZ3LcSXQvSYe+kb3S2vf09MTvv/+O0tJSdlpZbGwsMjMz4enpCQD4/PPPERQUhJ07dwIA
/vjjD7l2eDwe9XgqEXXzEEKUgnNInXo4CSEvsLDzg6V97dbPjESE6JublNr+Rx99BIZh8PHHHyM9
PR0xMTFYtmwZjIyMMGfOHACApaUl0tPTkZSUhDNnzuCnn34CACQmJrLtBAUF4fLlyy3aCps8Rwkn
IUQpeHyuIXXq4SSEyPPq/bzMUPz931BamKS0tr29vXHs2DGcOHECHTp0QNeuXREbG4tz587Bzs4O
APDpp59CLBbDxcUFc+fOxbJly+Dl5YVRo0axO/DNmTMHZmZmcHBwwJtvvqm0+DQVDakTQpSCz1n4
nXo4CSHyHN1GwNzWD/mZkZCIq3Hnr08wcGJYg/dlZmbKHePagCUkJASpqalITU2Fnp4eLCwsZM73
7dsXjx8/RlpaGrtmIDIyEjk5ObC3rx3e9/Hxwf3795GcnAxra+vmvE1SB/VwEkKUgquHk+ZwEkIU
6TlkJfs6/elFxNzerPRnODo6yiWbddVdoCoUCtlksy5nZ2fo6uoqPTZNQwknIUQpOBNOMSWchBBu
Vg7+6NzjLfbriEv/Q+ydX1QYEWlNNKROiJLweDxVh6BSfM45nDUqiIQQ8rLoPvBz5GVEIi/jLgAG
9/5ejkc3NkDfyA7G5q7QM7RVdYj14vO14OA2ElYO/qoOpd17aRJOoVAIAOz2aHqRHAAAIABJREFU
jIS0F9J/kzo6OiqORLX4WkK5YxKaw0kIqYeWQBcDJ+7FpT8mIz+ztih7VXkOqspzUJD1oIG724fH
93YgdF4Uu0884fbSDKkbGRkBAPLy8lQcCSGypP8m65snpAm4yiJJqIeTENIAHT1zDJ1yDB7+c/AS
pSUsLb6Q8/sfkfXS9HB6eHggMTERCQkJCA4OZns8CVGlrKwsFBYWAqjdMlOT8fny/ycZmsNJCGkE
gVAPPQatgLvfTETf2oiq8nwYmXWErr6lqkOrF4+vBbuOg6EloEVFDXlpEk53d3dcvHgRlZWVuHHj
RrP32CZEWcRiMS5fvgwAsLW11fjtMrkSTurhJIQ0hZGZCwJHrFN1GKQVvFQ/IaVbR0ZGRuL27dsq
joZospqaGpw9exZZWVng8XgYOXKkqkNSOa5FQxJxtQoiIYQQ0t68ND2cAODl5cVuU3Xjxg08e/YM
vr6+sLe3h76+vqrDI2pOIpGgtLQUSUlJuHfvHsrKygAAw4cPZ+cYazIe56IhGlInhBDykiWcADB0
6FAYGRnh9u3byMrKwvnz51UdEtFQAoEAISEhcHZ2VnUo7YIWV8JJPZyEEELwEiacABAYGAhvb29c
vnwZKSkpqK6uBsMwqg6rXZMwABgAfAm4q0XywFNwhjzH4/FgYGCAzp07o0+fPho/b7MuPl9b7hjN
4SSEEAK8pAknAOjr62PUqFGqDuOlMe/TS4hNKIDdwB3QNsmWO79i5B44m2n2KmvSMpx1OKmHkxBC
CF6yRUOk+UrLa3uaGAn3X7mYCnSTFuJryfdwikWUcBJCCKGEU2OU/X/CCUZBwsnQ4g7SMtw7DdGQ
OiGEEEo4NcbzHk7u3RDEtJqYtBDnHE5RlQoiIYQQ0t5QwqkBakQS1NRIAACMoh5OSjhJC2kJOIbU
aQ4nIYQQUMKpEUrL6vzQVziHkxJO0jJcczglYurhJIQQQgmnRiiveJ5MKhpSF1HCSVqIay9hMQ2p
E0IIASWcGoFdMIT6Ek5a3EFahnOVOvVwEkIIASWcGqFuwglG0aIhSjhJy2hp6cgdE4sqVRAJIYSQ
9oYSTg1QKtPDyf1XTj2cpKW453DSoiFCCCGUcGqEsnKaw0lan5aQYw5nDfVwEkIIoYRTIzRmDicN
qZOWEnAsGhLRkDohhBBQwqkRZOZw0qIh0kr4WvIJp0RMCSchhBBKODVCWUWdHk6Fi4ZoSJ20jIBj
SF1EQ+qEEEJACadGKKNFQ6QN8GmVOiGEEAUo4dQAdQu/Kx5Spx5O0jICoZ7cMbGoQgWREEIIaW8o
4dQApbRoiLQBLQFXwlkJhmFUEA0hhJD2hBJODVBetywSQ0PqpHXweDzuYfWachVEQwghpD2hhFMD
1F00pHBIXUwJJ2k5rmF1EQ2rE0KIxqOEUwM0bi91msNJWk4g1Jc7Jq6hhJMQQjQdJZwagAq/k7bC
lXCKaEidEEI0HiWcak4iYVBZJWa/VtzDSQknaTktriF1SjgJIUTjUcKp5sorZBNJSjhJaxIIDeSO
1VSXqiASQhpPIpGoOgTCISIiAsOHD4eVlRWMjIzQvXt3rF+/nj1/6NAh+Pv7w8jICFZWVujXrx8u
XbqkwohJfQSqDoC0rrKKF+Zmirn/ymvEVW0QDVF3nEPq1WUqiISQ+h05cgTff/89oqOjUV5eDnd3
d3h6esLDwwPz58+HtbW1qkNsVz755BNkZmayXwuFQtja2sLFxQUTJkyAqampUp/39OlT9O7dG9XV
1bC3t4e/vz8ePHiAe/fuAQD279+PKVOmAAC8vb1haWmJiIgIJCYmKjUOojyUcKo5mX3UobiHs0Zc
3RbhEDUn1Jbv4RTVUMJJ2pc5c+Zgy5YtAABDQ0N0794d8fHxiIqKAgCMHTuWEs4XHD58GE+ePOE8
t2DBAqxduxazZ89W2vPWrFmD6upqTJ06FXv27AGfXzsgW1VV2zmycuVKAMDmzZtlnis9T9ofGlJX
c+Uv9HAyino4JZRwkpajIXXS3v35559ssvnbb78hJycH//77L3JycnD//n0sW7YMJiYmMvccP34c
y5Ytw/Hjx1URcrvy3//+FzExMbh8+TJWr14NOzs7lJWVYd68ebhx44bSniNN/gcMGMAmmwCgo6MD
kUiE2NhYAMDgwYNl7tPRka8FTNoHSjjVnHwPp6IhdUo4ScsJtA3ljtGQOmlPTpw4AQAYMWIEpk+f
Dl1dXfacj48Pvv76a3Tu3Fnmnu3bt+Pbb7/F7du32zTW9sjc3BweHh7o378/Fi9ejPDwcPD5fEgk
Epw7d05pz0lPTwdQ2wP9ouzsbIjFtYthjYyMlPZM0rpoSF3NlTV20RAlnEQJhBwJZ01ViQoiIYSb
dI7fi72YXMrKyvD48WMUFRUBADIyMtg5hCYmJnB1dWWvffz4McrKyuDk5AQrKyuIRCL8888/iI6O
xty5c2XaLS0txZ07dxAVFYWOHTsiMDAQlpaWCuOoqanBzZs38ezZMxQUFMDR0RH9+vWDjY2N3LXF
xcWIj4+HQCCAj48P+7y///4bVVVVGDlypEySxjAMIiMjcf36dTg6OmLkyJFN6iXs3LkzOnXqhPj4
eJSVyf5ymZOTg5SUFBgYGKBLly5y90rfj42NDRwcHAAAycnJyM3NRWVlJYDavy/pZy6VlZXFvn74
8CEyMjIAAF27dpWLvbGfNdfnlpaWhnPnzqF79+7o3r17oz8TogDDMDsZorZOXHjKDJ50mP0zfNZ2
ZlaYv9yfxcfGqTpUogYe3djI/L7aWubP7QvLVB0WIay5c+cyABhtbW0mMjKy3muvX7/OAOD8ExIS
InNtQEAAA4DZuHEj8/fffzMmJiYMAMbQ0FDmupMnTzKmpqYybRkaGjJHjx7ljGHx4sVsW3X/GBgY
MLt375a7/vTp0wwAxsLCgmEYhlm2bBkjFArZ+3R0dJh9+/YxDMMwjx49YhwdHWXa9fT0ZLKzs+Xa
dXd3ZwAwK1eulDleXV3N6OrqMgCYP/74Q+bcxo0bGQCMv78/53t7/fXXGQDMRx99xB579913FX7m
Df2JjY1t9mdd93MTiUTM+PHj2XvWrl3LGT9pGurhVHPyZZEUzeGkskik5bh7OItVEAkh3D788ENs
374d1dXVCAoKwurVqzF79myZeYJSHTp0wKpVq7B7927ExMRg8ODBGD58OADAzc2Ns/24uDh8/vnn
0NbWxttvvw0zMzP23IEDBzBlyhRYW1tj+/bt8PDwwM2bN/HZZ59hwoQJuHPnDnr06CHT3uXLl9Gj
Rw+Ehoaic+fOyM7Oxvbt2xEeHo558+Zh9OjRCntHV6xYgdWrV2PQoEEYMmQIDh06hLt372LevHno
0KEDJk6cCIlEggULFqCmpga7du1CTEwMvvzyS2zcuLFRn+fSpUtRWVmJ3r17Y8KECY26pz4TJkxA
p06dsHr1ahQUFGDy5Mnw8/OTuaaoqAjffvstAODTTz9le2ytrKzYa5rzWUstXLgQx44dQ9++fTFg
wAB4e3u3+H0RUA+nuttx4JFMD+fQ6Xs4ezjnHxqq6lCJGnj26JBcD+flIzNVHRYhMs6ePcvo6+uz
PVg9e/Zk/vnnH4XXjx07lgHAfPbZZwqvkfZw8ng8ZtKkSYxIJJI5X15ezjg5OTEAmBs3bsic+/77
7xkAzMSJE+XazczMlDuWkpLC8Hg8BgBz/vx5mXPSnjoej8fo6Ogwp0+fZs/l5uay9/F4PGbEiBFM
RUUFe17a+9ujRw+5Z0p7OKdOncrs3buX+eabb5ju3buzcRcXF8vd05weTikXFxcGABMWFsb5/qV/
d+np6XLnm/NZ1/3c9PX1mZs3b3LGTJqPFg2pObkeTqrDSVqRUMdY7hj1cJL2ZsSIEbh37x769esH
ALh79y6Cg4Mxf/58uXmITRUYGIhdu3ZBS0t2vvy+ffuQkpICX19fBAYGypwbN24cAODUqVNy7XHN
03R0dGTnRKampnLGoaWlhT///BOjRo1ij1lYWMDDwwMAMHToUBw7dkxm0VTfvn0ByM6RfFFYWBje
eOMNLFu2DBEREQgJCcHatWvb1eKd5n7WUnv27EFAQECrxqiJaEhdzZWVv1AWSeGQOi0aIi3HlXBW
VxaqIBJC6telSxdcvXoV27dvx6effoqcnBxs2rQJt27dwtmzZ2Fubt6sdqdNmyaTxEk9evQIQG0i
uHnzZplz0tqRFRUVyMnJkRkarkssFiM7OxtZWVmoqantTFC0S5KJiQlGjhwpd1wa2/jx4+UW2Ei/
ZhhG4ftbsGABpkyZgqdPn+LQoUP4888/4erqis8++wyff/4559SEttaSz9rc3FwpUwOIPEo41dyL
PZxg+GAYHmpHVeocZiSQSMTg87lXsRPSGNocCWcVJZykneLxeHjnnXcwYcIEzJ07FwcPHsTt27cx
b9487Nu3T6nPkhZNv3fvntyq9brS09NlkqCKigrs2bMH27dvx927d1W+Dae1tTV69+6N3r17Y+rU
qbhw4QLGjBmD//3vfwBq542qWnM/a9K6KOFUcy8WfgcARqwFnkD+eI2kGjp8vbYIi6gpbV357e2o
h5O0dxYWFti/fz9KSkpw5swZHDhwAJs2bWp2LycX6ZDzK6+8gg8//FDhdXVLLVVUVCAkJASXLl2C
j48PlixZgqCgIPTo0QODBg1ii5+r0rBhw7B48WKsXLkSq1atwqJFizhrZ7al5nzWpPVRwqnmXqzD
CUiH1TkSTnEVdASUcJLm09aVr20oqi6FRCICn0/fbkj7xePxMGPGDJw5cwYMwyAxMVGpCaeXlxeA
2tqOAwcObNQ9a9aswaVLlxAcHIwLFy7IDIELhUKlxdZS0rmwVVVViI6ObvT8x/Ly8laJpzmfNWl9
qp9sQVoVdw8n7TZEWodAqA8+X/4HIfVykpeBNMHk8Xjo1KkTe1y6ACg7O7vZbQcHBwMAIiMjERkZ
2ah7Ll++DKB2oUt73rIxOjqafW1q+nyUQyCo/Vnz9OlTuXu2bduGkydPtko8zfmsSeujhFPNlZcr
6uGUR7U4iTJo65nJHauqyFdBJITI++mnn/Ds2TO54xKJBBs2bAAAdO/eXSZx6tChAwDg7NmzzX5u
//798dprr0EsFmPWrFlIS0uTu6aqqopdDATUJr4A5PZwP3z4MLtjElcy15YuXryIVatWAaid31m3
PmnHjh0BAHl5eeze6NXV1di2bRtmz54NAwODVompOZ81aX00xqXmyivlezihYHtLKo1ElEFHzxyV
ZbI9QVXleYBF4+5/8OABtmzZAgB444032FItqnb06FHs3r0bsbGxEIlEcHd3R+fOnfHVV1/B2Lh2
sVRmZia++uorREREIDk5GU5OTnB3d8fUqVM5VwyTtrd27VosWLAA/fv3h7+/P9zd3XHv3j0cPXoU
2dnZMDQ0xN69e2XuGT9+PNavX4/k5GT06tULkyZNgru7O8aPH9+kZ69fvx5RUVGIjIyEl5cXXn/9
dXTp0gWpqam4ceMGIiIi8PDhQ3Yv94kTJ+LixYu4cuUKPDw8MGDAANy+fRvR0dEICgrCxYsXsXfv
XnTr1g1TpkxR2mdUn23btuHEiRMoLy9Heno68vLyANT2Au/du1dmlXq/fv1gb2+P9PR09OzZEwMH
DsStW7dQWFiIxYsXIzExEQcPHmyVOJv6WZPWRwmnGmMYBhUcCaeEanGSVqTTwh7OxMREtpRJr169
2kXCuWDBArmdVxISEnD27FksWrQIxsbGiIiIwJAhQ1BQUMBek5aWhhs3bsDa2poSznbCz88PGRkZ
uHz5MjtkLRUSEoJvv/0Wnp6eMscHDhyItWvX4rPPPsPdu3dx9+5dTJ06tckJp52dHe7du4dly5Zh
x44d2L59u8y5QYMGsb+8AMB7772HZ8+eYd26dXj8+DEeP36MgIAA3Lp1C66urujatSuSkpIwbdo0
DB8+HBYWjfytrgWSkpKQlJQEADA2Nka3bt0QGBiIxYsXyyVvhoaGOHjwIKZMmYKUlBScP38ezs7O
WLJkCZYuXYpJkya1WpxN/axJ6+MxDLMTwExVB0KUr7yiBmNnnZA7btd/L7TN5IsFLx36Czpb+ckd
J6Qprv75FlLiZOdm+Q//Du5+Mxp1//Hjx9nizL/++ivefPNNpcfYFHfv3oW/vz8YhsErr7yCL774
Avr6+rh//z7u3buHJUuWwNzcHIMGDUJ4eDjMzMywdetW9OzZE4mJiYiIiGC3ESTtQ1VVFSIjI5GS
koKSkhI4OzvD3d0dzs7O9d5XXFyMmJgY6OnpoXPnzpz1NpsiMTERaWlp8PDwqDdZzMvLw+PHj+Hu
7i5TxkckEiEiIgLu7u4yUwDam+rqasTGxkJbW5stPN/WGvtZk9ZDPZxqjGvBEADwGW3O49WiytYM
h2gIXQP5fZ0ry3JUEIly/P7772wh7M2bN8Pe3h4A4OHhwfbQpKWlITw8HADw9ttv47XXXgMAdOrU
CYMHD277oEm9dHR0EBgYKLcLTUOMjY2bfE99XFxc4OLi0uB1FhYWnD39AoEA/v7+SountWhra8PH
x0elMTT2syathxYNqTFFCacWjzvhpCF1ogy6+lwJZ/NX96qadIGJgYEBm2y+qO7CDemWg4QQQp6j
hFONlVdyr8BTlHBWU8JJlEDXwFruWMVLnHBKV7jWV8y67ipYVRe9JoSQ9oiG1NVYhYIeTgFfG1wV
N2lInSiDHlfCWZqllLbFYjHS09Ph6OjIloxpbdKtBOt7Xt3tBpsSl0gkQlJSEpydnVtUyLu0tBS5
ubkKhwzFYjFSUlIgFAphZ2fXLva7VpaqigLkZdxDUe5jlBQ8RXF+AgpzoiEWVYLHF0DPwAZagvZb
w5K83PSN7ODb/1OYWXdVdSjtHiWcaqxMYcKpy51wUg8nUQI9Q1u5YxWlmS1q8/DhwwgLC8Pff/+N
wsJCmJqaonfv3ti4caNM3b+6fHx8UFVVheDgYJkVqnX98MMPbAmmU6dOybQVFBSEnJwcdkVuTk6O
wuHykpIS9vXChQuxfPly9uu7d+/K9XoeOXIE69atQ0REBCoqKqCjowNfX1+sWbMG/fv353zG33//
jTlz5gAAvvnmG4SGhmLHjh3Yv38/Ll++DEtLS7l6gxcvXsSKFStw48YNiES13w8EAgHs7Ozw+eef
4+233+Z8VnuXn/kAyY+PI/3pRRTmRNd7bUl1aRtFRTRRYU40SgoTMfbt66oOpd2jhFONKerh1Obr
gGtDMZrDSZRBUcIpkYjB53PXgK3P/v37MXXqVHbhDgAUFhbi7Nmz8Pf3xx9//IGhQ4fK3RcXF4eq
qiq2+DSX3NxcxMXFAahduVxXQkICMjOfJ8pisZi9tj4ZGRnIyMhgv67b+ykWi/HJJ59gzZo1AGoX
Uzg5OSE1NRW3bt3C0KFDsXnzZrz11lty7ZaWlrLPLyoqwtatWzF79myFcRw8eFCm7IyJiQl0dXWR
nZ2NlJQUpKSkNPhe2pOa6jI8izqAuIidKM5r+O+BkLbS0l+oNQUlnGpM0RxObQXDS1ViGlInLadr
YA0eTwsMI2aPMYwElWVZ0DfiXnSjSHh4OA4cOAA3NzeEhoZiyJAhKCwsxK5du3Dq1CkUFhZixowZ
SEhIaHGJmhddunQJIpEIkyZNQnR0NCwsLNiV6C86deoUli5dCqB2/+u6NTfr9m7++OOPWLNmDbS0
tLBmzRrMnz8fQqEQ2dnZmDZtGv766y8sWLAAr7zyikz5mxddvHgRBw8eRIcOHRAaGoqQkBBUVj7/
/ysWi/HOO+8AqN0l5+jRo/D19QWfz0d5eTmuX78OfX39lnw8baamugyxd7bg8Z1faItU0g7x4N3v
Y1UH8VKghFONKVqlriPQ4zxOcziJMvD5WtAztEV5iezwbllxWpMTzj179mDChAnYs2ePTII0YcIE
TJgwAceOHUN6ejq2b9+O+fPnKyV+KWm9QD292v8vQqEQ3bp147z2wYMH7GtnZ2fO6/Lz87Fy5UoA
wDvvvIMPP/yQPWdtbY2wsDA4OzujvLwc69evZ6/lEhYWhp49e+LKlSuciWNMTAyKi4sBAHPmzEH3
7t3Zc/r6+pw9wu2NRCLG04dheHB1NSrLFZfV4mvpwMoxAKaWnjAy6wQDE0dIJCKIqsuhZ2gNHT3z
NoyaaBo9A2voGij+5ZA8RwmnGlOUcOoK9QCx/PEqUUUrR0Q0hYGJo3zCWZQMK4em1Qx86623sG3b
NrmFOHw+H0uWLMGxY8cAAPv27VN6wqlsGzduRGFhbQ/d3Llz5c5bWVmhf//+OH/+PP788896E05H
R0ecOHFCYS+lWPz8P/jt27dbGHnby8uIxK1zH6EgO4rzvJZAF85dXoFL11BYO/aGlkC5vduEEOWj
hFONKUw4tfUAjtyymobUiZIYmjgjJ/WmzLGSwsQmt9O3b1+Fq7779OkDIyMjlJSUsLUy27PIyEgA
gK6uLtzc3FBdLb90T1rnMzk5ud62PvvsM9jZ2Sk87+npCScnJ6SkpODw4cMYPXo01q9fD3d39xa8
g9YnEdfg4bU1iL65EQwjkTuvo2cOr8D34eozDdq6JiqIkBDSXOpTG4PIqVAwh1Nfm3tInXo4ibIY
mnaQO1ZakKj050iTrszMTJk5jO2RdMFPZWUl9PX1oaOjI/dn165dAGpXvUt7Q7k0VEJJW1sb27dv
Z+e1njlzBh4eHhg7dmy77fEszn+K83tH49GN9XLJpkCoD+9+H+OVd2/DM2AuJZuEvIQo4VRjino4
9XW4h+FoDidRFiOzTnLHSgqV3wtpYlKbeDAMg5oa7l+w2ovU1NQmXZ+Xl9ei5w0fPhxXrlxht2KU
SCQ4efIkAgICMHnyZJSWtp9yQYnRh3H2t6HIz3ogd87RfTTGvH0N3v0WQahDRfUJeVlRwqnGFCWc
hroGnMdplTpRFmNz+dqYxXnxSn9Obm4ugNq9po2MjJTevjJJi7I7OTmBYZgG/7i6urb4mf7+/rhx
4wbOnDkjs3L+wIEDGDx4sMxcT1UQi6pw69zHuH5yLkTVZTLndPQsEDTuV/R/dWeTF5sRQtofSjjV
WFMTTurhJMrClXBWVxYofYtLaZ3M+mpt1qcte0W9vLwAACkpKQ3O0VS2kSNH4syZMzh9+jQcHR0B
1C4m2rdvX5vGUVdpUTIu/D4G8fd/kztn7zoMIW9ehnOXMSqIjBDSGijhVGOK6nAaKljZSouGiLII
tA1gYOIsd7woJ0Zpz7h9+zYqKmrnHfv6+sqdly42qrsLUF1PnjzB1q1blRZPQ+qWJjp06FCbPbeu
UaNG4YcffmC/vnPnjkriSEv4C2d3D5MbQudraaPnkK8xMHQvlZohRM1QwqnGFO00ZKzHPQ+qqoZr
/yFCmodrb+H8LO4yN4rcuXNHZqeeuqTJIp/Px0cffSR3Xrri++nTp3JtPHv2DCEhIWytyrYwZ84c
ODg4AABWrFjR5DmdymJu/rwupYWFRZs+WyIR4/6Vb3H58DS5Iu6Gph0wfNopdOn5cm63SQipHyWc
akzRXuomhtxz3WgOJ1EmcxsfuWP5mZFNamPz5s0YMGAAoqNl98v+7rvv8OuvvwIAJk2aBE9PT7l7
vb29AdQOu8+dOxdPnz5FZmYmNm3ahMDAQGRmZmLIkCFNiqcljIyMsGHDBgC1va59+/bFyZMn5a5L
SEjAjz/+iLKyMrlzjXX48GFMmTIFly5dktkSNCMjA1988QX79cCBA5v9jKYqL8nE3wdC8ejGj3Ln
HN1HY+SMv2BuK/9vhhCiHqgOpxqrqOROOE0NuHs4K6mHkyiRhV0PuWO56U0bwh0/fjzOnDmDrl27
wsnJCe7u7oiMjER+fj6A2lqc69ev57x3+fLlOPF/7N13XBTn1gfw31KXKoqINKUqiqJgiyKKBhVL
ErsxJoqxRJPXxK5R443da0tMTIwVRZPYsGNvwRKwBRFFUOlFpHdYdpn3D+6OrDMDCywl6/l+Lp8L
M8/MnF0IHp5ynjNnUFZWhh07digMnxsbG+PChQsIDAzE1atXqxVTbYwcORI//PADvv32WyQkJOCD
Dz5AkyZN4OzsDA0NDcTGxrL7sH/22WcwMOCfb12VkpISHDp0CIcOHYKRkRHatm0LLS0thISEsAno
3Llz4enpqbLXVpnE5xcQfH42JMVZCsdFIk107rsM7bpzC+ETQtQL9XCqKYlEhrIyhnNcS1MEfaFF
Q7Jihd4QQmqjuWUXAIpF2wvzkpGfo/yCmZUrV+LWrVtwcXFBQkICrl27hszMTBgaGmLq1Km4fv26
4J7jXbp0weHDhxWGjcViMQYOHIhLly6hV69eNXpdtTV79mw8ePAAXl5e0NXVRU5ODkJCQvD3338j
JSUFLVu2xNixY9ktNWvCxcUFQ4cOhaGhIfLy8nD//n0EBweDYRhYWVlh586d2LhxowpfFb/SknyE
XJiLoBOTOMmm2MAM738c0KDJptB0jX+jWbNmYcCAAezuW+qotLQUK1asQLt27SAWi9G6dWt4e3sj
La1869O0tDRMnjwZtra2EIvFcHZ2xuTJkxs4aiInYhjGD4BvQwdCVCsntwQjpwdyjhsb6uDE7mGY
ccQTElkJ5/z2MX8J7rVOSHVd8B/EGUbvPnAjHDtPFLwmPz8fCQkJAIA2bdpAU1MTQHldyocPH8Lc
3BwuLi7s8aoUFRXhyZMnyM3NRc+ePWuVyKmaVCpFZGQkXr58iaZNm8LGxoYtn6QKpaWliIqKQlJS
EmQyGRwdHWFnZwctrbof3EqOvoa7F+dztjgFAPNWvdHrg+3QM2hR53FUdP/+ffz+++94+vQpnjx5
gpSUFFhbW8PR0RGOjo5wcHCAl5cXunfvDgB4/PgxtmzZAkNDQ/z888/1Gmt19ejRA3fv3sXPP/9c
L9u8BgcHK4waiEQiGBsbw9raGj179oSHh4fKnzlt2jTs3r0bmpqa6N0XJ0DBAAAgAElEQVS7NwoK
CvD48WNERESgVatWcHV1xdOnT2FgYABPT0/ExsaipKQE0dHRKo+FVB8NqaupQoHhdLG4/B9pXS19
3oSzuLSQEk6iMha2XpyEM/HFxUoTTkNDQ945maamphgwYEC1Y9DT00PXrl2rfV190NLSgouLC1xc
uAusVEFbW7tO788nPyce/1xfgYQo7vxUkUgDHXrNQ4decyES1d8AW0lJCb7//nts3LiRrT0qT4wS
ExNx48YNXLt2DQAwZcoUNuFMTEzEvn37YGpq2ugTzvoWHR3N7ozFp0ePHjh79iyaN2+ukuclJyfD
z88PIpEIjx8/Zn9HSKVSiEQinDhxAk+fPoW9vT0eP34M/f9VYykp4f47RxoGJZxqSmj+pr64fEs8
XS095JVkcc7T9pZElaycBnEWiaTE3kBxYTrE+qr5h4g0DkX5rxH+9xa8fHQQZWXckmwGTVqh19Bf
YGbdvV7jkslk6Nu3L0JCQiASifDtt99i7ty5ColQcXExrl+/jsDAQIUpGq1atcKMGTNgaEg7HAnR
0tJCREQEcnNzERcXh4MHD+L48eMICQnBxIkTce7cOZU8JyIiAjKZDBYWFgp/kMp768PDyytg9OjR
g002AUBXV1clzye1RwmnmhIqiaQnLv+WC/ViFktp4RBRneYW7jBo0goFFeZtMmVSPP9nHzp6zG/A
yIiqvE4IxotH/oiPPIMymYS3jZObLzr3XQ5tnZotgqqNnTt3ssnmiRMn8NFHH3HaiMViDB48GIMH
D1Y47uLigu3bt9dXqP9ajo7lGz24u7tjxIgR+Oyzz3Dw4EFcu3YNEokEOjo6tX5GcnIyAAgm//Lz
jX3HsXcZJZxqSrCHU6/8Wy7W4i/+Tj2cRNUcOo5H2K3/Khx7ErwVZWUyNDPvgLcXFpHGRVevKcys
e0Ak0oBUUoC87Fhkp0UgNe4mUmL/QlF+iuC1pi3d0MV7NZpbNsyUhszMTHz33XcAgBEjRvAmm5XJ
zc3FixcvoKWlBVdX1yrPJSUl4eLFi3Bzc1Mo9A+Ub8P65MkTPHv2DNra2mjdujVsbW1hb2/PblKQ
lpaGhIQEGBgYoG3btpx4YmJikJWVBXNzc7amq7Li4+MRGhqKhIQEiMVitG3bFr179+ZtGxkZiYKC
AtjY2MDMzAxSqRS3bt3C06dP8eWXVS/y8vHxwcGDB1FSUoLS0lKFhDMsLAxSqRSOjo4wNjZWuK64
uJgtgda5c2doaGigtLQUjx8/RkxMDIDyIfKHDx9ynvn6dfkuZunp6ez5Zs2aceZE5+fn4/79+wgP
D4ednR169OghOOxf2/eBKKKEU00JzeGU93CKtfkTzuLSmtf+I4SPY+dJeBLyM2QVym6VySR48veW
BoyKVI8IIg1NMGX8v1feZmjSGq69F6N1uxFsMtUQAgMDkZGRAQBYvnx5ta+/ffs2hgwZAlNTU6Sn
pwueS01NxejRo3Hy5EkAwKZNm9iEs6ioCP/5z3+wZcsW3r3r8/Pz2fJXhw8fxqxZs9CtWzfcvXuX
03bx4sU4cuQI5s2bh02bNin1GsLDwzFp0iTeJK1Xr164cOECp1dw4sSJ7AIkFxcXjBgxAjk5OTA0
NFQq0ZInhy4uLpzSXv3790dGRgYCAwMxZMgQznVdunQBUF6r1tDQEOnp6ewxoDxxrvj1244fP47j
x48DAD7++GOF7VsDAwPx6aefIjv7zaYDhoaGOHDgAIYPH865V23fB6KIEk41JdTDySacAj2cNKRO
VE2sb4r23b/E49vK/QNJGiNGqWSzaYsOcO46A63bj4SGhnJVBOrS8+fPAZQnFXzbn6rK7NmzcerU
KfTq1Qt9+/ZlNx2QyWTo06cP7t+/D5FIhGnTpmHAgAHQ1NREWFgYwsLClK62UFMJCQmIj4/H3Llz
0b17d7Ro0QJXrlzBzz//jDt37mDt2rVYt24d77VRUVFYvnw5dHR0MHXqVDRt2rTK50VHR2Pr1q3Q
0NDA+vXrax2/kZER1q9fjwcPHuDo0aNo3rw55s/nTscJCAjAvXv30L17d4wcORIAFOZ6Hj58GOPH
j0eLFi2we/duODs7IyQkBMuWLcPIkSNx//59uLtzawcDNXsfCBclnGqqsIo5nGJt/rlUVPyd1IX2
Pb7Gy7A/UJiX3NChkDqkpWMIHb2mjSLZBMoTBQAqLTX1tszMTOzduxfBwcHs6na5bdu2sfvV+/v7
49NPP2XPyZOiutarVy8kJiYqLJ7p168f0tLSsGvXLgQFBQleu23bNowdOxa///67YGLMMAwCAgLw
+vVrhIaG4sCBA2jSpAmOHTuGYcOG1Tp+Q0NDLFq0CPv378fRo0fRrFkzLFq0iNPu+fPnuHfvHjp3
7sw5X1RUhAULFoBhGJw6dQo9evQAAHh4eEAkEmHu3LlYt24djh49yhuDMu8DqRoVfldTxVXN4RQa
UqceTlIHNLV00WeEf72WwiH1Ly0xGH8FTMA5v35IibnR0OGw9RdbtWpVp885cOAAJ9kEwA579+3b
VyHZrE9NmjThXakt39Y1MTFR8NoePXpg3759lSZZMpkMo0ePxpdffomdO3dCJBJh06ZN+PDDD2sf
vIr8+eefSEhIQKdOndhkU04+rzcwkFu3Wk6Z94FUjXo41VSVcziFhtRpDiepI81adsRg3+u4d3kx
CnLiAJEGjExsoa1Lq0obq1JJPpiyMljavw+jpraQSgpRkJeIvMyXSE++j7ysGN7rstOe4vrRcbBy
GAj3/qtg1NS2fgP/H/kuU/KtUOtCs2bNeHsr8/Ly2GRu1KhRdfb86srPz0dKSgri4uIAVL7b0oQJ
EyAWiyu9n5aWFh48eICkpCSEhoZi27Zt+PTTT7FmzRoEBATw1tStb0+ePAEAaGpqcqoOyOt0FhUV
IS0tjXfnMmXeB1I1SjjVVJVzOKmHkzQAEzNnDPjkZEOHQVSkqOA1EiIDERsRgPSke5zzSS8v4VVc
EDr1WYK2XabVew+3vFzPixcv6vW5wJv5owBgb29f78+v6NGjR9i+fTuOHDmCrCxu/eXacnV1haur
KwYPHow5c+ZgxIgRuHDhAjw9PfHs2TOVFX+vKfn34uHDh5Uu9klOThbcKpfUHiWcaqrKOZxaNIeT
EFI7egYt0MZ9Mtq4T0bmqzA8Cd6KhKhAAAzbRiYtxsNry5EQeRY9h/4MQxPbeovPyckJQHmpnJSU
FFhYWNTbsyuu/C4uLq63577tzJkzGDVqFDQ1NTFq1Cj07t0bvXv3xr179/D555+r/HlisRhHjx6F
mZkZMjIy8MMPP2DNmjUqf051yL8XH374IebMmSPYzsHBob5CeidRwqmmiktqOoeThtQJIdXXrKUr
PIfvQWbqY9y/8i2nxzMt6S7O7Xsf3Qdtgm27EfUS03vvvcd+vmbNGmzbtq1enguU92rq6OhAIpEg
MjJSJfcsLKxeh0BJSQnGjRuH0tJSnDp1SqGwvXxBVV2QVwUICQnBP//8o/R11X19ymrfvj2A8jqp
Xl5edfIMUjWawa+mqurh1BNYpV5EczgJIbXQzLwjBk44i/eG/Awd3SYK56SSfNw5MwPB5+dAWg+j
Kd27d8eYMWMAlO84JN/+sD5oamrCw8ODfbYye3rLt2mUL3aqaNeuXTh7lrs/fWXu3r2LoqIiGBkZ
wcfHp1rX1kZZWRmbZJuYmCicE3qNWVlZ8PX1rZN4PD09AQChoaEIDQ2tk2eQqlHCqaaqmsOpJzCk
TgknIUQV7DuMxdApN2Fp7805F/34D1zYPxDZaU/rPI6NGzdCLBajtLQUHh4eCoXAKyooKMCOHTtU
UjtSbtOmTdDQ0EBcXBymT5/OGVpPTExEQcGb37l2dnYAgIyMDDY5lkgk2LVrF2bMmMEpol4VedH9
vLw8XL9+nT3++vVr+Pv7AwBevXqFoiLV7TCXn58PX19ftri6POmWk7/GoKAgMEz51IuYmBgMGTKE
LRivan369MGYMWMgk8kwefJkJCUlcdrId0UidYcSTjVV0zqcRaX5dRYTIeTdomdoDq/Rv6PbgP9C
Q1OxNE9u5nNc8PfB89D9dRpD69atcfLkSVhZWSE3NxeffPIJOnXqBF9fX6xfvx6zZ8/G0KFDYWVl
hRkzZrBbK6qCu7s7VqxYAZFIBH9/f7Rv3x6ff/45pkyZAkdHR9jY2ODly5dsew8PD1haWgIAunTp
gkGDBsHc3BzTp0/H/PnzMXTo0Go9v0uXLmyCN2TIEIwbNw6jRo1CmzZtkJKSgubNm0MqlWLu3Lk1
Xlglk8nQu3dvdOnSBW3atIGJiQkOHDgAoLze54wZMxTajx07FgBw9OhRODs7o3v37rC3t0dCQgL+
+OOPGsWgjK1bt6Jdu3YIDQ1F+/btMW3aNGzatAmzZ8/Ge++9B2Nj4zpLeEk5msOppoqK+f9Sk8/h
pCF1Qkh9cXLzhZl1d9w6NR25mW9Wb5fJSnDv0kIkv7yC7oM2Q8+wRZ08f9CgQQgPD8fcuXNx9OhR
dpefiszMzPDNN99g+vTpKn32smXL4ObmhlmzZiEmJoZNakxNTeHl5aWwa42hoSGOHDmC8ePHIyEh
AZcuXUKrVq2waNEiLF68GOPGjavWs/X09HD8+HF88skniIiIwJEjR2BsbIzZs2fju+++w/bt2/HN
N9/gt99+g7a2Nn766adqvz6GYXD79m0A5dMILC0tYWtrC19fX3z22Wec2pWzZs1CREQEdu3ahaio
KOjo6KB///7YuXMnJBJJtZ+vLAsLCzx8+BBLlizB3r17sXv3boVz/fr14+ztTlRLxDCMHwDfhg6E
qNao6YHIzuXOGTr62xA0MxEjpygdc04O4Zw30jXB1pGX6iNEQsg7RlpaiPtXliD6MXdYW0dsgi7v
r4ady5g6jYFhGMTHx+Pp06d49eoVrKysYGNjA0dHR2hra9fps9PS0hAVFQV7e/tKV8xLJBI8e/YM
Ojo6cHZ2rvVzZTIZIiMjUVJSAldXV4UkMCEhAXl5eXB2doaGRv0NeqampiI6Ohqurq7VniqgCrGx
sUhKSoKzszNbr5XULUo41dSQiadQIpFxjp/d9yH0xFqQSIsx42gfznlNDS3sGnenPkIkhLyjYp8e
x91LCyCVcKfwmFm/h67ea9G0hUsDREYIqSs0h1MNMQzDm2wCgK5O+V+2OlpiaIq423TJyqQolVW9
mpIQQmrKtv1IDJ50Fc2tunHOpSUG4/y+93H79BfIev2kAaIjhNQFSjjVUHGJcLKpoSFiv9bTNuRt
V8jT60AIIapk1NQWAz45Dbd+30NT6+1tAxnEPTuJ8/v648qfI/Di0QGUFNXd9pSEkLpHi4bUUFUl
kdivdQyRL8nhXl+ajyZ6NKeFEFK3RCINtOs2E1YOg/Dw2jIkR1/ltHmdcAevE+7g7sX5aGLaFs2t
usG4mQMMjK0hNjQHmDKUSgqgZ9ACWjr1PxeQkIr0DFpAW9eo6obvIEo41VCxQMIp1lUcQtfX5v+P
opBKIxFC6pFxM3t4jf4DydFX8c/1FcjJ4N+ZJycjUvAcIY2BSKSBLu+vRRv3yQ0dSqNDQ+pqqEhg
SP3tHk59HYGEU5Kn8pgIIaQqlvbvY8jnf6HPiP1obtm1ocMhpNoYpgyhQasbOoxGiXo41ZBwD+db
CafgHE5KOAkhDUMkEsHayQfWTj7IyXiOuIiTSIgKRE56REOHRohSxPrNGzqERokSTjVUVCI0h/Ot
IXWhHk4aUieENAJNTJ3g2nsBXHsvgKQ4B+nJD5CdFoHC3EQU5CaiMC8ZedmxKJOWQKShCV09U2hq
6VZ9Y0LqiJ6RBdz6Lm/oMBolSjjVkNCiITENqRNC/qV0xE1gad8flvb9GzoUQkgN0BxONVRcLDCH
U9kh9VJKOAkhhBCiOpRwqiHhIfW3ezj5942lHk5CCCGEqBIlnGpIcNHQW3M4DQSG1AskuSqPiRBC
CCHvLko41ZDyZZH4ezgp4SSEEEKIKlHCqYYEFw29NYdTqIeThtQJIYQQokqUcKqhYiXLIhkI9XCW
cLe7JIQQQgipKUo41ZDSPZy6TXjb5dOQOiGEEEJUiBJONSRYFumtOZwGAnupF5Xmo6yM/x6EEEII
IdVFCacaEiqLJNZVHFLX0NCEHtXiJIQQQkgdo4RTDSm7lzoAGArM48yneZyEEEIIURFKONVQsUBZ
pLfrcAKVzeOkhJMQQgghqkEJpxoSXKXO18Opa8Lblno4CSGEEKIqlHCqIcEeTl1uD6eRUA9nSbZK
YyKEEELIu4sSTjUknHByezgNdIQSTurhJIQQQohqUMKphoSG1MVibsJpJDCknkc9nIQQQghREUo4
1YxUWgaZjOEc19AQQVuL++0WmsOZV5Kl8tgIIYQQ8m6ihFPNCC8Y4s7fBAAjcVPe4zSHkxBCCCGq
QgmnmikSLInEHU4HKhlSL6aEkxBCCCGqQQmnmhEq+q6rI9DDqcvfw0lD6oQQQghRFUo41UyJRPkV
6oDwkHpuMSWchBBCCFENSjjVTEk1anACgKFOE4hE3B+DYmkBSmUSlcZGCCGEkHcTJZxqpkhg0ZCu
QMIpEokqmcdJvZyEEEIIqT1KONWMcA8n/5A6ABiLm/Eezy3JVElMhBBCCHm3UcKpZgTncAosGgIA
Y4GFQzlFGSqJiRBCCCHvNko41YzQtpZCQ+oA0ETPlPd4bjH1cBJCCCGk9ijhVDOC21pWOqTOn3Dm
FFMPJyGEEEJqjxJONVPdVeoA0IQSTkIIIYTUIUo41UyxwBxOocLvQCU9nDSHkxBCCCEqQAmnmikR
HFIXTjhNBOZw5hSlqyQmQgghhLzbKOFUM4I9nJUuGmrOezy7KE0lMRFCCCHk3UYJp5qR1GBI3UQo
4aQ5nIQQQghRAUo41YxgWSQd4VXqBjrG0NLQ4RwvlZWgUJKnstgIIYQQ8m6ihFPNCBV+r2xIHQCa
CvRyZhW+rnVMhBBCCHm3UcKpZoR6OCvbaQgATPRb8B7PonmchKit1NRUhIaGIjk5uaFDAQA8evQI
oaGhYBimoUPhqElsje39JaQhUcKpZoTqcFbdw2nGe5wSTkLU1549e+Dm5oYff/yxoUMBAHTr1g1u
bm4oKipq6FA4ahJbY3t/CWlIlHCqmRIJf1mkyhYNAUBToR7OwtRax0QIIYSQdxslnGpGcA5nFQln
M31z3uM0h5MQ8m/1+PFjnDt3DoWFhQ0dCiHvPOGly+RfqURSxnu8pglnJvVwEkL+pXx8fJCcnIzY
2Fi0bt26ocMh5J1GCaeaqUkdTkB4SJ0STkLeLfHx8bh37x6cnJzg6uoq2C4/Px+PHj1CUlISDAwM
0LFjR7Rq1UqwfVRUFJ4+fQqpVAobGxvY29vDzIx/7ricRCLB7du3UVxcjF69eqFJkyZKvYbCwkK8
evUKUqmUfU0yWfnvRjs7O4hEIoW4Xr58iZycHNjY2KB79+7Q1tau8hm5ubkICgpC06ZN4ebmBn19
faViq0gmk+HJkyeIiIhAmzZt0KFDB8FnFxYW4t69e0hOToapqSlsbGzg5OQELS36Z5z8O9BPqpop
FtjasqpFQ6YCPZwZBa9qHRMhpPGLj4/HRx99hNDQUPbY5MmTsXfvXk7b4cOH48KFCygpKWGPaWpq
4ttvv8WqVasU2hYXF+OTTz7BiRMnFI736dMHf/31l2A869evx6pVq9jhcHNzc5w+fRrdu3ev8rXc
uHEDQ4cOVXiWXFFREcRiMc6ePYvZs2fj5cuXCtc6OTkhMDAQTk5OvPcuKyvD5MmTcfDgQTahbdas
GQ4dOoQBAwZUGZtcaGgoRo4ciZiYGPZYx44dcfLkSdjb2yu0PXPmDKZOnYrXrxWnOF27dg39+vVT
+pmENCSaw6lmJKX8Q+o62pUnnMZiU2hpcP+yLpYWokCSq5LYCCGNU2xsLPr27YusrCwsWLAA33zz
DfT19eHn54dTp05x2v/zzz9YsGABLly4gAcPHmDdunUAgNWrV+Off/5RaLty5UqcOHECgwYNwqVL
lxAcHIzffvsNo0ePFoxnxYoVWL58Oby8vLBhwwZ07doVqamp+OKLL5R6Pa6urti7dy9MTEwAABs2
bMDevXuxd+9etgcxPDwcTk5O8Pf3x71793Dq1Cl4enri+fPnWLBggeC958+fj8DAQEyaNAlbtmzB
wIEDkZmZiSFDhuD58+dKxRcREYGePXsiPz8fy5cvR1BQEHx9fREREYFhw4ahrOzN7/HMzEx88skn
yMzMxG+//YaHDx/i5MmT+P7772FhYaHU8whpFBiG8WOIWigpkTL9xwVwPgZNOKHU9YtOj2Am/9GN
8xGXGVnHkRNCGsKaNWsYAAwAxsfHh5FIJOy5iRMnMgCYefPmca4rLS3lHPP29mYAMDt27FA43rt3
bwYAc+vWrSrj0dbWZgAwOjo6zOXLl9nj0dHRbJx5eXlKvz5LS0sGABMbG6vUa7h16xYDgLGwsBCM
rVu3bkxycjJ7vKysjBk6dCgDgPH19VW4Rv7+LliwQOH4sGHDGADMvn37FI4PGDCAAcCcOPHmd/aV
K1cYAIy3t7dyL5qQRop6ONWI0Ap1nSrmb8qZGvD/tZxRkFLjmAghjV+3bt0QEBCgMH/Qzc0NAJCe
ns5pzzdv0N3dHQCQlqZYu7dbt24AgE2bNiE7O1upeH7//Xd4e3uzX9vZ2bG9lXzx1ER1XkNFFy9e
VOhZFIlEmDlzJgDg+vXrVT43PT0dZ8+ehY6ODj766COFc15eXgCAO3fusMc6d+4MbW1t3L59G+fP
n6/y/oQ0VjSHU40UCySc4irmb8o1F0g40/JplwxC1JmXlxdn0YuhoWGl1xQXF+PixYuIiYlBSkoK
Ll++DACcnXimTZuGgwcP4uTJk7h58ya++OILzJkzB82b82+nCwBDhgzhHDMwMFA6Ya2OiIgI3L59
G69evWJ3BHr7NVSkq6vLOSaf75mYmAipVFrpQp7IyEgA5QnvsGHDFM5lZGQAKJ9PK2dqaoovvvgC
27Ztw5AhQ9C/f38sWLAAPj4+Sr5CQhoH6uFUI0Ir1JXt4WxuaMl7PL2AEk5CyBsbN26EpaUlhg8f
js2bNyMuLk5h3mFF7dq1Q3h4OEaNGoWMjAysXbsWdnZ2OHjwYD1HrSg2Nhaenp5o3749vvrqK5w/
f15hEVR1GBkZAShfUCRfDS9EvvBHV1cXWlpaCh/m5ubo27cvbGxsFK75+eefcejQIZiZmeHatWsY
PHgwBgwYoLLeXkLqAyWcakSw6HsVC4bkzAz4E860/KQax0QIUS+//vorFi5cCFdXV8TExCAhIQGH
Dh2qtMetRYsWOHbsGMLCwjB48GDk5+dj0qRJSEpqmN8t+fn56N+/P0JCQrB//37k5OTg9u3b+OWX
X2p0P3kSaWFhwdsDWpGjoyMAwNjYGDdu3OD92LhxI+e6cePGIS4uDtu2bYOJiQmuXLmCZcuW1She
QhoCJZxqRFIq1MOp3LdZqIeTEk5CiNyBAwcAAFu3boWtrW21ru3YsSPOnTuH4cOHo6ysDIcPH66D
CLne7rm8ffs2YmJiMHToUEycOBFisbhW9w8LCwMAtG/fvsq2bdq0ga6uLuLi4hAREVGt5+jp6eGr
r75i54oePXoUpaWl1Q+YkAZACacakdRwlyG5FobWvMfTCpIrndNECHl3pKSULyKUz0UEymtbhoeH
A+Au6pHPS6zI2NgYAOo8WWrRonxDi6CgIIXj8tcQFRWlcPzu3bsAyguyZ2Vl8d7z5MmTCl+Xlpbi
119/BQB88803Vcakq6uLRYsWAQBmzpyJ4uLiSttnZ2dzpisYGRlBQ0MDEokEGhr0zzj5d6BFQ2qk
tqvUjcXNINbSR7FUcd/hUlkJsopeC25/SQh5d3h7e2PPnj346quv8ODBAwDAkSNH2EVHZ8+exZgx
Y+Dh4QEA6Nq1Kzp16gRvb29YWVnhxo0b+OOPP9CkSZNKa3Gqwvvvv4/Q0FCsXLkSWVlZcHBwwMiR
I+Hp6QldXV08ffoU3t7eGDBgAO7du4cLFy7Azs4OMTEx2Lx5M+bMmQNTU1OFe37xxRc4dOgQhg8f
Dm1tbezbtw/BwcHw9vbmLAISsmTJEpw7dw5//fUXOnXqhKlTp8LOzg6RkZEIDg6GhYUFdu7cCQAI
CAjAypUrMWHCBLi6uiI7Oxs7d+5EWVkZfH19oamp3O93QhoaJZxqRHDRkJJzOAHAzNAaCdlRnOOv
8xIp4SSEYNOmTUhISMClS5ewYcMGGBsbY/HixVi0aBEGDhyIq1evok+fPigsLISuri769euHa9eu
KRSQd3Nzw7Zt2+Dg4FCnsS5fvhxPnjzBhQsXsHDhQmhpaaG0tBQODg7w8/PDzJkzcfXqVVy7dg09
e/bE/fv3kZycDB8fH6xZswZAeTF7uZYtWyIoKAjjx4/HlClTAJT3WE6dOrVa8z91dXVx584dfP/9
9/jll1+wcOFCAICGhgYcHR3Rs2dPtq2DgwMsLS2xdetWdtclsViM+fPnY+3atbV+jwipLyKGYfwA
+DZ0IKT2rt1JwJqf7nGOe/W0wnff9FDqHr/e+hb3E65yjk/s9i28HEfUOkZCiHqIjY1FTk4OOnTo
oNDL9vjxY7Rq1Yqz73lmZiZevHgBKysrWFpaKuxnXtcSEhKQkpICBwcHhR7LwsJCREREoHXr1gpl
mjIyMvD69Ws4OzuzccbHx0NbW5utwZmWlobExES4uLhAR0enVvHFxsYiMzMT7dq1g56eHm8bmUyG
yMhISKVSODo61mjvdkIaEvVwqhGhHk5l53ACQEujVrzHU/PieY/XVmZmJnJzy7fO1NfXZ+dckZpL
SEhgS7NYWVkpFPNuaI05NlI9QguGOnbsyHu8WbNmSu2DXhdsbGw4pYaA8t85Xbp04Rw3NTXlDKW3
aqX4u9HMzAxmZmYqic/W1rbKBViamppKLUoipLGihFONCC0aqjD3qfkAACAASURBVM6Qurkxf8L5
KjeuRjFVRT7HCiif4J+YmEhJSC25u7uzCzeePXuGtm3bNnBEbzTm2AghhNQdSjjViHBZpOr0cLbm
PZ6cG1OjmCpz7949NtkEymvZnTlzBiNHjlT5swh5FzAMg6ScaMRkPEFC9nNEZzxBck40pGWlEIk0
YKRrAl0t/iFbop4MdU3wgctkdLDoWXVjQuoQJZxqRFIq1MOpfNkMyya2vMfT85NRKiuBtmblRY2r
Y9euXZxju3fvpoSzlgwMDNhSK3U9Ty4rKwvJyclISUlBx44dYW5e+cKy+oztXfI87RHuxAQiNOkm
coq5ZYjkMgtT6zEq0lhs/Wsu/uNzENYmdbtIi5DKUMKpRgR7OKsxpK6nbQgTPTNkF6UpHGfAICU3
Dq2atqlVjHJ5eXn4888/OccvXryIhIQE3vlWRDmxsbH19qyBAwfi/v37AIALFy5g0KBBlbavz9jU
nbRMiuDY87gQcbBORiCI+pAxMoQl36KEkzQoqhirRmq7l7qcpbEt7/HknOjqhiTo0KFDyM/PBwB4
eXmxxYvLysrg5+ensucQoo7uxV/BssCx2BuyipJNopSWxvzTpQipL9TDqUZKBBcNVe/vCssm9nia
yi2vlJj9skZx8ZEXNQaAFStWYN26dbhw4QIAYO/evVi2bFm1d9BITU1FdHQ0UlNTYW5uDhsbG1hY
WChdGLm4uBixsbGIiYmBhoYGrK2tYWNjw+6KUh1JSUkIDw+HsbExOnToACMjo2rfQ04mkyEmJgaR
kZEwNDRE69atYW1tDS0t1fznm5mZiYSEBCQmJkJXVxd2dnZo3bq1yu7fGMTHx+PRo0ewsbGBi4vL
v3Zh2uu8RPjfW8f73ychQvo5joK7tVdDh0HecerzLwpRyZA6AMFhl4Ts59WOic8///zDDsO2bdsW
ffr0QXp6OptwxsXF4cqVKxg4cKBS97t69SqWLVuG4OBgzjlNTU0sWbIEK1euFLw+OzsbGzduxE8/
/cT2ulbUtGlTREdHw8TEpNI44uLi8M033+DmzZvIzMxkj4tEItja2mLChAlYvny50snOkSNHsHbt
Wjx79oyzF7SmpiasrKxw7do1TvFsa2trdiV4WFgY2rThToO4f/8+jh8/jhMnTuDZs2ec8y1btsTK
lSsxZcoU3sRf/gyJRMIe++CDDxTaDhw4EKdPn1YqtqVLl2Lz5s0AgLlz5ypV0HrMmDE4c+YMRCIR
7t69yynHI5FIsHDhQhw6dAipqW/mLurq6mLYsGHYs2cPp1ZkY3bjxQkcergFEllJpe2MdJvCsbkr
bJs5w7KJPYDyxUTG4mYw1P33vF6iGoa6TWAsbtbQYRBCCac6EV6lXr2eQmsTJ97jidkvqh0Tn4qL
haZNmwagPFkxNzdnE4Pdu3crlXAeO3YMY8aMUTgmEonYvd9lMplC8ve2kpISeHt7s1v08cnKyoJU
Kq00Dn9/f8yaNYutKVoxDoZhEBMTg9WrV+PcuXM4ePAg2rVrJ3iv5ORkzJw5k5OsVSSTyRAfH4+i
oiLe1yRPUOXvw9sGDx7M2fO64vv26tUrTJ8+Hbm5uZg3b16lz5B7e19svn2yhWIbP348m2Tu378f
q1atqrRn+tWrVzh58iSkUim6du3KSTYTExMxevRohISEsMc0NDRQVlaGkpISBAQE4PHjxzh79iyc
nPh/3huLAkku/EJW42HiDcE2GiJNdG81AH0ch6ONWWdoiGi2FCGkcaHfSmqkVHCVevV6OK2a2EME
7grirKLXyC3OqlFscoWFhfj999/L49LRwaRJkwAA2tramDx5Mtvu1KlTnISIE09WFj7//HP262XL
luHu3buQSCRIT0/HnTt3sH79eri7uwveY9WqVWyy6erqimPHjiE1NRXFxcV4+fIlDh06hBkzZlS6
k8gff/yBSZMmscnml19+idu3byMvLw/JyckIDAxE165dAQAPHz6Eh4eH4GuTSqUYNGiQQrI5bNgw
nDx5EklJSUhPT0dYWBj8/PwwefJkGBgYVPoeVcbW1hZr165FUFAQXr16hZycHPz555/o168f2+b7
77/nTdh37tyJQ4cOwd7enj22ePFiHDp0iP1YvHix0rF06NCBLcCdnJyMy5cvV9rez8+P/SNA/keL
XElJCfr27YuQkBCIRCLMnz8fL1++hEQiQWRkJD799FMAQFRUFL788kulY2wIidkvsPLCxEqTzZ62
Plg/LADTe62Ecwt3SjYJIY0TwzB+DFELSzfcYfqPC+B83L6XVO17LTo9kpn8RzfOx+Pkv2sV4969
exkADABm3LhxCueeP3/OiEQi9vzmzZsrvdelS5fYtu7u7jWKp1evXuw9Tp8+Xe3r8/PzGSsrK/Ye
27dv521XVFTEDBs2jG33xRdf8LbbuHEj2wYAs3z5cqasrKxaMTVv3py9/tmzZ7xtrl27xshkMt5z
8fHxCt+HGzduCD6ra9eubLsLFy7UKraffvpJ8GejorKyMsbBwYEBwBgaGjK5ubkK5zdt2sTeZ8mS
Jbz3GDBgANvm7t27VcbdEB4l3WJmHunL+9/h5D+6MUvOjmGiXoc2dJiEEKIU+lNYjQgNqWtXs4cT
AGybOfMej8vkzverDr7hdDlHR0eF3rU9e/ZUeq+XL98sYnp72zll1fYe69evR1JSEoDyLf1mzJjB
204sFmPTpk1s7cldu3YhLCxMoU1qaipWrFjBft27d2+sWLGiTupV9uvXT3BRlo2NDXr2fFMk+vlz
1czdrcr48ePZ+a2nTp1CdnY2b7vr16+z37dx48YpLMjKzMzE6tWrAQBGRkZYtGgR7z2+/vpr9vOf
f/5ZJfGrUtDLk9gaNA/F0kLe8++3GYvvfQ7AyaxTPUdGCCE1QwmnGhEeUq/+t7m1QML5MiO82veS
Cw8Px99//w0AcHBwQP/+/TltKiahT58+xZ07dwTv5+joyH5++vRpHD16tNoxVbzHvHnzkJaWVklr
ropD31999VWlbdu2bQtvb28A5eWfAgMDFc7fvn1bYdGSPHFqCBUXGuXk5NTLM5s3b46hQ4cCKK8Y
cPjwYd52Ff9omT59usK5a9eusYlq165dBSsMdOjQgf08IiKiVnGrWuCTfdh3dy0Yhvvfs1hLH1/2
Xo8JXeardBMGQgipa5RwqhHhHs7qf5ttm/InnDEZT6p9L7mKicLUqVN5e+5GjBgBU1NT9uvdu3cL
3s/LywsuLi4AyhO4sWPHYtiwYbyr1YX83//9H/v51atX4ezsjB9//FGpJIthGLx48WYh1dsLV/hU
bBMVFaVwLjIykv1cLBajT58+Vd6vLkilUshk/D9Ldc3X15f9fN++fZzzGRkZOHHiBIDyObfdu3dX
OF/xPRWLxTh58iTvx927d9l28fHxqn0RtXDkn58QEPYr7zkzQyssHbgXXW24f6jVRFZWFoKCgipd
MEcIIapCCacaEerh1NaqwZC6aTvehUM5xRlIz0+u9v2Ki4tx4MCB8njeWiBUka6uLiZOnMh+feTI
EeTl5fG21dLSwp9//glLS0v2WGBgIHr27IlevXpVufAEAD7++GPMmjWL/TozMxNz5syBtbU1lixZ
UukK98TERBQWvhnytLKyqvJ5FdtUTDDf/trOzq5etn6MjIzEokWLMHDgQLi6usLMzAw6Ojrs9woQ
XuleF4YMGYLmzZsDAIKDgznvkb+/P7vK/e0pGYBiwnn+/HmMGDGC92PcuHFsu9evX7PbbTYUhmFw
4N5/ceHZQd7zjs1d8d1AP1g1sec9XxPHjh1D3759sW3bNpXdkxBChFDCqUaE63BW/9usp20IyyZ2
vOei0h5V+37Hjh1DVlb5CneRSIS+ffvC2dmZ96PiUGpBQQHvFphyHTt2REhICCZMmKAwJ/Hvv//G
wIEDMXToUMG5gHI//fQT/P39FeZw5ufnY926dbCzs8OxY8d4r0tISFD42szMrNLnAGCTKaA8Ya0o
JSWF/bxiEl0Xnjx5wn4PNmzYgMuXLyMuLg5mZmbw8PBQ6rXUBW1tbXzyySfs1/v371c4L+8l19PT
Y1ebV1TxPayOiuWs6lsZUwa/kFW4/iKA93wX635Y0P8XGOpWXge2OpKSktjpI3l5eYiOjkZ0dLTC
H1jZ2dkKx2QyGe7cuYObN29y7peeno7z588jMDBQoeapkOq0j4qKwsmTJ3Hs2DGEhIRUe9oLIaRx
oIRTjQj2cNZg0RAA2JvyDxE/T/un2vequLOQvDyN0EdysmIPalWLh6ytrXHw4EE8fvwY06dPh76+
Pnvu3Llz6NWrF2+9yoo+++wzREVFYffu3ejU6c1CjNzcXIwdO5Z3eNfa2lrh66rKOAFQ+Mfy7f3i
K5YYki9EqgtRUVF4//33ERQUBACYNGkSQkJCkJOTg6dPn+LmzZvsXEoA9dLTWpG8VBYAHDhwAGVl
5T/Xt2/fZudbjh49mrcQf8X3cMWKFWwd1Ko+WrRoUcevil9ZmQx7gr/HrZizvOf7OozAzN7rVD5f
c8SIEVi6dCkAICAgAA4ODnBwcMCGDRvYNr/++iscHBywfv16XLt2DS1atICHhwe2bt3KtpFKpViw
YAHMzMwwZMgQDBs2DJaWlvjvf//L+9zqtC8uLsbIkSPRtm1bjBgxAmPGjMF7772H0aNHq/S9IITU
Dyr8rkZKpapbNAQAbVp0xs3oU5zjEan3q3WfZ8+esb0i5ubmGD58eJXXJCUl4ezZ8n+E7969i7Cw
MLi6ulZ6Tfv27bFjxw4sW7YMX331Fc6cOVMeb0QEfvjhByxZsqTS63V1dTFlyhRMmTIFfn5+mD9/
PjIzM8EwDObNm4fRo0fD0NCQbW9jYwM9PT02mU1OTq5ypXvFRPLtHYCcnd/Mm42OjkZZWVm1t/dU
xogRI9hepa1btyqs2G4M3N3d0aFDB4SHhyMxMZHddaqyCgdy7du3Zz+/detWncdaG7IyKXb+vRz3
4q/wnh/SbhJGd658IVpNfffddwgICMD+/fvh4eGBKVOmAOCfh/z8+XPs2bMHjo6O+OijjxR+bqdN
m4Z9+/Zh4MCB+Prrr5GUlITNmzdj8eLFaN26NT7++GOFe1Wn/cqVK3HixAkMGjQI8+bNg7GxMUJD
QxV2tyKE/HtQwqlGhHs4a5a0OLfownv8dX4iMgpewdSgpVL3qZgozJw5E//5z3+qvKagoACWlpbs
UOeePXsUelYqY2Njg9OnT2PUqFE4fvw4gPJSOlUlnBVNnjwZXbp0YXs7MzMz8ejRI3h4eLBtRCIR
HB0d8fjxYwDlq+rfe++9Su8rbwuAs8NNxd2HJBIJLl68iMGDBysdszJSUlLw9OlTAOU9tKpMNlU5
19PX1xfz588HUD6s3qNHD7YKgbOzMzw9PXmvq5hwBgcHo6ioCHp6eiqLS1WkslL8evtbhCYF8Z4f
5folhrr41tnzP/jgA7x69Qr79++Hk5OT4JxqADh58iSWLFmCNWvWKBy/f/8+9u/fDzs7O1y8eJE9
3qFDB3h4eGD9+vUKCWR128v/SP3uu+/Y/+569OhRuxdOCGkwNKSuRgRXqWvV7NtsatASpgYWvOfC
U/5W6h4lJSXw9/cHUL7/d8WdgSpjYGCA8ePHs18fPHiQs5ViVSoOzVY1j5OPq6sr3NzcKr3Hhx9+
yH6+ffv2Su/37NkzXL16FUB5surj46Nw3svLS6FM0+LFi9nhZFWpuIK/WTPl9leubFvPismcMnP3
lDVhwgR2a8sTJ05g+/bt7AKtqVOnCl7Xu3dv9j3My8vD999/r7KYVKVEWoytQXMFk82P3ebUabJZ
XT4+Prwluvbt2weGYThby3br1g36+vp49OgRCgoKaty+W7duAIBNmzbV6L9fQkjjQgmnGhEaUq/p
HE4AcGnJ36PwKPm2UtefOHGCndvo4+PDmbdYmYrDppmZmWxvpdyTJ08EV7ADUCisLt82sSKpVIr7
94WnB+Tm5iI2NrbSeyxevBgWFuVJ+f379/HHH3/w3qukpAQLFy5kewEnT57M2XJTR0cHP/74o0L8
06dPrzTRrmpu6tsqJplhYWEK5YHkLl68qLDC/8kT4VJYFXtpb9y4Ua1YKtOyZUsMGjQIQPlrXL58
OQDF7VD56OrqKiT+W7Zswfnz51UWV20VSvKw+fr/4cmrEN7zn3ZdiIHO43nPNZSOHTvyzuOVVxA4
deoUevfuzX5U3Lyh4sK66rafNm0azMzMcPLkSTg6OmLp0qVKzZMmhDROlHCqCYZhIJPxD2nWtIcT
ADpa9OQ9/vTVXUikVZeSqaxId1W6dOmCzp07s1+/XZNz3759sLS0xPTp03H58mV2fmRYWBi+++47
rFq1CgCgoaHBmUsGlCeB3bp1Q5cuXbB9+3Y8evQIRUVFyM/Px6FDh+Dj48OurO/fvz9atuROITA0
NMT69evZrz/99FMsW7YMT548gUwmQ3Z2Nq5du4Y+ffqwc0qNjY2xdu1a3tc8dOhQhV7TPXv2wMPD
Azt27MCDBw8QGRmJixcvYtWqVWjTpg0CAvhXNgtxc3NT2H99zJgxWLduHR4+fAh/f3+MGjUKPj4+
CoubgoKCOAu55Hr16sV+fvDgQfz2228oKioCwzCV/jGgjIqJZWlpKYDy+acVV/rz8fb2xoQJEwCU
/1ExZMgQ+Pr6IigoCGlpaWAYBikpKfjrr7/w7bffokOHDvVSdzSrMA3rrkzHi/QwzjkRRPDtvhT9
nf49C2Jev34NANDX14eWlpbCR7du3dC3b1+F97W67du1a4fw8HCMGjUKGRkZWLt2Lezs7HDwIH/p
KEJII8fQXupqoUQi5d1HfdCEE7W6b6Ekj5n653u8eznfjbtS6bUV90a3srJipFJptZ//yy+/sHte
i0Qi5uXLl+y5+fPnK+w7DoDR1dXlHNuwYQPvvfPz8zltRSIRo62trXCsdevWzOvXryuNc8eOHYy+
vn6Vsbi4uDAPHjyo9F5FRUXMjBkzONfyfRw4cIBzfVV7qe/cubPSe3p4eDAvXrxgOnTowB7T19dn
vv76a869pFIp4+bmpnC9hoYGIxaLmQkTJlQ7trffBxMTE4V7X7lS+c+cnEQiYZYuXcpoampyXp+W
lhbnWGlpqVL3ranErBfMvJPDeP87+vzPHszt6HN1+nw+8p8DX19f3vNr1qxhADALFizgPT9y5EgG
AOPn56fU86rbvqKwsDBm8ODB7M9XYmJite9BCGlY1MOpJoQWDGnVoncTKK/H2b5ld95zIXEXeY/L
7d69mx1C/vzzz9k5edUxYcIEdp4gwzAKJZIGDx6MESNGKJTHqTj87O7ujkuXLmHBggW899bV1cW8
efPQqVMndsiQYRi2N00sFmPhwoX4559/qqxLOX36dDx8+BD9+vWDWCzmxGJubo758+fjwYMHnKH0
t4nFYmzfvh2HDx+Gs7Mz73Bm06ZN8eGHHyps0aisadOmYc+ePZw5nBYWFlizZg3++usvthyOvDe0
sLCQLaNUkaamJgIDAzFy5Ej2WFlZmUoKqYvFYoUC7fb29rzbofLR1tbG6tWrcevWLfTs2RO6um/K
CsnnpIpEInTo0AFfffVVjX42lRWeEoy1V6Yhs5A7x1VTpImZHmvRy061i8Oqo7pzo+XkVSOUnbJQ
3fYVdezYEefOncPw4cNRVlYmuO0pIaTxEjEM4wfAt6EDIbWTnVuCUdMDOceNjXRwYtewWt375svT
8LvLXTSgKdLE5uHnYCxuWqv715ZMJkNkZCQSExPx+vVrWFpawsnJCdbW1krXkExPT8fz58/ZYXkn
Jyc4OjoqDD9XN54nT56gefPm6NixY5XDwJXJy8vDw4cPkZiYCHNzc1hbW6Nt27a1ro9ZUFCAx48f
Iz4+Hm5ubpxV8/I2V65cQevWrdGhQwdoaQkXtoiPj8fTp0+Rl5eHtm3bok2bNmzy3dCkUimioqIQ
Hh4OHR0dWFhYwMnJSemFUzV18dkfOBL6E+++6Dqauviq93/R0bIXz5V179SpUxg+fDisrKw4mxAA
wNq1a7F06VIsWLBAoT6nXHp6OpydnZGRkYFz585VWVGhuu0zMjIUtrkFyqdZ+Pv7Y/369Vi0aJES
r5IQ0lhQwqkm0jKL8PGX3J6D5k3FOLx9SK3uXSDJxZwTQyAt49a/G+E6Ax+4KLfynJB3RaEkH/vu
rsH9hKu85/W1jfBN3y1wMuvEe74+pKamwsHBAQUFBRg7dizGjh2Ltm3bsr3mVSWcAHDo0CFMnDgR
MpkMkydPRu/evSESiRAcHIzg4GAcPHgQLi4uNWpvZ2eHTp06wdvbG1ZWVrhx4wZ+/fVXGBgY4MGD
B3BwcKj7N4kQojJUh1NNSAVWqNd2SB0ADHSM0cXGCyFxlzjnrkYdxaC2n0BHq3H0ZBHS0CJe3cPe
kFXIKHzFe95UvyXmeG0V3Dq2vpibm2Pv3r2YPn06jhw5giNHjmD16tXVmqbx8ccfo02bNvjiiy/g
5+fHTnkxMTFBhw4dYGRkVOP2/fr1w7Vr13Dq1JvNJ9zc3LBt2zZKNgn5F6IeTjWRkJwH37mXOcet
LQyx/4eBtb7/s9cPseHqDN5zI11nYpiLcOFoQt4FWYVpCAj7FXdiuFNb5OxNO2CW50Y00TMVbFPf
CgsLERkZCX19fTg4OFQ6baIyBQUFePbsGVq0aKFU+TNl22dmZuLFixewsrKCpaVlvW+1SghRDerh
VBOCNThV0MMJAM4t3GHbrB1iMyM458482Qt3a68G77EhpCGk5yfjStRh3HhxHBKZ8AKcvg4jMKHL
fGhpatdjdFXT19dX2OCgpgwMDHhr1da2fbNmzdC9O//CRULIvwclnGqirlapVzTMZTK23VzIfbas
BBuuzkQfx+GwNLaDnnb1F9oQ0phpamihdTNnGOmaoLi0EPFZkYjOeIJHybcQ9fofMBDe1tNAxxi+
3Zeii00/wTaEEKLuKOFUE0JzOFXVwwkA7tZecDLrjOdpoZxzuSWZOPtkr8qeRYg6EGvpw1jcDCcf
78TJxzsAlBf+BMOAAfO/smEMyv73/wyY/53DmyRW3hYMyv8nT26Z/51mKnz1Rom0CKWyYjAMA5FI
A2It/UbXu1o3RGiqZ4axbl+jnXnXhg6GEPI/lHCqCaEhdVX2cALAxK6LsOLiJN4V64QQRcXSQqTk
xjZ0GGAYGQpL84DSho6kfuQWZ2DrX3OxdthRNNM3b+hwCCGgrS3VRn30cAKAlYkDPnafrdJ7EkKI
qklkxXiRxt1GlBDSMCjhVBP11cMJAP2dRmNYe1qVTghpvEQQwcqEyicR0lhQwqkmpDKBhFOzbkqI
jOw0E+Pd50AEKlFCCGlcdDR18WnXhbBqYt/QoRBC/ofmcKoJmYx/lWxd9HDKDWg7Hi4te+DPhz8g
JScGUkYKAx1jNDewgEhEf8sQ9ZBfnIvsojTo6RhCS0MTKbmxlZY/qqiZvjnGdJoFKxN74H9/nIkA
QCSCCKL/1ZQUQUMkP6fxv3N488ecvC1EKP+f/I+8/10jqnBfBSKUSIsgkRZDX8cImhrvzq97Ax3j
d2SBFCH/Hu/ObyA1J9zDWbeJn2UTe8zr93OdPoOQxkQqK8WNF8cR8OgXlMiKK22bWZiKPSEr8Vm3
RfC0/6CeIiSEkMaHuqHUhPDWljTkTYgqaWlqw7vtOKwc8iesmlQ9R1BaJoFfyCocvL8BZWWyeoiQ
EEIaH0o41YRUyj+krlnHPZyEvKvMDK2wZMAutDVTbpeea8+P4eebCyCRVt4rSggh6oiyETUhNKSu
6rJIhJA39LQN8U3fH+Bg2lGp9o+Sb2Hzja9RVFpQx5ERQkjjQtmImmioOZyEvOvE2vr4uu9mmBpY
KNX+eVooNl+fhUJJfh1HRgghjQdlI2pCJjCkrlFHZZEIIW8Y6Zrgmz6boaOpq1T76IxwbGnkPZ3Z
2dkIDQ1FdHR0Q4dCCFEDlHCqCVmZQFkkSjgJqRfWJo742H0O7zm+erXRGeH48cZslDTSOZ2XL1+G
m5sbZs9W3FksLS0Njx8/xqtXr+rs2fXxDEJI/aKEU03IBIbUadEQIfXHy3EkOlt5co4zYKAp4lah
e57+CD/fnI9SmaQ+wlOJXbt2wdXVFVu2bPlXP4MQUr8oG1ETUqHC79TDSUi9mtTtW+hrG3GON9Fr
Dk0Rtxj501d38dvtpf+akkmmpqZo27YtWrRoUeN7ZGVlISgoCA8ePKizZxBCGhdKONUE9XAS0jg0
0WuOsW5fc45nFr5CH4cPoaXBTTr/SfoLe++uBsPw/+HYmHzxxRd49uwZ5s+fX+N7HDt2DH379sW2
bdvq7BmEkMaFdhpSE9TDSUjj4Wn/IW6+PI2XGY8Vjt+Nv4LPeyzH7uDvUcYo9mjeiQmEvrYhPuky
rz5DBQDIZDKEh4fjxYsXcHV1haOjo2Db7OxsZGZmwsTEBM2aNeNtk5ycjIiICKSnp6NVq1awtbVF
y5YtIRKJkJSUhLS0NABAXl4euyip4v2UeUZcXBzCwsKgra2Njh07wsrKSul44+Pjce/ePTg5OcHV
1VXwtUZFReHly5fIycmBjY0NunfvDm1t7h8M8tdgZ2cHkUiE1NRUBAUFwdPTE4WFhdDS0kKrVq14
n5Geno7c3FyYm5vDwMBAMBZC/u2o+0tNlAkknLRKnZD6JxKJ8GnXBZzjBZIcJOW8xNT3vuddSHQl
6jBOPd5VHyGyHj58CFtbW3Tu3BmjR49GmzZt0K9fP8EFO7/++iscHBywfv16zrmoqCj07dsXVlZW
8Pb2xscff4xevXrB0tIScXFxAIARI0Zg6dKlAICAgAA4ODjAwcEBGzZsUOoZkZGR6NatG2xtbfHh
hx9i8ODBsLa2hre3NxITEyuNNz4+Hm5ubmjdujVGjx6NTp064fPPP+dcc/bsWTg6OqJt27YYMmQI
xo8fj969e8PFxQXPnz/ntHd2doaDgwPy8/MxatQoWFhYB9GawAAAIABJREFUYOzYsXj69CnatGkD
e3t7JCcn876f77//Ptq0aYPs7Gze84SoC0o41YSsTGBIXYMSTkIaQutmzuhlN5Rz/HLkIbQz74pP
uy7kve5U+C5cjjxU1+EBAJ49ewZPT0+kpqZiw4YNuH//Po4ePQodHR3MmcO/4l7Iixcv0LlzZwQF
BaFHjx44dOgQgoOD4efnhzlz5rC9d9999x0mTZoEAPDw8MDevXuxd+9ejB49WqlnuLu74+HDh1i6
dCnu3LmDoKAgfP3117h69Src3NyQnp7Oe21sbCz69u2LrKwsLFiwAN988w309fXh5+eHU6dOKbQN
Dw+Hk5MT/P39ce/ePZw6dQqenp54/vw5Fizg/iEhN3v2bFy/fh2TJk3Cli1b4OLiAh8fH8hkMvj7
+3Pa//333wgLC8PQoUMFe2gJURc0pK4mhMoiaWrQ3xSENJSRrjNwN+4ypGVvVqFLZMU4F7Ef493n
olCSh4CwXznX/flwC8Ra+vB0+LBO41u5ciUKCwvxww8/sOWPunTpgtGjR+Pbb7/l7WEUMmvWLBQV
FaFnz564fv06dHXLa5L26NFDod0HH3yAV69eYf/+/XBycsLkyZOVfsbcuXNRWFiIdevWYfHixexx
T09PaGho4Mcff8TSpUuxY8cOzrVHjx6Fj48PTp8+zQ6LZ2Vlwd/fHzdv3sRHH33Etp0/f77C/YHy
hUy9e/fG3bt3BeM7d+4cQkNDFYbPp0yZgsDAQPj5+XHuKY9z+vTpSr8HhPxbUTaiJmQCQ+qaNKRO
SINppm+O/k7cnrsbL04gpygdQ1184eP8Ke+1++6uQXDshTqLLScnB4cPH4aWlhZ8fX05593d3ZW+
V0ZGBi5cKI911apVbLKpShkZGThz5gy0tLQwc+ZMzvlZs2YBAPz9/VHGM+LTrVs3BAQEKMzBdHNz
AwBOr6iWFrcvRv5+yOef8jl+/DhnruawYcPQokULREVF4c6dO+zxrKwsHD58GK1atcLgwYMF70mI
uqCEU02UCfRwatCQOiENaqiLL3S19BSOlcpKcC6ifIh1rNvX8LT/iHMdAwa7gr/H3bjLdRJXdHQ0
ysrKYG5uDhMTk1rdKzIykv28Z8+etQ2NV1RUFACgZcuWaNKkCee8nZ0ddHR0UFxcjISEBM55Ly8v
6OvrKxwzNDSs9JkRERHYvXs3Vq9ejXnzyhdzVVZJoFOnTpxj2tramDhxIgBg79697PH9+/ejuLgY
U6ZMgQaNRJF3AP2Uqwnq4SSkcTLSNUF/pzGc43+9OIHc4iwAwKTu36J7qwGcNgxThh1/f1cnPZ2x
sbEAgObNm9f6XqmpqQDKE7i3kzpVSUlJAQDBVesikQhNmzYFAMEFOsqKjY2Fp6cn2rdvj6+++grn
z59HSUlJje83ZcoUAMCRI0dQUFC+nemOHTugqanJniNE3VHCqSaEFg1RDychDc+n3aecXk6JrASX
Iv8AAGiINDCt5wr+XYqYMuz6+z+4/jxApTHJe/dUsTrawcEBAJCfn19nq61bt24NQHhIWyaTsUPj
tra2NX5Ofn4++vfvj5CQEOzfvx85OTm4ffs2fvnllxrf09nZGb169UJeXh4CAgJw48YNPHv2jBYL
kXcKJZxqQmhInRYNEdLwjHRN4OU4knP8+vNjKJTkAwA0NbTwpcd6dLTgDkkzYHDg/n9x/NF2lRWH
t7OzA1DeG5iZmck5n5GRofS92rRpw87bDAwMVPq66vQaOjk5QUNDA6mpqWyPakXh4eGQyWQwMjKC
hYWF0vd92+3bt/H/7d15eEz3/gfw9ySTfSUik0SEiBSx1xIqWrWUotwiUrS2cl3cW1qlVFuqlNJL
F6q2VFFaa2y1RLWNJTQLFYl9CdlIkEgikpn5/v7IL+dmzEz2ySST9+t55nkm55zvMpPtM5/zXW7e
vIn+/fvjrbfegrW1dbnrKqowk7lhwwasXr0aQMEC90S1BaMRE6HvfxDjTaLqoW+zkZCbWWoce5Kf
jePXdkhfy80tMDXwC51BJwDsjwvB13++JwWpFeHj44NmzZohPz8fX375pca5H3/8UZq1XhrW1tbS
ckEffvihtOZmUSrV/xa6L9yy8s8//yx1G46Ojhg7dizUajWWLVumcU4IIc2oL5w8VF6Ft+4Lx4wW
KpydrlKp8PDhwzLXO3z4cNjb2+PPP/+UJhf17du3Qn0lqkkYjpgIfcsimcl4S52oOnCyqYdAn4Fa
x49e3oZ81f8yfRbmVpgauBRtPbvrrOd80gl8evgt3HoQX6H+mJmZYf78+QCARYsWoU+fPpg8eTJa
tWqFKVOmlHkdztmzZ6N169a4ffs2nn/+eUyfPh1fffUVRo4ciQYNGiA8PFy6NiAgAHZ2dkhMTMTw
4cOxc+dOxMbGltjGwoUL4e7ujmXLluGtt97Czz//jB9++AEDBgzAtm3b0LRpU8yZM6dsb8QzAgMD
YWVlhbi4OPTq1QtLlizB0KFD8eqrr0pZ4S+//LJMGWAAsLOzw/DhwyGEQH5+Pt5++21OFqJahT/t
JoKz1Imqv77NR0Em0/yzm5n7ACdvat6GtjC3xJRui/FC4wE667mXdRcLj4zDngtrNILVsgoKCsKm
TZvg6OiIo0eP4rvvvoNKpcKOHTvKtCwSANja2iIiIgITJ05ETk4OVqxYgWnTpmHPnj1wd3fXmJzk
5uaGDRs2wMnJCb/88guGDh2qtfi6Lm5ubvj777/x+uuvY9u2bQgODsbYsWNx/PhxTJgwAVFRURXe
HrJJkyYICQmBk5MTjh07htmzZyM5ORmRkZFYt24dLCwssHDhQixfvrzMdRfeVudkIaqNZEKIEABj
jN0RqpgPvziFiGjtregWvN8FXZ8v/3gmIqpc35/6CGduH9Y4Vt++ARYN2AEzmXYOIPTCWoTG6t/u
0tXeE6+3/hc6Nuyls3xpqNVqXL58GQ4ODmjQoEG56ihKqVQiPj4e1tbWaNKkid5MXk5ODi5fvgxb
W1s0adJE5/qX+uTl5SE+Pl4qW9nZwpycHMTHx8Pb21sjWE5PT8e9e/fQrFkzyMp4B+n3339Hjx49
MGjQIOzZs6dS+0tU3THgNBGzF5/E2XPaA+kXzeqKzu0URugREemS8PAK5h3SXux9crfF6OD1ss4y
5xLDsfb0x3iSn623XjeHhujhOwSdvXvDyabiSx1R5Xvttdewb98+HDhwAK+++qqxu0NUpbi1pYng
LXWimqFhHT+0dO+C2OTTGscPxW/SG3C29QzEx6/8iO9OzkHCw8s6r0l9nIBtMcvxc8wKeNdtBt96
reFq74l8VR7MZeaoa6eAvZX2gulUNW5dv419+/bBo4EC3u3qIT41slTlZDIzKBwawpkfIqiGY8Bp
IvTNUuecIaLqp1+zUVoB5430i7hyLwZ+9dvpLOPm4IW5fUKwP3Y9DsT9AJVQ6bxOQODWg/gKTyqi
ypWZkot+HzWDvaslvvx9apnKmpvJ8VaHDxDY5DUD9Y7I8DhpyESo9UScZR1jRESG11zREd51mmkd
/zV+U7Hl5GZyDG79T3z66lb4KwIM1T0yAEeFNRTNHWBfr+z7zKvUSmyK/AJP8iu+HBaRsTDgNBF6
1+FkvElULfVr/qbWsfNJJ5CceavEsu6OjfBej6/xQc/v4a/obIDeUXWjVOch62mGsbtBVG4MOE2E
vt1HmOEkqp46eL0MFzvtFSQOxW8udR1+9dvhvR7f4PMBO9C/xRi4OzaqxB5SddKkXiu42nMbTKq5
OIbTRHDSEFHNYmZmjleeG4GfojV3+Tl16yD+0XpSmSaJuDk0xJA2kzGkzWQ8zLmHa2kXkPjoOmJT
zuB+1h2ohApW5jaoZ+8Ocxn/7NcoMhkaODXBoFYTjN0TogrhXx4iIiMJbPIaQmPXIjsvUzqmUitx
9PI2DGtbtoklherY1kfHhj3RsWFPDG49sbK6SkRUIbylbiKY4SSqeazkNni56TCt479f28kJIkRk
UhhwEhEZUU+/IFiYa85cfpKfjeNXdxqpR0RElY8Bp4nQM0kdzG8SVW+O1nXQTcee6Ucub6vQPulE
RNUJA05ToS/iJKJqr2/zUZA9sw96Zm46wm/sM1KPiIgqFwNOU8cUJ1G152rviU4Ne2sd/zXuR6jU
SiP0qGK2bdsGDw8PBAcHm3SbRFR6DDhNBLe2JKrZ+rcYrXUsPScFp24eNEJvKiYnJwfJyclIT083
6TaJqPQYcBIRVQMNnH3R1jNQ6/j+ixtqXJZz4MCBiIiIwDfffFMt2nzjjTegUCgQGhpaZf0hIk1c
h9NE6Mtk6st8ElH1M9B/PM4lhmscu5+dhFO3fkWgz0Aj9arsXF1d4erqWm3avHr1KlJTU6FWq6u0
T0T0P8xwEhFVE41dWqCVe1et43svrIVSlV/p7U2ePBlBQUG4fPkyUlNT8dlnn+Gll15Cs2bNMHLk
SJw7d06rzPHjxxEUFITPPvsMAPDzzz8jKCgIXl5eePz4sc5rnvX06VMsWbIEAwcOhI+PDzp16oTx
48cjIiJC5/XlbTM2NhZBQUG4ceMGAGDZsmUICgpCUFAQ/vzzTyxZsgRBQUFYt26d3vfoo48+kt6j
0tq1axeCgoLg6+uLHj164LPPPkN+fj4mTZqks67C17NmzRqtujIyMqQ+K5Xame6MjAzMnDkT3bp1
Q6NGjTBo0CAcPKh7GEZVtUOkkxAiRFCNN/Wj4+Ll4Tu1HrGX0ozdNSIqg+tpsWLsTx21Hkcvbav0
try8vAQA8euvv4q2bdsKAMLS0lKgYN0LYWtrKw4cOKBRZv369QKA6NWrl/juu++kay0sLMSjR4+0
rnnWlStXRKtWrQQA4erqKnr37i3atm0r5HK5MDc3F/Pnz9cqU942//zzT+Hi4iLkcrkAIBwcHISL
i4twcXER27ZtEyEhIQKA8PT0FCqVSqvd27dvCzMzM+Hl5SWUSmWp3tMPP/xQABBWVlaia9euolOn
TkIul4uAgADh7OwsAIiTJ09qlJk7d64AICZMmKBVX2pqqvR6nz59qnEuPj5e+Pr6CplMJjp37iz6
9Okj7O3thUwmEytXrtSqq6raIdKFGU4iomrEx8UfbTy6aR3fd3G9wXYfmjRpEhwdHXH8+HE8fvwY
iYmJ6NOnD3JycjB16lSdGa+LFy9i+vTpWLx4MW7fvo2srCw4OjqW2Na4ceNw4cIFjBkzBnfv3sWR
I0cQExODkydPwsXFBZ988gkOHTqks2xZ2wwMDERaWhratGkDANi4cSPS0tKQlpaG4cOHY9iwYXBw
cEBiYiKOHDmiVX7t2rVQq9UYP348zM3NS3xtx44dw8KFC6FQKBAVFYWTJ0/izJkzSEhIgIuLCx49
egQAEJU01mns2LG4du0atm3bhoiICBw+fBgxMTFwcHDA7NmzpfZqSjtk2hhwmgh9k9E5hJOo5nm9
9b8ge+a3+vHTR9h/McQg7XXv3h1hYWF46aWXYGlpCQ8PD2zevBmWlpa4efOmzsk2ycnJWLZsGWbN
moWGDRvC0tISshKWxdi1axdOnDgBFxcXrFq1CpaWltK5Tp06Yc6cOQCAd999V2f58rRZHDs7O2kZ
pZAQzfdWqVRi/fr1MDc3x/jx40tV3/z58wEAM2fOhL+/v3Tc3d0d+/fvh0KhKHdfn7V7925EREQg
MDAQQUFB0nFfX1+88cYbyMzMxE8//VRj2iHTx4CTiKia8arTFAGNXtE6fuTyVqRk3q709v75z3/C
wsJC45irqyu6dOkCAIiPj9cq07VrV0yZMqVM7YSHF0yI6t+/P2xsbLTODxs2TGpP1/JG5WmzJIXB
ZGhoKB48eCAd37t3L5KTk/Hqq6+iQYMGJdaTnZ0tvb7BgwfrvMbMrOBfbkWC5EK///47AKBNmzZI
TU3VeBQGtleuXKkx7ZDpY8BpIszMdP8BU6uZ4ySqiYa0nqK1x7pKrcTmqKVV1gcPDw8AwK1bt7TO
2dralrm+wsDEy8tL53mFQgG5XK5xbUXbLEnnzp3h7++Pp0+famTqVq9eDaAgGC+NmzdvSs89PT0r
t5M6FL4/3377LRQKhcajMNN6586dGtMOmT4ui2Qi9H1irqyxQkRUterauaFvs1HYd3G9xvG4lLM4
dfMgujZ+1eB9KPy7Ym9vXyn1ZWdnAwCsra11njczM4OFhQWUSiVycnIqpc3SGD9+PN59912EhIRg
6tSpuHbtGsLCwuDl5YW+ffuWqo6kpCQAgKWlpcZQAUPJy8sDUJAt7tChg85rmjZtWmPaIdPHgNNE
6ElwgglOopqrf4vROHXrINKzkzWOb43+L1ooOsHZpp5B209JSQEANG7cuFLqa9q0Kf744w8pOHvW
w4cP8eTJEwAFYwSryptvvokPPvgA0dHROH/+PLZs2QIhBN5+++1STRYCADc3NwAFAVpGRgacnJwq
pW/61g5t3rw5fvvtNzRs2BDz5s2rMe1Q7cVb6qaCK78TmRxLuTVGPf++1vHsvEysi5hn0DsYubm5
iImJAQC0a9euUups2bIlAOD06dM6z584cQIA4ODgoPe2e3kUZmozMzN1nq9Xrx5ee+01AAW30kNC
Qso0WQjQDMrPnDmjdT4xMRFZWbpXGSgc25mcrPnBQgiBGTNm6CxTmG08cOAAcnNzS9XHqmqHSBcG
nCaCGU4i09TGsxs6e2tPIIpLOYtf4zdVShtr1qzRCoZWr16Nhw8fIiAgAN27d6+UdsaNGweFQoFz
585h9+7dGueys7OxcOFCAMAHH3wgBUeVoXDST1hYmN5rCoPL77//Hmlpaejfv3+ZxmI6OjqiX79+
AIDPPvtMY0hAZGQkOnfuLA0pePaDQmFwHRkZCZVKBaAg4J86dSp+/vlnne2NGjUKrVu3RkJCAmbM
mCGVK8pY7RDpwlvqJkKmJ+IUjDiJaryRz7+HS6mRyMjVnLm98/xKeDn7opWH9u5EZbFv3z6Eh4cj
ODgYTZs2xalTp7B+/XrY2dlh2bJlFaq7KAcHB3z99dcYMWIEhg0bhokTJ6Jjx45ITU3Fli1bEBsb
i3bt2uG9996rtDYBoF+/ftizZw+2b98Oc3Nz9OjRA926dUOTJk2ka/r06QMvLy9pAszEiRPL3M78
+fMRFhaG8PBw+Pv7IyAgABcvXsSFCxcwb948rFmzBklJSVpj7nv37g1ra2ukpKTA19cXHTt2xKFD
h6BWq7F582Zp6aai5HI51q9fj759+2LlypWIiIjAoEGD4O7ujvPnzyMiIgJ+fn7YsmVLlbdDpJPg
TkMm4YPPT+jcaSgiOtnYXSOiShCbfEbnDkSTt78kbqXHl6vOwp2GDh06JEaOHCntyANANG/eXERH
R2uVKW4XodJec/bsWdG6dWshk8mk9hwcHMTMmTNFbm5upbepUqnEpEmTNNrbvXu31nUfffSRACC8
vLx07jxUGuHh4dL7iv/fTWnmzJlCCCE8PDx07jQkhBDbtm0Tjo6OAoCQyWSiffv24o8//ih2ByAh
hEhKShKDBg0SVlZW0nVyuVz4+/uLpUuXGq0domfJhBAhAMZUUXxLBjL3i1M4HZ2idXzB+13Q9Xl3
I/SIiCrb9nPf4tf4H7WO21s6YcbLK9Gwjl+Z6mvYsCHu3LmDEydO4IUXXsCTJ08QGxsLb29v1K9f
v7K6rVdmZibi4+Ph5uYGb2/vSlmfsjj379/HtWvX4O7ujoYNG2rdtp85cyaWLl2K+fPn4+OPP65Q
W7dv30ZGRgZatWolvS5PT08kJSXh5MmT6NpVOyudk5ODuLg4NGzYsMzvv1KpxKVLl6BSqdC8efNi
Z8pXVTtERfGWuongOpxEpm9I63/hzqOriE3WnHSTlZeBxWETMemFhWjt8UK567exsUHHjh0r2s1S
c3R0ROfOnausPVdXV7i6uuo8l5WVhbVr15Z5spA+3t7eZS5ja2urd+mhksjlcmlSVnVph6goThoy
EQw4iUyfmZk5/vXCQng4ai9TlKvMwYo/pmPTX0uQnad7Njbpt2HDBjx69KjMk4WIqHSY4TQRDDiJ
agcbC3u81+NbLDk2CfeytHd4OX5tJ07f+hVdGvXDc27Pw97SCc429WAt196lR6UumHGc+eQBHmSn
Grzv1ZVarcZ/l38JABgxOshg74Wa73eJbCztYWNhZ+xukAFwDKeJWPjNWfx28q7W8TlTO6Jnt8pb
z46IqoeHOfex9LfJSHlc/r3VczPzIQRgZWcOM3ntveGlVgs8fawEANg4WZRwdfnx/S6ZDDL0fi4Y
we2nG7srVMn4E28i5Oa6v5VKle7dI4ioZqtj64q5fUIqNGbT2tECNk4WtT74MTOTwcbJwqDBJsD3
uzQEBI5c3oqoO8eN3RWqZPypNxEMOIlqH1tLe/yn+5cY3m4arOQ2xu4OUaW5m3Hd2F2gSsaA00SY
m+sew6lScQwnkSkzk5nhlWYjsLD/L+jhOwSW5tbG7hJRhcggQyv3LsbuBlUyThoyEeZ6MpwqZjiJ
aoW6tm54s+MsDGkzGX8nncKJm/txPe1v5KvyIIMM1hZ2sJRbGbubRMWyt3RC/xZj4OPib+yuUCVj
wGki5HLdGU6lkhlOotrE1tIBAY1eQUAj7f3XiYiMhbfUTYRczyD0fCUznERERGRcDDhNhAUDTiIi
IqqmGHCaCH0Bp5IBJxERERkZA04ToTfDma+q4p4QERERaWLAaSIsLPTdUuekISIiIjIuBpwmwkJu
rvN4HjOcREREZGQMOE2EpaXub2VeHgNOIiIiMi4GnCbC0kJfhpOThoiIiMi4GHCaCEs9YzifMsNJ
RERERsaA00RYWnIMJxEREVVPDDhNhJWegJMZTiIiIjI2BpwmQl/AmZvLgJOIiIiMiwGnidAbcD5V
VnFPiIiIiDQx4DQR1lZyncdznzLDSURERMbFgNNEWFnpGcPJDCcREREZGQNOE2FjrTvD+SSXAScR
EREZFwNOE2FlaQ6ZTPu4WnCmOhERERkXA04Tom8cZ3ZOfhX3hIiIiOh/GHCaEFsb3lYnIiKi6ocB
pwnRN44z+wkznERERGQ8DDhNiJ2Nhc7jOTnMcBIREZHxMOA0Iba2ujOcWRzDSUREREakO0KhGsnO
VneGMys7r4p7YhwqlQoJCQkAAGtra7i7uxu1P2lpaXj8+DEAQKFQwMbGxmBtVbfXTkREVBQznCbE
Xk/A+TirdmQ4k5KS4OPjAx8fHwwdOtTY3cGsWbOk/pw4ccKgbVW3105ERFQUM5wmxN5OT4azDLfU
Fy1ahMjISK3jNjY2UCgUcHd3R+PGjTFgwABYWVmVu69Ueunp6ZgwYQIAoFmzZli0aFG56lm1ahXC
wsIAAJ988gnatGlTaX0sq8p6TUREVDMw4DQhDnaWOo9nPi79LfXTp09j//79JV5Xv359TJ06FXPn
zoVM14rzVGlycnKwe/duAEDXrl3LXU9UVJRUz7/+9a9K6Vt5VdZrIiKimoEBpwlxtNcdcGY8flqu
+l588UX4+Pjg6dOnuHfvHhISEnDlyhUAwL179/Dxxx/D0tISs2bNKnefyfQIIaBUKmFhoTvjTkRE
tQ8DThPioC/gzCxfwDlp0iQEBwdrHIuOjsbEiRMRFRUFAJg7dy5GjBgBLy+vcrVBJXNzc8Nff/0F
ALC3ty93PR999JGU2fTz86uUvhW1evVqLFy4EKmpqfjuu+8wfvx4vddW1msiIqKagQGnCXFy0Jfh
rLxZ6u3bt8fu3bvh6+uLvLw8KJVKxMTEMOA0IEtLS3To0KHC9TRq1AiNGjWqeIf0SE1Nxd27d0t1
bWW9JiIiqhk4S92EODnqnsTzqJwZTn28vLzQokUL6eu4uLhSlbt//z4iIiJw7dq1Eq/NysrCX3/9
JS31U1GPHz/G+fPnERsbC5VKVa7ycXFxOH36NO7evQu1Wl3uvgghcPv2bURERCA9Pb3c9Rhaeno6
IiMjERMTg7S0NGN3BwCQn5+P+Ph4/PXXX7h3756xu2OS/v3vf6N3794IDQ01dleMJiYmBn369IGr
qyscHBzQrl07fPXVV8WW+euvv9C7d28MGTKkinpJVLMw4DQhdZz0B5wqtajUturWrSs9Nzc3l54n
JSVBoVBAoVBg4MCBAIBLly6hX79+qF+/Prp06YIPPvhAdz8fPcLEiRPRpEkTODo6olOnTvD29oaz
szO6d++O48ePl7mfd+/exciRI+Hi4oK2bduiVatWcHR0RO/evXHz5k295dRqNcLCwjB16lR4eXnB
0dER/v7+6Nq1K7y8vODs7IxPP/0UOTk5ZepPSEgI/Pz80KhRI3Tp0gX16tWDj48PvvzyS71ldL2n
5fHuu+9K9fzxxx86r1EqlVi3bh0aNWqEevXqoWPHjmjfvj1cXV1hY2Ojc8ml5cuXQ6FQYOnSpTrb
UigUmD9/frlfU3Z2Nt5//320aNECdnZ2aNGiBTp16gQ3NzfY2dmhefPmiImJKcc7YtoiIiIwduxY
6TFu3DhMmzYNy5Ytw8mTJ/WWO3v2LMLCwnDnzp0q7G31cePGDQQEBODo0aOwtLREYGAg7t+/j+jo
aDx8+FB6Px89eqRRLi0tDWFhYXp/t4hqO95SNyFOjlaQyQDxTGwpBPAoIxcudSpv4fHY2Fjpedu2
baXnKpUKqampAIAHDx7g/Pnz6NmzZ4mZvN9++w2jR4/WuCVra2uLnJwcZGRkIDw8HD179sT06dOx
aNGiUi3JFB8fj169eiEpKUnjeE5ODsLCwtCxY0ds374dPXr00CqbmJiI3r17axwr7A9QkPH85JNP
cOPGDfzwww8l9gUoCMKWL1+udfzmzZuYMWMGoqKiEBISovXann1PyysjI0OqJy9P9zCLadOmYeXK
ldLXFhYWMDc3R25uLnJzc3VmnLOysqR6C2VmZiIzM1P6unAB/EKlfU3Hjh3DhAkTtD4cyOVyKJVK
5OTk4NKlS1r//Akl/mx27twZ+/fvR7169aquUzUi2SndAAAVSklEQVTA0qVLkZeXhxEjRmDTpk0w
MyvIyzx9+hT379+X3tNFixbB2dnZiD0lqlmY4TQh5mYyODnoDsTSH+VWWjvh4eEatzPbtWun87q8
vDyMGjUK6enp6NmzJ9auXYs9e/ZgzJgxGtddunQJffv2xd27dyGTyfDRRx/h6tWryMrKwsOHD/Hr
r7+icePGEELgv//9b6lmxRf+w0hKSkK7du0wa9Ys7Ny5EwsXLpTGMaanp2PEiBF48uSJzjosLS3x
xhtv4NChQ0hMTER2djZu3LiBpUuXSlndjRs34vz58yX2Z/v27Vi+fDmcnJwwdOhQrF27Fhs3bsTI
kSOla7Zu3YrvvvuuxLoMJTw8XAo2mzVrhmPHjuHRo0d48uQJ7t27h9DQUK3vHQC8+eabOHbsGEaP
Hi0de++993Ds2DHpMWnSpDL35/Lly3j11VelYNPT0xNbt27FnTt3kJ+fj7S0NPzxxx9YsGABFApF
+V50LSCXy3H16lVERUVh165deP311wEAZ86cwVtvvWXk3lU/hR+mX3zxRSnYBAArKyvY29tj0qRJ
mDRpEmxtbUtd5969ezFnzhzs3bu30vtLVGMIIUIEmYwJM8PEy8N3aj1ORiaVqvyAAQMEAAFAbN26
Vet8cnKy8PLykq4JDg7WOJ+QkCCdAyDMzMzEmjVrim2zb9++0vUbNmzQeU1aWppo0qSJACDkcrm4
ePGi1jXPtm1ubi6++eYbreuSkpKkugCI5cuXa13z5MkTkZqaqrfPL7/8col9HjdunEZ/2rdvL+7e
vat13RdffCFdo1AoRE5Ojt7X1bVrV51tleaaov05cuSI1vnPP/9cOr9x40a9r12fefPmSeXXrVtX
7LWl6W/Pnj2la1q1aiWSk5PL3KfabMuWLdLvy7NGjRolAAgrKyvx9OlTjXOdOnUSAHT+7tQGPj4+
AoDYsmVLmcodPHhQABAuLi5a5wYOHCgAiLlz51ZWN4lqHGY4TUy9urpvm99LK9tYw6IyMjJw7tw5
fPzxx2jatKk0tqtp06ZYs2ZNsWUXLVok7SijS1hYGA4dOgQA8PX11ciSFeXi4oLp06cDKBhnqG8c
aCF7e3scOHAAU6dO1Trn7u6OGTNmSF/ryipaW1ujfv36eusvOjHg+vXrxfYFAAYNGoTw8HB4enpq
nXv33Xfh4eEBAEhJScGePXtKrM8Q7t+/Lz1/9hZ4VTt48CCOHTsmfb1ixQpmMStR3759ARTcJs7P
L/vWtykpKThy5AhWrlyJ/fv3l3pyX1nKZWZmIjo6Gn///bd0LCsrC3v37sX27du1fkaFEIiJicHK
lSsRGhqKp0/LNlkyISEB0dHRyM0tuBt069YtREdH632U5n3Lzs5GdHQ0MjIyAADJyclSeX1/N65e
vYotW7Zg3bp1iImJ0TtBUdf7k5iYiA0bNnBMM1VPghlOk7J8bbTODOf3m/8uVfmiGU4bGxthZ2en
kaUrfHTo0EHExsZqlS+aufLz8xMqlarY9ubPny9d/+mnnxZ77ePHj6VrdWURSpM1K/TgwQPpWrlc
LpRKZbHXP+uXX36Ryr/33ns6rykpo1jUf/7zH+na+fPnl/l1VUaGc/PmzdL5unXrih9//LHYPj+r
MjOcn3zyiXQ+ICCgTP2gAsVlOBcsWCAACH9/f61zxWU4c3JyxJQpU3T+TRg2bJhIT0/X2ZfylHs2
YzhnzhxhYWEhlbOyspLuwly8eFE0aNBAo97mzZuLe/fulfr9mjhxos7+6XskJWneNdKV4Tx16pTe
8v3799con5mZKV5//XWd1z169KjY90epVIrBgwdLZZYtW1bq101UVThpyMTUr6d7XNG9NN3jFIvz
7NhGMzMztGzZEp988ok0Dqw49erV0xgDpUvhzkUASlwj0t7eHvXq1UNaWhrS09ORnp4OFxeXEvuh
S506deDg4IDHjx9DqVQiMTERDRs21Ht9ZmYm7t69i5SUFCQnJ1f6TFRvb2/p+a1btyq17tIKDg7G
0qVLcf78eTx48ABvvfUWvv32W7zzzjsYPny4xmoEhlb056J9+/ZV1m5tcOPGDXz11VcwMzPD4sWL
S11OpVKhe/fuiIyMhI+PD2bOnInmzZvjxo0bWLlyJbZv344zZ87gwoULcHR0rHC5oubNm4clS5ag
R48e6NmzJ3bs2IGoqChMmTIF3t7eGDp0KNRqNf7zn/8gPz8fP/zwA+Lj4/Hpp5/im2++KdXre/31
1+Hj44MlS5bg4cOHCA4O1pgQCRTc7fn8889L/Z55e3tj8eLF2LhxI+Lj4/Hyyy+jT58+AAru6BRS
KpUIDAzE+fPnMXLkSIwZMwZ5eXn48ssvceDAAYwePbrYOx/Tpk1DaGgounbtihdffBGtWrUqdR+J
qgoDThOjcNUdcCalZpe5rokTJyIgIADu7u7w8fFBo0aNYGmpe3H58ioaWOi63fwsT09PaU3IK1eu
oEuXLuVu283NTbotpyvgVCqV2Lt3L9atW4fDhw9XaO3N0vSlUGJiosHaKY65uTmOHj2KwYMH49Sp
UwAKlsgZOXIk5s2bhwULFmD48OFV0pfLly9Lz318fKqkTVMlhMDOnTtx7949nDt3Dps2bYKTkxN2
7NiBAQMGlLqe77//HpGRkfD09MTZs2elD3vdu3dHcHAwAgMDERkZiQULFmgskVXecoUePHiAxYsX
Y9++fejXrx8AYMKECXB1dcWDBw/wwgsvoE+fPtizZw+sra0BADKZDKtWrZJ+jkvjlVdewSuvvILV
q1fj4cOHeO211/DGG29oXHP37t0yBZweHh6YNWsWTp48ifj4eHTt2lXnpMfVq1fj/Pnz6NevHzZv
3iwdf/nll+Ht7Y29e/ciNjYWLVu21Cr74MEDbNiwAREREejUqVOp+0ZU1TiG08S417fTeTwxNavM
dfXo0QNjx45F37594efnV+nBJlAQ1BUqTQZNJpNJz8Wz6z+VUdGlgYoGfEBBdrdXr14YMmQIfv31
VygUCrz//vtYu3YtDhw4gNmzZ1eo7bL0pSq5urrixIkT2Lp1q8bi/levXkVwcDD++c9/lmvh/LKS
y//3WbikLDkVT6VSYejQoZg8eTLWrFkDmUyGZcuW4bXXXitTPUuWLAEATJkyRevOgrW1NWbOnAkA
+Oqrr6RxkBUpV8jc3Bx79uyRgk2gYEx3s2bNAAC9evVCaGioFGwCQNeuXQFAa7mu6uqLL74AUPAh
vyhra2u88sorEELgwIEDestv2rSJwSZVe8xwmhgPhe6AMys7H5lZeXDUs9+6sfj5+UkD3EuT2St6
TdOmTSvUduE/I3Nzc63s5j/+8Q/ptvncuXMxb948jYA4O7vsGePipKSkSM+NndGTyWQIDg5GcHAw
wsLCMGPGDGnppzVr1qBNmzaYPHmyQfvQvHlznD17FgBKtTMV6SeXyxEVFYXExEScO3cO3377LUaN
GoWFCxdi586daN68eYl1ZGVlSRN89N1VKDyen5+Pa9euoWXLluUuV5STk5M0yamowgBz8ODBWmvX
Fn5d0Q+lVSEzM1OaiBkTE4Pk5GSN84Vf65tgVbdu3VINcSIyNgacJsbJwQqO9pbIzNJe2Dsh8TFa
Ple+MY+G4ufnJz0vaWeTnJwc6Xa6s7MzXF1dy93uvXv3pFmsXl5eGhm1Gzdu4PDhwwCAgQMHYsGC
BeVup7SKvvbGjRsbvL3S6tWrFyIjI/HOO+9g1apVAApukVZFwFkoKirKoG3VBq1bt0br1q3Rr18/
TJ8+Hf/4xz9w6NAhBAYG4tKlSyUu/n716lXpub6hLwqFAmZmZlCr1bhy5QpatmxZ7nK1SdEPVJ9+
+qne657dwIKopuG9KhPU0NNB5/EbCRlV3JOSde7cWXq+bdu2Yq/96aefpIxFhw4dKtTuL7/8Ij1/
dkeh8PBw6XlAQECJdVU0i6JUKrF7924ABTv7vPTSSxWqr7LJ5XIsWLBAyhrp2xK0aAb49u3bFWqz
V69e0vCJM2fOSB8AqOKsra2xfft2WFtbIz09XefuV88qmkHUtxyQUqmUxjkXZh/LW642cXD439/r
Xbt24fjx4zofVfHBl8iQGHCaoMZeumd63rqTqfO4MfXv3x+BgYEAgHPnzuHgwYM6r8vOzpb2G5fJ
ZFi4cGGx9cbFxekd8/TkyROsXr0aQEGAN2fOHI3zRcdT7tq1S6t8Xl6exr7upZlVvnbtWr3bL/70
00/SLfXRo0drzFivSsWtvSmTyaSAoXDs3LOKrjKg7/tYWs8//7zGmqzTpk2rtXt7G4K9vT3atGkD
AKVas9HX11caS6tv6EvR44V3Lspbrjbx8fGRAvPCD5y6HrUt80umhwGnCWrSyEnn8as3q+d+0ytW
rJD+KQ0ZMgQbNmyQ9ixXq9WIiYlBly5dcOnSJQAFQVlJA+QfPXqEAQMGYMKECYiLi5OykDdu3ECf
Pn1w8eJFqa5nl2Pq2LGj9DwqKgr//ve/ER8fj4SEBGzduhVt27bVWCz+zJkzJY7p3L59O1q1aoUd
O3ZIe4zn5uZiw4YNePvttwEU/LP58MMPi63HkEaNGoU+ffpgx44dePjwIYCC7O2ZM2cQHBwsZaH6
9++vs3zRLU6jo6OxcuXKCu1xvnjxYmmZnEuXLqF9+/YICQnB9evXoVarkZiYiMOHD2P06NHYsGFD
udupjdRqtbQSQGn2A7e0tJSW2tGXbS78kOHs7Cz9TpW3nKkpzP4X3RK46LnCSU6F+7QTmSIGnCbI
r3Edncev3XoEpdJwS/uUV/v27bF161Y4OzsjNzcX48ePh6OjI5o2bQpHR0e0b98eFy5cAFCwVuSK
FStKrDMgIAA9evTAunXr4O/vj/r168Pd3R1NmjTBiRMnABRMDPrqq6+0yrZt21Yju/btt9+iRYsW
8Pb2xogRI5CQkIC1a9dK+6AnJibC19dXysDqMm3aNKSnp2PYsGGoU6eO9NrGjx+P/Px8ODo6Yu/e
vUb9h6tWq3H06FEMGzYMdevWhZubGzw9PREQEIAjR44AKFimRV9Q7O/vj1GjRgEoCFSnTp0KDw8P
+Pr6YtmyZWXuj5ubG37//XdpvcK0tDSMGzcOvr6+sLCwQIMGDdC3b1/8+OOPyMoq+yoMtVVWVhbG
jBkjfRh44YUXSlWu8K7CunXrEBcXp3EuISFB+h7PmzdPY0x0ecuZksK7FoW7qj1rxYoVkMvl2Llz
p86dzwDwZ5xqPAacJqiJtxMsLLS/tXn56mqb5QwKCpLWobOxsYFKpcK1a9eQnZ0NmUwGX19fbNu2
DVu3boWTk+4MblGBgYE4evQoZs+eDUdHR6SlpUm3rV1dXTF37lzs3LkTtra61y1dtWoVpk2bpjEu
0cLCAr169cK5c+fw9ttvY968edIyLykpKQgNDdVZl0wmw2effYaIiAi0a9cOQghcu3YN+fn5MDc3
R6dOnXD69GmdM3Gr0tChQxEYGAgLCwsABdmYwhmyzs7OWLx4Mfbv319sULBq1SpMnDhRGn/55MkT
XL9+vVzbJwIFWdPo6GiMGTNGIxNXmG21sbFBjx49tBbopv9RqVTo1q0bnn/+efj5+cHZ2RmbNm0C
ULD02aRJk0pVT//+/fHmm28iIyMDXbp0wZQpU/D111/jnXfeQYcOHZCQkIDu3btjypQplVLOlAwe
PBhAQYDdoUMHLF26VGMh99atW2Px4sUwNzfH5MmT0a1bN8yZMweLFy/G0KFD0aBBA60lk4hqHMGt
LU3S9Pl/6NzicvOueGN3rURKpVLExcWJXbt2iTNnzoisrKxSlcvLyxMXLlwQFy5cEGlpadJxtVot
4uLixJ49e8S1a9fK1JfU1FQRFhYmwsLCdPYjLy9PHD58WJw7d05re8y7d++KCxcuiLi4OI3jDx8+
FEePHhW///57qV9bVcrKyhJRUVFi7969IjQ0VFy8eFHk5uaWqY6UlBRx7NgxERoaKi5duiTy8/Mr
3C+1Wi2uXr0qdu7cKQ4dOiTOnz8vnj59WuF6TVXh1pZFH+bm5sLLy0sEBgaK9evXi7y8PK1yxW1t
KYQQa9asEW5ubhr11q1bV3z++efFbhFb1nK6toosql27dgKAWLlypda57du3CwDCw8NDb3/0adSo
kQAgfvrpJ61zd+7cKdPWlkUtW7ZMWFtbS+VHjBihdc3JkydF27ZthZmZmcYWnm3bthUrVqwoU3tE
1Y1MCBECYEyVRbhUJX7cEY+NO+K1jvv71cXXn75U5f0hItOSnJyM69evw8fHBx4eHgYvZwoyMzMR
Hx8PGxsb+Pn56Z2Vn52djYsXL8Le3h5+fn4mO9SAahcGnCbq0vUHmPLh71rHZTJg67d94eqi+1Yy
ERERUWXjGE4T9ZxPHdSra6N1XAjg4G+3qr5DREREVGsxT2+iZDIZer7QAD/vu6p1bvuBa3iuSR1m
OalWkMmAOk5WqONU+xYVJyKqLnhL3YQlpmThrWlHjN0NomqhXl1r+DWuAzMzmbG7UikyHj9F6v0c
qNQCVpbmaKCwh6WleckFqfaSAfVdbBD8mh9c6mjfASMyJGY4TZinwh4vBnjijwjdO3wQ1SZpD3KR
9iDZ2N0wmKTU4jcfICp0MjIZ65f2go01QwCqOhzDaeLGB/tDLjeNjA4REVVc6v0cxMRq73pEZEgM
OE2cp8Ie44P9jd0NIiKqRpwcrIzdBaplGHDWAkED/NCiaV1jd4OIiKqBfj284f+ci7G7QbUMJw3V
EiqVGqs3X8BvJ+/iSa4SZmaAo4MV7Gw4hodMlxACT3JVsLW1QEA7N/j51DF2lyqNUqnG7cTHyMtT
wcnBCh4KO2N3iWqA+i62eK6J6fweUM3BgJOIiIiIDIq31ImIiIjIoBhwEhEREZFBMeAkIiIiIoNi
wElEREREBsWAk4iIiIgMigEnERERERkUA04iIiIiMigGnERERERkUAw4iYiIiMigGHASERERkUEx
4CQiIiIig2LASUREREQGxYCTiIiIiAyKAScRERERGRQDTiIiIiIyKAacRERERGRQDDiJiIiIyKAY
cBIRERGRQTHgJCIiIiKDYsBJRERERAbFgJOIiIiIDIoBJxEREREZFANOIiIiIjIoBpxEREREZFAM
OImIiIjIoBhwEhEREZFBMeAkIiIiIoNiwElEREREBsWAk4iIiIgMigEnERERERkUA04iIiIiMigG
nERERERkUAw4iYiIiMigGHASERERkUEx4CQiIiIig2LASUREREQGxYCTiIiIiAyKAScRERERGZQc
wB0Afxu7I0RERERkmv4PQacgb0JSVs4AAAAASUVORK5CYII=

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/AbstractIterator.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
veZsFDYqLKo2apbtz65gT0WzosuiJzkunIOcl1xHbiF3IsYupiDmeaxdbEHseJxd3P64iXiH+KL4
VzwXXgnvTYJnwtGE6UT/xKrEuaSwpIZkQnJU8nm+BD+R37lWce36tX0CXUGOYDjFJuVAyqTQW1iZ
CqWuSm1Jo6OmpjtdK/2H9JEM+4zSjI/rQtedXS++nr++e4POhl0bnme6Z/68EbORs7EjSzlrW9bI
JqdN5ZuhzdGbO7aobsneMrbVY2v1NtK2xG2/bTfaXrD9/Y6wHa3ZCtlbs0d/8PihLkckR5gztNN2
59EfMT/yfuzZZbrr0K6vudzcm3lGeUV5s7s5u2/+ZPxT8U9ze2L39ORb5B/Zi9vL3zu4z2FfdYF4
QWbB6H7f/U2FzMLcwvcH1hy4UWRWdPQg6WD6weFin+KWQ2qH9h6aLYkvGSh1Lm0oky/bVTZ9mHu4
/4jjkfqjCkfzjn4+xjt2r9yjvKlCo6LoOO54xvFnJ0JPdP1s9XNNpWxlXuWXKn7VcHVgdWeNZU1N
rXxtfh1cl143cTLyZO8p11Mt9fr15Q2MhrzT4HT66Re/RP0yeMb7TMdZq7P159TPlTXSGnOboKYN
TZPN8c3DLeEtfee9zne02rY2/mrwa1WbclvpBckL+RdJF7Mvzl3KvDTVLmh/dTnu8mjHmo6HV1Zc
udu5vLPnqvfV69fcr13pcuq6dN3uetsNmxvnb1rdbL5lcaup27y78Tfz3xp7LHqablvebum17m3t
W9Z3sd+h//Id1zvX7rLu3hrwG+gbDBm8NxQ5NHyPe2/8ftL9Nw8yHsw83PoI+yj3sdjjoifyTyp+
1/69Ydhi+MKI60j306CnD0c5oy//SP1jdiz7GfVZ0XOl5zXjJuNtE+4TvS9Wvhh7KXg58yrnT/E/
y15rvT73l+Nf3ZMrJsfeCN/Mvd39TuZd1Xuz9x1TAVNPPiR/mJnO/SjzsfqT1aeuz2Gfn8+sm8XP
Fn/R/tL61fvro7nkuTkBW8he8AII2sKxsQC8rQKAGg4ADfXFJJFFL7wQAS36d5TnffyCl/9PXvTL
C/EWAJzaClADAYBpOwCnUdZAmYrWAEcAgh0BbGr6raLqfEmNNTVZAIiMehVs0dzcO9Qb4rUB+DI0
NzfTPDf3pRL17A8AaP+w6MHno8VOAnAsxMgyzOe6/rPyhfHfNX8DuEroj/qxrFIAACAASURBVHgB
7Z0HuCxF0UAbBQUDiumpoGLEDAKK2Wd6iAlFTIg5R8CIGXMWxYQo5qyAggExPBDTAzMqYkQFBBEV
Maf56/RvL33nzc7NG+499X17d3a6p7vnzN6dmuqq6k2aplmfUlobL0UCEpCABCQgAQlIYEwELjCm
fu1WAhKQgAQkIAEJSKAioFJWwXBTAhKQgAQkIAEJjIuAStm4yNuvBCQgAQlIQAISqAiolFUw3JSA
BCQgAQlIQALjIqBSNi7y9isBCUhAAhKQgAQqAiplFQw3JSABCUhAAhKQwLgIqJSNi7z9SkACEpCA
BCQggYqASlkFw00JSEACEpCABCQwLgIqZeMib78SkIAEJCABCUigIqBSVsFwUwISkIAEJCABCYyL
gErZuMjbrwQkIAEJSEACEqgIqJRVMNyUgAQkIAEJSEAC4yKgUjYu8vYrAQlIQAISkIAEKgIqZRUM
NyUgAQlIQAISkMC4CKiUjYu8/UpAAhKQgAQkIIGKgEpZBcNNCUhAAhKQgAQkMC4CKmXjIm+/EpCA
BCQgAQlIoCKgUlbBcFMCEpCABCQgAQmMi4BK2bjI268EJCABCUhAAhKoCKiUVTDclIAEJCABCUhA
AuMioFI2LvL2KwEJSEACEpCABCoCKmUVDDclIAEJSEACEpDAuAiolI2LvP1KQAISkIAEJCCBioBK
WQXDTQlIQAISkIAEJDAuAipl4yJvvxKQgAQkIAEJSKAioFJWwXBTAhKQgAQkIAEJjIuAStm4yNuv
BCQgAQlIQAISqAiolFUw3JSABCQgAQlIQALjIqBSNi7y9isBCUhAAhKQgAQqAiplFQw3JSABCUhA
AhKQwLgIqJSNi7z9SkACEpCABCQggYqASlkFw00JSEACEpCABCQwLgIqZeMib78SkIAEJCABCUig
IqBSVsFwUwISkIAEJCABCYyLgErZuMjbrwQkIAEJSEACEqgIqJRVMNyUgAQkIAEJSEAC4yKgUjYu
8vYrAQlIQAISkIAEKgIqZRUMNyUgAQlIQAISkMC4CKiUjYu8/UpAAhKQgAQkIIGKgEpZBcNNCUhA
AhKQgAQkMC4CKmXjIm+/EpCABCQgAQlIoCKgUlbBcFMCEpCABCQgAQmMi8Cm4+rYfiWwmgiccMIJ
6eSTT07nnXdeappmNZ265yqBjQhsttlmac2aNWnt2rVpq6222qh8te347ne/m38Xtt9++7TJJpus
mNM/66yz0m9+85t0uctdLl3xildcMee1nCeipWw56dr2qidw9tlnp7e+9a1pw4YN6U9/+pMK2ar/
RggAAv/617/Saaedlt73vvelY445ZkVCOffcc9NJJ52UfvzjH896fje+8Y3TjW50o/S3v/1t1rrj
qMDvGOdy5plnzqv7Qw89NJ/X6173unkdt5oraylbzVffc19WAmeccUY6/PDDsyK2+eabpx133DFd
9apXTZe4xCXSBS94wWXt28YlMKkEUDywoHCTP/XUU9Mpp5ySH1j23HPPSR3ygsb1nOc8J73xjW/M
/+u/+tWvptpS9La3vS09+9nPTk972tPSK1/5ygXx8KC5EdBSNjdO1pLAvAj8+9//Th//+MezQobZ
fu+990477bRTutSlLqVCNi+SVl5pBLbYYou07bbbprvd7W5p3bp1ebqOKa7jjz9+xZwqiidWQOQ/
//lPeuc73znV53bpS186bbfddnkasj6RP/zhD+lLX/pS+uY3v1nvdnsRBFaMUvbnP/854bfDl788
oRx99NHpJz/5STaVL4LRxBz6/e9/Pz9d6pM0MZdk6EA+//nP5x9jrGLcfLgRKRKQwEwC3Ohvc5vb
5J34Vf3zn/+cWWFKP330ox9Nf/zjH9PFLnaxfAbveMc7ptp14dGPfnT60Y9+lJ761KfOuCIf+9jH
8vXDIqgsDYGpn77873//mw466KBsWv3rX//aSYWposMOOyztvvvuneXTspPpL3wx/vKXv6SLXOQi
0zLsVTnOn//85/m8b37zm6cLXehCq5KBJy2BuRC4/vWvnx82zznnnPSNb3wj8T8z7cJ0H/L2t789
7bXXXonfgy9+8Yvp9re//YJO7Xe/+1068cQT82/JTW5yk3Txi188++ShxG6zzTadvzHcD3mQZ4r4
mte8ZrrOda6TcKPokvJ7hXsFgQZML2MB23XXXdOWW26ZFczf//736ZKXvGS29tPG6aefnvA1Qwhg
Km3UdXJh6w9TuZwLY7rhDW/YKk2dfeGXx4vAkKLociD3f4wxjGWXXXbJLDZqcNp2hNVlfbymUuKL
0NziFrcglK256EUv2rz0pS9t1q9f34QpvImnria0+OYxj3lMc6UrXan50Ic+NPJzjC9xc9xxxzXx
Q7MkfcePVxNPlk2YxpekPRtZHgJxc2niQaF5y1ve0sQ05vJ0YqsSWEEE+I3kfyam/Kb+rH7wgx/k
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
AElFTkSuQmCC

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Returncodes.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nO3deXhU5fnG8e+ZyU7IQgJhXwRZVaCA
IhGoCi4oUFf8gQVaXIoFEYuirYigluJSKUpV3JBFcEOhCihWLSjKjoLsOwSBLGRPJpmZ9/dHyMiY
DNuESSbcn+vKdYX3febMc0Ykd855zzmWMSYFqI+IiIjIWbBVdgMiIiIS3BQmRERExC8KEyIiIuIX
hQkRERHxi8KEiIiI+EVhQkRERPyiMCEiIiJ+UZgQERERvyhMiIiIiF8UJkRERMQvChMiIiLiF4UJ
ERER8YvChIiIiPhFYUJERET8ojAhIiIiflGYEBEREb8oTIiIiIhfFCZERETELwoTIiIi4heFCRER
EfGLwoSIiIj4RWFCRERE/KIwISIiIn5RmBARERG/KEyIiIiIXxQmRERExC8KEyIiIuIXhQkRERHx
i8KEiIiI+EVhQkRERPyiMCEiIiJ+UZgQERERvyhMiIiIiF8UJkRERMQvChMiIiLiF4UJERER8YvC
hIiIiPhFYUJERET8ojAhIiIiflGYEBEREb8oTIiIiIhfFCZERETELwoTIiIi4heFCRGRALv11ltp
3bp1ZbdxxoK1bzn3FCZERALs8OHD7N+/v7LbOGPB2recewoTIiLikZ2dzbvvvst3331X2a1IEFGY
EBERj507d3LHHXewYMGCym5FgojChIhIFZGXl8ef//xnmjdvTkJCAv369ePgwYNl6j777DP+8Ic/
kJSURFJSEl26dCEnJ+eMa35t4cKFDBkyBICZM2fStWtXunbtSnFxcZna6dOnk5ycTGxsLH379uXw
4cNe82lpaUyZMoUBAwbQuHFj4uPjue6669i2bZtX3erVq+natSuzZ89m3759DBkyhHr16tG0aVPe
fPPN0/rcynPgwAFP/+V9PfXUU171n3/+OT169CAmJoaLLrqIadOmldnmPffcQ8+ePXE6nTz00EM0
b96ciRMneuaLiop47LHH6NixI9HR0VxyySWMGTOGgoICr+04nU66du3Kgw8+eNb7V9UoTIiIVAFF
RUV0796dWbNmceONN3LXXXexbNkyunXrRmFhoaduxYoV9OnTh23btjF+/HgeeOABmjVrhjHmjGrK
k5SURPv27QFo2LAhycnJJCcnY1mWV91TTz3FyJEjSUxMpG3btnzyySdMmTLFq2bDhg1MnTqV5s2b
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

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/NamingConventions.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAA6AAAAK5CAYAAACha0NWAAAKm2lDQ1BJQ0MgUHJvZmlsZQAASImV
lgdQU+kWx7970xstEIqU0DtSpAuETiiCVMFGSEInhkBoYkMWV2AtqIiABXRRiuBaAFkLIoqFRUAF
C7pBFgFlXSyIisq7wCO89+btvHn/zMn9zZkz/5zz5X4zBwDyCRafnwhLAZDESxUEerrQV4VH0HED
AAOogARUAcxip/CdAwJ8wd/qYx+AZp/3jWe9/r7uv0qaw01hAwAFIBzFSWEnIXweiUI2X5AKAIqB
5LXSU/mzzEFYVoA0iHDGLMfMc+EsR83zsbma4EBXhBEfPJnFEsQAQGpF8vQ0dgziQxIhbMrjxPEA
ICOTA0d2LAvxJs/2YJSUtGGWsxHWi/oXn5h/84wSe7JYMWKen2VOeLe4FH4iK/P/PI7/raRE4cJv
qCJBTkkI8pmdGTmzDDbLPWiBY7lM3wXmp7oELnBcKjNYXCP0CllgYUKI8wInbPAR1/OiVviL/VNc
IxY4KzY4bIE5XDf3BRZsCBTXp6QFuS/Wu65Y4HiWd8ACswRzs8wxN9EzcLHnAHGfvMQV4lmiBR7i
Gm7K4rypscFeYkZeAHF9nAdTPK/Aa9E/MUDsKRAGis+BywsRe3JYbuKzBW7AHfgiHzoIAebAGpgB
s1RuRups864b+JmCuJjYVLozcgO4RnQmj21iRDc3NTMHs/dp/u96/2junkA0/GKuTAsAjywk+cdi
zroIgLp7ANDqF3NayJPcBEBLGVsoSJvPoWe/MIAIJJEOFZG3QRPoAWOkNytgDxhIt97AHwSDcLAO
sEEsSAICkA6ywTaQBwrAHnAAlIKj4Dg4BU6Ds6AJXALXwE1wF3SDh+ApEIFh8BpMgI9gGoIgHESB
qJAipAZpQ4aQOWQDOULukC8UCIVDkVAMxIOEUDa0HSqAiqBSqAKqhn6BLkLXoNtQD/QYGoTGoHfQ
FxgFk2FZWAXWgZfCNrAz7AMHw2vhGDgZzoJz4V1wCVwJ18GN8DX4LvwQFsGv4UkUQJFQNJQ6yhhl
g3JF+aMiUNEoAWozKh9VjKpE1aNaUB2o+ygRahz1GY1FU9F0tDHaHu2FDkGz0cnozehCdCn6FLoR
3Y6+jx5ET6C/YygYZYwhxg7DxKzCxGDSMXmYYkwV5gLmBuYhZhjzEYvF0rC6WGusFzYcG4/diC3E
HsY2YFuxPdgh7CQOh1PEGeIccP44Fi4Vl4c7hKvDXcX14oZxn/AkvBreHO+Bj8Dz8Dn4YnwN/gq+
Fz+CnyZIEbQJdgR/AoeQSdhNOEFoIdwjDBOmidJEXaIDMZgYT9xGLCHWE28QB4jvSSSSBsmWtJIU
R9pKKiGdId0iDZI+k2XIBmRX8hqykLyLfJLcSn5Mfk+hUHQoDEoEJZWyi1JNuU55TvkkQZUwkWBK
cCS2SJRJNEr0SryRJEhqSzpLrpPMkiyWPCd5T3JciiClI+UqxZLaLFUmdVGqX2pSmiptJu0vnSRd
KF0jfVt6VAYnoyPjLsORyZU5LnNdZoiKompSXals6nbqCeoN6rAsVlZXlikbL1sge1q2S3ZCTkZu
mVyoXIZcmdxlORENRdOhMWmJtN20s7Q+2hd5FXlnea78Tvl6+V75KYUlCgwFrkK+QoPCQ4UvinRF
d8UExb2KTYrPlNBKBkorldKVjijdUBpfIrvEfgl7Sf6Ss0ueKMPKBsqByhuVjyt3Kk+qqKp4qvBV
DqlcVxlXpakyVONV96teUR1To6o5qsWp7Ve7qvaKLkd3pifSS+jt9Al1ZXUvdaF6hXqX+rSGrkaI
Ro5Gg8YzTaKmjWa05n7NNs0JLTUtP61srVqtJ9oEbRvtWO2D2h3aUzq6OmE6O3SadEZ1FXSZulm6
tboDehQ9J71kvUq9B/pYfRv9BP3D+t0GsIGlQaxBmcE9Q9jQyjDO8LBhjxHGyNaIZ1Rp1G9MNnY2
TjOuNR40oZn4muSYNJm8Waq1NGLp3qUdS7+bWpommp4wfWomY+ZtlmPWYvbO3MCcbV5m/sCCYuFh
scWi2eLtMsNl3GVHlj2ypFr6We6wbLP8ZmVtJbCqtxqz1rKOtC637reRtQmwKbS5ZYuxdbHdYnvJ
9rOdlV2q3Vm7v+yN7RPsa+xHl+su5y4/sXzIQcOB5VDhIHKkO0Y6HnMUOak7sZwqnV4wNBkcRhVj
xFnfOd65zvmNi6mLwOWCy5Srnesm11Y3lJunW75bl7uMe4h7qftzDw2PGI9ajwlPS8+Nnq1eGC8f
r71e/UwVJptZzZzwtvbe5N3uQ/YJ8in1eeFr4CvwbfGD/bz99vkNrNBewVvR5A/8mf77/J8F6AYk
B/y6ErsyYGXZypeBZoHZgR1B1KD1QTVBH4NdgncHPw3RCxGGtIVKhq4JrQ6dCnMLKwoTrVq6atOq
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nOzdd1hU1/o24GeGLkWKIKIgKoIYDcaK
CdaoiS1Rg73FaKJRz4ktkqjYu7H8MGrEEjUaQ47lU2xRLFhiwyhWBHsDQZBeh9nfHxz2YWQGUGb2
UJ77uubKzKyy371Hzbyz1l5LJghCGIBmICIiIiIiItIhub4DICIiIiIiosqBCSgRERERERFJggko
ERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJ
ggkoERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERER
ERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgR
ERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmC
CSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBERERER
EUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJggkoERERERERSYIJKBER
EREREUmCCSgRERERERFJggkoERERERERSYIJKBEREREREUmCCSgRERERERFJwlDfAZQ18fHxOHfu
HGJiYpCdnQ1BEPQdEpHeyGQyGBoaolq1amjZsiVcXFz0HRIRERERlWMyQRDCADTTdyBlwYEDB/Dw
4UN9h0FUZlWrVg1ffPEFjI2N9R0KEREREZVDTED/67fffkNiYiIAoE6dOvD09ES1atX4RZsqNYVC
gdevXyMyMhIREREQBAEmJib48ssv+XeDiIiIiN4aE1D8b+TT0NAQn376KerUqaPvkIjKnNjYWBw4
cABpaWmwtrbG0KFD9R0SERERVSAKhQJyuRxyOZepqcgq/acbHx8vTrtl8kmkmYODAz777DMYGBgg
MTERd+7c0XdIRKRnycnJmDx5MlJTU8X3oqOjMXHiRK0eZ9WqVfDy8oKXlxf27t0LAPDz8xPfu3Dh
glaPR0T60blzZ8ydO1ffYZCOVfpFiP7++28AedNumXwSFa1atWpo0qQJrly5gsuXL8PT01PfIRGR
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

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Vocabulary.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nOzdeVxU5f4H8M+w7/sO7huICmruO6Xk
krvWTStNLcsWlzJ/leUtW2wzq1tamprXpVKzNCy9KqKYGygqoKAisiM7MjDDMM/vD5oTIzMw7CCf
9+vFi5lznnPO9zyMznzn2WRCiHwAdiAiIiIiIiJqQEZNHQARERERERG1DkxAiYiIiIiIqFEwASUi
IiIiIqJGwQSUiIiIiIiIGgUTUCIiIiIiImoUTECJiIiIiIioUTABJSIiIiIiokbBBJSIiIiIiIga
BRNQIiIiIiIiahRMQImIiIiIiKhRMAElIiIiIiKiRsEElIiIiIiIiBoFE1AiIiIiIiJqFExAiYiI
iIiIqFEwASUiIiIiIqJGwQSUiIiIiIiIGgUTUCIiIiIiImoUTECJiIiIiIioUTABJSIiIiIiokbB
BJSIiIiIiIgaBRNQIiIiIiIiahRMQImIiIiIiKhRMAElIiIiIiKiRsEElIiIiIiIiBoFE1AiIiIi
IiJqFExAiYiIiIiIqFEwASUiIiIiIqJGwQSUiIiIiIiIGgUTUCIiIiIiImoUTECJiIiIiIioUTAB
JSIiIiIiokbBBJSIiIiIiIgaBRNQIiIiIiIiahRMQImIiIiIiKhRMAElIiIiIiKiRsEElIiIiIiI
iBoFE1AiIiIiIiJqFExAiYiIiIiIqFEwASUiIiIiIqJGwQSUiIiIiIiIGgUTUCIiIiIiImoUTECJ
iIiIiIioUTABJSIiIiIiokbBBJSIiIiIiIgahUlTB0BEREREVFvp6en45ptvAABLly6Fvb19o15/
586duHr1Kvr06YNJkyYZvI+otZIJIfIB2DV1IERERGS4U6dO4cqVK4iJiUFsbCxsbGzQuXNndOrU
CZ07d0bnzp3h4+MDIyN2dtKIiopCbGwsRo0aBXd39yrLsn4r++WXX6BQKNCnTx907dpVZ5mDBw8i
Pz8fHTt2RP/+/XWWuXjxIq5evYrevXujW7duyMvLwx9//AEAmDhxIqysrGoU18WLF9G7d28AwO3b
t9GmTZsaHX+v6OhoXL58GQAwZcoUmJubV1l+8uTJ+PXXX/H0009j06ZNBu8jaq3YAkpERNSCJCYm
Yt68eThy5Ei1ZUNDQzFixIhGiKplWLx4McLCwpCRkaG3DOtXv7Vr1+LEiROYN28eNm7cWGm/UqnE
1KlTUVJSgsGDByM8PFzneZYsWYLQ0FAcOXIE3bp1w61bt/Cvf/0LQHkCWdMEtL49//zzCAsLA1De
gvnYY481aTxE9xsmoERERC3Erl27sGDBAty9exc2NjZYsmQJ+vXrh4CAABQVFSEhIQERERH4/fff
ce7cuaYOt1rFxcVISUmBSqWCr69vg14rLy8PJ0+exMCBA+Hi4qKzDOu3akFBQThx4gSOHj2qc//5
8+dRUlICAIiIiIBCoajUelhYWIjw8HDY2Nhg6NChAACZTAZLS0vp8b0yMjKQlpaGTp06wdbWts73
UZWrV69KyScAbNy4sdUmoI3575NaGSFEviAiIqJmLSUlRdjY2AgAonv37iImJqbK8pmZmSI3N7eR
oqudZ599VgAQ48aNa/Br7dy5UwAQH3zwgc79rN/qHT9+XAAQAERCQkKl/R9++KG0H4AIDw+vVGbf
vn0CgHjkkUcMumZaWpp0vrNnz+osc+HCBanM7du3a3RP91q2bJkAIGQymfT7xo0bVR4zadIkAUA8
/fTTNdrX3DXmv09qXVrPwAUiIqIWbPny5bh79y5MTExw4MAB+Pn5VVne1dUVDg4OjRRd87d//34A
wCOPPKJzP+u3egMHDpRaKnV1UT5x4gQAwMLCAgB0dsE9ePAgAODhhx9uqDBrTalUYuvWrQCA119/
HQAghMD333/flGER3XeYgBIRETVzV65cwfbt2wEATz31FDp06FDjc9y4cQNjxozBmDFjcOfOHSQm
JuLVV1+Fv78/evXqVan8hg0bMHr0aDg6OsLHxweTJ0/GpUuXdJ5bpVLh0KFDeO655xAQEAAnJydY
WVmhe/fuePvtt1FUVKQzlt9//x0AcPbsWSm2MWPGQKFQ1CkeXfEdPHgQHTp0gL+/f6X9rF/D4jEz
M5O6zd7bDVetViM8PBxubm4YN24cAN0JqGayoeDgYL11p7Fq1Sqt7q8vvviiVE7XGNSK9fXll19i
/PjxsLe3R7du3fDJJ59ArVbrPQYon2QpKysLbm5uePvtt9GvXz8AwJYtW1BWVlblsXXx22+/Yfr0
6ejatSusra3Rp08fzJkzBzExMVUed/fuXaxcuRIPPfQQvL29YWVlBV9fXzz88MP45ZdftMomJSVh
3bp1GDNmDNq3bw9zc3N4eXkhODgYp06d0ipbm9dPbe5h1apVGDNmDD777DMAwPbt2zF58mTY2dlh
z549BtUdtVCCXXCJiIiata1bt0pdDM+dO1erc1TsphgVFSV8fX2l576+vlI5uVwuZs6cKQAIW1tb
MXjwYNGxY0cBQFhbW4s///yzynO7ubmJgQMHCjs7O2nbjBkz9JbX9SOXy+sUz71CQ0MFAPHSSy/p
3M/6NTyeDz74QAAQnp6eWtsvXrwoAIipU6eKTz/9VIq1opiYGAFAdO7cWW+8FbvQarqv6vpZvny5
zuOvX78upkyZovOYt956q8q/YVBQkAAgXn31VSGEEN9++6107P79+/UeV9suuCUlJeLpp5+WruHl
5SUGDhwo7O3tBQBhYWEhvvrqK53XPHbsmGjbtq10rJOTkwgICBCWlpY671UTh5mZmfDz8xM9e/aU
jjUxMRFRUVE667O6109d7qFi3axfv17rGrt27dJb39TyMQElIiJq5t58803pg1ltxx1W/FAZEBAg
OnbsKL788kuRlJQkkpOTpXJvvfWWACAGDRok7ty5I21/7733BADRrVs3UVZWpnXuq1evipdeeknE
xsZK2xQKhXjllVeka966dUvrGLVaLZ555hkBQIwdO1ao1Wrpp6LaxHMvTRyHDh3SuZ/1a3g8Z86c
ka4ZHR0tbf/yyy8FALF27Vpx+vRpqUxcXJxU5rPPPhMAxAsvvKC37iomoGq1WqSkpEj7Tp8+rfM+
Kh4/aNAgYWFhIVasWCEiIyNFbGysGDt2rJQMKZVKnX+/+Ph4IZPJhEwmk2IuLCyUxgVPmjRJ53FC
1D4BXb16tQAg7O3tRUhIiNZ9v//++8LIyEgAECdPntQ6LicnR7i6ugoAwtHRURw4cEDap1KpxNWr
V7XqXQgh3nnnHbFt2zZRUlIibbtx44ZwcHAQAMScOXO0yhv6+qntPVSsm+7duwsTExPx9NNPiyNH
joicnByRl5dXqTzdP5iAEhERNXOPPvqo9CGvtip+SHdxcRHXr1+vVCYlJUVYWVkJAOLChQta+1Qq
lWjTpo0AIH777TeDrnnr1i3pmrpa9qqb5KS+4unWrZuwtbUVCoVC537Wr+HxqFQqqfX1yy+/lLZr
WlEjIiKEQqEQFhYWAoDYsmWLVGbMmDECgFbCJETVkwjVdBIiExMT8euvv2rtr5g0V0ziK3rttdcE
ADFy5Eit7fPnz5fOm5aWpvPY2iSgycnJwtraulI9VjRjxgwBQPTp00cr8Xv++eel+zl8+LDOYw01
d+5cKXG/V3Wvn7rcgxDaLdxLliyp031Qy8IxoERERM2cZlyck5NTvZxv+/bt6NSpU6XtISEhkMvl
cHd3R2BgoNY+Y2NjaSxjVFSUQddp166dNCFNXl5ejeOsj3ji4+Nx7do1BAcHw8zMTGcZ1q/h8Rgb
G2P48OEAtMeBnjhxAra2tggICICZmZk0flIzDlQul+P48eMwNzfHyJEjaxyroTZs2ICJEydqbfPy
8pIeFxQUVDqmtLQUW7ZsAQA888wzWvs0z1UqlVSmPhw6dAhFRUUwNTXFnDlzdJZZsGABACAyMhKJ
iYnSds2EWkOGDMFDDz1Upzi6desGoHavn7rcQ0VDhw7FJ598UuPrU8vFdUCJiIiaufbt2wMAkpOT
UVZWBmNj4zqdT98Mr3FxcQDK1//T9cE2OjoaAHD79m2957506RLi4uKQlpaGzMxMlJaW1jrO+oin
utlvAdZvTeMJCgrCgQMHEBoaCrVajYSEBKSlpSE4OFiqu8GDB+PEiRPSBDehoaFQKBR48MEHYW1t
XeuYqzN69OhK20xNTas85rfffkNGRgacnZ0xdepUrX2adWCjoqLw/fff47XXXtO5VmlNaere09MT
NjY2Ost06dJFq3z79u0hl8uRnJwMAOjfv3+Nr1tQUIBTp04hLS0NaWlpOHz4cC2i/ycmoOb3cK+u
XbvCyIhtYq0JE1AiIqJmrnPnzgDKW2pu375dq1laDaFJNAoKCnQus6FRcaZSjR07duCjjz6SWsss
LCzQqVMnaeZRIUSjxqOxf/9+GBkZSTOz6sL6rVk8QUFBAIDc3FxcuHABly9fBgAMGzZMKjNkyBAA
QExMDHJzc6XZb5vj8ivfffcdAMDKykpqsatIk+THx8fj+PHj9dKCm5CQAABwd3fXW6bivlu3bgEo
/5tp/tZt27Y1+Hrp6el4/fXX8dNPP0mzJrdt21aa0bY2r5/a3gMRE1AiIqJmrmIrQnh4eIMlSD4+
PgCAQYMGVVqaoSpff/01Fi1aBGtra3zwwQcYMWIE+vbtCzMzM1haWqKkpKRWrUa1jUcjLy8PJ0+e
xMCBA+Hi4qK3HOu3ZvH06tULzs7OyM7OxtGjR3H16lUAkLrmas4JlCc2p0+fbrbrf966dQuHDh0C
UL5UybZt26osv2nTpnpJQN3c3AAA+fn5esvk5uZKjzWJnLe3t7QtMzPToGtlZWXhwQcfRExMDEaP
Ho158+Zh6NCh8Pb2xpo1a7BixYpavX5qew9EbO8mIiJq5oYNGyZ1cVu1alWdul1WpXv37gCAiIgI
lJSUGHRMaWkpXnnlFQDADz/8gBUrVmDQoEF6x1s2dDwV/fHHH1CpVFV2vwVYvzWtX5lMhlGjRgEo
Hwd64sQJmJubS+M+AcDFxUUaX7h161Zcv34d3t7e6NGjR53jrk+bNm2CEAL9+/dHRESE3h9N19w9
e/bUarzkvTR1k5KSorf1MSkpSXrctWtXAICtra30xYGm5bk6GzZsQExMDHr37o2QkBA8+uijWols
bdX2HoiYgBIRETVz7u7u+L//+z8A5YvEv//++w1ynVGjRsHc3BxKpRJff/21QcdcuHABxcXFAIAB
AwboLVdWVlZpm2ZsnqYrX33EU5Eh4z8B1m9t6lfTDffYsWOIj49Hv379pAmRNAYPHgwA+OmnnwAA
wcHBNboGoD1+U9991FZZWRm+//57AMBzzz2HPn366P15+eWXAZSPl92+fXudrz1kyBDIZDIUFRVJ
rcP32rVrF4DylsaKk1ppupOHhIQYNGGVZiKovn37wsREd+fH2rx+6nIP1LoxASUiImoBli5dKnUN
XbVqFR577DGdM3oCwJEjRzBt2jQcO3asRtfo0KGDlIi99dZbCAkJqVSmtLQUKSkp0nNbW1vpsebD
PFA+6+lrr70mjTG7du1apXNpPpDGxsbq/JBbm3g0VCoVDh48iA4dOsDf31/3DVfA+q1Z/WoSUM31
K47/1NCMA9W0jtWm+62zszPs7e0BAL///nuNj6/K77//jtTUVNjb22PmzJlVlh0+fLjUgrdx48Y6
XzswMBCzZs0CALzxxhuVutOePHlSus7777+v1eK9evVqODg4QK1WY+bMmYiJidE6VqFQSBNIAf+8
hvbu3avVehseHi7N7Hvr1i0olUqt81T3+qnLPVArJ7gOKBERUYsQFxcnBg8eLK2dZ2NjI4YMGSIW
LVokXn75ZTF27Fhp7UYA4tChQ9KxVa21WFFJSYkYN26cVHbEiBFi8eLFYsmSJWLw4MHCwsJCzJ49
WypfVlYm+vXrJ5Xv3bu3eOSRR4Szs7Nwd3cXwcHBAoDw9vYW33zzjSgrK5OOvXnzprC0tBQAhIOD
g3juuefEG2+8Uad4NEJDQwUA8dJLL7F+G6B+hRDCy8tLOu7gwYOV9sfExEj7jY2NRU5Ojs7zVFd3
CxculPYPGjRI/Pvf/65R3aenp0v7z5w5I20fP368ACAWLVqkM657ffTRR9J5zp8/L22vzTqgQpSv
w9qtWzcBQHh5eYkFCxaIf//732L69OnC1NRUABATJ07U+ptq7N69W1rD1cLCQowYMULMmzdPjBs3
Tjg6OorHH39cKvvbb79JcVtbW4tp06aJPn36CJlMJmbMmCGt2frEE0+IS5cuSccZ8vqpyz1UVTd0
f2MCSkRE1IKUlZWJTz75RLi7u0sfKu/9GTp0qPjuu+/E3bt3peMMTZA01q9fL7y9vbXOa2VlJfr1
6ye+/vprrbIJCQliyJAhUjlTU1Mxbdo0kZGRIdLS0oSLi4sAIGQymUhJSdE6du/evdJ+AMLExKTO
8QghxLJlywQAcfjwYUOqVcL6Nax+hRBi1qxZAoAwMjIS+fmVP06q1Wrh5OQkJY76VFd3eXl5YurU
qVqxrV692uDjdSWgt2/fFkZGRgKAuHjxot7YKsrIyJCSqoULF0rba5uACiFEUVGRePbZZ4W1tbXW
/Xl4eIj169dXGc+VK1fEgAEDpPsAIMzMzERAQIBYt26dVtnPP/9cSlgBCB8fH7Fjxw4hhBBvvPGG
tP2ZZ57ROs6Q109t74EJaOslE0LkA7ADERERtSjZ2dmIiYlBXFwcbG1t0aZNG3To0AEeHh71do2s
rCzExMTA09MTnTp10rtenxACN27cQEZGBnr37g0rKytpn1KpREREBHx9feHo6Fjp2JKSEly9ehVF
RUXw9fWFs7NznePx9fVFWloa7ty5U+uuf6xf/fE0heTkZFy/fl2KTd94xpZIrVbjxo0bSE9Ph6+v
L1xdXQ0+tqioCFFRUXBwcEDXrl311ktBQQGio6N1jse8ceMGSkpK4OfnV+lvbujrpy73QK0LE1Ai
IiK6r8THx6Nr166YPn06fv7556YOh4iIKmg+X2sRERER1QNDZ78lIqLGxxZQIiKiRiKEgLxAhbv5
KtzNL4W8QIXSUjWUxWokRBeiqFAFUzMjeHe2gokpvyOurZNnDuJ26g08Mno2bG0cmjocIqon1rYm
6DXMCeYWxk0dCtUBE1AiIqJ6VCIvQ8qNIqTelCMrtQRZqQpkp5UgK7UEBTml0LNeOxERGcCjnSVe
/z4Aljb3zxjg1oZ/OSIiolpSFJchIboQ1y8VIPHqXSTHlyedRETUMNITixG2Lx3Bs32aOhSqJSag
REREBlKUlCEuIh/RZ/JwPaoASfF3oS5r6qiIiFoXZYm6qUOgOmACSkREVIXMpGJcDMvGldN5iL+Q
D1Up+9ASETUVSxtjDJ7g1tRhUB0wASUiIrpHeqIc549kIeJoNpLji+r13BbWxrCxN4WNvQms7U1g
Zm4MAYGslBKoSgVMzY3g1cEKFlacZIOIqCIrOxMMn+wBZw+Lpg6F6oAJKBEREYCCHCXO/HEH4b9n
IOW6vNbnkckAF28L+HS2hmd7S7h4WcDZ0wIuXuZwcjfn7LZERNSqMQElIqJWq0wlcOlkDsIPZODy
qZxajed09jRH51526Bxgh3a+NvDqaAVzS7ZeEhER6cIElIiIWp28OwqE7UtH2L4M5Gcpa3SsvYsZ
/Ac4oMcgR3QJtIODq3kDRUlERHT/YQJKREStxo3LBfjfzlREhmbVqLWzvZ8N+gS5oOcgR/h0sW64
AImIiO5zTECJiOi+plYLRB7LxuEdKbh5pdDg4zr2sEXfB13Qd5QznD054QUREVF9YAJKRET3JZVK
jdMhmfjjh2RkJJUYdIyjmxkGjXPD4PHucG9r2cAREhERtT5MQImI6L6iKlXj5P4MhGxOQm5m9eM7
jYyB3iOcMWySB/z6O8DISNYIURLVjlKpRGhoKACgd+/ecHV1bfQYYmNjkZSUBDs7OwwcOLDZxUdE
zZtMCJEPwK6pAyEiIqoLlUqNU/sz8fvmJORkKKotb+9ihhFTPDBssgccXMwaIcK6KyoqglKphJGR
Eezt7evtvEII5OXlAQBsbGxgampab+dWq9XIz8+HqakpbGxstPY11P0AgFwuh0KhgImJCWxtbQ0+
TqFQQC6XQyaTwcHBQW+5/Px8qNVqWFhYwNJSd2u5SqVCYWEhjI2NYWdnV6e4NNLT0+Hp6QkA2Ldv
HyZNmlTjc9xLE5Ohf4eFCxdiw4YNCAwMxIULFxo8PiK6v3AxMqIWJCYmBq+99homTZqEPn36YOLE
iXjllVewYcMGlJQY1sWQqrZt2zasXbsWa9euxbVr15o6HDKAEAJn/ryDt2ZGYtuH16tNPtt2s8a8
VV3x4a8P4JH5bVtM8gkATzzxBJycnNCrV696PW9GRgacnJzg5OSEkJCQej33gQMH4OTkhNdee63S
voa6HwBYunQpnJycMHz48Bodt3//fjg5OcHR0RE3btzQWaagoADOzs5wcnLCY489pvdcmzdvhpOT
E5588sk6x9WQevfuXe09ExHVF3bBJWohPvroI6xcuRJK5T9dCit+8zxx4kTpW2eqvY8++ghXrlwB
AHh4eKBbt25NHBFV5XJ4DvZ+k4jk+KJqy/r1d8C4p3zg+4D+Vi2qf/v37wcAPPLII00ciWFGjhwJ
mUwGIQSOHj2KTp06VSrz119/oaysTHqsz8GDBwEADz/8cMMEWw+OHz+OuLg4AOVf5mzatAnvv/9+
E0dFRPczJqBEtTBw4EDk5uYCAF599VXMnz+/xuc4dOgQXnzxRQBAhw4d8Mcff+gtGx4ertV6EBQU
hO7du6OgoACxsbGIjIys8fWJWrJbsYXY/eUtXIvIr7Zs7xHOGDfXB+39at7dsbVwcHDAjz/+CADo
169fpf0//vgjvv76a6hUKoSHhxt8XiEEDhw4AGtra4waNare4jXEggULEBQUpLMbbVX34+Ligl69
eiEqKgpHjx7FggULKh1/4sQJ6fGdO3cQFxeHrl27apVRqVQ4cuQIACA4OLjOcTWUb7/9Vuv5li1b
8M4778DEpHV/RBw/fjzS0tKwbNkyzJo1q6nDIbqvtO7/XYhq6fr168jOzgYA5OTk1OochYWF0rfO
1Xn99delx++88w5WrlyptT8/Px/W1lybkO5/2Wkl2Pt1Is4eulNt2cDhTnhkQVu07WpTbdnWzsLC
AjNnztS7/+rVqwgLC4O7u3uNznv+/Hmkp6djypQpMDc3r2uYNdK3b1/07dtX577q7icoKEhKQIUQ
kMm0J6aqmIACwKlTpyoloKdOnUJBQQG6du2KDh061Etc9S0nJwd79uwBUN4N98KFC0hLS0NISAgm
TpzYKDE0V5qu6IWFhi/dRESGYQJK1Myp1WqcPn1aej537txKZep78g6i5qb4rgohW5Pxv10pUClF
lWX9BzhgyvPt0c63dSWe165dQ2pqKmxsbKRWTLlcjrCwMJw9exbt27fHpEmTdP5/oVQqpRa3nj17
wsXFRTr+zJkzSEhIkModO3ZMOs7Pzw8eHh56Y9J0v50wYUKN70dfTPHx8Th06BCKi4sxZMgQDBo0
SOfx+urDkPsJCgrC2rVrkZmZiejoaPTo0UMqo1AocPbsWTg4OMDZ2Rk3btxAeHg45syZo3V9fd1v
6xJXVQytl4p++OEHKBQKuLm54ccff4Svry/UajU2btzY4Alofn4+Lly4gMuXLyM/Px89evRAYGAg
2rdvb9DxN2/exJUrVxATEwOVSoV27dqhffv28Pf3h5OTk1ZZIQTOnj2L6OhoJCUlwdTUFB07dsSE
CRMqTYwVHR2NzMxM6fm1a9ekv4WFhYXeeo2NjcWlS5dw9epVeHh4oFevXggMDNQ7QZWu17dCoUBY
WBhOnjyJ+fPno02bNgbVBVGLI4TIF0RUI87OzgKAACDWrFlTq3MkJyeL3bt3i927d4s///xTb7mk
pCTpWjKZTKhUqtqGTQbo0aOHVN87duxo6nBavTKVWoTuSRVLgk+L+f1PVPnz/tMXxdWIvKYOuUFN
mTJFABBt27attO/ZZ58VAERgYKAQQoh169YJc3Nz6fUMQPj4+IhLly5VOjYtLU0qs2/fPml7bGys
1vH3/mzZsqXKeAMDA4VMJhPp6ek1vp97Y0pLSxOBgYGVYnjppZd0nvve+qjJ/eTn5wtjY2MBQKxb
t07rvCdPnhQAxPjx48VTTz0lAIju3bvrvHcAIiQkpN7iqo96qah79+4CgHj11VeFEEIEBwcLAMLY
2FikpKToPU7XPeiLT5edO3cKR0dHnfe6cOFCUVRUpPfad+7cEbNmzdJbV/e+J2/cuFF4enrqLOvu
7i5OnDihVf7RRx/Ve+727dtXiiczM1NMmjRJZ/m2bduKY8eO6byPe+vp6NGjwsbGRtoWHh6utw6I
Wjq2gBI1EW9vb0ybNq3acikpKdJjS0tLGBsbN2RYRM1GzNk8/PT5TaTckFdZzqOdJaY+3x69Rzo3
UmTN32effYZly5bBwsICkydPRk5ODsLCwpCcnIz58+fjzJkzBp3HyckJy5Ytw6lTp/DXX3/BysoK
zz33nLTf399f77HJycm4ePEiBgwYUOcupampqRg5ciSuXbuGLl26YMiQIfj111+Rm5uLL774Ag8/
/DDGjh1bb/djZ2eHBx54AGfOnMGRI0fw0ksvSWXCwsIAAMOGDYOTkxO2bt2K2NhY5ObmwtHREQCQ
lpaGixcvwsLCAiNGjKi3uOqzXsLDwxETEwOZTCaNc12wYAH+/PNPlJWVYcuWLVrDP+rLW2+9hXff
fRcAMH36dDz88MNwcHBAZGQkvvjiC6xfvx5hYWGIiIiAhYWF1rFpaWkIDAyUWijHjx+P4OBgODo6
4vLly7h06VKl1s9z586huLgYCxcuREBAADw8PHDkyBFs374dGRkZePrppxEbGyu9t06YMAE+Pj74
9NNPAQAPPfQQAgICAKDSufKR5BMAACAASURBVNPS0tC7d29kZGTAw8MDixYtQs+ePZGSkoK9e/fi
yJEjCAoKwubNm/HUU0/prZP4+Hh88MEHkMvlGDFiBDp06MCeTXR/E2wBJaqx+mgBNVR4eLh0LSsr
qwa9FrEFtDlIT5SLL5ZGV9viuST4tDi2J1WoStVNHXKjMaQF1MzMTAAQCxYsEAUFBdL+1atXS6/t
e1skq2u1WrVqldRiZKhvvvlGABCrV6+u1f1UjMnc3Fw4OztrtQoVFBRIrWgLFy6sdHxVrXSG3M+K
FSsEAGFvb6/V82Ts2LFSC9WVK1ekGH///XepzObNmwUAMXr06HqPq671oqFpvR05cqS0TalUCjc3
NwFAdOrUSajVuv9t1bYF9OrVq8LU1FQAEO+++26lY69cuSJsbW0FAPHOO+9U2v/4449L5/7ss8/0
3ltFUVFROltU33vvPelc169fr7Rfs++bb77Re+4nnnhCABDt2rUTycnJWvvKysrE/PnzBQDh7Ows
cnJytPZXrCdTU1MxePBgkZGRYdA9EbV0bAElaiKxsbH46aefAADOzs544YUXtPbv2LED8fHxuH37
trSttLQU//73v7XKzZw5E35+fjqvERYWhmPHjuHcuXOIj4+Hn58f+vbti2nTpqF79+71fEflUlNT
ERISgtjYWMTGxuLGjRtwdXWVxue0a9cOs2bNgrW1Nfbu3YvLly8DKG8RNmQ2YYVCgQ8//BAAYG5u
jhUrVtQ5jrrIzs7GL7/8gnPnzuHs2bMwNTVF3759MXDgQMyePZst1jUgv6vCgU1JOPpjKsrKhN5y
puZGGP0vL4x90gcW1nwbu5dSqcRjjz2G9evXw8jon+W+g4KCpMc3b95s8Ilu6nP5FVNTU4SEhKB/
//7SNltbW/Tr1w+HDh3CzZs363yNewUFBeHDDz9Efn4+IiMj0a9fP6jVapw6dQqWlpZ44IEHYGpq
CkdHR+Tm5iI8PBzjxo0DAGlW84ZefqW29ZKXlye9/zzzzDNa55szZw4++ugj3LhxA6GhofU6e/Fb
b72F0tJSeHh4YPny5ZX2+/v7Y968efj888/x4Ycf4qWXXpJaAi9duoQdO3YAAIYPH44lS5YYdE19
a8xOnjwZb7zxBgAgISFB53I7VYmJicF///tfAOVru3p7e2vtNzIywurVq7Ft2zZkZ2fjk08+wXvv
vafzXD4+Pti3bx9cXV1rFANRS8V3bqImEhMTg1WrVgEAunbtWikB3b59e6UF4UtLS6VjNHr06FEp
AS0tLcWyZcvw5Zdfam2Pi4vDr7/+ijVr1mDz5s2YMWNG/dwMACEEvv32WyxfvhwFBQWVrltxSYHR
o0ejQ4cOKC4ulu7HxMQEEydOhJubW5XX2b17t3TM448/Xi9x1Na5c+cwffp0rS8JNNvXr1+PHTt2
YNeuXVK3PNJNrRY4+VsG9q1PRGFuaZVlBwS7Yuqi9nByb9wZVVuSDh064IcfftBKPgFoLftRWlp1
PdeVXC7H0aNH0bZtW70JQE2sXbtWK8nS0NxTQ9zPkCFDYGZmBqVSiSNHjqBfv364dOkS8vPzMXLk
SJiZmQEoX5br4MGD0v8tZWVlOHToEICGT0BrWy/bt29HcXExnJ2dMXXqVK198+fPx0cffQQA2Lhx
Y70moOfPnwcAjB07Vqq/e02ePBmff/455HI5YmJipEl/Kq57fe/7ZW3Y2dlJjyuur22oiIgICFH+
RdnkyZN1lnF3d8egQYMQGhoq3bsuH374IZNPalWYgBI1Uy4uLmjTpg0UCoU03kUmk8HHx0er3L0z
7BUUFGDs2LE4deoUAKBdu3YYNWoUXF1dcfHiRfzvf/9DUVERZs6ciS1btlQ5LsVQJSUlGDt2LEJD
Q6VtJiYm6NmzJ/r27QuVSoXk5GRERERI66cCwLRp0/DCCy8gLy8PKpUK27Ztw7Jly6q81oYNG6TH
Fb+5r0sctbF9+3bMmzcPCoUCRkZGGD16NHr16oXMzEwcOXIEycnJOHToEAYNGoRLly7p/bDV2l2L
zMePn91EUnxRleU69rDFo0s6omMPruVZHXt7e5iamlbafu9SIg3p8OHDKCkpqdXst7ro+3DekPdk
ZWWFgQMHIiwsDEePHsWKFSuk5VeGDRsmlRsyZAgOHjyIc+fOQaVS4dy5c8jNzUWbNm0arKeJRm3r
RbP255NPPllpeZwuXbpg5MiRCA0Nxd69e7XGttaFUqnErVu3AKDS+1hFFffFxcVJCei1a9ek7d26
davx9U+dOoW9e/ciKSkJaWlpyMjIqPE5KtIso2ZkZAQvLy+95TT3U9Wya429RBFRU2MCStRMbd26
FUD5m+aQIUMAlCeb97a23eu9996Tks8ZM2Zg8+bNWt1M9+7di5kzZ6KsrAxvv/02Zs2aVecFxz/4
4AOtpC8wMBC//PJLpen01Wo1Ll++LHX9s7CwwOOPP46vv/4aALB58+YqE9Do6GjpA6Cvr2+lyT1q
G0dNZWZm4rnnnoNCoYCdnR327t2LBx98UNqfn5+PKVOm4NixY7h27Rp++OEHg7oXtyZ3Ukqw+8sE
RB7LrrKco5sZpr3QAQOC2TrQkhw4cABA/XS/bUpBQUEICwtDeHg4lEqlzgR08ODBAMpbfS9cuCB1
vw0ODm78gA1w9uxZXLp0CQDw/fffS91aK9KsfVlSUoL//ve/ePHFF+t83aysLKjVagDarfH3qjj5
TsXlUDRrbwOQluQxRExMDGbMmIGYmBjp2CFDhqBLly4Gr8WtiyaBtba2rvI9VHM/Fe+FqLUzqr4I
EbUUiYmJWLduHYDyN9mNGzdWGuM4depUafbdxMREnR8+auL69etYs2aN9Lxfv344deqUzrXcjIyM
EBAQACsrK2nbvHnzpMfR0dE4d+6c3mtVbP3UzNpYX3HUxNtvvy19QFuxYoVW8gmUf+D46quvpOdr
1qxBWVlZra51vykpUmHPf27hrUcjqkw+zcyNMHFBW6z+uS+TzxZGCIEDBw7AxsamXrtvNgXNuFm5
XI6//voLJ06cgImJidZakP3795cSkFOnTuld/7O50LR+AuU9ZjIzMyv9FBcXS2U2btxYL9f18PCQ
ZrWtKhlLT0+XHlccItG1a1fpcWJiokHXTExMxIMPPoiYmBjMnDkTMTExyMzMxL59+yrNp1BTmveW
wsJCrfq6l+Z+6jLcg+h+wwSU6D7y3nvvQaFQAADmzp2rNcaloscee0x6vHv37jpdc/Xq1dI1gfJk
S9/C27r06dMHgYGB0vPvv/9eZzm5XI4ffvgBQHl3pXu7Dtc1DkPdvn0b3333HYDyRFbfWKTu3btL
Y9+uX7+OqKioeo+lJVGXCYTtS8fr0yPwxw/JUJXqn2So/xhXvPtzXzwyvy3MLDiJU0tz/vx5pKen
Y/To0S2+a+GAAQOkL6q+/fZbpKeno3fv3rCxsZHKWFtbS8t07Nu3DxERETAxMcFDDz3UJDFXpbCw
ELt27QJQ3uNErVbr/dEsPXPp0qUqvxg0lJGRETp37gygfNIffSpOnNSlSxfpsa+vr/TY0GWEdu3a
hfT0dLRr1w47d+6En59fvXXbrtgNWNO1WBfNvVa8F6LWjgko0X3k7Nmz0uMHHnhAb7m2bdtKj6vr
0lsdTVcuoLwloDYtHhVbQXft2oWSkpJKZXbt2oX8/HwA5WNHnZ2113ysjzgMERkZKbVmduvWDba2
+sck1mc9t2TRp3PxzhMXsO2D6yjM0T9ZTHs/G6zY2AsL3u3GSYaaGc2XOZoWsqpoZr+tr/GfDcHQ
+zEzM8PQoUMBQErcKna/1dAMkwgNDYVarcaAAQNqtY5jTeq5Nnbs2IGioiLY29tj5syZVZatOGyg
vlpBNa3C+/fvR05Ojs4ymi8h27Rpo5V0jhgxQhpruWbNGhQVVT1uHPjnPdHDw6PSpFwV6ZqsSfO3
uHLlis5jhg4dKvUw0gyZudfFixcRGRkJABgzZky18RK1FkxAie4TQgjEx8dLz7du3Yonn3xS50/F
qeDrkhgJIbTG0FRsyayJWbNmSV2z8vLy8Msvv1Qqs379eunxs88+2yBxGKLidQoKCvTW8ZNPPimN
OQJaZwKacqMIn798BZ+/HI2UG3K95exdzDD3rS54fXMAOvXU3WpPTUvTeiOEwK+//lpl2f3790Mm
k2H8+PGNEVqt1OR+NF9macYv6kpANeNANWrb/bYmcdWGpvfG7Nmzqx2C0LNnTwwYMAAAsHPnToMS
vuq8+eabcHV1RXFxMZ599tlKXVc3bdokfYHx0UcfabWg29jYSLPzpqenIzg4GKmpqVrHZ2Zm4q+/
/pKee3h4AChvMQ0LC5O2x8XF4cknn5Se60oyNX+LkJAQnbPkuru74/XXXwcAfP311zh69KjW/oyM
DOm9yt/fv9KwEaLWjJMQEd0nUlJSIJf/8yH/3iVc9MnNzUVRUVGt1sNMSUnR+lDSsWPHGp8DABwd
HTFlyhTs3LkTQPk34P/617+k/ZGRkVIXMF9fXwwfPrxB4jBExQQ0JSUF27ZtM+i4pKSkhgqp2cnN
VODXb2/j1IEMCP09bWFqboQxj3tj7FM+MLdkV9vmbPTo0fDx8UFycjKeeeYZbN++HX369MGsWbPQ
t29fqVxycjIuXryIAQMGNPg6o3Vh6P0A2uunymSyKltANWqbgNYkrpqKjIxEREQEgMpj6PWZP38+
zpw5g8LCQvz000+YO3dunWKwt7fHd999h9mzZ2P37t2IiIjA8OHDYWtri/Pnz+P06dMAgKeeekpr
qIjGrFmzEB4ejm+++Qbh4eHo1KkTAgIC4O3tjcTERERFRWHOnDnSGN05c+bg22+/hUqlwogRIzBg
wAAUFxcjOjoaPXv2xIMPPogjR47giy++gKmpKZYsWSLNIP30009j8eLFSEhIgLe3N6ZPnw4vLy+s
XLlSimfp0qU4duwY/ve//yE4OBhBQUHo0aMHbt++jdDQUGRlZcHNzQ0bN26s82R/RPcT/msguk/c
++300KFDYWxs2Id6zTf7NVUx4QVQqy5nGvPmzZMS0KNHj+L27dtSF9aKrZ/3Lr1S33FUp2I9+/j4
GLx4ecXuuPerogIVDv6QhKM/paFUUfVrqv8YF0xd1B7OHhaNFB3VhY2NDfbs2YMnnngCcXFxOH78
OI4fP47hw4drJUYtZfZbQ+8HAPr27Qt7e3vk5+fDz8+vUvd/oPz/gjZt2iApKQmurq7o06dPg8dV
U5rWz/79+0tjVqvz2GOPYcmSJbh79y42btxY5wQUACZNmoQLFy5g/vz5CA8P1+q+2r59e6xZs6bK
7sFff/01RowYgeXLl+P27dvSeFArKyv07t1ba13Ufv364b///S8WLVqE7OxsnDlzBnZ2dli2bBne
ffdd3LhxAwMGDEBmZiZWrFiBGTNmSJMFvfDCC9LEfllZWVi/fj0CAgK0ElALCwscOnQIn332GT78
8EMcOnRIWgPW0tISM2fOxFdffcU1PonuIRNC5ANgnyeiGnBxcZGmhF+zZg2WL19e43Ps2bMH06dP
B1A+u1/FNc4qqrgMi5WVld5uUCqVCtbW1lJXoXPnzlU5DrQ+qFQqWFlZSeNnXnnlFXz88ce1OpcQ
Ap06dZImbHjnnXewcuVKFBQUwNvbG3fv3oW5uTlSUlIqfQCszzh69uwpdcfasWOHVkusJq63334b
ADB+/HjpA3drpigpw/92puLP/yaj+G7Vs/127GGLmYs7sKttC6VSqRAfH4/U1FR06tQJbdu21Rpb
N378eISEhCAqKkqahKs5q+5+GFfDUigUiI6ORnFxMfz9/atcnkWXzMxMREdHo02bNujYsaPeOtK0
espkMgQGBmp9OVtcXIyIiAj4+/vrXO80OzsbMTExsLCwgK+vb5Xj/lNTU3H16lW0adMGnTp1ui//
ZkT1gS2gRPcJExMTdOnSBdHR0QCAkydPNngCamJigs6dOyM2NhZA+WyvtSWTyTB37ly89dZbAIAt
W7bgzTffxPbt23H37l0AwPTp03W2PtRnHNWpuLD8qVOnIISot1kVWxplSRlC96bjjx+SUZirf3Ih
AHDxssDURe3Q7yG2BLRkJiYm8PPzg5+fX6V9crkcR48eRdu2bVtE8glUfT9NqbnGVd/Mzc1r3VoM
AG5ubnBzc6u2nKWlpd73Q0tLS2miKV2cnZ11drvWxcvLS5ooiYj041czRPcRf39/6bGhY0Dr85qH
Dh1CWlparc81d+5c6Rvjmzdv4vjx49V2v22IOKpS8Tq5ublaE160ForiMhzekYIVU87j53UJVSaf
VnYmmPlyB7z7Ux8mn/e5w4cPo6SkpFnPfktERE2PLaBE95HFixfj559/hhAChw8fxr59+zB58uQG
vebSpUuxZ88eCCEgl8uxatUqbNiwoVbn8vHxwZgxY/DHH38AAF5++WVpeRVdkw81VBxV8fPzw8MP
PyzF+OKLL+Ls2bMGj7dtyYoKVDj2cyr+tysVRQWqKsuamhvhwZleGPuUD6xsW8dbjVotoCwug6JE
DYW8DEqFGqVKNUoVaqiUapSpBFQqgbK/f4RaQK0WUJcJCAGUlQkkxxWhuEgFMwtjeHe2golpy/me
ODI8HeMe/Bd6tpuA0L0N8wUQUWtnbWuCXsOcYM41kqkFax2fCohaiUGDBuGZZ56REq9FixahTZs2
VU5eoVar6zROZdCgQXjyySeliSQ2btwIb29vrFy5UmfX1JKSEhQXF+scawOUT0akSe4qru1ZVetn
Q8RRlf/85z/o0aMHiouLERkZiSVLluDjjz/WWjLgXnWt56aUmVyMIz+mInx/BhTFVU8uZGQMDJvo
gQnz2sDBteWt5alSqXE3T4W7uaUoyC1FUX4pigpUKCpQQV749+8CFYoKSiG/W4aSojIoisukhLN1
84cX/BGxB4jAjaYOhui+5dHOEq9/HwBLG36Mp5aJkxAR1ULFSYhGjhyJgQMHGnTciy++KI0Pqe9J
iDRyc3Ph7+8vdUE1NjbGCy+8gLFjx6J79+6ws7PD7du3ERsbi5CQEISEhNR5wfP09HT06NFDqhOg
vF4mT56MBx54AGq1GgkJCQgPD8dPP/2ETZs2YerUqTrPpVQq4e3tjaysLGmbhYUFUlJS4OTk1OBx
VDcJkcaaNWuwYsUK6bmfnx9WrFiBHj16oHPnzsjLy0NiYiJOnDiBAwcOYOzYsVqzJzZ3QghcPZ+P
oz+nIiosp8rlVABAJgP6B7ti4vy2cGtj2ThB1kCpQo3cTAVy7yiRd0eJ/Oy/f2cpUZBT/jw/uxTy
alp2iYiag+kvtkfwbJ+mDoOoVvjVCVEdhYaGIjQ01KCyM2fObPAJChwdHREZGYn58+fj999/R1lZ
GdatW4d169Y12DU9PDwQERGBRx99VJoSvyb1UpGZmRmeeOIJrF27Vto2bdq0apPP+o6jOq+99hq8
vLzw4osvIj8/H7GxsXjqqaf0lh8zZky9x9AQivJLcSokE8f3pCEjqaTa8jIZ0G+0Kx6Z3wYe7ape
2L6hqFRq5GYokZOhQE66AjkZCuRmKJCTWf44L1NZbZdhIqKWRFnS2ntcUEvGBJToPuTh4YEDBw7g
u+++w6effor4+PhKa30aGRkhMDCwynGVNdGuXTucOHECK1euxLZt25CamlqpjJubG4YPHw5fX98q
zzVv3jytBPTZZ59tkjiq88QTT2DkyJF46aWXEBoairy8vEplXFxcMGzYMIwaNapO12pI6jKBK3/l
4tTvGbgYloMyVTXNnQCMjWUY8LArxj7l0+CJp7KkDNnpCmSnKZCdVoKsNAVy0kvKn6crkJ+lrLaF
lojofmFpY4zBE6qf/ZeouWIXXKJWQC6X48qVK7h27Rrs7Ozg6emJbt26wd7evsGumZ6ejvPnzyM/
Px+enp5o27YtOnfubNCxkZGR0rhVPz8/xMTENEkcNXX79m1ERUWhoKAAnp6e8PHxQZcuXZrlMi1C
CNy4XIiIo1k4++cdFORUvYyKhrmlEYZO9MCYWd5wcq+fMZ6K4jJkpZUgO7W81VKTaGanKXAntQSF
BsbWHJhZGMHcyhgWlsYwNTeCqZmR9NvYVAYTExmM//6RGclgZCSDkbEMMhlQqlQjLUGOUqUaJqZG
8OpgBQsrTjRCRP+wsjPB8MkecPGyaOpQiGqNCSgRNTuzZ8/G9u3bAQBr167F4sWLmzii+4NKpcaN
qAJEhmYj8lg28u4oDT7Wyd0cQTM9MWyyB6xqOPFFSZEK2ekKZFVILLPTFchOLUFWWgnu5jWf7rEy
GWBtbwJbR1PYOpjC1tEUVrYmsLYzhZWdCaztTP5+Xv5jYWUMcytjmFsaw9zSqFl+2UBERNScMAEl
omYlJSUFHTp0QGlpqcGTD5F+d1JKEHMmF1dO5yL2XD4U8rIaHe/XzwEjp3sgcJgzjIwrJ1cqlRr5
d/4ef5mhLB97mfF3gplegpx0BYrv1uyaDcHIGLB3NoOjmzkcXM3g4GIGexczOLiawc7ZDPZOprBz
NoOtg6nO+yQiIqL6wTGgRNSsfPnllygtLe9yOX36dCafNaAqVSP5ehFuXCrE9agCXL9UUKNWTg17
Z1MMeNgNfYNcYGZhhLwsJf46mCnNGpt7R4HcDCVyMxUozC1t8vGXMhlg52wGZw9zOLmbw9HdHM4e
5nB0N4OTuzkcXM1h52QKIyMmlkRERE2NLaBE1GwUFRXBx8dHmswnLCwMw4YNa+Komp+iAlX5ZDyp
JUhPLEby9SKkXJcj/bYc6lo2NspkgI2jKcwtjKAsKcPdfFWtz1XfjI1lcHQ3h4uXOZw8zOHsYQEX
r/Ik08nDAo7uZjAxaZlrrBIREbU2TECJ/iaEwMqVK/Gf//wHhYWFAMrXn7S2tua4rkYil8ulujc2
NoaLi0sTR9Q4jGGGQJeXYGPuDmdHJ3h4ekIIQKjLWzXLVAIqpUCpUo2S4jKUld5fU76amMrg5GEO
Fy+L8pZLt78fe5b/dnA1Y+slERHRfYIJKNHfnnnmGXz33XdNHQa1MsbGlniqz0EYye7f2U5NzGRw
djeH898JprPn38nl378dXM34JQ8REVErwQSUCEBcXBx8fX0hmnowG7U6wV0/RhuHgU0dRp3YOZnC
6e/xlxXHYJZ3lzWHnZNZU4dIREREzQQnISICMG/ePCaf1CRMjC2bOgS9LG2MYe/892yxLv/8dnAr
n03W0dUM9q4cf9mSxcbGIikpCXZ2dhg4sGV/EdIaKJVKhIaGAgB69+4NV1fXpg2IiKgW2AJKrd5v
v/2GSZMmNXUY1Eo5WHbAtB5bm00XVHNLI7Tpao1OvezQuZcdOvW0g62jaVOHRQbKyclBdHQ0YmJi
kJmZCScnJ7i4uKBbt27w9/eHqan233LhwoXYsGEDAgMDceHChSaKuv4UFRVBqVTC1tYWJib/fMeu
VquRn59f7fFGRkawt7eXnsvlcigUCpiYmMDW1rZBYq6J9PR0eHp6AgD27dun9d4lhJAmcLOxsan0
tyYiai7YAkqt3po1a5o6BGrF8ooTsD/meYzq/BbMjK1hamoKaxtrGMmMgIo5qRAQQgZ1mRqlSjXK
VA0Tj6JYjetRhbgeVYg/kQIAcG9jgU4Bduja2x5de9vD1duiYS5OtXbw4EG88MILuHnzpt4y5ubm
CAoKQkhISCNG1riGDRuGixcvIi0tDe7u7tL22NhY9OjRo9rjnZyckJ2dLT1funRpi0nQMzIy9Can
RETNCRNQatUuX76MU6dO6dy3cuVKLFq0qJEjotbMxsYG1tbWBpUtUwkUFZSiKF+F/Gwl8rLK1+jM
y1IiJ12BrNQSZKUpIC+oe6aakVSCjKQSnDqQCQBwcjdHt7728OvnAL/+DnBw4RjPppKfn48lS5Zg
8+bNAMoTqAEDBiAwMBAuLi5ISEhAfHw8Tp48iaKiIkRHRzdxxA0nOTkZFy5cwIABA7SSz3u5u7tr
tXJW5ODg0FDhERHR35iAUqu2detWndtdXFywYsUKWFlZNXJERIYxNpHBzskMdk5m8Oyg/3VafFeF
OyklSLtVjPREOdJvFSPtlhzpicUoU9Vu3HNOhgJ/hWTir5DyhNSrgxX8BzqgxyBHdOltD1Mzjglt
LLNnz8aBAwcAABMnTsTWrVt1JlEKhQLHjx/H2bNnGzvERqOph0ceeaTKcu+++y4WLFhg0DkXLFiA
oKCgFpGYOjg44McffwQA9OvXr4mjISLSjwkotWq7d+/WuX3u3LlMPum+YGljgrbdbNC2m43WdpVK
jfSEYiTFFyEp7i5uxxXhVuxdKORlNb5GaoIcqQlyHN6ZCjNzI/g+YI9eQ53Qc4gTnNzN6+tW6B4H
Dx6Ukq4FCxZgw4YNescSm5ubY8yYMRgzZkxjhtio9u/fD6D6BLQm+vbti759+9bb+RqShYUFZs6c
2dRhEBFViwkotVoXLlxAYmKizn1PPvlkI0dD1LhMTIzg08UaPl2sMWicGwBArRZIv1WMhJhCJFwp
xPVLBUi9KUdNJohWKtS4FJ6LS+G5AG6gTVdrBA53QsAwZ7Tztan2eDJMaWkpFi9eDACwtrbG6tWr
G3Qiq9TUVJw+fRpRUVFo06YNBgwYgJ49e+otL4TA2bNnER0djaSkJJiamqJjx46YMGECbGx0vw6u
XbuG1NRU2NjYSC14t27dQkhICKysrDBnzhy915PL5Th69Cjatm2LXr161eleq4upqn1yuRxhYWE4
e/Ys2rdvj0mTJunt7gsA2dnZOH78OBITE5GdnQ0vLy/0798fDzzwQI1jVSqVCA8PBwD07NkTLi4u
0j6FQqF3uMm9XF1ddY6XValUiIiIwLlz55CXl4c+ffpg6NChsLPjPJZEVDNMQKnV0jcRh5+fn0GT
VRDdb4yMZPDqaAWvjlYYMqF8DJ38rgo3Lxci7kI+4iLzcSvmLsrKDM9Ik+KKkBRXhP0bk+DoZobA
4c7oPdIZXXvbw9ikISldXQAAIABJREFUecz82xKdP38ecXFxAMpnsnVzc2uwa3311VdYunQpSktL
tbYvWbIEH3/8MYyNjbW2b9q0CStXrkRaWlqlc7m7u2P37t0YOnRopX1r166VJvw5f/48pk6dit9+
+w0AMHr06CoT0MOHD6OkpAQTJkyoxR3qVzGmeychunffF198geXLl0OhUEhlfHx8EBISUilZLyws
xMSJE3HixAmUlVXudTBr1ixs27atRl8q5OTkICgoCEDlSYgyMjKkfdWZPn06fv75Z61tSUlJmD59
eqUu3O3atcMvv/yC3r17GxwnERETUGq1Dh06pHM7Zw4k+oeVjQl6DHJEj0GOAABFSRmuXyxA7Lk8
xJzNQ1JckcHnys1U4tjuNBzbnQYrWxP0GuqI3iOd4T/QEeYWxtWfgCTx8fHS4+HDhzfYdZYvX46P
P/4Yjo6OeP3119G9e3dER0fj3Xffxdq1a2Fubo4PPvhA65hz586huLgYCxcuREBAADw8PHDkyBFs
374dGRkZePrppxEbG1spca1o8eLF+O233+Dh4YHg4GC0b9++yjgNHf/ZUD777DMsW7YMFhYWmDx5
MnJychAWFobk5GTMnz8fZ86c0SpfVFSE0NBQDB48GOPGjUPXrl2RlZWFnTt34sSJE9i+fTvGjBlT
b71x7OzssGzZMr37T58+LbWe3vtlRmJiIh544AFkZWVh4sSJmDVrFgBgy5YtOHjwIIYPH46EhASt
FlcioqowAaVWSS6X4/Tp0zr3jRs3rpGjIWo5zC2M4T/QEf4DyxPSwrxSxJzJxZW/chF9Jg+FOaXV
nKGcvFCF0wfv4PTBOzAzN4L/IEf0GeWMXkOdYGXDt6bqVExAq0vOais2NhZr166FkZERjhw5IrVy
jRs3Dj169MC4cePwn//8B8uXL4ejo6N03PPPP4/PPvtMaxz95MmT4enpiTfeeAPx8fG4desWOnXq
pPO60dHRuHTpErZt24bHH38cRkZVT2olhMCBAwdgbW2NUaNGVXtfBQUFSE9Pr7Td3Nxc6z4MFRMT
g2XLlmHBggX49NNPpfVC33vvPbz55ps4e/YsMjIytGbmtbe3x8WLFxEQEKB1rrlz58Ld3R0FBQU4
fPhwvSWgDg4O+OSTT/TGv3HjRgBAQEBApaXJXn/9dWRlZWHKlCnYu3evtH3GjBkYPHgwTp8+jXXr
1uHdd9+tl1iJ6P7HqQqpVfrrr7+gVCorbbexscHAgQObICKilsnWwRQDgt0wb1U3fBrSH29sCcDE
BW3R3s/w8Z5KhRoXQrOx6e04LA0+g3WLoxF5LKvWs/S2Bprut0DDJaCrVq2CSqVCcHBwpS6WY8eO
hYeHBwoLC7Fv3z6tfb169dI5idvkyZOlxwkJCXqvW1paijVr1mD27NnVJp9AeXfk9PR0jBkzBubm
1U969corr8DT07PSz+OPP17tsboolUo89thjWL9+vZR8AtDq8nrv+qyWlpaVkk+gfCKh4OBgAFXX
UX25c+cOJkyYgPz8fHh6euLAgQNaY3RjYmKwc+dOAMCKFSu0jpXJZFK36B9++KHBYyWi+we/ZqZW
6eTJkzq3Dxs2DKampo0cDdH9QSaTof3/s3ffYVFd6R/AvzNDGzpK770pgr0jltiNscdYotEU62oM
RjdZzRo1zY0l+tNV16y9RNTYG1HsCqIiXXqRJtKGPjP39wdyl5EZGBBmYOb9PA8Pd+499973TpDw
zjnnPV4GcPQywLj59ijOr8KzO68Rcec1oh8WoqpS3Og1REIGkfdrelT5+jx0GdABXQd1ROe+JtDm
0zDdWnUTM6YpVaKaoHbYqI+PD4qLi+sdt7W1RXZ2NlJSUuS6Xt1iNdI+AKzl5eWFr776Su44a6vf
yjv/08HBAWZmZvX2u7m5yX3PupycnHDgwIF6yXLdpVvenj/bkNr3qaH3qCVUVFRg/PjxSE5Ohq6u
Ls6dOwdbW1uJNo8ePQLDMNDQ0ICTk1O9n4PaYbeZmZkQCoXQ0KA/KwkhjaPfFEQt1c51eVtAQIBi
AyFEhRl21MLA8ZYYON4S1ZViRIcW4mlIPp7deS3XUN1ygQgPL+fh4eU8aGhx4N3LBF0H1VTUNTBR
7w+KXF1d2e2EhIQWXyqkoqIC6enpAICff/4ZP//8s8y2aWlpUvffu3cPp06dQnp6OrKyspCTkyPX
veXpxazr3Llz4HA4GDNmjFztv/nmG7nXAZWHkZGR1A8u5SkgVFBQgCNHjuDJkyfIyspCVlaWQno+
AeCTTz7B/fv3weFwcOjQIak/Q7U97UKhsMFCVyKRCJmZmXBwcGi1eAkhqoMSUKJ2GIZBaGio1GPS
KjMSQt6dpjYXvgM6wHdAB4jFDJKjSvAkJB9Pb+YjJ72i0fOFVQwi3vSmcjgJcOliCD//DvDz7wgL
e74CnqBtqdtbl5iY2OIJaEFBAcTimh5rb29vqT2Gtezt7SVeR0dHY8qUKYiOjgZQ00vWv39/uLm5
SQwdbgkZGRl4+vQpevfuLTHHsj1YvXo1tmzZgoqKCvB4PHTp0gW9evVCZWUlCgsLW/Xea9euZYfW
/vTTT5gwYYLUdvn5+QAAXV3desvQvK3254UQQhpDCShRO3FxcVL/566trd1uFhwnpD3jcjlw8TGE
i48hJi92QlZyGZ6E5ONJSD5SogWNns8wQMKzYiQ8K8bJ31Jg6cCHr39NcuviYwguT/WXd6nbA/rn
n39i6tSpLXp9KysrGBgYoKSkBNOnT8e3334r13mpqakYOnQosrOzMXXqVHz33Xfw9PQEh8NBRkYG
9u3b16JxKrv6bXP9/e9/x48//ghDQ0McPHgQw4cPZ4fezp8/n03eW8OhQ4ewbt069l6BgYEy27q7
uwOo+eD22rVrNEWFENIiKAElaicsLEzqfj8/vyYP/SKEvDsrJ11YOeli9Bw7FORW4uGVPNw6nY28
zMZ7RgEgO7Uc2QczceVgJvQMNdC5nwl8B3RApz4m0DVQzf/N9ezZEx4eHoiLi8PRo0exYsUKdOvW
rUXv4eXlhUePHuHWrVtyn3Ps2DFkZ2fDwcEBR48elauI0Luonf/ZnhJQkUiE3377DUDN8i2TJ09W
2L3v3LmD+fPnA6gpkvR///d/Dbb39vYGAJSXlyM0NBT9+vVr9RgJIaqPquAStfP48WOp+3v37q3g
SAghbzMx18bIWbbYeKoH1hz0w9h5drB2rl9RVZbSYiEeXs7D7m/jsGz4A/z0WQQu/J6O1BhBqxXr
UQZNTU1s3rwZQE3v1MKFC9nhkg0RCoVy3+PDDz8EAFy/fl3mvPm3PXr0CABgaWnZYPLZlKI8spSV
leGvv/6Cvb09unTp8s7XU5To6GgIBDU9/TY2NjLbtcR7VFdiYiImTJiAyspKeHp6IigoqNEezYED
B8La2hoA8M9//rNF4yGEqC9KQInakZWA9ujRQ8GREEIaYueuj/GfOeCfR7th/R/dMXGRI5w6yb+8
CyOuGap7Zlcq1s95ihWjHmHPP2Jx52w28rPk611ty0aNGoVRo0YBqKlY6+vri5CQEKltk5OTsXLl
Svj5+cl9/aVLl8LX1xcMw2DWrFlS106uqKiQWJPU0tKSjaduz2l8fLzEmpaRkZFyxyHLtWvXUFFR
IXf127ai9j0CgO3bt6OiouZnUSQSYevWrThx4gSAmukiTfnAoCGFhYUYO3YsXr16BVNTU5w/f16i
Sq8s+vr62Lp1KwDg6tWr+PLLL9l463rx4gXKy8tbJFZCiOpTzbFJhMjAMAyePXsm9RgloIS0XRb2
fIyabYtRs21RkFuJp7de40lIPuIfF0Ekkq9ns6SgGo+uvsKjq68AAKbWOvDobgT3roZw72oEU2ud
1nyEVnHs2DF89dVX2LNnDzIzMxEQEAALCwv4+fnByckJqampiI+PR3JyMsRisUTy0xgej4eDBw9i
woQJSExMRP/+/dG/f392WGZSUhLu3r2LqVOn4vfffwcAzJkzB7t374ZQKMSgQYPQu3dvlJeXIyoq
Cj4+Phg6dCiCg4Oxbds2aGpqYvny5c2eV9he53+amZnh/fffx9mzZ3HhwgVYW1uje/fuCA8PR3Fx
MRYsWIAdO3agvLwc06ZNw8qVK995hM6OHTsQGxsLoGYJnylTpshs6+Ligj/++IN9PXnyZAQGBmLT
pk3YvHkzTpw4gd69e8Pe3h7Z2dl48uQJ4uLikJKSQlVwCSFyoQSUqJWkpCSp69np6urCw8NDCRER
QprKxFwbgydbYfBkK5QJhHh+twDPbucj8l4ByktFcl/n1csKvHpZgbvnapYHMTbTgmsXQ7j6GsKp
kwHs3PWgqdW2BwoZGhpi9+7dmDx5Mr788kvExMQgJycHV65ckWhnYmKCadOmYc6cOU26vo+PD549
e4bAwEAcOXIEt2/fxu3bt9l7+/n5SVQP79mzJw4dOoRFixYhPz8fDx8+hKGhIVasWIHvv/8eiYmJ
6N27N3Jzc7Fq1SpMmTIFTk5OTX5uhmFw/vx56OvrY/DgwU0+X9n27duHefPm4c8//0RBQQGuX7+O
bt26YdeuXejZsyfKy8uxd+9enDp1CgYGBu+cgNbtSc3NzUVubq7MttLWH/35558xatQoLF26FNHR
0Th16hSAmqVmnJ2dMWHCBBgYGLxTjIQQ9cFhGKYIgGGjLQlRAUFBQVILPvTp0wf3799XQkSEkJYi
FIrx4kkxIu6+xvM7r+Va3qUhPB4Htm56cOqkDwdPfdi56cPaWRea2m03KS0vL0dcXByioqJQWloK
W1tb2NnZwd3dvUWKrKWmpiIxMRHOzs5wcHCQudZlba8nh8OBn58feDyexLHHjx+jU6dOMDExaVYc
oaGh6NWrFyZMmMAmQ+1RWloaEhMT0blz53pL3cTExEAkEsHb27vVizk1RVlZGZ4/fw4Oh4NOnTpB
T09P2SERQtoZSkCJWlm7di1bfr6uL774Ajt37lRCRISQ1pKbUY7IewWIfFCAuLAiVFW++zqFHC5g
6cCHraserBx1YenIh5WDLizs+W06MVU1a9aswffff499+/Zh7ty5yg6HEEJIE9AQXKJWnj9/LnV/
e6qgSAiRj7ktH0Om8jFkqjWqq8RIjChGTGghYkILkRIjANOMfJQRA1nJ5chKliy4wuHUDOE1tdZ5
86WNDhbaMDbThrGpFoxMtaBvrCGzx5A0zblz58DhcDB69Ghlh0IIIaSJqAeUqBU3NzckJCTU23/n
zh30799fCRERQpSholSIF8+KER9ejPgnRUiNFUAkbN1lWrg8QM9QE3pGGtAz1ICeoSb4+jxo6/Cg
xefWfNfhgsvjgMOpWd+0slwEbT4PNq660NCkHlYAqKqqwNa936CDiTnmTf9a2eEQOekZaKDLwA7Q
1uE13pgQotIoASVqo7y8HPr6+hCL63d7FBYWwsjISAlREULagupKMZKjS5D4vATJkSVIji5BYV79
YiyEkOazdODj7/t8wdenAXiEqDP6DUDURmxsrNTk08bGhpJPQtScpjYX7l2N4N71f78LCvMqkRwl
QGqsAOkvSpHxohSvcyqVGCUh7Vt2ajluncnGiJm2yg6FEKJElIAStREdHS11f+fOnRUcCSGkPTA2
00bXAG10DejI7istFiIjoRRZKWXITilnv1NiSoh8qirevRgYIaR9owSUqI2YmBip+728vBQcCSGk
vdIz1IBHNyN4dJMcNVFdJUZ+VgVevaysWV80qwKFuVUoyq9CYV4Vil5VNWmNUkJUEV+fh35jzZUd
BiFEySgBJWpDVgLq7e2t4EgIIapGU4sLSwddWDroymxTXSVGaVE1SouFNV9FQlSUiVBVIUJlhRhV
5SJUVYohFjEoLxUiLa4UVeUi8DS5sHbShY4uFW8h7ZeuoQb8P7BER0sdZYdCCFEySkCJ2oiNjZW6
39PTU8GREELUkaYWt2ZZFjNtZYdCCCGEKA1VwSVqQSQSQVdXF1VV9ata5ubmwszMTAlREUIIIYQQ
ol5oUTGiFlJSUqQmnyYmJpR8EkIIIYQQoiCUgBK1EB8fL3W/h4eHgiMhhBBCCCFEfVECStSCrATU
3d1dwZEQQgghhBCivigBJWrhxYsXUvdTAkoIIYQQQojiUAJK1IKsBNTNzU3BkRBCCCGEEKK+KAEl
aiEhIUHqfldXVwVHUqNPnz7w8PBgv/r37w+GYZp0jcrKSnTr1k3iOmfPnm2liNXTuHHj2Pf2woUL
yg6HEEIIIaTdo3VAicqrrq5Gamqq1GPKSkATEhKQn5/Pvo6Pj0dISAgCAgLkvsb58+fx5MkTiX3F
xcUtFSJBTfXk2vnD9N4SQgghhLw7SkCJyktNTYVIJKq339zcHIaGbWcJ3MOHDzcpAT1w4EDrBUMI
IXKKiYnBb7/9BgCYOnVqk36P1bVp0yYkJSVBT08Pv/zySwtGSAghpC2hBJSovMTERKn7nZ2dFRxJ
w06ePInt27dDW1u70bZ5eXm4dOmSAqJSb5s3b0ZRUREAoFevXkqOhpDme/bsGUpKSgAAPXr0gI6O
TotdOz09HTt37gQAeHl5NTsBPXXqFO7fv48OHTpQAkoIISqMElCi8mQloC4uLgqOpD4ulwtNTU1U
VlaisLAQFy5cwMSJExs97+jRo6iurgYAaGtro7KysrVDVUvDhg1TdgiEvLOCggL06dMHFRUVAIC9
e/di3rx5So6KEEKIuqIiRETlJScnS93fFhJQHo+H0aNHs68PHTok13m1w2+dnZ3RuXPnVomNEKIa
Dh48yCafQE0CSgghhCgL9YASlZeUlCR1f1sZgjtz5kycPn0aAHDx4kUUFBTAxMREZvuoqCg8fvwY
ADBr1qwmVWeNi4vDmTNnEBkZifT0dLx8+RIdO3aEk5MTBg8ejE8++QQ8Hq/Ba+zcuRO5ubkAgEmT
JrEJcHJyMnbt2oUHDx4gJycHLi4u6NevH1asWCHXcL+WiK1WTk4Ozp49i9DQUISFhcHIyAh9+vTB
sGHDMHToUAgEAvzrX/9i269YsQL6+vpyP2tdMTExOHHiBACgY8eOWLx4MQBAKBTi9OnTOHbsGBIS
EqCpqQkfHx989tln6Nu3r1zPAQDBwcG4ffs2QkNDkZaWBj8/P/Tp0wfTpk2DqakpLly4gLCwMABA
9+7dMXbsWLmvTdTDnj17JF4/ePAAUVFR6NSpk5IiIoQQotYYhiliCFFhfn5+DIB6XyEhIUqLqWPH
jgwARlNTk6moqGCMjY3ZuHbv3t3guStXrmTbJiYmMj169GBfHzx4UOo5oaGhjKenp9T3oe6Xt7c3
k5mZ2eD9O3fuzLY/cuQIwzAM89NPPzE8Hk/qNb28vJiUlBSZ12vJ2BiGYUJCQhgLCwuZ11mwYAGT
mpoqsS8rK0vuZ33byZMn2Tbu7u4MwzBMQkIC4+vrK/X+XC6X2bhxY6PPUV5ezsydO1fmc9ja2jL3
799nPv/8c3bf559/3uh1iXq5d+8e+/NhZmbGbi9btqzF7nHlyhX2utu2bWv2dfr27csAYDp06NBi
sRFCCGl7aAguUXmyhuC2lR5QbW1tTJo0iX3d0DBcsViMw4cPAwAGDBgg9zOkpqYiNjYWAGBhYYGh
Q4diwYIFmD17tkRva3R0NP72t781Kf7Fixfj66+/ZisNm5mZgc/ns8djYmKwZMkShcS2e/duDB06
FDk5OQAAU1NTjB8/HsuWLcOAAQOgo6ODnTt3YuTIkU16xqaIj49Hr1698OzZMwCAlpYWLC0t2eNi
sRjffvst22spzatXr9CvXz/8/vvvAGrmCnfr1g0LFy7E9OnT4eDggIyMDPj7++P69eut9iyk/avt
/dTR0WF/dwA1w3KbM3e8uroaaWlp7xxXdnY2BALBO1+HEEJIO8RQDyhRYQUFBVJ7j7S0tBiRSKS0
uOr2gDIMw9y4cYONjcPhMKmpqVLPu3r1Kttuz549DMMwcvWAnj59mhkzZgxz/vz5es9dVVXFBAYG
Srw/GRkZMmOv2ys4ePBgBgCjoaHBLF++nD1PJBIxq1evlrhmZGRkq8aWlpbG6OjosO1GjRrFCAQC
iTYCgYD5+OOP6/08tFQPqI2NDePu7s4AYHx8fJizZ88y1dXVDMMwTGxsLGNvb8+2nTx5ssz3eNGi
RWw7XV1d5uzZs/XaXL9+vV5PL/WAkroKCwsZXV1dBgAzY8YMhmEYpmvXruzPy7Fjx+S+1oEDB5h+
/fqx/8ZMTEyY0aNHM3FxcXL3gObm5jKzZs1i/x1wuVymU6dOzI8//siIxWLqASWEEDVBCShRaeHh
4VITUFdXV6XG9XYCKhKJGFtbWza+H374Qep5M2bMYAAwOjo6TGFhIcMw8iWgjUlKSpJ4f/766y+Z
besmZQAYAwMD5vLly/XaVVZWMh06dGDbHT9+vFVjq5tYdu3alU38pPn3v//dKglo7df48eOZsrKy
em1/+eUXiaHJ0sTHxzMaGhpsu5MnT8p8juzsbImEghJQUtf//d//sT8btVMO6u4bNmxYo9cQiUT1
PgQyMzNjf0YNDAyYBQsWNJqAPn/+nHF0dGTbaWpqMqampuzrMWPGMJ06daIElBBC1AANwSUqLSUl
Rep+JycnxQbSCC6Xi48++oh9XXeoXK2SkhK2WNEHH3wAIyOjFru/k5MTunTpwr6WNWz5bVwuF3/8
8QdGjBhR75iWlhY8PDyafM3mxJaYmIiDBw+yr1esWAENDdk11t5///1mxSKPQYMG4eTJkxLDkGvJ
8x6vX78eQqEQAODu7t7gsjwWFha0PimRaffu3QAADw8P+Pv7AwBmzJgBXV1dADUFrhr7d7llyxZ2
Tc6RI0ciJSUFubm5KCwsxMWLF2FnZ8euAQoADMPUu0ZZWRmGDRuGlJQU8Pl8HDt2DMXFxcjLy0N8
fDxWrVqFy5cvIyoqSuY1CCGEqA5KQIlKS01Nlbrf0dFRsYHIYcaMGex2ZGQkO4ewVlBQEMrKygAA
s2fPbvH7GxgYsNu1a4w25uuvv5aafNbq2LEju12bVLVGbE+fPoVYLAYA8Pl8TJ06tdn3ehfGxsY4
fvy4zORXnvcjPDyc3Z49ezY4HE7LBknUQlhYGJ4+fQoA+PTTT9n9hoaGmDZtGoCaRG/fvn0yr1FW
Voaff/4ZANC1a1ecPXsWDg4OAAA9PT2MGjUK4eHh+OyzzxqMZdeuXey87IMHD2LatGlsZWw3Nzf8
8MMPuHv3LszMzJr5tIQQQtoTSkCJSpPVA1r7R1Rb0qVLF/j4+LCv3y5GtH//fgCApaUlhg8f/s73
Ky4uRlxcHG7evIk//vgDeXl5Tb5G3XilkXfZlHeNLT4+nt22s7ODpqZms+77rszNzWFhYSHzeGPv
B8MwSEhIYF+3lUJZpP2p7f3U0tLCxx9/LHGsbkL63//+ly0g9ra9e/eyieOCBQuk/rt6u4ja2x+Y
VFdXs0msnZ0dJkyYIPVevXv3hqurq9RrEEIIUS2UgBKV1p56QAHJXtCjR4+yvXqpqakICQlh2zQ3
sYuMjMSyZctgamoKIyMjeHp6YvDgwZg6dapEEqcM7xLbixcv2G07O7vWDrXVpKeno6Kign3dnp+F
KI9AIMDRo0cBABMmTICpqanE8b59+7JrgGZkZODy5ctSr/PgwQN2e8yYMc2KJTk5mU1iR44cCS6X
/uwghBB1J3uSFCEqQFYC2hZ7QAFg+vTpWL16NRiGQWZmJm7evIkhQ4bg0KFD7Lyo5gy/ra6uxvTp
0xEUFMTuc3FxQbdu3WBjYwNDQ0Ps27cPGRkZLfYsioyttLSU3VZW72dLqPscQPt+FqI8R48eZZc4
qdvbWdenn36KZcuWAajp6ZSWYCYlJQGomettbm7erFhqrwEAVlZWzboGIYQQ1UIJKFFpstara6sJ
qL29Pfz9/dnezkOHDmHIkCE4cOAAAMDPz0+ikI08hEIhPvzwQ5w6dQoA0KlTJ2zbtg2DBw+WGOoW
HBys8AS0pWKrO1Q1Kyur9QJuZY6OjuBwOOyHDe35WYjy1K79CQAbNmzAxo0b67Wpuwbn+fPnkZOT
U2/4eG2Bog4dOjRY1KshdYscNTeJJYQQolooASUqq7S0FPn5+fX2a2howNraWgkRyWfGjBlsAhoU
FIRZs2axQ1Dfnsslj6CgIDbBc3d3R0hIiEQxHGVqqdjqJqBpaWkQi8Xtcqgfn8+HlZUVXr58CaD5
lYOJ+nr69ClCQ0PZ1zdu3Gj0HKFQiP3792PlypUS+2vnhtYWP2uOuvNL3+U6hBBCVAcloERlyer9
tLa2bvYcSkWYPHkylixZgsrKShQXF2P+/PkAahLnuku1yOv27dvs9owZM9pM8gm0XGxeXl7sdkFB
Ac6dO4fx48dLbVtaWtpo1U5l8vLyYhPQgwcPYvny5TLbXrx4UeqSPUR91fZ+amhoYOvWrQ0O487I
yMC6desAAP/5z3/qJaCOjo7Iz89HWVkZSkpKJKpRy6vufPvs7Owmn08IIUT1UAJKVFZ7G35by8TE
BKNHj2bX/KydQzVy5MhmDWELCwtjt98uRiJLZWVlk+/THC0V24ABA9CzZ0+252fdunXw9/eHiYmJ
RLuXL19i3LhxEkudAGhTvaXLly9HcHAwAODJkyfYv3+/1J7vHTt24G9/+5tED1Nbeg6ieGVlZewH
EmPHjsXChQsbbM8wDA4fPozExETEx8fj1q1b7HqhQM0avI8fPwYA3L17FyNHjpR6nbrzPN9Wd83l
u3fvymwnEAiQm5vbYLyEEEJUA/21QlRWenq61P3tobLozJkz6+1r7tqfdZ/30KFD9ZZcqKqqwvff
fy+RDL69BmlracnY1q9fz26Hh4ejT58+2LFjB+7cuYN9+/Zh+vTp6Ny5M8LDwzFr1iyJc2vXJGwL
xowZg759+7Kv586di4ULF+L06dMIDg7GN998g549e2Lx4sXQ19fH+++/z7ZtS89BFO/EiRMoKioC
ILv4UF0cDgd91sV0AAAgAElEQVTz5s1jX+/du1fi+KhRo9jtbdu2sXOT69q6dSsWL17Mvn67jYeH
BztE/uHDhxKVdWtlZGRgwIABSExMlHoNQgghqoUSUKKyZPWAtocEdMyYMTA2NmZfGxsbSyQaTREQ
EMBu379/H126dMHWrVtx5coVrFu3Dr6+vlizZo3EUL2//vqL/WOwNbVkbMOHD8eiRYvY1/Hx8Vi8
eDEGDhyIefPm4dixYygoKICfnx++++47iXO1tbVb/Nnexc6dO9l5ygzDYOfOnZg4cSKGDRuGjRs3
IiwsDFwuF9u3b5eoLNrWnoMoVu3an/b29jJ7K982Z84ctsDQyZMnUVhYyB6bPXs224N56dIlzJgx
A2FhYcjOzsaxY8cwadIkLFu2DEOGDJF5fQ0NDXzzzTfs69GjR+Po0aN4+fIlwsLCsGHDBvTq1QtF
RUVwc3Nr8jMTQghpfygBJSpLVg+ovb29giNpOm1tbRw+fBi7du3Crl27cOTIkWYnF1988QX69evH
vo6OjsayZcswcuRIrF27FrGxsZg7dy6SkpLYpCclJQVeXl6YM2dOSzyOwmLbvn079u3bJ7UnkMPh
YOLEiQgJCZE4zuFw2lzi5uvri/DwcInhkHVZWFjgjz/+wMyZMyV6i/h8vqJCJG1MZGQk7t+/DwCY
N2+e3MOxrays2CVYysvLceTIEfaYhoYGduzYAV1dXQA1y7v07NkTVlZWmD59Ok6dOoUvvvgCK1as
YM+pW7261uzZs/Hee+8BqJmj/dFHH8HGxgY9e/bEt99+i4qKCly8eJEdhi/tGoQQQlQHJaBEZbXn
IbhATU/B559/js8//1xiKFxT8Xg8nD9/HvPmzav3h52npyeCgoKwb98+mJmZYePGjWwyVl1djUeP
Hr3TMygjtrlz5yIrKwvXr1/Hjz/+iBUrVmDbtm2IiYlBUFAQDA0N2SI/AGBpadl6D/gOLCwscOPG
DURHR+PAgQNYsWIF1q1bhz/++ANpaWmYOHEiACAzM5M9p60+C2l9tcWHeDwePvnkkyadW3e4rrRh
uPfu3YO3t7fEfkdHRyxfvhzbt29vNGHU0NDApUuX8NVXX0l8SKKtrY0hQ4bg3LlzEoXECCGEqDYO
wzBFAAyVHQghLc3T0xNxcXH19j958gR+fn5KiEj5Xr58iYiICJSVlWHAgAFSixoVFRXh+vXrcHZ2
ho+PT7PX/2vLsR0/fhwffvghAKBfv34NFkdp67y8vBAbGwsAuHr1KtvTREhLy8vLw5MnT+Dk5NTs
4bJCoRDR0dHIy8tDv379qNeeEELUECWgRGXp6elJXXcuLy9P7oqrRDXNnTsX//3vfwHUVJ399ddf
lRtQMyUkJMDLywtCoRDa2tpIS0trVqVkQgghhBBFoSG4RCUVFBRITT51dHQo+VRzT548wYEDBwDU
DAGsO3+tvQkMDIRQKAQAzJ8/n5JPQgghhLR5lIASlZSRkSF1v62trYIjIYoUEBCALVu2yFzw/r//
/S+GDRsGsVgMoKZYi42NjSJDlMvu3bvxySefIDg4mI21royMDLz//vs4c+YMgJpEetWqVYoOkxBC
CCGkyRQzuYsQBaMEVP3k5eUhJCQEISEhWLFiBWxtbeHg4ABLS0ukp6cjLi4OBQUFbHsXFxesXr1a
iRHL9uzZM/z+++/4/fffYWhoCEdHRzg4OEAsFiM+Ph7JyclszyeXy8WaNWvoZ1vFiRkxqoQiVIlE
eFUmgJgRw1Cbr7YVY3kcDoz5uuCq6fMTQkh7RgkoUUmUgKqf7OxsaGtro7KyEmKxGGlpaVLXgtXU
1ERgYCD+8Y9/SF2upS2ouxZjcXExIiIiEBERUa+dr68v/v3vf6N3796KDI+0giqhEJnFRcgtLUFu
aQnySgV4XVaGkqoKlFRWoqy6Stkhtjnmevr4otdAWBsaKTsUQgghTUAJKFFJdZemqKstDrckLcPH
xweFhYV4+PAh7t69i4yMDLx69QpFRUWwtraGm5sb3N3d0aNHDzg6Oio73AYdPnwYGzduREhICJ4/
f468vDy8evUKPB4Pbm5u7LMMHDhQYVWKScvKKilC3KtcpBTkI7XwNbJLSsCAafxEwsotFeDg00f4
2p8qPxNCSHtCf7kQlUQ9oOpJR0cHgwYNwqBBg5QdyjtzcHDA7NmzlR0GaSFl1VWIzHmJ59kvEfcq
F8WVFcoOSSVklRQrOwRCCCFNRAkoUUkvX76Uup96QAkhilJaVYmwzDQ8ycpA/KtciBnq4WxpXSyt
lR0CIYSQJqIElKgkGoJLCFEGkViMiOyXeJCejMicLIiY+lWMm4MDQJPHg5hh2ERWi8eDnqY21LEO
D5fDgYepBSZ28lN2KIQQQpqIElCikigBJYQoUmF5OW6nJuB2SmKzh9d21NWDraExzPUMYKavDzNd
fRjq6MBAWwf6WlrgcmjlNEIIIe0fh2GYIgCGyg6EkJZSUVEBPp9fbz+Xy0VVVRV4PJ4SoiKEqKKU
gnxcS4jFk6yMJg2x1eBy4dzBFJ6mFnAy6Qh7YxPoaWm3YqSEEEJI20A9oETlZGVlSd1vYWFBySch
pEVE5Wbhcnw0XuTnyX1OB74ufK1s4GtpA5cOZtCk30eEEELUECWgROXIKkBkba16xSoSEhJw7tw5
AICJiQnmzJmj3IAIUXHPs1/iQlwkUgpfy9XeSEcHvWwd0dPGAfbGJq0cHSGEENL2UQJKVI46JaDP
nj3Dl19+CQBwd3enBJSQVhL3KgdnoiOQXJDfaFsuh4OuVrbo7+AMTzNLcNWxShAhhBAiAyWgROVQ
ASJCSEvJLC5EUNRTROdmN9rWSEcHAx1cMdDRBUY69eehE0IIIYQSUKKCZM0BVcUeUEJI6yiurMDZ
mOe4m5oEBg0XF7IyMMR7rp7obesIHpcq1RJCCCENoQSUqBxZCaiVlZWCIyGEtDcisRg3k1/gXGwk
KoTVDba1NzLBaI9O8LW0AaeNDLPNycnBixcv5GqrqamJ3r17t3JEhBBCiCRKQInKkTUHlBJQ0lrW
rVuHCxcuICsrC0uXLsVXX32l7JBIM8S9ysGxiMfIKilusJ2toTHe9/JBF8u2N6z//PnzmD9/vlxt
zczMkJub28oREUIIIZIoASUqh3pAiaKFhYXh0aNHAICqqiolR0OaqriiAiejnuBRRmqD7Ux19TDe
qwt62Ni3mR7Phujp6UFPT0/m8Y4dOyowGkIIIaQGJaBE5dAcUEKIPBiGwa2UBJyJjkB5A8Nt+Rqa
GO3RCYOd3aDBbT9rd65evRrffPONssMghBBCJFACSlRKRUUFCgoK6u3n8XgwMzNTQkSNu3XrFm7c
uIHQ0FC8ePECXl5e6N69OyZNmgRvb+82db+YmBicOHECQE3vyeLFiwEAZWVlOHjwIP7880+kpKTA
wMAAPXr0QGBgIBwdHSWukZycjO3bt+PBgwfIycmBs7Mz+vbti5UrVzbYW1NXfn4+Tp8+jdDQUDx6
9Aiampro3r07+vTpg5kzZ4LHk50kyHoGoVCI06dP49ixY0hISICmpiZ8fHzw2WefoW/fvlKvtXnz
ZhQXFyMuLo7d99dff6G6WjKZWb16NbS0tOqdX1pail27duHhw4dITk5GSUkJbGxsYGdnB1tbW0ye
PBl+fn5yvSekaTKLC3HoaWiDy6pwAPR3cMEHXl2gr62tuOAIIYQQVcYwTBFDiIpITk5mANT7srKy
UnZo9VRVVTFLliyRGi8ARk9Pjzlx4kSD1zh58iTb3t3dXSn3Cw8PZ+zt7aVeU1dXl7lz5w57/q5d
uxgNDQ2pbZ2dnZm0tLRG37dHjx7JvB8AZvjw4czr16+b9AwJCQmMr6+v1OtxuVxm48aNUq9la2sr
M466X8XFxfXOvXDhAmNmZtbgeT/88EOj7wdpmkphNXMq6imz4M9jzOdnjsr8+jHkKpNakK/scJts
79697M/P+vXrW/TaycnJTElJiczj5eXlTEJCApObm9vkawuFQiY5OZnJyMhgRCJRk86trq5mEhIS
mKqqqibflxBCiOJRvXiiUtpLAaLi4mIEBATgt99+AwA4ODhgzpw5CAwMxHvvvQcOh4PS0lJMnToV
+/fvb7P3e/r0KQYMGIC0tDRwuVx4eHjAxMSEPV5WVoYPPvgAAoEAv/32G7744gsIhUJoaWnBy8sL
mpqabNukpKRGi/ccPnwYAwcOZO83YsQIBAYG4uOPP4atrS0A4OrVq+jbt6/cczHj4+PRq1cvPHv2
DACgpaUFS0tL9rhYLMa3336LsLCweudaW1vDzs4OOjo67D4jIyPY2dlJfL09X/DFixeYPn068vLy
AACmpqaYMGECVq5ciVmzZqF79+7g0nIeLS42Lxvr/rqMKy9iIGakL62ip6WFWX69sHLgMNgbd1Bw
hMo3YcIEeHh4ICAgAEDNiIVFixbByckJTk5OOHr0KNu2vLwcp06dwqxZs2BpaQk+nw9XV1eYm5vD
wMAACxYsaLTIUXBwMAYOHAgdHR04OTnB1tYW2trasLe3x969exs899SpU+jfvz8MDQ3h6uoKAwMD
9O7dG7du3Xrn94EQQkgrYqgHlKiQoKAgqT1JY8aMUXZoElauXMnGNmXKFEYgEEgcDwoKYng8HgOA
cXBwYKqrq6VeR94e0Na4n7W1NePs7MwAYCZNmsQkJiYyDMMwZWVlzK+//irx/s+cOZPR1NRkeDwe
s3r1aqagoIBhGIZ5+fIl89FHH0m0ldV7mZOTwxgYGDAAGENDQ+b69esSxwsLC5nBgwez19mzZ0+j
z2BjY8O4u7szABgfHx/m7Nmz7LPHxsZK9LROnjxZ5vs7btw4tt2GDRtktqtVtyd60KBBjFgsrtem
sLCQycjIaPRapHGCygrmv+EPGuzx/PzMUeZA+EOmpLJC2eG+k3ftAe3atSsDgLGzs2MKCwsZT09P
iX+fu3fvZtv++eef9UY8dOzYUWJfjx49ZPZoHj9+XKKtkZERY2FhwXA4HAYAs2bNGqnnCYVCJjAw
kD1PS0uLsbOzY8/T1NRk9u7d2+RnJ4QQohj0ETtRKdnZ2VL31+3RUrbU1FRs3boVQE3P1969e+vN
fZw4cSImTZrEtj9y5Eibu9/Lly+RlJSE9evX4+TJk3B2dgYA8Pl8/O1vf5OosHno0CFoa2vjwoUL
2LhxI4yNjQHU9EyvWLFC4rqy1jBcu3YtSkpKAACrVq3C0KFDJY4bGRlh+/bt7OuffvoJIpGowWfI
zMxEfHw8xo8fj4cPH2LcuHHQ0KiZGu/h4YElS5awbaOiohq8VlOEh4ez20uWLJFaUdXIyAg2Nm1v
mY/2JiwzFd8FX8T9tGSZbSz1DbFiwBDM6toL+lo01xOomRM9ZcoUJCQkYNSoUdizZw9u3rzJ9ozW
6ty5M3bs2IG0tDQIBALk5ubi9u3b6NGjB4CaCtFBQUH1ri8SifDpp58CqBmRER4ejtevXyM7OxsC
gQDXrl3DiBEjpMa2ZcsW/PLLL+DxePj1118hEAiQlpaG7OxsDBs2DNXV1Vi6dCk7woAQQkjbQkWI
iEqRlYC2pSG4GzZsQGVlJQBg7ty5MDQ0lNruww8/ZIvlnDx5ErNnz25z95NVZZPL5SIgIID9w1ND
QwMnTpyQ+geln58fTExM2OJRGRkZ6NWrl0SbtLQ07Nmzh712beGgt3l7e6NLly6IiIhAQkICnj17
hm7dujX4DIMGDcLJkyfZxLOuLl26sNvJybITmKaq/e8B1PyBXpv8k5bzurwUR589xvMc6cPyAUCD
y8Uod2+McPNqV9Vt5fXnn38iPT1d6rH33nuvwZ+7rKwsZGdn4+jRo5g2bZrUNiNGjMD7778vsY/D
4WDAgAFYunQp+zskIiICU6ZMkWgXExOD4uKa9VYXLFiArl27ssd0dXUxbNgwqfd8/fo11q9fDwD4
9NNPsXz5cvaYubk5jhw5Ant7e5SVlWHr1q1sW0IIIW0HJaBEpchagqUt9YDWrhcJgO0lkMbe3p7d
TktLa3P3c3BwwIYNG2QeNzU1ZbdnzJiBUaNGSW3H5XLRoUMHNgFlpMzNCw8PZ3szPTw8YGBgIPO+
9vb2iIiIYJ+joQTU2NgYx48fl5p8ApLrJAqFQpnXaarevXuzc0o3b94MPp+PVatWSa2US5pGzDC4
mfQCf8ZEoFIk+7+ZW0czzPDtCUsD6R/IqILQ0FCEhoZKPaavr9/oBx///Oc/ZSafAKDdQGXguv/e
U1Prr69ad3SCrBil+e2331BYWAgAWLhwYb3jZmZm8Pf3x9WrV3HmzBlKQAkhpA2iBJSolLY+BJdh
GIkhpvv378f58+elthUIBOx2cxPQ1ryftra21KGj0tQt0tMc8fHx7HZxcXGDvbPR0dHsdmPPYW5u
DgsLC5nHG1rO5V38/e9/x4EDB1BSUoLKykqsXbsW+/fvx+LFizFv3jyZvdSkYelFBTj8NBQpha9l
tuFraGJiJz8McHCW++e3vfL390f//v2lHhswYECD51paWuIf//hHs+/N5/PZbWlD4b28vGBnZ4f0
9HQEBQVh9OjR2Lp1K9zc3Bq87tOnTwHU/E5xdXWVWmysds3nd/ngjhBCSOuhBJSolLaegGZmZqKs
rIx9ffHiRbnOKygoQGlpqdzrZCrrfq2lbgKamZmJgwcPynWerOGHymZtbY3g4GCMHTuWrRKalJSE
L7/8EuvXr8dXX32FpUuXtpn3v62rEgpxLi4SwYlxMqvbAkBXK1t82KU7jHT4MtuokuHDh0sdIi+P
uhWqGyMWi3Ht2jXcu3ePHbrbWPVbLS0t7N27F+PHj0dFRQUuXbqEK1euYPTo0VizZg169uwp9bza
3wUVFRXQ1dVt8B4lJSUoLCxk55wTQghpGygBJSqlrSegpaWlEq8HDBggdy+bWCxu8/drLXWfw9bW
Fi4uLnKdV3dYcVvTs2dPREVFYePGjdi5cycqKioA1Mxx+/vf/46DBw/i7NmzcHV1VXKkbVtEdiaO
RTzG6/IymW2MdHQwvUsP+FnZKjAy9bB9+3Zs2rSJHWZraGgIGxsbiR5QWYYPH45bt25hyZIlePjw
IcRiMc6fP4/z589j2rRp2Lt3L/T19SXOycjIaFJ8+fn5lIASQkgbQwkoURkMwyAnJ0fqsbaSgLq4
uEBLS4sdNrZ58+YG52W2t/u1Fi8vL3bb19dX5jDi9sbU1BS//vorVq9ejd27d2PLli149eoVgJoi
LYMGDUJsbGyDc17VVX5ZKU48D8ez7MwG2/k7umKCty/4TejRI/JZv349O0x3ypQpCAwMZHsuS0tL
6yWP0vTs2RMPHjzA5cuXsXXrVly+fBkAcPz4cSQlJeH+/fsSH5o5OjoiIiICdnZ2NMSWEELaKVqG
haiM169fo7q6ut5+fX39NjOUUUNDQ2KO0507d1Tqfq3F29ub3b53757UQkXtmZmZGb755hvExsZK
zG99+fIltm3bpsTI2p5qkQgX4iLxXfDFBpNPKwNDBA4cio98e1Dy2Qqio6PZ5PPTTz/FiRMnZA6b
lcfIkSNx6dIlXLx4Eba2NT3VoaGhOHr0qES72t8F6enplIASQkg7RQkoURltvfezVqdOndhteedk
tqf7tYa6z1BQUID79+8rMZqGvcvQ5Y4dO2L//v3o27cvu68pFUJV3ZOXGfjur4s4FxuJarH0NV41
uFyM9/LBtwEj4dLBTMERqo9bt26x259//nmLXXfUqFHYvHkz+7q2WnStusu1nDx5ssXuSwghRHEo
ASUqQ1YC2lCVU2VYtmwZW33z2rVrOHPmjErdrzV4eXlh5MiR7OslS5ZIraypLHWr1mZmNjwkVB4T
J05kt6X16qub1MLX2HQnGP8OvYP8slKZ7bzNLLF2yCiMcu8EHpf+99aaUlJS2O3aZY/qqrskVn5+
fpOu3aFDB3a77lJIQM2aoTY2NgCA7777rslzQgkhhCgf/R+aqIz2koD27dsXn332Gft60aJFePz4
cYPnvEuvmqLv11p27NjBFjYJDw/H8uXLUVlZ2eA5inoODw8PdvvatWuNrhkaFBQkdfmIWjdu3GC3
e/Xq9e4BtlN5pSX4T9h9/BByFQn5eTLbGevwMb9HPyztFwAzPZovWys/Px8vXrxo8Ov1a9lL1jSk
S5cu7PbPP/+M27dvAwByc3OxefNmiZ7Kx48f1/u3GBQUhOnTp+PGjRsSQ+qzsrKwdu1a9nVAQIDE
eQYGBuyw9JKSEvTr10/qnPDExERs2bKlXiE2QgghykcJKFEZsirgtrUEFAB++OEHWFlZAaiZ59e7
d28sW7YMV65cQXp6OoqKivD8+XOcOHECc+bMeedhxIq+X2twdnaW+MP0t99+Q9euXXHgwAGEh4ej
uLgYaWlpuH37NjZu3Ih+/fphw4YNColt0KBB7HZiYiJmzpyJhIQEVFdXs9VB65oxYwZsbW0RGBiI
y5cvIyUlBQKBAEFBQZgwYQI7VFpfXx8ffvihQp6hLXldVorDT0OxNvgiQjPrv3+1uBwO3nPxxHdD
RqOHTduteKwsmzdvhru7e4NfW7dubda1J02ahM6dOwMAYmNj4e/vjw4dOsDCwgJffvkl/P39sWrV
KgDAq1ev4OvrKzGfs7KyEseOHcOQIUNgZGSEnj17om/fvrCxsWHnqn/55ZcYOHBgvXtPnDgRmzdv
ho6ODtLT0zFu3DgYGxujT58+6NevH6ytreHq6orly5ez1aUJIYS0HVQFl6iM9tIDCgAmJiYIDw/H
/PnzceHCBYhEImzdurXZfwy2tfu1lq+//hrW1tZYsmQJioqKEBMTg48//lhm++HDhyskLn9/f0yd
OhUnTpwAUFPB8/jx4wBq1juU1lObl5eHTZs2YdOmTVKvyeVyceDAAYneVVWXKyjBlRcxuJ+e3OB6
nkDNcNupPt1gaWDYYDvSOrS1tXHu3DnMnz8fwcHBAGrmZ1tZWeHbb7/FwoULUV5ejtOnTyMuLg6R
kZE4fPgwpk+fDqBmXveYMWMQEhKCkpISibmeNjY2WLt2LebNmyfz/suWLcPw4cOxaNEi3L9/H0VF
RXj48CF73NLSEv7+/nItB0MIIUSxKAElKqO9FCGqZWlpifPnz2PPnj3417/+hRcvXtQbpsblcuHn
5wd/f/92d7/WMmvWLAQEBGDp0qW4efMmCgsL67UxNTXFwIEDMXjwYIXFtW/fPtjY2GDr1q2NDv1d
tWoVrl69itDQUKnDdUePHo0ffvhBYpijKkt+nY9riTF48jIDjdU3ttA3wKROfuhiaaOQ2NqbefPm
NZi4NSY8PFzuto6Ojrh+/ToSExMRHx8PNzc3iXVr+Xw+YmJicO/ePRgYGEgUE6tdTqm6uhrx8fHI
zMyESCSCq6srnJycoKHR+J8n3t7euHHjBoRCIeLi4pCYmAgTExPY2dnB0dGxSc9NCCFEcTgMwxQB
oI+QSbs3ZswYqVVeT58+jQ8++EAJETVNWVkZIiMjERcXB0NDQ1hZWcHDwwNGRkYqcb/WkpaWhmfP
nqG4uBhWVlawtbWFm5sbW3hJ0fLy8hAVFYWMjAw4OTnB09OzXiGVWsXFxYiNjUVmZiZKS0vh5OQE
Nzc3mJubKzhqxasWiRCWmYabyS+QWtj4PEQDbW2M8eiMgQ4uVGCIEEIIaccoASUqo0ePHlKL69y7
d09iWQtCiPKkFb7Gg/QUPExPQWm17EJMtfgamhju5okhzh7QlqNXjBBCCCFtG/3fnKiM9jQHlBB1
8rK4CM+yM/AoIxVZJcVynaOrqYWhLu4Y4uwOvqZWK0dICCGEEEWhBJSojLw86cs0qMNwRkLakkqh
EAmv8xCTm42I7EzklgrkPtdYh48hLu7wd3CFjqZmK0apHGJGDDHDsF+MxDbAoM73OtsAAAYQMwyK
KsrBAWCow1faUHNVwONwYMzXBZfeQ0IIUShKQIlKKCoqklpplM/nQ19fXwkREaIeGIZBbmkJUgsL
kF5YgMTXr5BSmN9oFdu3ORh3wGBnN/S0cWiROZ5ihoFQJEK1WIRqkfjNdxGEYhGq3nyv3f+/feI3
54jZ40Kx6E0bMYRvXgvF4jdfNduiN69FjJh9LRKLIWIYiBgxxOI335v4npDWZ66njy96DYS1Yfua
+04IIe0ZzQElKiE+Pl7qchWOjo5ITk5WWBylpaVYu3Ytrl27hrKyMpiYmMDNzQ08Hk9hMRDSEjRs
reDk4oKAgABoampCyIhRXlUNQVUlSqoq8bpcgPzSMhRUlEHYSNVfWbgcDhyMO8C1gymMdPhsYidi
3iR7jOhN0lebCL6VIIpFbFLIJplvEk1K9oi8nEw64mv/95QdBiGEqA3qASUqITc3V+p+RQ6/LSoq
gouLC/Lz8yX2h4aGKiwGQt5Vt6kT0WP6ZHA4HGQCOBwp/7IcTSVmGCQX5CO5IL/xxoS0EnnnJRNC
CGkZVMueqARlJ6BVVVXo379/veSTkPamNvkkRF10sbRWdgiEEKJWqAeUqARlJ6CLFi1CVFSUQu5F
SKvh8UCpZ+vigAMu539fHIntmuPs9zrbACAGg7KqKlSLRQAALR4PepraoM8LmofL4cDD1AITO/kp
OxRCCFErlIASlaDMJViCgoKwd+/eVr8PIa1OJIJIKARPBarPcgBocHnQ5HGhweVBi8eDJo9Xs+/N
fk0uDxq8t1+/+V7n3JrXXGi8ea3B5b75qtnmvXnN43DZ1zwOFzwuB9w333kcLptwEkIIIeqMElCi
EpTVAyoQCLBkyZJWvQchinRm9VqMW/cPaPJ1ANQkcq3RxcbjcGGqpwdLfUOY8HXfJGk1SV9tIqfx
JiGs3dask/TVJJPc/yWVdZLF2m1CCCGEtD2UgBKVoKwE9KeffkJWVpbUYwEBARgxYgRsbGxaNQZC
WpwQ4JUx6Nq1K7y8vADUFAwqq6qCoKoSxZUVeFUmQH5ZKfJKBcgsLkR2SQlEjPzVcEWMGDmCEuQI
SmBlYJ6JLOMAACAASURBVIj+9s7oY+8EfS3t1noqQgghhLQBtAwLUQkBAQEICQmpt//atWsYNmxY
q9wzPz8fjo6OEAgEUuMJDg4GtwXWMySkPRCJxcgqKUZyQT4SX+chIT8Pr8pKm3QNDS4XPW0dMNjJ
HfbGJq0UKSGEEEKUiXpAiUrIy8uTut/MzKzV7rlt2zapyaeGhgZ27dpFySdRKzwuF7ZGxrA1MsZA
RxcAQH5ZKaJyshCZ+xKxeTmoEokavIZQLMb9tGTcT0uGu6k53nPxRGcLK5o3SQghhKgQ6gElKsHM
zAyvXr2qtz8zMxPW1i1fYr+yshJ2dnZSE9/58+djz549LX5PQtqzKpEQUTlZCMtMx/OczEaT0VrW
BkYY5e6N7jb24FIiSgghhLR7lICSdk8kEkFLSwticf35Z1VVVdBshYqeBw4cwMcff1xvP5fLRVxc
HFxdXVv8noSoiiqhEI9fpuNuWhIS8qWPXnibhb4Bxnp0pkRUDURERGDXrl0AgJkzZ6Jfv35KjogQ
QkhLoiG4pN3Lz8+XmnwaGxu3SvIJQGYP59ixYyn5JKQRWhoa6GvvhL72TsgVlOB2aiLupiahrLpK
5jk5ghL85/F9XIqPxvtePvCzslVgxG1fTk4OXrx4UW8/l8uFhYUF7OzsoKWlpYTImi4lJQU7d+4E
APTo0YMSUEIIUTGUgJJ2T9b8z9aqgJuQkIA7d+5IPbZgwYJWuSchqspc3wCTOvlhnGdnPMpIRXBi
HLJKimW2f1lShF2P7sClgykmePvCtWPrzfNuT86fP4/58+fLPM7lctG1a1esWbMG77//vgIjI4QQ
QiRRlRTS7slagqW1ChAdPHhQ6n5bW1sMHz68Ve5JiKrT4mlggIML1gwehUV9/OHaoeF/v4mvX2HT
nWDsenQbOYISBUXZPujr68Pc3BxGRkbsPrFYjMePH2P8+PFYvXq1EqMjhBCi7igBJe2eontAjx07
JnX/zJkzqfItIe+Iw+HAx8IaXw0cihX9h8DD1KLB9k+zMvHPvy7ixPNwlFbJHsKrTtauXYucnBwU
FhairKwM9+/fx5QpU9jjP/30E27fvq3ECAkhhKgz+muZtHuK7AF9+vQp4uPjpR776KOPWvx+hKgz
N1NzLO8/GF/2HwKXDqYy24kZBn8lxWPN9fO4mfQCYqb+nHB1xefz0adPH5w4cQKTJ08GADAMg8uX
Lys5MkIIIeqKElDS7klbfgVonQT01KlTUvd7enrCx8enxe9HCAHcTc0ROHAYFvX2h7WBkcx2pdVV
OPb8Mb6/cRkxudkKjLB9mDFjBrsdGRkp93l5eXnIycl55/u/evUKJSUtP1y6oqICiYmJMkfDyHuN
hIQEqWs7N6Sl3htCCFEnlICSdk/WHx2tkYCeOXNG6v5Jkya1+L0IIZJ8LK3x7eCRmN21F4x1+DLb
ZZUUY+v9m9j16DZelTYtoVBlOjo67Laurm6DbQsLCzFv3jw4OTnB3NwclpaWsLW1xeLFi1FRUSHz
vAkTJsDDwwMBAQEAakaoBAYGomvXrjA3N4exsTG8vb3x888/g2GYZj1HeXk5Tp06hVmzZsHS0hJ8
Ph+urq4wNzeHgYEBFixYIHNkTF0xMTGYMmUK3NzcoKenBzc3NxgYGMDU1BTdu3fHrVu3WvS9IYQQ
UoOq4JJ2T1EJaEpKCp4/fy712IQJE1r0XoQQ6bgcDvrZO6OHjT2uJcTiyosYVIlEUts+zcpEZE4W
3nP1xCg3b2hpqPf/8p49e8Zue3p6Nthu4sSJSEpKAgBYWlpCIBAgMzMTO3bswKNHj3Dx4kWYmtYf
Fp2amor4+HiUl5ejtLQUY8aMQVhYGHucYRjExMTg66+/xqNHj3D48GFoa2s36TmuXbsm8aGfrq4u
+Hw+8vPzIRAIsGvXLoSFheHhw4dS5+WLxWJs2LABGzZsQGVlJbvf2NgYZWVlyM/PR35+PrKz6/ei
v8t7QwghpAb1gJJ2T9YQ3Jb+A+D8+fNS99vY2KB79+4tei9CSMO0eBoY49EZ3w8bi752TjLbCcVi
XIqPxtrgiwjLTFVghG1LTk4OtmzZAgDQ0tLCJ598IrWdQCDAyJEjkZSUhO7duyM+Ph5ZWVkoLi7G
0aNHwefzERoaip9++qnB+wmFQkydOhVPnjzB5MmTsWfPHoSEhGDTpk0wMDAAAAQFBWH37t3Nep7O
nTtjx44dSEtLg0AgQG5uLm7fvo0ePXoAAMLCwhAUFCT13F27dmHNmjWorKwEl8vF2rVrkZKSgoKC
AlRUVCA1NRWHDx+Gt7d3q7w3hBCi7igBJe2eonpAL126JHX/mDFjWvQ+hBD5Genw8XG33ljtPxzO
JrI/dCqoKMPesPv4151gZBQVKjBC5RKLxTh16hSGDh3K9uitX78ednZ2Utv/8ssvyM7Ohra2NoKC
guDm5gagpjrxhx9+yK51vGvXLhQUFMi8b1ZWFu7evYuLFy/ijz/+wPz58+Hv748VK1YgODgYHA4H
QE1F3rq9kPIYMWIEnj9/joULF8LOzg4cDgdcLhcDBgzA0qVL2XYRERH1zs3NzcU333zDvj5y5Ai+
++47ODg4sM9pb2+Pjz76CJ07d26V94YQQtQdJaCk3VNEAlpZWYmbN29KPTZ69OgWuw8hpHkcTDpg
pf8wzO3Wp8H5oS/y87Dh5hUceRYGQVXTEp/2Yt++fRgxYgQ6d+4MExMTTJo0CVFRUdDV1cWWLVsQ
GBgo9bzy8nJs2rQJQM0Ha7VJWV21lXQFAgGCg4NlxqCvr4979+5JXRu5Z8+eeO+99wAAmZmZMuda
ytLQkN1Ro0ax26mp9Xu8t2/fjsLCmg8g/P39MW3aNLnu2ZLvDSGEqDv1nhBD2j2GYZCfny/1WEsO
wb179y7Kysrq7dfU1MTQoUNb7D6EkHfT284Rfla2uBQfjeuJsRCK6y/JwoDBrZQEhGWmYqyHDwY5
uYKnQmv4xsTEICYmRmKfra0tHj58CGtra5nnxcfHs7/nfH19USVlXVULi/+ty5qWlibzWiYmJvWG
sNY1YsQIXL16FQCQnJwss11T8fn/+/BBJGVucFRUFLu9cOFCua/bku8NIYSoO0pASbtWWFgIoVBY
b7++vr5Excd3de3aNan7+/btC319/Ra7DyHk3WlraOAD7y7o7+CEE8+f4HnOS6ntyqqrcSIyHLdS
EjC5sx86W8hOztqTcePGYciQIQCA33//HREREcjIyMCNGzcklmJ5W901jteuXYu1a9c2eJ93SbKs
rKzY7ZSUlGZdQywW49q1a7h37x6ysrKQnZ3daPXbuLg4drt2CK08FPneEEKIqqMElLRriipAJGs4
lbThZYSQtsFMzwCL+vgjKicLJyLDkSOQvgZltqAY2x/cgreZJSZ19oONobGCI21Z/v7+WLZsGQBg
6NCh6NGjB6qqqrBw4UL069cPTk7SizZlZGQ06T6yRp/Iw8jof+u5NnUOKFAzlHbTpk3sMFtDQ0PY
2NhI9IBKk56ezm7b2trKfT9FvjeEEKLqVGfMEVFLipj/WVRUhPDwcKnHaPgtIW1fJwsrrBk8CpM6
+UGngaVYovOysf7GFRx88ggF5fWH3LdHPj4+WLNmDQCguLgYM2fOlDo0FQAcHR3Z7f/85z9gGKbB
r4MHDzY7rrofHspKiGVZv349lixZgtTUVEyZMgWPHj1CUVERoqOjG51PWnfuZlZWltz3VOR7Qwgh
qo4SUNKuKaIH9Pbt21L/YDMwMGBL/hNC2jYel4v3XD2xbuhY9Ld3BkdGOwYM7qYlYc31Czgd/Qxl
1fXn+rU3X3/99f+zd99xTV3//8BfCXvKEBRUFBRRhiKIE/esqy6kjjrrtkNbK63W0TpbbevHOqsV
tWq1WqWtA8W6J6KAyFBRQBGQJSOskNzfH/y434TcQBaE4Pv5ePBoOPfek3cuFvLOOed94OfnBwC4
desW1q5dy3me5JrNGzdu1GpMkntsKpOAxsbG4ptvvgEAzJ49G8ePH2dfmyLat2/PPn769KnC19Xl
vSGEkIaOElCi0+oiAb169Spne69evaD/jm9sT4iusTQ2xoeduuCrPoPRxkb+TAmhWITQp3FYfuEf
nE14jJJyYR1GqVn6+voIDg5mq8d+9913uH37tsx5rVu3ZvfoPH/+PAoLC2stpsrfq3w+H15eXgpf
JznCOXfuXKWf18fHh328e/duha+ry3tDCCENHSWgRKfVRQIqb0pX3759NfYchJC65WRlgy96DcAc
v55obGom97ziciH+jn/EJqLFOjoi6u7ujm+//RZARXXYyZMnIz8/X+ocfX19rFmzBkDF9NTKkUZV
5OXlIT4+nvNYcnIyzp8/DwAIDAyEk5OTwv1KFizi2udTclot1zrMBQsWsAWQwsLC8Ndffyn0vJq8
N4QQ8q6jBJTotNpOQAUCgdz1n3369NHIcxBCtMfHsQVWDxiG8R7eMDUwkHueQFiGv+Mf4asL/+BU
bBTeFhfXYZSa8fnnn6Nbt24AKrY+WbRokcw5n3zyCTp16gQA+PnnnzFz5kzk5ORInVNSUoJz587h
n3/+kftc+fn58PHxwdatW1FSUsK2JycnY+jQoRCLxeDz+Uonch06dGAff//997h+/ToA4M2bN/jp
p5/Y2AEgIiIC4irb8FhYWOD7779nv58wYQLWr18v9bckKysLu3btwrFjx6Su1dS9IYSQdx0loESn
1XYCevfuXc5tXszMzKSmchFCdJc+Xw8D27TD2kEjMbhNexjw9eSeW1IurJiae/EfBD+4g+TcHLnn
1jd6enoIDg5mt6g6dOgQjh49KnPOyZMn0b17dwAV27jY2dmhTZs26N+/Pzw8PGBtbY1hw4ax+3hy
sbGxQadOnfDZZ5+hUaNG6NmzJzp06AAXFxfEx8fDwMAAe/fulVqTqYhx48bB09MTABAfH4/evXvD
xsYGTZo0wZIlS9C7d28EBQUBqPj70LFjR5nXOGXKFHz33XfQ09ODSCTC8uXLYWdnhxYtWsDGxgZ2
dnaYP3++zF6qmro3hBDyrqMElOi02k5A5RWb6N69O63/JKSBMTUwxFiPjvh24HD0atkafJ68UkWA
iBHjzsskbLh2ARuvXcCt5Oc6sU7Uzc0N69atY7+fP38+u5VJJWdnZ1y/fh3r1q2Do6MjxGIxEhMT
cfnyZcTGxqK8vBxdu3aFv7+/3OcxMzPDlStXsGTJEhgYGODWrVt49OgRxGIx3NzccPHiRcyYMUPp
+I2MjPDPP/9IVSDPzc2Fg4MDtm/fjjNnzmDlypVwc3MDAMTExODw4cMy/axYsQKXLl2Cl5cX+PyK
t0KvXr1i+xo8eDBnkTlN3BtCCHnX8RiGyQNgqe1ACFFFjx49OItpXL16Fb1791a7/6FDhyI0NFSm
ffXq1TVuRE4I0W1ZgkKcefIYd18mQcwwNZ5vpKcP32Yt0L2FM9rY2oFXTQKrS7KyshAdHY3S0lI4
ODigTZs2MDc35zzXx8cHDx8+RIsWLZCSkgKgYs1pbGws0tLS4OvrC1tbW43ElZiYiCdPnsDV1RVt
2rSROsYwDG7dugULCwt4eHhAT0/+qHZhYSEePHgAsVgMLy8vpeJT5t4QQgipQAko0Wlt27blLKX/
+PFjqbL5qmAYBjY2Nnj79q3MsYsXL2LgwIFq9U8I0Q3ZRQKEPo3DrZTnKK+yplCeRsbG8HFsAV9H
J7jY2ILPezcmHHEloIQQQogkSkCJTrOxsUFubq5Me0ZGBuzt7dXqOzY2Fh4eHjLtenp6yM3NZUvy
E0LeDfmlJbj64imuvHgKQZni1XBNDQzQ3s4Bnk0c4NbYHjbVVN3VdZSAEkIIqQktYiM6SyQScY5O
8ng8jUzxunPnDme7p6cnJZ+EvIMsjYwxsp0Xhrq6Izw1GVeeP0VKnuwHYFUVCYWIeJ2CiNcVCZm1
sSna2DZGK2tbNLe0QvNGVjAzNKrt8AkhhJB6gRJQorNycnLAcKzLatSoUbXrfRR19+5dzvbKCoiE
kHeTgZ4eeji5oIeTC5Jzc3Az5TnCXyWjWMEiRLklRQhPTUF46v+NEFoaGcPOzByNTc1ha2oGS2Nj
mBsawtzQCMb6BuDz+CgqK4Men4dGxib1dn2pUCQCAIjEYmQKCrUcTf2lx+PBysS02kJXhBDSUFEC
SnQW1ybjgGa3YOFSuY8eIYS0tLZBS2sbjPf0RmTaK4S/SkHsm3SIGMXWilbKLy1BfmkJEnO4K3vr
io4fz4GnsAx8PX18E/avtsOp1+zNzDGvSy84WjbSdiiEEFKnKAElOkteAqqJ6bdFRUWIiYnhPEYJ
KCGkKkM9fXRp3gpdmrdCsbAMkWmpiEx7hfisDJRy7CXcUJnbaabC7bvgjaAQhyLvYVnvQdoOhRBC
6hQloERnydsDVBMJ6MOHDyH6/1PJJFlZWaFt27Zq908IabhMDAzR3ckZ3Z2cIRKL8Sw7E4/fpOFp
diaS3+YotKULeTekFeRrOwRCCKlzlIASnVWbU3Dv3bvH2e7n51dv114RQuofPT4fbnZN4GbXBABQ
JipHUm4OXuRm41XeW6Tmv0V6YT4lpe+oDk0dtR0CIYTUOUpAic6qzSm49+/f52zv0qWL2n0TQt5d
hnr6aNvYHm0b/982UeViEbKLipBdVIisIgFyi4tQWFqKwrJSCMrKUCQsQ06xAKXl5WAAGOrpwczA
CPRZmO7i83hwa9wEYz28tR0KIYTUOUpAic6qzSm4ERERnO1+fn5q900IIZL0+XpoYm6BJua0vRMh
hJCGj6/tAAhRVW1NwS0oKMCTJ084j1ECSgghhBBCiOooASU6q7am4D548IBzf1EHBwc4OtJ6HUII
IYQQQlRFCSjRWbU1BffBgwec7T4+Pmr1SwghhBBCyLuOElCis2prCq68BNTX11etfgkhhBBCCHnX
UQJKdFZOTg5nu42NjVr9UgJKCCGEEEJI7eAxDJMHwFLbgRCiLENDQwiFQpn24uJiGBsbq9RncXEx
LCwsIBKJZI69fPkSzZs3V6lfQgghhBBCCI2AEh2Vn5/PmXyampqqnHwCwKNHjziTT3t7e0o+CSGE
EEIIURMloEQn1db024cPH3K2UwEiQgghhBBC1EcJKNFJtbUFS2RkJGe7t7e3Wv0SQgghhBBCAH1t
B0CIKmorAY2KiuJsr+sEdP369bh//z77fbdu3fDll18qfP3ly5exbds29vtRo0Zh+vTpmgyREEII
IYQQpVECSnRSbUzBFYvFiI6O5jxW1wno7du38e+//7Lfh4WF4eOPP4aJiYlC12/duhUhISHs961a
tdJ0iIQQQgghhCiNpuASnVQbI6CJiYkQCAQy7WZmZnB1dVW5X00oKCjA33//rdC5WVlZOHv2bC1H
RAghhBBCiPIoASU6qTYSUHnTb728vMDna/9/ld9//12h8/744w/OCsGEEEIIIYRoG03BJTqpNhLQ
+jL9VpKJiQn4fD4EAgFCQ0ORlZWFxo0bV3vNgQMHAFTcC3n3iRDSMISFhSErKwvNmzeHv7+/tsPR
GroPhBCiO7Q/rEOICmpjDai8BLRDhw4q96kuIyMjjB49GgAgFApx/Pjxas+Pi4tjixd98MEHSj8f
wzBISEhAZGSk2qOomZmZuHPnDp49e6bQcyYkJIBhGLWeMz8/H3fu3EFGRoZa/RCiK1atWoWJEydi
y5Yt2g5Fq+g+EEKI7qAElOikdyUBBYApU6awj2uahnvw4EEAQIsWLdC/f3+Fn+PFixcYPnw4rK2t
0a5dO3Tq1AkWFhbo27cvEhMT5V73+vVrNG3aFE2bNsXIkSMBAPHx8Xjvvfdgb2+P7t27IygoiPPa
+Ph4DBkyBFZWVmjXrh3atWsHW1tbTJkyBbm5uTh06BDbd01vKn/66Se4u7vDysoK3bt3R9OmTdGi
RQts2rRJ4XtACKmfiouL8ezZM8THx2s7FEIIIRpACSjRSZpOQAsKCpCUlMR5zMvLS6U+NWXgwIGw
t7cHUFEd9/nz55znicViNkGdMmWKwutWz549C19fX5w9exZ5eXkwNTWFgYEBSktLcfXqVfj5+eHK
lSuc14pEImRkZCAjIwM5OTmIioqCv78/zp8/X+1znjhxAn5+frhw4QLy8/MBVEw3zs3NxeHDh+Hr
64ubN2+yfXMVhwIqfm7jx4/HkiVLEBcXB4ZhYGlpCQB49eoVgoKCEBgYSGtiCdFhixcvhqurKz7/
/HNth0IIIUQDKAElOknTCWhMTAzn9M9WrVqxCY226OvrIzAwkP3+8OHDnOf9999/ePXqFQBg6tSp
CvUdFRWFkSNHIjc3Fx4eHrh37x4KCgpQUFCAEydOoFGjRsjNzcWMGTNQXl5ebV9lZWWYMmUKsrOz
MWDAAPz66684ffq0zP6jd+7cQUBAAAoLC8Hj8bB69WokJSWhqKgICQkJ2L59O3JycrB79272GnlT
c2fMmIGTJ0+Cz+djzZo1yMnJQV5eHl69esVOXT5+/Dg7MkwIIYQQQrSLElCikzSdgNbX6beVJKfh
yktAK5OsLl26oF27dgr1u3TpUojFYpiZmSEsLAx+fn7g8/kwMjLCuHHj8OOPPwIAkpKScPTo0Wr7
un//PmJjY7Fnzx6EhYXho48+wvvvv48RI0bIPGelbdu2YdWqVWjZsiUAoG3btliwYAEePnwIX1/f
ap/v5s2bOHnyJADgs88+w8qVK2FtbQ0AaNasGU6cOMHuf7pp0yaIxWKF7gkhDUFiYiIGDx6MwYMH
IzMzE+Xl5di2bRuGDx+ORo0awc3NDZs3b5b7/8Xbt2+xfPlyuLu7w9TUFDY2NujQoUONa8t3796N
QYMGwdraGs2bN8fo0aPl/n5dvXo1Bg8ezP6eOXz4MEaPHg1LS0ucPHmSfQ1nzpwBANy7d499TYMH
D0ZpaalC96Lq8zx8+BCffPIJ2rVrBxsbG7z33ntISEhQqC9CCCEawDBMHkOIDhGLxYyenh4DQOar
tLRUpT4XLlzI2d+KFSs0HL1iRowYwQBgrKys2DZXV1c2rvDwcKnzCwoKGDMzMwYA88svvzAMwzCn
Tp1iz1+8eLHMc4SFhbHHFy5cyBlHSUkJY2hoyABg+vfvL3M8JSVF6n5t3Lix2td19uxZ9txWrVox
5eXlcs/dtWsXe+6aNWtkjvv7+zMAGB6Px7x584azj1WrVrF9XLt2rdrYCNFFPXr0YAAwo0ePlmp/
+PAh+2//2bNnzJgxYzh/x61cuVKmz+LiYsbb25sBwPD5fKZDhw6Mm5sbw+fzpX4nSSoqKmImTJjA
AGAsLCyYHj16MC4uLgwAxszMjAkNDZW55v3332cAMDNnzpT6/x0A88cff0i9Bq6voqKiGu9D1ee5
cuUK+7tS8svGxobJzMxU9vYTQghRAY2AEp2Tl5cHkUgk025ubg5DQ0OV+oyJieFs1/b6T0mTJ09m
H1ctRnTy5EkIBAIYGhoqXP322rVr7ONu3bpxnmNkZIRmzZoBgNy1p5Xatm0rNbrJ5ebNm+zj6dOn
Q09PT6FYqxIKhbh9+zYAwMXFBXZ2dpznubi4sI9rip+QhurDDz/EuXPnEBQUhAcPHiAuLg7vvfce
AOD777+XWSP9xx9/IDIyEmZmZnj16hWioqIQHx+PgoIChIWFcT7Hxo0bcfz4cXTv3h3Pnz/HzZs3
kZiYiHXr1kEgEOCTTz6RO9p6584dLFq0CDNnzsSlS5eQk5ODoUOHwtvbG2KxGHPmzAEAvPfeexCL
xeyXiYmJUvfh/v37GDZsGDp06IBDhw4hMzMTwcHBMDIyQk5ODnbt2qVUf4QQQlRD+4ASnVMbFXDl
JaCenp4q96lpkyZNwurVqwEAx44dw5YtW9gErnL67fDhwxXeC/XJkyfs499++w0hISGc5719+xYA
kJqaCrFYLLe4UePGjWssfCT5nG3atFEoTi7Pnz9nP4QoKChAQEAA53lpaWns45SUFJWfjxBdFh4e
jpMnT2LUqFFs2+rVq3Hu3DmUlJQgMTFRatp+5f+nPj4+cHBwYNtNTU05p8a/fv0amzdvBgDs2LFD
aq/iZcuWYdeuXUhISMCZM2fYatmSYmNjsXjxYnaKrCQejwcejyfzWBXR0dHo3bs3QkNDYWxsDACY
Nm0ajh07hnPnzsn9O0AIIUSzKAElOkfTCWh6ejqys7Nl2g0NDdG2bVuV+qwNrq6u6Nq1K+7evYv0
9HSEhYVhyJAhSElJweXLlwFUvJlSlGQyWHl9dYRCId68eYOmTZsqH/z/9/TpU/Zx8+bNVe5HMvY3
b97gxIkTNV6Tmpqq8vMRost2794tlXwCgKOjI/u4shJ1pcGDB2PDhg24ceMGtm/fjvnz51f74dLZ
s2dRVFSEJk2awNvbW+qYnp4eOnTogJcvX7JFz6ry9/dnE9ja5OHhgX/++YdNPitV3ouq94EQQkjt
oASU6JzaqIDLxc3NDfr69et/kcmTJ+Pu3bsAKqbhDhkyBL///jsYhkHjxo0xbNgwhfuSfG2ffvop
rKysarzGzMxM+aAlSE65ramqbnUkY+/YsSNb8bY6NRU1IqShGjRokEybgYGB3PP79OkDHx8fPHjw
AIsWLcKuXbvw2WefYerUqZzXVX4gVFxcjIEDB8ocf/z4MQD5sxDatm2r8LZR6ujatStnVfPq7gUh
hBDNq1/vrglRQF0loPVp+m2lwMBALFmyBOXl5Th9+jQEAgE7/XbixIlKvZFyd3fHvXv3AAD9+/eX
GSGpDS4uLoiIiABQMW1PVe7u7uxjPp/PTk0mhKiPx+Ph1q1bWLVqFTZv3oyYmBh89NFHWLduHfbu
3Yv+/ftLnV+ZWObn5+PSpUty+83MzKzVuAkhhOgGKkJEdM67nIDa29uzoxmFhYX4+uuv2e0DFN37
s5JkEnfjxg3NBVkNyaJAlcmvPJLTbKtycnJiR2Ojo6NRUFCgmQAJIQAqCpBt3LgRDx8+xMyZM6Gn
rcJzhwAAIABJREFUp4cXL15gyJAhiIqKkjq3cjp99+7dwTCM3K9Tp05p46UQQgipZygBJTonNzeX
s13VBDQ2NpazvT4moIB0Ndz//e9/ACqSyc6dOyvVT//+/dmCHgcOHJCb2GtSZeVNoKJwUmWBI0li
sRifffYZZ0GSSjwejx2FEYlE7H0ghGiWl5cX9u3bhzt37qBJkyYoLy9nZ11UqvwwKyIiAiUlJdoI
k5B6r7y8HI6OjnB0dJT6MJY0XOWCYuRF0R7DXCgBJTpHXqJkbW2tUn/yElAPDw+V+qtto0ePllmL
qezoJ1CxJvKjjz4CUFHI57PPPpO7TYKm9OnTBwMGDABQMV2vT58+iIyMhFgsxtu3b/HXX39h2LBh
2Lp1q1RVTq7tdX766Se2mMjatWupgiUhtahz585skbMLFy5IHevXrx+MjIxQVlaGHTt2aPy5K5cW
vHjxQuN9k4YlISEBu3fvxu7du/HXX3+p1MeZM2ewe/du7NmzB2VlZRqNLy0tDWlpaUhPT1f62uDg
YPa1VTdDiNQf4tIyxH25BU++24WS9Cxth1OvUAJKdI4mp+CmpqYiLy9Ppt3ExATOzs5K91cXzMzM
pIru8Pl8TJkyRaW+Nm3axO6heejQIfj7++Pu3btSf3Rzc3Px559/YurUqSguLlYveFTsO1hZCCQ6
OhqdOnWCpaUlGjdujHHjxiE0NBS+vr5YtGgRe03VqpUA0Lp1a6xYsQIAUFJSgi5duuD7779HRkYG
e45IJEJUVBTWrVuHffv2qR07Ie+Cc+fO4eXLlzLtoaGhACD14RAAODs746uvvgIArFy5EmfPnpW5
VigUqlyJunXr1gCAuLg4SkJJtYyNjTF//nzMmzcPH3zwAd68eaPU9cXFxZg4cSLmzZuH3bt3q7y3
uKbdvXsXM2bMwLx58zBv3jysWbNG2yERJeTceICoj1biZfBpiEpKtR1OvUAJKNE58qbgqjICWlmd
sap27drVSVVGVS1evBiff/45Pv/8c/zwww9o1qyZSv1YW1vjypUr8PHxAQDcvn0b3bp1g6mpKVxc
XGBtbQ0bGxtMmDABhw4d0sgIqY+PD+7du4f27duzbQKBgN3Xc+DAgbh48aJUxVwjIyPOvoKCgrB2
7VoYGBiguLgYy5YtQ9OmTWFjY4NWrVrB2NgY3t7eWLFiBeLj49WOnZB3wYEDB+Ds7IwBAwZg8eLF
CAoKQvv27REVFQVTU1MsX75c5pqgoCAMGzYMAoEAw4cPR9++fbF48WIsWbIEPXv2hKWlJYKCglSK
5/3334eJiQmAit8fCxYsYD98IkRSy5Yt2eUZQqEQhw8fVur606dPszUFPvzwQ43Hp6o9e/ZIff/X
X3/JfS9E6idGWI7Uo2cROWMFMsNug2EYbYekVVQFl+gcTY6AyktA6+v020q+vr4a21bE3d0dd+7c
wXfffYfffvsNqampEIlEUiMNLi4u6N27t8Y+DXZzc0NERARu376NiIgIJCYmwtHREQMHDkSPHj0A
QGok097enrMfPT09LF++HMOGDcMnn3yC8PBwlJaWIjc3l/3jbGJigm7duqF3794aiZ2Qhq5v375I
SUnBnTt38N9//7HtXbt2xY8//iiz1ydQ8SFR5dTF7777DlevXsXVq1cBAKampvDy8mL/31aWs7Mz
Dh8+jDlz5iArKws7d+6Evr4+1q5dq9oLJA3ajBkz2GrMwcHBWLx4scLXHjp0CEDF35aJEyfWSnzK
ys/Px7Fjx6TaSkpK8Pvvv+Pjjz/WUlREVcKcPCT+sB8Zf19BywWBsGj3bq4H5jEMkwdAdmMsQuop
Ly8vzvV+kZGR6Nixo1J9zZ49G3v37pVpX79+PTul7F2TnZ2NqKgo5ObmwsHBAa1atZLatL6uTJ06
lX0zEBERwY7SVqe8vBwJCQmIj4+HhYUFHBwc4ObmVm+mURGiS8RiMRISEpCVlYXWrVsr9XsgKysL
sbGxcHBwQOvWrTUyo6SkpATx8fEQCARo164dbG1t1e6TNDzFxcVo2rQp8vPzAQD3799X6APbjIwM
NGvWDCKRCEOHDsW5c+c0Gld5eTm7ntnExARFRUUKXbdr1y7Mnz8fQMV6aKFQCKBiD+zIyEiNxkg0
qywnDw8mLq32nMYDu8Fp5lgY2ta8F3tDQiOgROdosgiRrhUgqgu2trYy+/zVtYKCArbQib29vdSW
MdXR19eHh4fHO/3zI0RT+Hy+1FR5ZTRu3Fjjsw4qp9QTUh0TExMEBgbi119/BVAxCqpIAnrkyBF2
KUh9mn5b+Tp4PB62bNmCTz75BAAQFRWF+/fvK10Bn9QvWWF3kHPjIZp98B4cxg0C31Dx/dx1GY2A
Ep1jYmLCWeq/oKAA5ubmSvVlY2PDuY7i6dOnaNOmjcoxEvmKioqgr68vd1SSYRh8+umn2LZtG4CK
okVLl1b/CSIhhBBS6fbt2+yUbxsbG7x+/VpuLYFKPj4+ePjwIczNzZGRkQFTU1OZc3JycvDvv//i
wYMHePXqFdLS0mBnZwdnZ2cEBARUO81clRHQiIgINsHs168fwsLC4OzsjJSUFADA3LlzsWvXrhr7
uXXrFrv3tr+/Pzp37gyRSIQTJ04gJCQEycnJmDhxIlv8TywWs9ub6evrs+1JSUnYuXMnoqKi2A+K
q1blV+UenTlzBk+fPgVQscSoV69eNb6mffv2oaCgACYmJpg7d67UMYZhcOLECVy5cgXPnz+HQCBA
s2bN0KJFCzg5OeHDDz9Eo0aNanwOdSkyAirJqIktnOYEwNa/5hlfOo9hmDyGEB1RXFzMAJD5MjAw
ULqv9PR0zr6MjIyY8vLyWoieMAzDnDp1irG2tmZmz57NhISEMNHR0UxOTg6TkJDAhISEML169WJ/
Fo0bN2YKCwu1HTIhhBAd4+bmxv4tOX78eLXnPnr0iD132rRpMsdFIhHTv39/Rl9fn/N9Q+XXjBkz
5D6HUChkzzMxMVHoNcydO5e95siRIwzDMMyaNWvYNktLS0YgENTYz/Lly9lrNm3axGRnZzM9evSQ
iv3TTz+tNtaDBw8yBgYGUtfk5uZq5B7t2bOHPe7l5VXj64mKimLPnzJlitSx58+fM15eXtXGEBkZ
WeNzaEJp9lvm9uDZSn89XrqZKUx8WScxagtNwSU6pS6m37Zt21aqAmttePPmDV6/fg1TU1POLUYa
svv37yM3Nxe//vorO7WIS9u2bbFp0yZkZ2cjOzu71uPi8Xiws7N7534eihKLxRCLxRCJRAr/V5lz
uI7La5N3TnVfIpEIDMPItFdtq/yeYRipx5JtynwBqPG/lap+LxAIEBcXh5KSEhgaGsLNzY3dwoho
h42NDRYuXAhXV1dth0JqMH36dLaWQ3BwMAICAuSeW1lvAOCefisWi9mCXM7OzvDx8UHbtm1RUFCA
U6dOsVsM7d+/H4MGDdJIASOBQIAjR44AqFgaM3bsWADAzJkz8e2330IkEiE/Px/Hjx/H9OnTFe5X
JBJh5MiRuHXrFoCKZS7m5ubVrtM+d+4cpk2bBoZhYGhoiFatWiEtLU3qHHXu0QcffIDFixdDIBDg
0aNHNU4tlhz1lRz9LCkpwdixY/Ho0SMAQJs2bdCnTx+4uLggLS0NUVFRuHv3rqK3SmvyoxLwaOF3
sH+vF1pMex8GjSy0HZLG0RRcolMeP34MT09PmfZ27dohLi5Oqb527NiBhQsXyrRPmDBBpuKcphw+
fBgLFy7k3HuUaJ+enh48PT1lCh7JSxQk26smHFxJCNdX1cSmasJTNUniSqLktctLzOQlb9UlfoSQ
ChYWFnj06BFatmyp7VBINV6/fg0nJyeIRCLo6enh5cuXcHBwkDlPLBbDyckJqampaNasGVJSUmSS
sfLycgQGBmL+/PkYMGAAeDwee4xhGMycORPBwcEAgP79+7NVeKv2ocwU3H379uGjjz4CULH12o8/
/sgeGzFiBM6cOQMA6NmzJ27cuFFtXytWrMC6desAVOyrm5iYiL59++Knn35i11WLxWL2dUvGamBg
gKZNmyIrKwvr1q3D/PnzYWxsDIZhpO6DuvdoxowZ7PEFCxZg+/btnK+lsLAQjo6OKCgogLu7u9Ru
BhcvXsTgwYMBAN7e3nj48KHM9cXFxeDz+TVOydYEZafgctEzM0HzD0ei6ah+4NXy4EhdohFQolM0
uQeovIRV1aIb1REKhVi8eLHcX6ikfhCJRIiKikJUVJS2QyGE1FMFBQU4dOgQ7UVazzk6OmLQoEE4
f/48RCIRDh48iGXLlsmcd/nyZXZ0bvLkyZwjgfr6+jh58iTn8/B4PEydOpVNnirXMqpLcu/P2bNn
Sx2bPXs2m4DevHkTcXFxCr93SUxMxNixY/HHH3+wSSYAuSOgQqEQ2dnZCA0NlVqbKZlgAurfo1mz
ZrHHjx49ii1btnDOSDpy5Ai7V+ucOXOkjkkmnJMnT+aMpXJPYV0hEhQjeddxZJy5hlZzJ8DKT3YQ
RhepXxedkDqkySm4dZWACgQCjBw5kpJPQghpIOqigAlR34wZM9jHlclNVQcPHmQfT5kyRaXn6dOn
D7t059WrVyr1ISk6OlqqaFDV9yXDhw+XGs3dt2+fwn07OzvjwIEDUslnTb7//nuFCgNVp6Z75O/v
Dzc3NwAVgw2nT5/m7Kdy+q2xsbHMdGnJQpQnT55kt6xpCEpepiN+xf8Q/802FL/KqPmCeo4SUKJT
NDkCGh8fz9muyQRUJBIhICAAoaGhGuuTEEKI9vj4+GDWrFnaDoMo4P3332ffH8THx+POnTtSxwUC
Af766y8AFftqenl5qfQ8fD6fHUGsumRDFZKjn1VH+YCK0UbJ5PrgwYMKJ1tz5sxRascAY2NjLFiw
QOHz5VHkHs2cOZN9vH//fpnj9+7dY0c5AwICYGNjI3V80KBBbGJ9584d+Pj44Pr162rHXq8wTMWX
jqMpuESnaCoBLSgoYKfcSOLz+Wjbtq1KsXFZunSpxjezJkQbeDwe9PT0wOfzOf+r6rHq/ltTm+QX
V5siXzweT+b7yjbJ/1Z9rOhX5b2r7r+S91iSWCxGTEwMCgoKYGZmBi8vL+jr059tbbK2tsaQIUOU
Gj0i2mNkZIRJkyaxM5D279+Pbt26scdPnz6NwsJCAIrv/SkUChEaGoonT54gPT0daWlpyM7ORnl5
uUZiLi4uxuHDhwEAVlZWGD9+POd5s2bNwoYNG8AwDDIzMxESEiL3XEnVFRviIvm7TFGq3qNp06Zh
+fLlKC8vR1hYGF6+fIkWLVqwx3fv3s0+5krMXV1dsXr1aixfvhwAEBMTg969e8PPzw9BQUEYM2aM
0q+lvjBu3gQt502AtZ9qH5LUN/SXjOgUTSWgCQkJnO0tW7bUWBXU8+fP46effpJ7nMfjwdDQEJaW
ljq3JqGhEYlEKC0thbW1NUaMGCHzKXh1iYJkMlH1MVciUvWralJTNfGpmiRVTZjktSmTrNWU5NV2
VWhCCKkt06dPZxPQY8eO4eeff2b/5lZWv9XT08OkSZOq7ScjIwNbtmzBgQMH8ObNm1qL9/jx43j7
9i2AiqrLQUFBcs+1srJi3xft3btXoQS0Nql7j5o0aYLhw4cjJCQEYrEYBw8eZJPJt2/f4o8//gAA
uLu7w9/fn7OPr7/+GnZ2dli2bBl7b8LDwzFu3Dh4e3tj79698PX1VfEV1j09MxM0nzICTUb1A78B
fQDZcF4JeSfIS0CrTsOoibzpt+3atVM6Ji5v375lq9dxmTx5Mn799VdKPAkhhJBa1LlzZ3h6eiIm
JgZ5eXk4deoUJk2ahLS0NISFhQEABgwYwFkht1JmZib69evH1o7w9/fH7Nmz0blzZzg6OsLMzAym
pqYaGQWV3J7s+fPn+N///qfQdRcvXkRKSgqcnJzUjkEVmrpHs2bNQkhICICKEeuvv/4aPB4Phw4d
YisHc41+Spo9ezYCAgKwdetW7Ny5ExkZFWsmIyMj0atXLxw/fhwjRoxQ9yXXLh6vYhuW6Q1zGxZK
QIlO0dQIaG0noKtWreKc4gsAo0ePxsGDB5WeBkMIIYQQ5c2YMQOff/45gIqkZtKkSThy5AhEIhGA
mqffDh8+nE2sNm7cyFlNVxNTO2NjY3Hz5k0AFXt/Ojs7K3RNUVERxGIxfvvtN6xevVrtOFShqXs0
bNgwODg4IC0tDYmJibh+/Tp69+4tVXxo6tSpNfZjZWWFVatW4auvvsIvv/yClStXQiAQoLi4GLNn
z8aTJ09gYVE/EzvLDm3Rcl4gzFq3qPlkHUXvgIlOqe0puJpIQOPi4rBjxw7OY87OzpR8EkIIIXVo
ypQp7Prp//77DykpKez0WzMzM4wZM0butS9fvkR4eDgAoEuXLpyJlaZIjn5u2LAB4eHhNX7NnTuX
vWb//v1a2bdZk/dIT08P06ZNY7/fv38/rl+/jtjYWAAVxYeUec9naGiIJUuW4OHDhzA0NAQApKen
4/bt2yrHWFuMmtjCdcVcuP/wRYNOPgFKQImO0YUR0C+//JJzigmPx0NwcHC9/cSNEEIIaYjs7e0x
bNgwABXFvb744gt2v+exY8fCzMxM7rU3btxgHytapFCVJLC0tJTdEsbCwgITJ05U6DrJ5T4pKSm4
cOGC0s+tLk3fI8lquH/++Sc2b97Mfi+ZcCvD1dUVo0aNYr9//fq1Sv3UBr6RIZpPex8d934L2166
sz5VHZSAEp2iiX1AxWKx3I2i1U1A79+/j3///Zfz2IcffojevXur1T8hhBBClCe5bcmff/7JPq5p
708jIyP28enTp5Gfny9zzm+//Sb1wbO89xjVOXnyJPseZ+LEiQpvleLu7o4ePXqw3+/du1fp51aX
pu+Rq6sr+35JIBDg77//BlDxWnv27Cn3upSUlGq3wUlLS2Mfd+zYUe55dalx/67w3r8WzScNB9/w
3amuTQko0SmVleGqUiYBTU5ORmlpqUy7lZUV7O3tVY4NANasWcPZbmZmhg0bNqjVNyGEEEJUM3z4
cNjZ2Um1OTg4YMCAAdVe5+fnx1YCLywsxKhRo3Dq1Ck8e/YMR44cQd++fTFr1iyp9Y3yPoiuTk17
f1Zn9uzZ7OO///4bmZmZSj+/OmrjHnHttVvT6OeqVavg6uqKTZs2ITY2FmVlZQCAiIgIzJ07l11f
6+rqqvKer5pi5tYKHj8Hoc2yWTC0tdJqLNpACSjRKZqYgitv/ae6+39GR0fL/YW6aNEiODo6qtU/
IYQQQlRjYGCAyZMnS7VNmjSpxm2mWrRoga+++or9/urVqxg7dixcXV0xefJkXL16FQsWLJDa8/uL
L76An58fnjx5olBsT548wdWrVwEAnTp1UnqbkAkTJsDS0hJAxR6clVN560pt3KPx48ezrwmoKD6k
yF6tiYmJCAoKgoeHB0xNTdG4cWN07tyZTfAtLCwQEhKitT2VDWwaofUXM+C59StYtHfRSgz1ASWg
RGcUFxdzjlwaGhrC1NRU4X7kJaBubm4qxwYAP//8M2e7ubk5vvjiC7X6JoQQQoh6JKfhAjVXv620
evVqrF+/XmbrNHd3d5w5cwbbt2/H4MGDERgYyB67f/8+EhMTFepfsviQsqOfAGBqaiq1j+m+ffuU
7kNdmr5HpqamUutgJ0yYUONgw/vvv48hQ4aw7wlFIhGys7MBAHw+H1OmTEF0dDTat2+v0mtUB89A
H46B78H7t+9gN6i7Rqom6zIewzB5ACxrPJMQLUtLS+McRbS3t2f3eFLEwoULOavUrl27lt3wWFlv
3ryBk5MTZ4L8+eefSy2gJ4QQQojuefv2LR49eoScnBx0796dc9lOQkICEhMT4efnJzPl912gyXs0
Y8YMBAcHA6godFTd+k9JZWVliIuLQ2pqKgoKCuDs7Iy2bdvCyqpup7qW5eThwcSlsOnZCU5zAmDc
tHGdPn99Rgko0RmxsbHw8PCQaXdzc5Nb1ZbLwIEDcenSJZn2P//8E+PHj1cptu+++w4rV66UadfX
10diYqLWNoYmhBBCCNE16enpaNmyJcrKyuDh4YGYmBhth6S0ckExBE+T0chbM3vMNyQ0BZfojNre
A1TVNaBisVhu1bnx48dT8kkIIYQQooTt27ezRYRUmZZcH+ibmVDyKQcloERnyKuAq8yUiqKiIqSm
psq083g8uLq6qhTXhQsXkJKSwnls0aJFKvVJCCGEEPIuKi4uxs6dOwEAJiYmCq/VJbqDElCiMzQx
Avr06VPOPaJatGghs3BeUZLFAyR5enoqvF6BEEIIIYQABw8eZIsHBQQEKD3TjdR/2qlBTIgKNJWA
clF1+m1WVhb++ecfzmM17VdFCCGEEOWUl5dj3759uH//PhiGQYcOHWBoaKjtsIiGMAyDtWvXgs+v
GCOzt7fHrl27tBKLtbU1Ro4cqdROC0QxlIASnSEvAVVmCq68/aZUnX577NgxCIVCmXZjY2NMmTJF
pT4JIeRdIhQK2bVeZmZmWo6G1Ge5ublwc3NDZmamtkMhdUTbuwjo6enB1tYWenp64PF44PP50NPT
g6mpKfz9/ZGUlITCwkJYWVnBy8urxn1l64qzszOmTZtWbz+coQSU6Ax5a0CVGQGVl4CqOgJ6+PBh
zvZRo0bVeblvQsi7JTMzE8+ePYOJiQlsbGxgZ2en8lICbVq/fj1Wr14NAJxLJAgBKmo4dO7cmZJP
UqdEIhHevHnDeSwuLk7q+3PnztVFSAq7ceMGDhw4oO0wOFECSnRGfZuCm5iYiNu3b3MemzZtmtL9
EUJIdYRCITZv3ozQ0FDExsbKvBHn8/lo3749/Pz8MHPmTPTq1atO49u8eTOOHz9e43lWVla4cOFC
HUREGpJ58+bh+fPn2g6DEJ3BteVgfUEJKNEZmqiCq8kpuEePHuVsb9KkCYYMGaJ0f4QQIk9kZCSm
T5+OqKgots3Kygrt27dHZmYmkpOTIRQK8fjxYzx+/BjNmjWr8wQ0OTkZ4eHhNZ5na2tbB9GQhuS/
//7DoUOHtB0GITpl+PDh2g5BLkpAic5Qdw3o27dvkZWVJdOur68PZ2dnpeM5ceIEZ3tAQEC9WQNA
CNF9p06dQmBgIIRCIXg8Hr788kvMmzcPrVq1Ys8Ri8V49OgRzp07h7Nnz0JfX3N/3pOTk3HlyhWk
paVh4cKFsLCwqPGa0NBQ2NjYcB7TZGzvKlV+JrpsxYoVMm36+vrw9PSEu7s7LC0ttRAVacjEYjFb
z6NRo0a4fPkyioqKUF5eDrFYDIZhUFZWhujoaBQUFMDa2hpeXl5s8SRtc3Z2RkBAgLbDkIv+ChCd
oe4aUHnTb52dnZV+Q/T06VOpkQhJEydOVKovQgiRRyAQ4JNPPoFQKISFhQWOHDmCESNGyJzH5/PR
sWNHdOzYEUFBQRpdS3nhwgV2I/ipU6cqlOx07NgRTZo00VgMRJoqPxNddePGDc7lLr/99hvtD0nq
jKq1Qgi3+pGmE6IAdafgyktAVZl+K2/008nJCd27d1e6P0II4bJhwwa8evUKALBs2TLO5JMLj8er
8ZySkhLOKt71nSbiLi0trfa4WCxGUVGR0v1qIraysjKIRCK1+mhI9u3bJ9Pm4+NDySchOowSUKIz
dCEBDQgIUOiNHyGE1CQ3N5fdgsDW1haffPKJ2n0KhUJ888038PX1haWlJSwsLNClSxcEBwfLnJue
no6uXbti/fr1bNvw4cPRtWtXdO3aFUuWLFE7ntqIu9LevXvZWAGguLgY69evR+/evWFubo727dsj
KCgI+fn57DXnz5/HxIkTYWdnB3Nzc7i5uSEkJKTWYxOJRNi6dSuGDh0KKysrmJubY/DgwXj27JnU
dfXpZ1IXioqKcPLkSZn2zz77TAvREEI0hmGYPIaQek4kEjE8Ho8BIPXF4/GY8vJyhfqYMmWKzPUA
mF9++UWpWJKTkzn7AcDcunVLlZdHCCEybt68yf5u+fTTT9XuLzU1lenevTsDgNHX12fat2/P2Nvb
s8+xZMkSqfOTkpLk/q4DwAwbNkzq/EWLFrHH0tPTFY5r9erV7HWaiJur35KSEmbo0KGcr2P27NkM
wzDMyZMnGT09Pc5zrl+/XmuxCYVCJjAwkPN57ezsmJycHPY6ZX8mui4kJETmNZqbmzMCgUDboRFC
1EAjoEQn5OXlca5psrCwULjgj7wR0DZt2igVy99//83Z7ujoiG7duinVFyGEyCP5O0uVmRpVTZ8+
Hbdv30bXrl2RnJyM2NhYZGRksFMcf/zxR0RERLDnt2jRAunp6VIbwUdGRiI9PR3p6ely90HWNGXj
5hIYGIj//vsPS5cuRWRkJKKjozFo0CAAwK+//opvvvkGEydOhJ+fHw4ePIjXr19jx44d7IyW77//
vtZi++CDD3Ds2DGMHj0aR48eRVRUFD766CMAFXu9btu2jT23vvxM6sqZM2dk2kaOHAlTU1MtREMI
0RiGRkCJDnj+/Dnnp71OTk4K92FjY8PZR2JiolKxDBo0iLOfhQsXKvuyCCFEruXLl7O/X/7991+1
+jp37hw7SpeQkCBzfMiQIQwAZvz48TLH9uzZw8aRmpoq9zkkR0C7dOnC9OzZU+Zr1apVMtdVNwKq
TtyS/RoZGcncw9DQUJnRw5KSEqlzOnTowABgXF1day02AMzGjRuljovFYqZZs2YMAGbMmDEy1yv6
M9F1Tk5OMn9rf//9d22HRQhRE1XBJTpB3fWfubm5yMnJkWk3MDBAy5YtFY4jLy8PV65c4Tw2ZswY
hfshhJCaJCUlsY+bN2+uVl+//PILAKBTp06c1Rz79++P0NBQXL9+Xa3nqXTv3j3O9hYtWijVj6bi
/uuvvzBs2DCptsr1lwAwcOBAnDp1CoaGhlLndOnSBdHR0Zx/PzQV25dffolly5ZJtfF4PDg7OyM1
NRUZGRnVXt9QJScnIyUlRaqNx+Nh8ODBWoqIEKIplIASnaDuHqDVbcGizJ6d58+f56xw2KhUJY+w
AAAgAElEQVRRI/Tu3VvhfgghpCaS25i8efOmxvNFIhHS0tIAVCxPaNSoEXssPj4eQMWHbvv375e5
9smTJ+zzlJaWwsjISK3YQ0NDYWtrK9Mub29QeTQVd9XkE5Dej3TAgAEyyWfl89Z2bBs3buRsr5xm
ymhwSx1dwpW4u7u7w87OTgvREEI0iRJQohPU3QO0aiXBSsquqzp79ixn+9ChQ6t9o0IIIcqSXJ/+
/PnzGs9PS0tjRxiXLl3KrlssKytjR1Nv3bqFW7duye2DYRi8evUKrVu3ViNyzewDqo24tREbVU7n
dvPmTZk2f39/LURCCNE0SkCJTlB3Cm5iYiJnuzJvVhiGwfnz5zmPjRo1SuF+CCFEEZIfkMn7EE0R
kiNovXr1Qv/+/as9X3LkVJvqc9z1ObaG4sGDBzJtPXr00EIkhBBNowSU6AR1p+DKe/OmTAXc+/fv
c06D09PTw3vvvadwP4QQogjJdYXHjx/H2rVrVZoaa2RkhNatW+PJkyewsrLC6tWrNRhl7anPcdfn
2BqC8vJyREdHy7T7+vpqIRpCiKbRNixEJ+Tl5XG212UCKm/6bffu3RWeCkwIIYpycnLC6NGjAQAp
KSlS23Eoy93dHUDFtMbS0lKV+xGJRCpfqwpNxV0b6ktsdf0zqQtxcXEoKSmRajM1NUW7du20FBEh
RJMoASU6obam4CqTgJ47d46znUY/CSG1ZcuWLeyo5/r16+VWl63JvHnzAAA5OTnYsGGDUtdaWFiw
j8PDw1V6flWpE3dt02Zs2vyZ1IWYmBiZNk9PT6WKBhJC6i9KQIlOUCcBLSws5Cxjr6enh1atWin0
/Lm5uXL/yHNVVySEEE1wcXHBkiVLAFT8HurZsyfWrVun9KjXkCFDEBgYCADYsGEDNm/eLNOHSCTC
tWvXIBAIpNrd3NzYx8ePH0d5ebkqL0Ul6sTdkGPT5s+kLsTGxsq0eXp6aiESQkhtoASU6AR1ElB5
02+dnJwUrlwbFhYGsVgs0+7g4ABvb2+F+iCEEFWsXbsWP//8M0xNTVFeXo4VK1bA0tISXbp0waxZ
szBnzhz4+/ujY8eO1fazbds29OvXD2VlZVi6dClatmyJYcOGYcaMGRg4cCDs7e3Rp08fmd+33t7e
bPGXY8eOoUWLFpg5cyZ+/vlnuc/l4OAAPp8v92vTpk0Kv35V464L2opNlZ+JLomLi5NpowSUkIaD
ihARnVAbCagy028vXLjA2T506FCF+5BHIBDg999/5zzG5/Ph4OCAVq1awdnZGWZmZmo/X33AMAz2
7NkDoGIvvlmzZmk5IvnCw8PZaozdunWr8U0+IZrG5/Px6aefYuTIkVi0aBGuXLmCoqIihIeHy8zM
sLCwQNeuXTn3Jbazs8OlS5ewdetW/PDDD0hNTUVqaiqAihkhrq6uGDhwIMzNzaWu4/F4OHz4MKZN
m4Zr164hPT0d+/fvx6RJk+TGXNPelcrsbalq3HVBW7Gp8jPRJVwJaOWaW0KI7uMxDJMHwFLbgRBS
nY4dO3JWxHvw4AE6depU7bWbNm1CUFCQTPu8efOwc+dOhZ6/VatWSE5Olmk/evQoPvjgA4X6kCc1
NRXNmzev8TwTExMsWLAAy5Yt0/mNuMvLy9nRZxMTExQVFWk5IvlWrFiBdevWAaj4t/Tll19qOSLy
rhOLxUhKSkJcXByePXsGc3NzNGnSBE5OTvDw8FB4nVxWVhYePXoEKysrtG/fHsbGxtWezzAMXrx4
gWfPnqFp06Zo27ZtjdfUBmXjrkt1HVt9+ZloEsMwMDU1lSlC9Pz5czg7O2spKkKIJtEIKNEJ6oyA
qrsH6JMnTziTTx6Ph4EDByrUhzIMDQ0BAEKhUGqUoLi4GFu2bMGxY8cQGRkJW1tbjT83IaT+4/P5
cHFxgYuLi1r9NG7cGP369VP4fB6Pp5HnVZeycdeluo6tvvxMNCk1NVUm+TQyMkLLli21FBEhRNMo
ASU6QZ0E9Pnz55ztiiagFy9e5Gzv1KkTGjdurFAfysjNzYWpqSnKysqQnp6OyMhIbN++nZ0G/OrV
K8ycORMhISEaf25JO3bswLNnz5Ceno6dO3dqdCN1Pp+PhQsXAvi/hLu+6tatGxurj4+PlqMhhJCG
jetDYxcXF/D5VLaEkIaCElBS74nFYhQUFMi083g8hZIidUdAL126xNk+ePBgha5XlaGhIZycnODk
5IRRo0Zh5syZ2L9/PwDg33//hUAgqNU1oevWrcPr168BAFu3btVo33w+H7/88otG+6wtI0aMwIgR
I7QdBiGEvBPkJaCEkIaDElBS7+Xl5XEWrLCwsKjxE1GhUIiXL19yHlPkD5pYLMaVK1c4jw0aNKjG
6zXpm2++YRNQsViMmJgYdO3atU5jIISo5m1GObJfCvE2vRy56SLkZ5ajIEuEN0lClJcyAA8wseDD
xJJGeUjtMDTmodN75vAeUvfFmpTBteSF1n4S0rBQAkrqvby8PM52RUY/k5KSOPfLs7e3V6gq4cOH
D5GbmyvTbmxszJbAryutWrWCgYEBhEIhAHDGVVVsbCwuXbqE8PBwvHjxAp6enujcuTMCAgJgacld
e2z79u0QCoUoLCxk23bv3i11vwYNGgQPDw/2+1u3buHevXsAAH9/f3Tu3BkikQgnTpxASEgIkpOT
MXHiRCxatAhARQL9v//9D0BFFdzKdnlKS0tx5swZtuqnubk5fH19MXDgQHTv3l3m/Ldv3yI4OBgA
YGNjg6lTp9Z4r27fvo27d+8CAMaMGcOuN+J6bVXJOycpKQl79+5FZGQkBAIBPDw88MEHH8Df37/G
eAAgOjoaV65cQXh4ONLS0uDr64vu3btj1KhR7Chy5f5/H3/8MW3SXk8wDIPXT8rw4kEJXsWVITWu
FIK3sts4VSUsESE/U7n9PQlRxsvHOTA05cO9l6m2Q5ErJSVFpo0SUEIaFkpASb2nzQJE//33H2d7
jx496rzSYFJSEpt8AjWP4G7duhVffPGF1AblN27cAABs2bIFISEhcHV1lblu2bJlMpumf/PNN1Lf
79u3TyoBPXv2rFSlWBcXF4wcORK3bt1iz/Hz82Mfi8ViLF68GEBFFdzqEtDk5GSMGzcOERERUu0h
ISFYtWoV1qxZgxUrVoDH47HHGjVqhK1btyIpKQl8Ph/9+vVDixYt5D4HAHz66acIDw+HhYUFZs+e
Lfe1cSWgVc/x9fXFhg0bsHLlSqkPQK5cuYKdO3di5cqVWLVqldxYGIbB+vXrsXLlSqn9Zyungw8c
OBBHjhzB0qVL2WId8+fPpwRUi8QiBs8flCD+ZjGe3ClGYTYlkqR+irtepHMJaKtWreo+EEJIraEE
lNR72kxA5a3/HDBggELXa9Lly5fZx82aNas2AZ06dSoOHToEoGLvtKFDh8LKygp3797FmTNnEBcX
hy5duuDx48dwdHSUutbb2xvFxcV49OgRm/B26NAB+vr/9+uiuuJLIpFIKvmsHG1WpYDEvXv3MGzY
MGRnZ0NfXx/jx4+Hl5cXXr9+jdOnTyM1NRUrV65EYWGh1Mb2PB4PU6dOxbfffguxWIxDhw7h66+/
lvs8UVFR7H6KkyZNUntt7aJFi7Bjxw4AgLm5OZycnBAXFweGYSAWi7FmzRoMHjyYc/SWYRiMGzcO
p06dAlCxFrhfv37o0qULXr9+jVu3biEsLAw+Pj5SH0gQ7XibXo6H5wsReV6AAko6iQ6wcazfb/24
EtCaPkAkhOiW+v1biBDIn4Jb2xVwhUIhO2JYVf/+/Wu8XpMSExOxZMkS9vulS5dKJYSSTp8+zSaf
EydOxP79+2FkZMQe3717N+bNm4e3b9/ixx9/xObNm6Wur3zNzZo1Y4sQhYWFKbz36L59+5CYmIi+
ffvip59+gre3NwBIjeQpgmEYzJs3D9nZ2TAzM8PFixelErZVq1ZhwIABePToEbZt24bPP/8c9vb2
7PHKBBQADhw4UG0C+uuvv7KPJUc/VXHo0CHExMTA1tYWGzduxPTp06Gvr4/4+HgsWLAAly9fBsMw
2Lp1K2cCevToUTb5tLKywunTp9GnTx+pc44fP47Zs2dzTi8ndSM1vhTXj+TjyZ1iQHaJOiH1UssO
RugZWL+3fk9NTZVpowSUkIaFElBS78kbAVVkDai8BFSRAkT379+XmYoKAJaWllLTSWuLUChEcnIy
fvvtN+zYsYNNxMePH89uC1JVeXk5li1bBqDi/mzbtk0q+QSAuXPn4pdffkFMTAx2796N5cuXw9ra
WmNxJyYmYuzYsfjjjz9gYGDAtis7Anro0CE8fPgQALB48WKZZM3Ozg4rV65EQEAAiouLsXXrVnYa
LFDxIYO/vz9u3LiBJ0+e4NatW5zrdouLi3H48GEAFVvr+Pr6KhVnVTExMWjZsiVCQ0Ph5ubGtrdr
1w4rV65kR7Lj4+Nlri0tLcXy5cvZ73ft2iWTfALAhAkT4OPjg/bt20tNsSa1LymqBNcP5+HFw1Kl
rtMzAJq2MYRNM31YN9WHVVN9mFjyIRYBZSViGJnyYWVPf5JJ7TE04cGmmUHNJ2pRbm4uiouLpdoM
DQ3RpEkTLUVECKkN9NeO1HvqFCFSJwGVV/3W39+/VtfadezYEQKBABkZGVKjhgYGBli0aBG+//57
uaOfISEhePLkCQBg2LBhsLW15Txv8ODBiImJQWFhIcLDwzW6pYyzszMOHDgglXyq4ocffmAff/jh
h5znDBkyhH0sOUW50vTp09kR3QMHDnAmoH/++Sf7IYe6o58AYGpqin/++Ucq+awkOfLO9Sn/6dOn
kZSUBABo2bIlxo8fL/d52rRpA319fUpA60hmshAX9+Ti2b0Shc7XMwCcvY3RposJmrc3RJPWhtDT
59V8ISHvsMpZN5IcHR2l1vgTQnQfJaCk3lNnDag6U3DlJaB9+/at8Vp1PHv2TKbNxMQEERERaN++
fbXXPn78mH3cqVMnuec1b96cfcy13kYdc+bMUajCcHVEIhESEhIAVKyh5CqWBFRsxWNpaYn8/HzO
1xEQEICPP/4YxcXFOHbsGH7++WeYmJhInVM5/dbU1BSTJk1SK24AWLJkCby8vDiPSVYe5tpaKC4u
jn08ZMgQKipUDxTli3DlQB4i/i0EU8Mscr4e0La7CTz7m6FNZ2MYmtCWKoQoQ14CSghpWCgBJfWe
qiOgmZmZUluJVDIxMUHTpk2rvVYoFOLmzZucx2o7Af3iiy/Y0cNff/0VWVlZKC4uxpEjR/Ddd99V
e23l6CdQUc02KCiI8zzJ5EfTCagqxYaqevHiBVtgp7CwUO6IL/B/a0vT0tIgFAqlRl4tLS0xZswY
HDlyBHl5eTh9+jQmTpzIHo+Pj2dHSCdMmKDQqHpNLCws5B6r6VN8yZ8frXnSvkf/CXB+ey6K86vP
PBs10YPviIr9Fc2t6UMDQlRFCSgh7wZKQEm9p2oRInmjn87OzjUmAhEREXLXf/r4+FR7rbrWrFkD
U9OKEvne3t4IDAwEAGzYsAFDhgypdg9JydfMMAznKFtVb968UTNizav6s1OkgJFYLEZ2drbMhwvT
pk3DkSNHAADBwcFSCejevXvZx5qYfquuFy9esI8dHBy0GMm7LT+zHGe25uDp3eqn29q20If/REt4
9TcDX4+mCBKirvT0dJk2SkAJaXgoASX1nqpFiNRZ/3nt2jXO9tpe/1nVhAkTcOLECfz5558QiUSY
MmUKoqKi5L52ySqwa9euRc+ePWt8jmbNmmksXk2RfB1t2rSRqlJbHa41rwMHDkSzZs2QmpqKsLAw
pKamolmzZigrK8OBAwcAAB4eHpzrQ+uajY0N+1jeBy+kdkVdKMS5X3JRViz/wxurpnroP9MKHn1M
weNrL/F8/fo1YmNj2anbtra2sLGxQevWrdGmTRtaN0d0TkZGhkwbfRhHSMNDCSip9zQ9AqpOAtq7
d+8ar9W0HTt24OrVq3jz5g2Sk5Mxf/58dkSvKnd3d4SEhACoqO5a29OFa0u7du3A5/MhFouRnJyM
rl27yqzdVBSfz8eHH36IjRs3snuCBgUF4fTp08jKygJQP0Y/Ael/m1xT0UjtKS4Q48zPOYi9ViT3
HENTHnpNbISuYy2gb6id5C42NhaLFy/GvXv35H44BwDW1tbw8/PD8uXLtfJ7q9L58+cxbtw4zmM8
Hg8WFhZo1KgR7O3t0bVrV/Tp0wfDhg3TyFR+onu4ElCqgEtIw0O/4Um9V9cjoGKxWO76z169elV7
bW1o3Lgxdu7cyX5/9OhRdp/Pqtzd3dnH8pJoXWBsbAxnZ2cAFetxb9++rVZ/U6dOZR9XjnpWjqoa
GRnJrbJb1yT/bYaFhVV77uXLl1FWVlbbIb0TXsWWYve8tGqTT/c+plgU7IieH1hqJfkUiUTYuHEj
fHx8cOHCBfb3opGREbslj+SHNLm5ubhw4QKio6PrPFZJIpEIRUVFnF8CgQDp6elISEjA9evXsXnz
ZowcORKenp44f/68VuMm2sG1JERyRgwhpGGgBJTUe6oWIVI1AX306BFn0mtiYoLOnTtXe21tGTt2
rFSF1kWLFkmtF6w0YMAAtgjO9evXcenSJZWf09DQkH2cnZ2tcj+qGj16NPt4zZo1Cq1nlad9+/bo
0qULgIrCQ0ePHmXvzbhx46SmvmrT2LFj2fseFRWF0NBQzvMOHDiAIUOGSK2NpemWqrlzMh/BSzKQ
/0bEedzCVg+Baxpj/IrGWiswJBQK0bt3b3z11VcoLS0Fj8fDl19+iejoaBQWFiIiIgKxsbEQCAR4
+fIlgoODERgYqNH9fSWVl5fj9u3b+Ouvv+T+G+Xi7++Pixcv4uLFizh37hxOnDiB4OBgLF++XKrq
c1xcHIYPH449e/bUSvwA8PLlS1y8eBEHDx5kZ0IQ7aMRUELeDZSAknpP1W1YuBI0AOzImjzXr1/n
bO/WrZtUUlbXtm3bxhbYyc/Px5QpUyASSb9pdnBwkKqUO2/ePM4/6IqQ3Krm3r17KvWhjtWrV7Pb
xVy7dg0//vijWv1NmzaNfTxnzhw2oa0v02+Bir0/P/roI/b7MWPGYM+ePXj58iWysrJw7NgxTJ48
GdOnT4enp6fUv0d191191wj/H3vnHdbU+fbxbxISQgLIBkEUBMGFuFCKWrfWOtu6d7VVi9a2atU6
WrVSbR3VVv25Z4dWrdXiVlAciDhBhoDKDnuHEZKc94+8nBJzAgkECPB8rovL5NknQs75Pvf93HeZ
HGd/yMK1vXmQM2tPdBkqxGeHWsLdR1C/i3uLnTt34v79+wAUrrX//vsvfvzxR3h4eChFiGaxWGjV
qhVmzZqFkydPIjMzE9OnT9f5erKysuDj44OPPvoIe/bs0bifjY0NhgwZgiFDhuC9997DRx99hFmz
ZmHjxo24cuUKoqOjaXdhuVyO+fPnq02HVVv8/PwwbNgwzJo1C0lJSXUyB0F7MjMzVcqIACUQmh5E
gBL0npqcAS0vL0dycjJjXXUCtCItx9s0hPttZSwsLJQsAvfv32dMy7Jo0SI6Um9cXBw6dOiAffv2
IT4+nhZd2dnZuHLlChYtWoRffvmFcT4vLy/69dq1a/H48WP6vSZRaWuLsbExfv31V/r9smXLMHr0
aISEhKCwsBAAIJFIEB0djV9++QVDhw6t0iV18uTJtGCrSM/Trl079O/fvw6vQnvWrl1Li/+SkhLM
nz8frVu3hrW1NSZPnow//vgDRkZGOHDgAH1OztDQkFhAtSA/Q4ojX6YjIpDZ5ZZvzMZHqy0xbrkl
+MKGvU2mpaVhw4YN9Ps///wTI0eO1Kgvh8PRKF+yvuDq6opr164pnV3/+uuva+X9QGhcMFmjra2t
G2AlBAKhLiFBiAh6TWlpKaOo4PF44PP5avslJiaqWAcBxQ68UCisck51ArSq9Cf1xejRozFz5kwc
P34cgCLS7bBhw5QiuHI4HFy7dg0LFizAmTNnkJubiwULFgAABAIBWCyWUooZdblCly9fjsOHDyMj
IwOJiYno2bMnLC0tIZFI8Ntvv2HMmDF1eKUKxo0bhzNnzmD+/PnIzs6Gv78//P39ASgEeW5urtLD
aVUPqhYWFhgzZgzOnDlDl33yySd6J9zs7Ozw6NEjTJs2DZcuXVKpb9WqFf766y/06NGDvt6q/hYI
yqS8LMPJNZkQ5zFvoji052H8Wiu0sNGP2+M333xDb7j4+Phg+PDhOh1fJBIhICAAoaGhSE5Ohqen
J3r37o1hw4aptJXL5Th+/LiSV0qFy28FDg4OGDp0aI3XY2hoiJ07d6Jbt26Qy+V49OgRTp06hcmT
J6u0lUqluHXrFh48eIDk5GSkp6fD1tYWLi4umDlzJqPl7MmTJwgLC8PLly/psgsXLuD58+f0+1Gj
RsHKyqrWcxG0Iy8vD1KpVKnM2NiYfL8RCE0RiqLyKQJBT0lLS6MAqPxYW1tX2e/69euM/Xr37l1l
v/j4eMZ+HA6HKiws1OWl0SQnJyvNJRaLq2yfm5tLOTg40O2dnZ2p/HzmP+MTJ05Q7u7uFJvNVrkm
Y2NjatiwYdTly5fVzhUeHk716tVLpe/58+eV2q1evZqu+/HHH6u95vLycrq9kZFRte1FIhE1YcIE
yszMjPH/x93dnZo3bx4llUqrHOfff/+l+3C5XCo9Pb3auTW5Nk2vPz8/n25naWlZ5bxyuZx68uQJ
tX//furzzz+n1qxZQ505c4aSSCQURVFUTk4OPZabm1u110GgqKh7YspvZCK1fkgC48/l3TmUtFze
0MtUokWLFvT/87Vr13Q69vnz55XGr/wzdepUqri4WKm9RCJhbFv5Z8SIEUp9/P396boPP/xQ47XN
nDmT7jdo0CCV+u+//54yNzdXuw5jY2Pq5MmTKv1WrVpV7TWEhIToZC6CdsTGxqp8tk5OTg29LAKB
UAfoxxYvgaCGmgYgqun5T3XWT09PTxgbG1fZt6Y4ODho5WJmZmam1r34baZPn47p06ejuLgYL168
wOvXr2FpaQl7e3u4u7srnR9jonPnzggODkZcXByioqLA4/HQoUMHtGnTRqndxo0bsXHjRo2vwcDA
QKtrtrOzw19//QUASEhIQFhYGKRSKezs7ODi4qJxlMRRo0Zp7c6nybVpev2mpqYaz89isdCtWzd0
69aNsb5ykK3qfq8JwMN/CnFlT67isfYtDHgsjF5qAY9BVXtH1DcZGRn0dyCbzdapu/j27duxbNky
UBQFLy8vjB07FkKhEIGBgbhw4QL++OMP5Ofn0x4HgOJ38r333kNZWRkCAwMBKLxKKlz+AaBHjx46
Wd+kSZNoT4+YmBiV+uDgYOTm5qJjx47w8fFBu3btkJ+fj7Nnz+Lly5coKirCggULMGDAACXrZLt2
7fDee+8hIiKCPvvp4+MDU1NTus3b95eazkXQDib327ct0QQCoWlABChBr6nvCLj67H5bGwQCAXr1
6kVHgtUGNpsNNzc3uLm51cHKtKdNmzYqArg58s8//9CvG/vvZ10TcCQPd/8oYKwzseJg0npr2Ls1
XIAxdcTGxtKv7e3tdRYELSEhAatXrwZFUZgyZQqOHz9Ob0Z9+eWXWLNmDfz8/HDx4kU8evSIjv5t
YGCAy5cvIy0tDS1btgSgCM5WkXtYl1QOgpaSkoKSkhKlNDPvv/8+Vq5cqXI238/PD8OHD6dT1Vy5
ckUpANns2bMxe/ZsLFiwAPv27QMA7Nq1S+1GT23mImgHOf9JIDQfSBAigl5T0xygNbWAVkSafJs+
ffpU2Y9A0BUymazaIE9xcXHYtm0bAMXfwueff14fS2t0yGUU/v05W634tHPl4pNddnopPgFlAerk
5KSzcVetWoXS0lLw+Xxs27ZNxRNixYoVtMfH1q1bdTavNjg5OdFBtiiKwqtXr5TqFy5cqDYwXOXz
opU/w5pSn3M1Z3JyclTK9CVFFoFA0C1EgBL0mvp0wS0sLMSLFy8Y64gAJdQXYWFhcHR0xLJlyxAc
HExbBeRyOeLj47Fz5050794dJSUlABQWq+r+HpojsnIKZzdm4eklMWN9u958zN5uCxPLhsntqQmV
04PY29vrZMyysjKcPHkSgMJdtsKSWRkTExO0b98eAPD06VOdzKsthoaGSgHjtHGd79q1K/2aKa2H
LqnPuZo6RIASCM0H4oJL0GvqU4A+ePCA0fLUunVrODg4VDkfgaArXr9+jdTUVGzbto22cgqFQshk
MpSWliq1nTRpEpYsWdIQy9RrykvlOLUuC68flzLWd3tfiJGLLcDm6FcE5LepLDpFIpHG/SQSCR09
3NDQUClHbFxcHP09x+PxaDH6NhVRxBMTE7Vety7Iy8ujo/+yWCy4urpq1K+srIxRyNQF9TlXc4AI
UAKh+UAEKEGvqYkAFYvFjDvRHA4HrVu3VtsvODiYsbxyihMCoa6xt7fH6NGjcefOHdoFvXLaHB6P
h44dO2Lz5s06T8nRFCgTy/HnmkwkvihjrO831RQDP24cuTEri663XVCrYuPGjXSO4K1bt2Lp0qV0
XeWAPoGBgXQwIXWUlpYiMzOz3s/iVd5EdHR0VDr/WYFMJsPly5dx9OhRREVFQSQSITc3t07WU59z
NVeIACUQmg9EgBL0mpoI0Pj4eMZyBweHKqO+qjv/+c4776hfIIGgY9555x1cuHABcrkcb968QWZm
JrKyssDj8dCuXTu0bt0aHI7+uo02JCWFcvy+MgOpMaq5gwHgvYXm6DXOpJ5XVXPatWtHvxaJRCqB
eGpC5e9UFxcXtGrVqto+1Z1JrgsqB5JjCoAWGhqKDz/8kI4I7uLigiFDhsDe3h55eXk4duyYztZS
n3M1Z4gAJRCaD0SAEvQadQLUzEy9BaMm7rcUReHBgweMdcQCSmgI2Gw2XFxclKKBEtQjzpPhtxUZ
SH9drlLHYgNjv7ZElyH6lWalOuzt7SEQCFBcXAyKonDr1i2MGDGiVmNWnO0EgCFDhqD51AcAACAA
SURBVGDv3r21XWadUJGCBQA8PDyU6p4/f47hw4cjNzcXDg4OOHr0KAYPHgwWS+FS/ezZM52Jwvqc
q7nDJEDNzc0bYCUEAqGuIUGICHqNLi2gVQnQqKgoxrkEAoFSkAkCgaB/FOXKcHwZs/jkcIEJ31k1
OvFZwbBhw+jX33zzTa2tkR06dKBfq0s71dA8efIEFy5cAAAYGxsruRADwObNm5GbmwsWi4XAwEAM
GTKEFoS6pj7nau4QCyiB0HwgApSg16gToJWThr+NOgtoVWkM1Fk/e/ToUaXbLoFAaFgKs6Q4tiQd
mQmq4tPAkIXJG6zR3kfQACvTDVu2bKHzfz5//hy//fZbrcZr0aIFOnbsCACIjIzEw4cPtR6jsgDT
deTXkpISLF++nH7/7bffqgSBu3PnDgCFmK7spqwNml6DLuYiaAbTmVoiQAmEpgkRoAS9piYW0JpG
wGWCnP8kEPSXgkwpji7NQHayVKWOy2dh2g/WcOlZuzOTDY2rqyu++OIL+r2vry8OHz5cqzF//vln
AIqjB59++inKypgDNqnD2toahoaGAICHDx/qLBhPWFgYevbsiZs3bwJQuAt/+eWXSm0oiqLni4mJ
QUpKiso44eHh9Gt10YMrn329evUqYxtdzUXQDKa831UdtyEQCI0XIkAJek19ueCqE6De3t7qF0cg
EBqM/Awpji7JQG6qqvg0FLIw40cbtOnCb4CV6Z61a9fSEXHFYjHmzp2LCRMm4MmTJyqpefLy8pCe
nl7leMOGDcPkyZMBKERf9+7dERQUpOTeK5PJcPfuXaxYsQLFxcVK/dlsNjp16kS38/PzQ3Z2drXX
kZOTg+DgYPonKCgIR44cwfLlyzFmzBj06tULkZGRAIB+/frh33//VUohAygsl56engAAqVSK+fPn
4/Hjx5BIJHj48CGmTp2KmTNn0u1DQ0PplDSV6dKlC/36zJkzCAoKUmmjq7kImkEEKIHQfGBRFJUP
QL0/I4HQgLi5uSE2NlalPDo6Gu7u7ox9zM3NGW9kiYmJcHR0VCkvLCyEmZkZ49mq1NRUxkTtBAKh
4chLl+LY0nTkp8tU6vjGbEzfbA17d8MGWFndIRaLsWrVKuzatUvpu4rD4cDNzQ22traIiYlBamqq
Ur+307BUUFBQgEWLFuHEiRN0GZ/PR7t27VBSUoKkpCTaMpqXl6ey6efv74/Ro0fT73k8Hjw9PfHO
O+9g586ddPnFixcxatQoja/TxMQEmzdvxmeffab2rOXt27cxaNAgpc/BwMAAUqkULBYLX331FcrL
y/Hrr78CUGw+rly5EvPmzaPby+VyeHt7IzQ0lC5r27YtDA0NcfHiRXrDUhdzEapHLBbD2NhYqYzP
56OkpKSBVkQgEOoSYgEl6DXaWkDz8/MZxSeXy1U5R1RBaGgoo/hs3bq13onP3bt3w97eHvb29vjh
hx8aejkEQr2TK1Kc+WQSn0YmbMzcYtPkxCcACIVC7Ny5E0FBQfDy8qLPhcpkMkRFReHWrVtK4rN1
69aYMmUK+vTpwzieqakpjh8/jrNnz6J9+/Zgs9koLS1FeHg44uLiUFZWBkdHR0ybNo12t63MqFGj
cODAAfq7WCKRIDQ0VCNLaAUsFgtOTk4YMWIEli5dioMHDyIyMhK+vr5VBvrp378/Tp8+DTs7O7pM
KpWic+fOuH79OrZt26Z0dvTNmzc4ffq00hhsNhtnz57Fe++9R5e9fv0aUVFRkMn++93SxVyE6iHW
TwKheUEsoAS9hs/nM55PKi4uZsyH9/z5c8aotS4uLoiLi2OcY9OmTVi1apVK+cSJE3Hq1KkarLru
+PHHH7Fy5UoAwMqVK7Fp06YGXhGBUH/kiqQ4tiwdBRmq4lPQgo0ZW2xg68xrgJXVP1KplBZM0dHR
YLFYsLW1ha2tLTp37qxRfs/KFBcX48WLF0hOToatrS1at27N6DHyNmKxGJGRkUhNTYWzszPc3NzA
59eP63NpaSkiIiKQlpYGLy8v2NjYKNXLZDLcuXMHFhYW6NSpk9r8ufHx8YiKioKhoSHat28Pe3v7
OpuLwExUVBQdHKsCd3d3REdHN9CKCARCXULCexL0lrKyMkbxyeVy1SZjV3f+s6oIuOqiQPbu3bva
NRIIhPohJ6Ucx5ZloDCLQXyaKSyfNk7NQ3wCCjdQNzc3uLm5YezYsbUeTyAQoFevXujVq5dW/YRC
Iby8vGo9f03g8/no0aOH2noOh4MBAwZUO46Tk1OV9whdzkVghsnbqapYDwQCoXFDBChBb6lJCpaa
CNCQkBDGcm0fxAgEQt2QnawQn0XZquJTaM7GzC22sG7DZehJIBAaAwUFBSplVd3rCQRC44YIUILe
ossIuOoEaHJyMmPofAMDA3Tv3r3aNTZVXrx4gdOnT0MkEsHLywuffvppQy+J0EzJTCjH8a/TIc5V
PadtbKEQn1atifgkEBozxAJKIDQviAAl6C01EaAJCQmM5eoEqDrrZ+fOnSEQNN7k9bUlODgYGzZs
AACVNAgEQn2R/kaCE8szUJzHID4tOZi11QaWrcjvJ4HQ2CEWUAKheUEEKEFvYbohAbq1gJLznwSC
fiKKk+C35RkoKVQVnyZWHMzcor/iUyqhkJ8hRX6GDOI8GcS5Mojz5CgplENSIoekmIKkRI7SIjny
0qWQSgAWWxHF18iUBKdvyvD4LHQbYYyuw42rb9yMKCwsVCkzMTFpgJUQCIT6gAhQgt6iyzOgbdq0
YSyvnAOuMg11/rOoqAjXrl3DgwcP8PjxY7Rq1QpeXl4YMWIEXFxcNB6HoiiEhobi6tWrePPmDZKS
klBeXg5nZ2d06dIF8+bNg1AoVOn3+PFj3LlzB8HBwXTZ8+fPsWPHDvq9iYkJ5s6dq9I3JycH/v7+
ePLkCe3abG1tDWdnZ0yYMAE+Pj5afhqE5kpyVBl+/yYDZWJKpc7UhoNZW21h3rLhb1/5GVKkvZIg
K1GKrKRyZCeVIzdVCjGDxVYTyktlKMhUPedKaFokReSAJ2CjY7/m62XzNkwClFhACYSmS8PfwQkE
NWhrAS0oKEBubq5KubocoBRF4fHjx4xjNURUxzdv3mDUqFGIjIxUKj9+/DgEAgH27dun0TinTp3C
0qVLkZKSolJ3+/ZtAMCWLVtw7tw5FUtvYGAgvv76a6Wye/fu4d69e/R7R0dHJQEql8sxdOhQBAUF
QSqVMq5px44d+Pjjj3H48GGNroHQfIl/Xoo/12SivFRVfJrZcTBziy3M7Or/1iXOlSEpqgzJEWVI
jZEg7VU5ShmsswSCJkTdKSYCtBJM93tiASUQmi5EgBL0Fm0toOqsn46OjmCzVd3aXr58yXjTEwqF
KvnI6ppHjx5hxIgRyMrKAgB06dIF/fr1g4mJCe7evYuHDx9ixowZai25lQkPD0dKSgp4PB58fHzg
5uaGVq1a4fbt27h9+zakUilEIhHmzp2Lp0+fKp3xtLW1Rffu3ZGVlYXExEQAgLW1tVI+wMoJ2QGF
AA0ICAAAODs7o3v37nBzc0NhYSHOnTtHC+EjR45g6NChmDJlSu0+LEKTJfZhCU6vz4JUoio+ze0N
MHOLDVrY1M9tqzBbhvhnpXjzrBQJz8uQK2LeXCEQaoKFPXn8qgxxwSUQmhfkG5Cgt2hrAdU2AJE6
99tu3brVexJxX19fWnwuWbIEW7duBYvFouvj4uIwa9Ys3L9/v9qxWrVqhU2bNmHOnDlKydLXrl2L
169fo127dpDL5YiIiMCDBw/Qr18/us2MGTMwY8YMHDhwAPPmzQMATJgwAbt3765yzg8//BCfffYZ
Bg8erLTuX375BXPmzMHRo0cBAAcPHiQClMBIxC0xzm3OhpzBA9WqtQFm/GQLE8u6+7uUlVOIDyvF
q9BSxIWWICuRCE5C3dCmiyH6TCLupZUpKipSKSMClEBouhABStBbdGUB1ffzn5cuXaLX0qdPH2zb
tk2ljaurK+7cuYM5c+bg2LFjVY63YMECtXVt27ZF3759ERQUBACIjY1VEqA1wcDAAGfPnmWsY7FY
mDlzJi1AY2NjazUXoWny6N9CXPo1F1A1fMK2LRfTf7SB0Ez34rOkUI6YB8V4eb8Erx6VMrr91gQW
GzCx5KCFrQFMLDkQmrEhNONA0IINnhEbPAELhkZscLgsSEoUwYl4fFa9WXcJDQfPiAULB/0MntWQ
MAlQY2MSqIlAaKqQux1Bb9GVBVRbAVrf5z83b95Mv64q3yabzUaHDh1qPd/gwYNpAZqcnFzr8aqj
f//+4HA4kMlk9TIfoXFx+3g+bp9g3mxyaM/D1B9sYGSiu8iwJYVyRN8tRsStYrx5VgqqFsc4DQxZ
sG3Lha0zD1atDWDpyIWVIxctbDhgc1jVD0AgEAAQAUogNDeIACXoLdpaQLVxwZVKpXj27Blj+/oW
oE+ePKFfDx8+vM7nMzD4789eLq/7ICpsNhtsNhsymQwUpRsLE6HxI5dRuLwrF4/9VR88AcDJ0xCT
NljDUFB78VleJsfL+yUIvynGq0eljG6+1cFiAzbOXLTqaAjHDoZo6caDlaMBWGwiNAmE2sJ0BpQI
UAKh6UIEKEFv0dYCqo0LbkREBEpLS1XKzc3NtUp3UlsyMjIgFosBABwOR+nMpi54/fo1bt68CZFI
BJFIhLS0NEREROh0jsqUl5fj6tWriImJQVpaGkQiEbKzs9VGxyU0TyQlcpzZmIW4h6p/gwDg9o4R
xq+xggGv5uKOoigkhJXh+TUxou4UQ1Ki/eaHnQsXTt34cO7KR2sPQ52IYQKBoErFfbAyRIASCE0X
IkAJeouuLKBMAvTRo0eMbXv06KHh6nTDmzdv6NfW1taM0Xprwvnz5/Hrr78iICCgXqyO6enp2LZt
G44dO4aMjIw6n4/QeCnIkuLkmkykvSpnrPccLsToryxq7MKalybF82tiPLtWhPx07UydfBM2XL34
aNfLCG178Ovk3CmBQFCFSYAy5aomEAhNAyJACXqLOgHKZAEtLi5GZmamSjmHw1FKIVKBuvyf9S1A
K+ct1ZVQ3LVrFz7//HMACovurFmzMH78eLRu3Rq2trbYtGkT1q1bp5O5ACAzMxMDBw5EVFQUAKBv
37749NNP0bNnT9jb20MoFEIgEBArKAHJkWU4tS4T4lxm12+fSaYY8omZ1uNKJRSi7xbj6ZUivHla
plVfUxsOOvQVoH0fIzh2MiRnNwmEBoAIUAKheUEEKEFv0cYFV531097eXunMYwXqLKA9e/bUYoW1
p3Xr1vTrzMxMyGSyWqWA8ff3x+LFiwEAbm5uuHHjhooAr5z3UxeMHDmSFp+bN2/GihUrVNpUTs1C
aJ48vVKES7/kQMZk+GQBwz8zR+8PtEu7kPZKgqeXixB+sxilRZqfZzax4qBTfwE6DRTAwd1QqzkJ
BILuYQpCRAQogdB0IQKUoLeoE6BMLrjauN+Wl5cjLCyMsX19C9DKAZLkcjkSExPh7Oxc4/HOnTtH
W1J37NjBaP3VJUlJSXQ04V69ejGKT0LzprxMjsu/5uLZVVULB6CIJPvhKku09xFoNF5ZsRwvAovx
9FIRUmMkGq/DUMhCh34CdBkiRJsuhmRThEDQE+RyOUpKSpTKWCwWBALNvhMIBELjgwhQgl5CURRj
VDyAOTl1YmIiY1smAfrixQuUlam66VlaWjJGzK1LBAIBHBwckJKSAgD4/fffsWbNGsa2sbGxOHTo
UJXj3b17l37t5uZW7fzq3H55PB79Ojs7W2fzAYqHDV2ddSXoN1mJ5TizMQsZb5jPexpbsDF5gzXs
NbBCJkWU4cnlIkTeLtY4XyeLDbj04MNzmBDuPoJaBTXSZ1JTU3Hu3DlERkYiIiICkZGRKCoqgqWl
JaysrODu7o5u3bqhe/fu6N+/v9LfN4HQ0LwtPgHAyMiIbBIRCE0YIkAJeklRURFjihCBQMDoUquN
BbRy2pPK1Pf5zwoWLVqEb775BgCwe/duTJo0Ce3atVNqc+vWLXz00UfIycmpcixDw/8e5I8fP471
69cr1SclJeHy5cv0+5iYGMZxKkcCfvz4sVrX4Mrz/fPPPygoKFCxUB8+fFjp/GdsbCzc3d2rvA5C
4+fRv4W4tjcPUgmzWHRoz8PE76xgYqX+NlSUK0PYdTGeXilCdpLmZ4gtHAzQ9T0hPIcIqxy/KXDs
2DF8+eWXyMvLU6lLTk5GcnIynj17hlOnTgEAXr58qfFmEYFQH5DznwRC86Np35kJjRZtU7BoI0DV
BSDq3r27hqvTLYsWLcLWrVuRnZ2NtLQ09O3bFwsXLkS3bt0QGRmJq1ev4s6dO+BwOJgxYwZOnDih
dixvb2+Eh4cDULjgymQyzJgxA+np6QgICMC2bdtQXFxMt79//z5ycnJgYWGhNE6nTp1gZGSEkpIS
xMXFYfny5fjhhx9gaGioJEa9vLzA4XAgk8lQVFSEMWPG4IsvvoCHhwcePnyI/fv34/bt22Cz2bS1
1d/fnwjQJkxBphQXd+YgNoQ5xQqgiHQ7crEFo0VSJqUQ+7AEz6+IERNSAkrDo50Ghix06i9AtxFC
tO7Mr+nyGw15eXmYNm0aLl26BECRsmL+/Pno0aMHunbtCh6Ph9evXyM2NhY3b97E9evX1XqVEAgN
SeV7UgXNwf3W1dUVqampCAgIgLe3d533IxD0CSJACXqJNuc/Ad0I0IaygBobG+PYsWOYMmUKCgsL
kZGRge+++06pDZvNxv/+978q3WEB4Pvvv8e5c+eQlZWFgoIC+Pn5wc/Pj65v06YNLl68iA0bNuDm
zZtITEyEi4sLPv/8c2zYsIFuZ25ujjVr1mD16tUAgO3bt+OXX36BtbU17O3t6SBOjo6O+Oabb7Bx
40YAwO3bt3H79m2lNfn6+mLs2LEYPnw4AGDZsmU4efIkfv/9d2KJaUJQFIUnF4tw/UAeJMXMVk8D
HgsjFpmj2wjV/H6pMRKE3RDjRYAYxfmaBxRq6cZD9xFCdB4ohKGw+bh2r1mzhhafnTp1wpkzZ9C+
fXulNi4uLhg6dCh8fX0hkUhw584dnecaJhBqS2MSoBERERg6dCgAYMuWLZg2bVqNxyopKUFJSQmj
t1dN+rm5uSkFc2KxWLCysoKTkxOmT5+O8ePHE7dmgt7QfO7WhEaFtgJU3RnQylFmAUAqlaoNQNRQ
FlBAEUn2wYMH6Nq1q0pdhw4dcOHCBXzyySfVjmNra4vAwECVXVETExPMmTMHz58/x7vvvgs/Pz/a
mpyXl4erV6+qjLV8+XL4+fmBz1dYk6RSKUQikcpNb926dfjhhx9gZGSkVN6xY0dcvHgRu3fvxrBh
wzBp0iS67tGjR3j16lW110NoHKS/luDY0gxc3JmrVnxaOhpg7q+2SuIzVyTFnT/ysWduKg4uTMPD
c4UaiU9DIQteY40xb68dPt1thx6jTJqV+AwPD8fevXsBKDaBQkJCVMTn2/B4PAwePBhmZtqnuSEQ
6hImF1x9FaD79++HSCSCSCTCnj17Gno5SqSlpUEkEsHExAStWrUCn89HVFQULly4gIkTJ9ZKLBMI
uoZFUVQ+AOanegKhgbh27RptMavM4MGDcePGDaUyqVQKPp8PmUw16bxYLFa6kYWFhcHT01Olnbm5
ebXnK+uLvLw8PH78GPn5+XBxcUGXLl203rWkKAoxMTGIjIyEo6MjunXrpnKGs7S0FAEBAbC3t4eH
h4fa9C95eXmIjIxEcnIy2rZtC3d3d8ZAUHl5eQgPD0dOTg7eeecdRkvLy5cv8erVK3h5ecHa2lqr
ayLoH0W5MgQezcPTy2KgirhAPUYZY9h8M3D5bOSKpIi+W4yIW8VaRbEFACdPQ3QbYYwO/ZpuQCFN
GDhwIG7dugUA2Lt3L+bPn1/rMaVSKUJDQxEWFoaIiAiYm5vDw8MDPXv2rDI4W3x8PJ4+fQoAGDRo
EFq0aAGpVIoHDx7g+vXrkEgk8PLywoABA1Rc/e/du4eMjAwAik24qoIjhYWF4dWrVxAIBIz3BkLj
JSgoCP3791cq69evH4KCghpoRcyUlpbC3t5eKX93ZGQkOnToUKPxHBwckJqainv37sHHx6fW/UxN
TVFYWIhLly5hxIgRAICcnBysWbMG//vf/wAAV65cIX8/BL2AuOAS9BJtzoCmpKQwik8rKyuVXVR1
AYi6detWg1XWDWZmZhg8eHCtxmCxWHB3d6/yrCWfz8f777+v0Xo0uTmamZmhX79+Vbapbk2ExkFJ
gQwP/i5EyN+FkJSoV57GlhyM+tICJpYc3P+rEC/vFyPtFXNEXHWYWHHgOUyIrsOFsLDXbQ7bxkhW
VhYtPh0dHfHxxx/XesyYmBjMmDEDDx8+VKnjcDj45ptv8O233zLmEL569SoWLFgAQPH9SlEUhgwZ
ovSQDihyMv/999/o3bs3XRYUFIRVq1YBAE6fPo3x48erXeOUKVMQGRmJjz/+mDxANzEaiwvumTNn
kJubiwEDBiAqKgrp6ek4dOgQtm7d2tBLU4uFhQV2796Nf//9F8nJyQgJCSF/PwS9oPn4LBEaFXWV
A1TfIuASCI2JwmwZru/PxY5pqbjze0GV4tOpqyGcPA3h/3M2Dvim4faJfI3FJ4cLdBogwNQfrPHl
7/YY9LEZEZ//T+XI1T4+PrVOqXL79m1069YNDx8+hJmZGRYvXozDhw9jy5YtGDVqFGQyGTZu3Ij+
/fsrRbNm4s2bNxg5ciRyc3PRqlUrjBkzBm3btgWgSBXTv39/OkgaAMyePZv2vDhy5Ijace/cuYPI
yEgAwLx582p1vQT9Q10aFn3jwIEDABRxDWbPng1AEW1eIqnak+Pvv//GxIkT4erqioEDB2Ljxo0o
L6/+u7Cm/d6GxWLB3t4eAPNnHRERge+//x5DhgyBm5sbnJ2dMXjwYJw9e5ZxPF9fX0ycOBEvX76E
RCLB7t27MXbsWLRt2xZjx46l/1aZyMnJwdKlS9GnTx+4ublh6tSpePjwIW7evImJEyfS8STe5uLF
i5g4cSJcXFzg5eWFr776igRVa+QQCyhBL9GFAH37/CcA2lXsbfTJAkog6BOUnELco1I8vVSEl8HV
R6XlGAAyKRD/TDXXbnW09jBEl8FCdBwgAL8ZnenUhtjYWPp1bfMWS6VS+Pr6ori4GG3atMH169eV
UkAtW7YMv/76KxYvXozg4GDs2rULX375pdrx5syZAwcHB1y+fFnpPPu6deuwfv16lJWVYcOGDTh9
+jQAoGXLlhgxYgT8/f1x9epVpKam0g/Klak479qlSxcS9bMJ0hgsoNHR0QgKCoKNjQ3GjRuHbt26
4aeffkJmZiYuXLig1nq/Zs0a+Pn5wdDQED169EBxcTHWr1+PixcvMl53bfsxUVZWRotCDw8PlfoR
I0YgJSUFrq6ucHFxwbNnzxAQEICAgACcPHlSKX4DoIhkn5SUhAULFmDZsmXw9/cHl8tFeXk53rx5
g9u3b+Ply5ewtbVV6hceHo7Ro0cjISEBtra28PT0xL1793D27Fn07dsXAQEBjOmkVq9ejU2bNsHa
2ho9e/ZEfHw8duzYgWvXriEoKAiWlpZafR4E/YDc4Ql6SX5+PmM5kwBVF4DobQsoRVF4/vw5Y9uG
DEBEIOgbMimFV49LcOnXHOyYloo/V2ci+p5mKVFkmqfrBADYunAxeK4ZFv9mj9nbbdF9pDERn1Wg
SwG6b98++sF0zZo1KvmHAeDzzz+Hl5cXAGD9+vUqrrWV8fb2RnBwsEowtXXr1qFz584AgLNnzypt
Gs6dOxcAIJPJcPz4cZUxs7KycObMGQDE+tlUaQwW0IMHDwIAZs2aBS6XC1dXVwwYMECp7m1u3rwJ
Pz8/2NnZ4fHjx7h37x5CQkKQmJgIS0tLWmxVpCirbT8mJBIJfH19UVRUBCcnJ0ahvHjxYsTGxuLl
y5e4fPkyUlJSaAvvrl271I49b948PHr0CEePHkVmZiZevHiBNm3aID8/H4cPH1ZqS1EUZs2ahYSE
BEybNg1JSUm4evUqEhIScPbsWfrZ7O1runLlCn744Qf07t0bsbGxuHjxIiIiIuDr64vIyEjs3Lmz
2s+AoJ8QCyhBL9HGAqqpAI2NjWV02RAKhYwPXrpCJpMhOzsbJSUlJLk2oUHh8/kwNlZOgUJRFIpy
5Eh/LUFKlARJkaVIiihDufo0nrXGzpWLDn0F6PCuAFaOxLVWGyoLQHVRwTXl+vXrABQRcqdPn662
3Zw5cxAaGoq8vDyEhoZi2LBhjO02bdqkdk1Tp07FqlWrQFEUIiMj6e/nUaNGwdbWFunp6Thy5AhW
rlyp1O/IkSOQSCQQCARVrpHQeNF3C6hEIsGxY8cAAJ9++ild/umnnyIwMBDXr19HQkKCyjPH+vXr
ASgiynfq1Ikub9myJfz9/dGyZUukpaWpzFfTfhVcvHgRYWFhSEpKwvnz55GcnIzWrVvjypUrjC77
y5YtU3rPZrMxffp0HD16tMpo9Tk5Obh16xa6dOkCQBGjY8CAATh27JjSUQFAccb76dOnMDc3x759
+5TOk48aNQp+fn70WfLKrFixAgDg5+en9N2ydu1a7NmzB3v37lVKIUdoPBABStBLdCFA33bBVed+
27VrV7DZure4JCYmYvr06bh3757Web4IBF1iZGCJz3r7Q8CzAJvNhoEBFyywQFHQyKpZWzhcwMmT
DzdvI7TzNoKZLbn11JSKM5WA4sxlbah4SLS3t6fTLTHh4uKi1EedAK2Kytbayus2MDDAzJkzsWXL
FsTExODevXvo06cPAMXmyL59+wAAkyZNYgxCR2j86LsFtCK39oABA5Q2qz/88ENYWloiOzsbR44c
wbp16+g6sViMO3fuAADGjRvHOG7Fc0flKPc17VeZ3bt3K70fN24cfv/9d61EfUUUe6b/mwoOHDhA
i88KKtJBlZYq72BWXNPo0aMZN+KZrik3NxdhYWFgsVhwdnZGeno6XcdisSAQLuEh3QAAIABJREFU
CJCZmYm8vDySXqoRQp4CCHpJXZwBra/znxKJBBs2bMCmTZuI8CToBSv6PwKL9d8mCyWrMmuKTrB2
4sK5qyFcehrBydMQXD5xq9UFlR+Aa5NLVy6X0/2Zzl1WpnJ9ZRdgbaiclikzM1Opbu7cudiyZQsA
hcWzQoDeuHGDXqMuUs0Q9JO3xQqgXwJ0//79AIAJEyYgKytLqe6DDz7AwYMHceTIEXz77be0kKq8
yeLg4KDxXDXtV5mNGzfCy8sLN27cwJYtW3Dr1i1kZWUxxsWoICwsDEePHkVkZCREIlGVFtYK7Ozs
VMrUpXOr+N5gCg6pjooNMoqilDbe3iYpKYkI0EYIEaAEvUQbAZqUlMTYtiEEaEZGBsaOHYsHDx7o
bEwCoTYMbrtCSXzWOSzA1IoDY3MOZFIgJ6UcLDZg5chFC1uO1jltCcq4urrSryMiImo8DpvNhpGR
ESQSCcrKqg4YVdkK8rYLt6ZUPv7QqlUrpTp3d3f06dMH9+7dw19//YWdO3dCKBQqBR+qnL6F0LRg
csHVFwEaFxeHwMBAAMDChQuxcOFCxnaJiYm4du0a3nvvPQCKqM+Awr1dm0jVNe1Xme7du2PYsGEY
MmQI7t69i+DgYMyYMQOBgYEq3l5yuRxz587F0aNHYWZmhj59+mDKlCngcDhYvnx5jeZnomKTwcBA
c9lREV1YKBSquAlX5u38woTGARGgBL1EUwGak5ODoqIilXZ8Pl9pxx2oewGampqKd999t1ZWCQJB
1xRLc+p3QgooyJShIFOGN2/9yXH5LFi15sK6DRe2zlzYtOXCti0PxubMu+YEVVxcXCAUCiEWi/Hw
4UMEBgZi4MCBNRrLzc0NoaGhSElJqbJd5Xo3N7cazVXZosJkzZg7dy7u3buHwsJCnDlzBsOGDcOF
CxcAEOtnU4fJAlqVS3h9cvDgQVAUhXfeeUfF3bSCCkv9wYMHaQFaEQFWIpEgPz9fY/fxmvZjgs1m
4+jRo+jatSuCgoKwefNmOu9uBT/99BOOHj2KgQMH4uLFi7TwDw8P16kAbdu2LW7fvq3WYMBEhw4d
ACjckn19fVWe6QiNG+ITRdBLNBWgmp7/TE1NVXH7AgAul6t0yL+m5OTkYPDgwUR8EvSO4MQDkMq0
T4lSF5SXUhDFSBB2XYzr+/Pw+8pMbJ+Ygq0TkvH7Nxm4cTAPEbfEyE4u1yjCY3PE0NBQKVDP119/
XePPyt3dHYDCc6PC8sLEo0eP6Nc1FaCPHz8GoDi7xTTGxIkTYWJiAkDhhnvo0CFIpVIIBAJMmzat
RnMSGgf6ega0vLwcR48eBaA477h3717Gn9WrVwMALly4gIyMDACAs7MzPU5ISIjK2CkpKYyb5zXt
pw43Nzf88MMPAIDvvvsOoaGhSvWXLl0CAHzxxRd1+plX5Fo/f/68isdFdHQ0Nm/erNLHysqKdtlV
l5OU0HghFlCCXqJrAfrs2TPGdh07dqx1IneZTIZJkyYhOjq6ynYsFgs8Hg8CgaBOgh4RCOrYE/YO
Rrf9BVZGruDz+TA3NwObzfn/IEQUZOWApFQOmfY5znVCcZ4crx6V4tWj/ywhPAELLV15sHPlwd6d
B3s3HiwcDIgLLxRRKw8ePIiEhAQ8fvwYn332GXbs2FGt1SglJQXGxsa0VWXevHn47bffIJfLsWfP
HsYk8KWlpXQgIA8PD/Tq1Uvt+PHx8YweJUVFRTh58iQA4KOPPmI82yYUCjFp0iQcPHgQQUFBtHvx
5MmTSfChJo6+ngG9cOEC0tPT4ePjU+VG9cSJE/Hll1+ioKAAx48fx7Jly2BqaooRI0bg8uXL2Lhx
I/r27UsHAXr06BHGjRsHsVgMQDn1SE37VcXixYvx999/486dO5g6dSqePn1Ku9JXuMbfvXsXY8eO
BaBwyz1//jwAxbNYYWEhvTlUU+bMmQM/Pz+IRCKMGjUKa9asAZ/Px40bN7Bt2za4ubnh9evXStFx
AWDLli2YOHEiVq9ejYEDB9JBjipDURS5LzRCiAAl6CWaCtDaBiB6O19dTVizZg1u3Lihtn7OnDnY
uHEjWrZsWeu5CIS6pDhfhoz4cmS8KYcoVoKEsDLkpWmZ2FNHSIopJISVISHsv91yQyELLdvxYO9u
CAd3Hhza82Bq3fxuY3w+H9u3b8f48ePpSLHBwcHYu3cvevToobSpVl5ejqCgIOzZswcXLlzAkydP
6GT0/fr1w8SJE/HXX39h69ataNeuHWbNmkX3zc3NxaRJk2jvkZ07d6oNMgIogrSsXLkSa9euhaGh
IQCF+9yHH36IoqIisFgsfPvtt2r7z507l3Z5rAj2QnJ/Nn2YLKD64IJ74MABANX/DgqFQkyZMgX7
9u3DoUOH6POK69evx40bN3Dnzh106tQJ3t7eiIiIQHh4ONatW4f9+/cjNTVVRTzVtJ862Gw2jhw5
Ak9PT8TFxeGLL77AoUOHACii0j579gw///wzYmNj0bZtW1y7dg15eXlo3bo1EhMTsW7dOixZsqTG
QZEAxYbCb7/9hgkTJuDGjRtKz0yLFi1Cly5dEBISQn9vVDBhwgTMnDkTx48fR9euXTF79mx4enoi
Pz8fISEhePDgAW7evImOHTvWeG2EhqH53bkJjQKmfJ2A7i2gtT3/efv2bfz0009q67dv346vvvqq
VnMQCPWFoAUHTp4cOHn+9/BXkCVFYlgZYkJKEBtSgjKxZrvubA5g786DqTUH+RkyZCWWa9xXHWVi
CvHPyhD/7D9RamzBhoO7ocJK2p4HB3dD8I2bvofBhx9+iJs3b2LOnDmIj49HWFgYfHx8wOVy0bFj
R9jZ2SEuLg7x8fGQyWRqx9mxYwcSExPx4MEDzJ49Gxs2bICnpycyMjLw7NkziMVicDgcfPfdd9We
Ne3Xrx/8/Pywfft2eHt7g8vlIiQkBPn5+WCz2di+fTstfpnw9vZGp06daOunp6cnCT7UDNDHM6Dx
8fG4fv06WrRogYkTJ1bb/pNPPsG+ffsQHR2Nu3fvom/fvvDy8kJAQACmTp2K+Ph4xMfHw9raGsuX
L8d3331HR9d9m5r2qwoXFxds3rwZn3/+OQ4fPowRI0Zg/PjxWLNmDeLj43HixAmcP38eXC4X48eP
x+7du3Ht2jVMmzYN27dvB5vNpiNV15RBgwbhyZMn+OOPP/D06VO0bdsWQ4YMwcCBA7Fz504AYIxm
e+zYMQwePBirV6+mvTEAhYuuh4cH8ZBopLAoisoHULts1gSCDhGLxYyRFvl8vspO6eTJk3Hq1CmV
tocPH8bHH39Mv2/Xrh3i4uJU2t26dQv9+/ev0TqLi4vRqVMnxMfHM9Z/++23dEJpAqEpIJMqrJKR
t4sRcVuskaA04LHQc7Qx+kw2hUxKITO+HBnx5Uh/XY701xJkJZbr3PXXwsEA9u48OLgrrKV2Ltwm
mwamqKgIK1aswMmTJ5GTwxxwysTEBOPHj8esWbPw7rvvqlhOpFIpvv/+e+zevRvZ2dl0OYfDQdeu
XbF79261QnDfvn10AvknT57g6dOnWLFihVK6CmdnZ/z6668YOXJktdezfft2LF26FIAin6Gvr2+1
fQiNmyFDhuDmzZtKZdevX8eQIUMaaEW6JyEhAfn5+fDw8NDKXbSm/bRFJBIhMTERHh4eSvlC09LS
kJOTgw4dOtTp/J999hn27t2LDRs2YO3atWrbZWVlITY2Fs7OzoxpYAiNByJACXqHSCRizEtnY2Oj
lIgYAHx8fBAcHKzS9saNGxg8eDAAhTW1RYsWjOcl8vLyarx7tnz5crU7gqNHj8b58+fJuQRCk6W8
TI7ouyV4drUIb55WH+SIJ2Ch7xRTeH9oCgPef38XchmFzMRypMVJkBan+FcUJ4GkWHdBiFhswLoN
Fy3b8RQ/bjzYtW16ojQtLQ2RkZGIjIwEm82Go6MjHB0d4e7urvGZupSUFERERMDGxgYdOnRQcYl7
m7cFaIVXyevXrxEXF4cuXbpo9aC4adMmrFq1CgKBACKRiDH1FqFp0bdvX9y7d0+p7M6dO+jbt28D
rYhQn2RkZKBdu3YQi8WIjIyscaAzQuOCuOAS9A5N3W8B9S64jo6O9Ovw8HBG8enk5FRj8RkREYGf
f/6Zsc7Ozg5Hjx4l4pPQpOEasuExWAiPwUJkJpTjwdkChN0Qq7VmSoopBBzKx6N/izD0UzN0GiAE
ALA5LNg682DrzIPnUEVbiqKQkyKFKFYCUawEqS8V/0pKaiZKKTmQ8UZxtvX5NUUAD7AAy1YGsHPl
wc6FB9v/TwljYtl4U8LY2dnBzs4OgwYNqvEYDg4OtTrrVUHbtm2rTB7PRHl5OXbt2gVA4d1CxGfz
QB9dcAm654svvgAAvP/++3BycoJcLsfTp0+xdu1aFBQUYPr06UR8NiOIACXoHZoGIJJKpRCJRIxt
KwtQdec/axOAaOnSpZBKmYOz7Nu3jyRGJjQrrNtwMXqJJQZ9bIaH/xQi5FyhWrFYkCHDWb9sPL5Y
hBGLLGDdhqvShsViwbIVF5atuOg8UCFUKTmFrCQpRDESpLwsQ0q0BOmvJTV336WA7CQpspOkiAgs
pouNTNmwbavIVWrjxIVVGy6sW3MhaNF4hWlj4eTJk3Q6GJL7s/lABGjz4MWLFwgICMAvv/yiVM5m
s7Fo0SL4+fk10MoIDQERoAS9Q1MBmpKSArlcrtLOyspKyd3s+fPnjON5enrWaH1XrlzB1atXGes+
+OADjBkzpkbjEgiNHaE5BwM/NkPvj0wQfLoQD/8pRHkpsxCNf1aGffNF8JlkinentVByy2WCxWbB
uo1CGHYZqhClsnIKaa8lSI2WICVagtSYMmQl1i5qb0mBXCXQEQDwTdiwcjSAhT0XFg4GsLA3QAtb
A5hac2BiyQGbQzweasv27dsBKL6bq0r3QmhaNJQAlZTl41HAF8hOC4VcJgHX0BQCE0ewWE3LNV9f
+HZxC3w1ZyTSMoqRnlkMqYyCtQUfLe2EsDBLwdPA2Tqfk8Viw6rlO3DvvggcTtXHCQj1CxGgBL1D
nQB9Ow9VUlISY7u3I+DqUoBSFIVVq1Yx1hkZGWHHjh1aj0kgNDUEphwMnmsG749McPtEPh77F4FS
3SuCXAbc/aMAUUHFGLXEAm08tHvo5HBZcHA3hIO7IbwUKexQJpYjNUai+HlZhtQYCfLT1UeB1ZTS
QjmSIyVIjpSo1LHYgIklB6bWHJhaG8DYnA1BCw4ELdgQmHIgMGPDyJQNQwEbPD4LXD4LXEPykFuZ
wMBA2luFWD+bFw0hQFNeX8SDa/Mhl/03t6QsF+IC5tRuBN3Rgge0qOTlLy0CMorqbr70pFsoLkxE
z0E7624SgtYQAUrQO3SZgkUulyM8PJyxXU1ccP/++2+1OUWXLFmiIn4JhOaM0IyD9z+3QK9xJrix
Pw8xD1Tz/QFAdrIUx5ZkoPeHJhg0p0WtxJmhkA3nbnw4d/vvAbY4X0afJxXFKIIc5aXVXpRWQMmB
gkwZCjJlAFQFKiMsgGvIAo/PAofHAofDAtsAkEsBcb4McikFFpsFIxOFeNVXSiQDsWGyIoDM/T0W
eMhhPhZRHeJSW3oc+RMH7Fug/Tg8PgvdRhij63DVKOoE/aW+BejLp7sRdv+7OhufoH8kvDxNBKie
QQQoQe/Q1AVXnQW08vnP2NhYFBcXq7QxNTWFk5OTVuuiKArr1q1jrLO2tsbKlSu1Go9AaC5YOXIx
+XtrxIaU4MqeXOSmMrvJhvxdiLjQEoxbYQkHd925SwlacODS0wguPf9zzS8Vy/8/8q6ETgmTmaD7
lDBqoYDyUkqti3JFo/LSCmGrr/ABtAIAZGcBQE0/QOP//6ndOEkROeAJ2OjYT1B9Y4JeUJ8CND76
FBGfzRAjIUnZom8QAUrQOzQVoJpYQNW533bp0kXrKLUXLlzAixcvGOu++eYbxtylBALhP9r1NoJz
Nz7unszH3T8LIGfQodlJUhxenI4Bs1qg72RTsNh1c7aSL2TDyZMPJ8//HnTlMgrZyVJkJpQjM75c
8W9iOXJS6lGYEmpN1J1iIkAbEWVlqmmcqkv/UxMKcl7i8a0lOh+XoN8YcI3RY+D2hl4G4S2IACXo
HbU9A1rZAqpOgNbE/XbTpk2M5fb29vjss8+0Ho9AaI4Y8FgYMNMMnfoL8e/2bMYzlZQcCDySj9eP
SzFuhSVa2NTPrYrN+S/QEd6tvB4KeekyZCeXIzdVipxUKXJFUhRkSJGfKUNJAcMBV0KDYWFPHm0a
CzKZTCWiPJvNBperGh27NlAUhdCAxZDLVMWulX0f2LUeBFMzVxjwyEZyU4LF5sDMshN4fPOGXgrh
Lci3NEHv0OUZ0LCwMMY2Xbp00WpNt27dQkhICGPd119/TULGEwhaYt2Gi49/tsWDvwsRcDiP0cKY
EFaGffPTMGaZBdr3aTiLFovNgnlLA5i3ZL5llpfJUZApQ36GDIXZUhTnyVFcIEdxvgzF+YrXJQUy
SEoplJdQkJTKiUW1jmjTxRB9JpH8oY0FJutnXdxPE1/+hZz0xyrlLp0/Rvf+W3Q+H4FAqBoiQAl6
R21dcCtbQHUlQH/++WfGchsbGxKxkUCoISw2C++MN4WrlxH++SkbohhVa2hpkRx/rcuC11hjDJtv
Dg5X/9KdcA3ZsGzFhmUrza02cpni/Gd5GQVpOQW5lIJMqrDUFBfIIc6RwYDHqjfrb1OAZ8SChYNu
LWeEuoXp/Keu3W/lsnK8CPlBpbyFZUd07UtyTxIIDQG5sxH0Dk0EqFgsRm5urkobAwMDtGzZEgCQ
l5fHKFLZbDY6d+6s8XpiY2Ph7+/PWLd48WKlnKMEAkF7rNtwMfcXW9w6lo+7JwsAhrg8oeeLkBwp
wfi1VmotkY0JNocFQyELhsKGXgmB0HDUhwU0IeY0iotSVMq7v/sT2ByeTuciEAiaob+x3QnNFnUu
uJXPgKqzftrb24PD4QBQb/10cXGBUKj5U98vv/wCuVz1jJdQKISvr6/G4xAIBPWwOSwMmmOGmVts
YGrNYWwjipVg/2ciRN9TjWxNIBAaH/VhAY15ukulrGWbobCy99bpPAQCQXOIACXoHZpYQNUFINL1
+c+ioiIcP36csW7OnDkwNycH2wkEXeLkycf8fS3h7sPsWVAmpvDXuixc358LuayqFCYEAkHfqWsL
aEbKXRTkxqiUd+hJouESCA0JEaAEvaM2FlBNUrB4enpqvJbffvuNURCzWCwsXrxY43EIBILmGJmw
MWm9Nd5baA62Gm/b4NOFOLYsA4XZ+pwjk0AgVEVdW0BfvziqUmZh2x2Wdl46m4NAIGgPEaAEvaM2
FtDKAYjCw8MZ22hjAd2zZw9j+ciRI+Hq6qrxOAQCQXt6jTPBnB22MLNjdslNelGG/QtEiH+u+hBL
IBD0n7rMAVouKUTKm8sq5S6d5+hkfAKBUHOIACXoHZpYQJOTkxnbVAhQiqLw4sULxjaaCtDg4GC1
InbRokUajUEgEGqHvbsh5v1PvUuuOE+OE8szcP8v5o0rAoGgv9SlC25y3HmVvJ8GXGM4uo7VyfgE
BUeOHIFAIMDo0aMbeimERgQRoAS9Qi6XQywWq5SzWCwYG/+XIFqdBbRVq1YAgNevXzOOY2xsDCcn
J43WcvDgQcZyV1dXDBs2TKMxCARC7eEbK1xyh3xqBhbDXYuSAzcO5OGvdZkoE6sGDGvKXLx4EUKh
EEKhEDNnzmzo5TQ6yOfXsNSlC25S7DmVslauY8Ax0C5yfUREBOzt7WFvb4/ff/9dJ2trSkilUpSU
lDBuJhAI6iAClKBXFBUVgaJUA4sIhUKw2f/9ulbngqvOctm5c2ewWNXnESwsLMSpU6cY6xYsWKDR
GAQCQbf4TDTFrG02MLZgvnVF3yvBgYVpyIhXzSfaVJFKpSguLkZxcTF5AKwB5PNrWOrKBVdSmoeM
lLsq5W3cxms91v79+yESiSASidQeyyEQCNrR+JOpEZoUmpz/BKoXoLWNgPvnn38yWlB5PB5mzZql
0RjaEh4ejvv37wNQXO+UKVPqZJ6mTmhoKJ48eQIA8Pb21iroVF1BURT2798PQJGrdu7cuQ28osZL
6858zNvbEmc3ZiEhTPXhNSdFikOfp2PUVxbwGESSbDZHpFIpQkNDIRKJIBQKMXz48IZeEkENdSVA
U+OvgKKUA5QZGlnB2r6PVuOUlpbixIkT9Pv79+8jKioKHTp0qPUaCYTmDBGgBL1Ck/Ofubm5jOKQ
z+fD2toagHoLqIeHh0brOHr0KGP5Bx98ACsrK43G0Jbly5fjypUr9PsePXrAzc2tTuZqypw/fx5+
fn4AgB9//FEvBKhMJsOCBQsAAEZGRkSA1hJjcw5m/GSDm4fyEHxa9TujvJTCuU3ZSI4sw7D55uBw
icdCcyIrKws+Pj4AgDFjxhABqsfUlQAVxV9VKXNwfh8sNnNAM3WcOXMGubm5GDBgAKKiopCeno5D
hw5h69attV4jgdCcIS64BL1CEwuougBEFec/gdpZQGNiYhAcHMxY98knn1TbvyYkJCTg2rVrSmWH
Dh2qk7kIhKYAm8PC0HnmmPCtFXgCZoEZer4IR5ekIz9DWs+rIxAImlAXQYjksnKkJQaqlNs7j9B6
rAMHDgAAfH19MXv2bADA8ePHIZEwu/kHBgZi4sSJ2LhxIwDA398fc+bMQbt27TBw4EBs3rwZMplq
6qia9gOA/Px8LF++HH379oWTkxPGjh2LS5cuabS+J0+eYMmSJfDw8ED37t3x448/qp0nOzsbS5cu
hY+PD9q3b4/p06fj4cOHaj45AqFqiAWUoFeoE6CVLaDVud+WlJQgLi6OsY0mFtBjx44xlrdp0waD
Bw+utn9NOHToEORy5eApx48fh5+fHwwMyJ+pNnh7e2PhwoUAgO7du9fZPC9evMDp06chEong5eWF
Tz/9VG1bNptNr4nH49XZmpojHfoJYOPMxV/rspCZUK5SnxItwf4FafjgG0u4emkXfKQpkJWVBX9/
fwBA+/bt4e3tDUCx6XXs2DFERUXB0NAQXbt2xSeffKIU7I0JsViMEydOICoqComJiTAzM4OjoyMc
HR3x3nvvKaXCYkIkEiEgIAChoaFITk6Gp6cnevfuXWVgN6ZrkMvlOHfuHK5fvw6RSIT169ejS5cu
OH78OPLy8ui+SUlJSh4tDg4OGDp0aJVrrG5uoOafH0GZurCAZqWFQFpepFTGMRDAxvFdrcaJjo5G
UFAQbGxsMG7cOHTr1g0//fQTMjMzceHCBYwfr3qe9M2bNzh9+jRyc3PRpk0bOrAVl8tFXFwcbt26
hZs3b+LSpUvgcrm17hcdHY3Ro0fj1atX6NWrF9zd3REQEIB///0Xu3btgq+vr9r1eXt7Y8yYMSgp
KQGPx4NEIsHTp0+Rl5eHTZs2KfV7+fIlRo4ciVevXsHR0REdOnTAjRs3cPr0afTt21erz5VAAABQ
FJVPEQh6wtmzZykAKj/jxo2j2+zdu5exzYwZMyiKoqhHjx4x1js4OFQ7v1wupxwdHRn7r127tk6u
WSqVUg4ODhQAisvlKs157ty5OpmTUHv2799P/z/5+vo29HKaPWXFMuqMXya1fkiC2p+Aw7mUTCpv
6KXqlH/++Yf+PZw4caJK/cOHD+n6hQsXUnK5nNqwYQPF4XBUvuPatm1LvXz5Uu1c/v7+lI2NDeP3
IwBq3759Va71/PnzVIsWLRj7Tp06lSouLmbs9/Y15OTkUH369FHqf+nSJUoikahdW8XPiBEjGuzz
I6jy888/q3yOX375Za3GDAv+nvprl6XSzx3/qVqPs3TpUgoA9fXXX9NlAwcOpABQw4cPZ+xz6NAh
CgDVsmVLysTEhNq+fTuVmJhISSQS6uTJkxSfz6cAUAcPHtRJP29vbwoAderUKbosNjaWMjU1pUxN
Tanc3FzGeRwcHCg+n0/NmDGDCg0NpUpKSv6PvfMOi+Jq//53lyK9FwHBAgioIKJCsCGoWKPYNUos
ESNPEkviT2M0lthiYu/GkmASH0VjB7tY0YAFlaYoTSmK9F52z/sH786zy84su7DIqudzXXNdu3PK
3Gd2dmbuc+5CFi9eTAAQbW1tIhAIJNr16tWLACDffPMNEQr/dw89ePAgMTIyIgBI//79FTvBlI8a
aoJLUSnk8QGtbwWUK/+nPKuf169f5+y/qYIPhYeHIyMjAwAwbtw4eHl5MWVcqWAoFIokmtp8jP7B
DIO+Mgafw2jg5qEi/LXwDUry2E3MPga+/vprLF26FAKBAE5OTsyKHlCbvkrkq1yX58+fY+LEiXjz
5g0MDQ0xduxYbNq0CevWrcOMGTPQvn17mdHBN27ciICAABQWFqJ79+5YtWoVNm3ahOHDhwMADh06
hLFjx9YrPyEEI0eOxO3btwEAdnZ2cHd3h4aGBng8HgYNGgRfX1+mvoWFBQYNGsRsXbt2les8cdHQ
80dhpylWQF+/vC61z8pOMeulqqoqxhpK3LpF9PnSpUtIS0vjbF9ZWYnz589j3rx5sLW1hYaGBsaP
H89cH5s3b250uxMnTuDu3bvo3bs3xo0bx+x3cHDAxIkTUVRUhEOHDrEeJyMjA5MmTcLBgwfRrVs3
aGlpMS5G5eXlEu9BV69exa1bt2BmZob169dL/M8DAwOlVkspFHmgtn0UlUIeH9DGpGCpj7/++ot1
f69evWBvb19v+4Ygio4KADNnzkRSUhL+/fdfAMD58+fx6tUrCf9WWRBCcOzYMVy7do3JhWpjYwNb
W1vY2dkhMDAQhoaGTdYeAF6/fo0rV67gyZMnePz4MYRCIdzc3ODq6op+/frByspKrrEAtdfDxYsX
kZCQgPj4eLx8+RJWVlZo06YNWrduja5du8Lb21uiTWRkJOOX0qtXL3Tr1o1zrNHR0bhw4QJSUlLw
8uVLVFdXo23btnBzc8PMmTOhqysdRfX+/fu4efOmhJ/wo0ePJF4M9PXa8SK3AAAgAElEQVT1JQIN
CYVCbN26FUBtFNyvv/6aKTt//jwSExMBAEOHDoWjo6PMcyIUCrF9+3YIhUJYWVlh/PjxUnUqKysR
FhaG6OhoREdHQ09PD127dkX//v2lzteHhmeAPqzba+LYqrcoypFWNFMfVWLPl1kI+N4U9l0/LpPc
kydPIiMjAx06dMBvv/2Gnj1rI4LGxcVh4MCByMjIQEREBF68eCF1vzt69CgzQbhp0yZMmzZNqv+6
bgQi0tLSsHjxYhBCMHHiRBw8eJBxLZg7dy6WLFmC1atXIywsDPfu3eP8z4rkyMnJwfjx4zF//nyp
uufOnUN2djZzn/nkk09w6tQpOc+QbBpz/ijsKFsBraooQP6bGKn9lnZ+CvVz4sQJvH37Fn379pW4
J48aNQqmpqbIzc3F77//juXLl7O29/DwYAJhiTNixAhs3rwZT58+hVAolEgvp2i7a9euAQA6d+6M
169fS9Rv2bIlgNqYFmx07twZe/bskdjXpk0btGjRApWVlRL5WUXBEYcMGcLqQqKmVhvYiaanoygE
oSa4FBVi9erVrGZT33//PVPHz8+Ptc7Zs2cJIYQMHDiQtTwkJETmsSsqKjjNw3bv3t0k43358iVj
yuXk5EQIIaS4uJjo6+szx165cqVcfSUnJxNXV1eZ5mcxMTFN1p4QQkJDQ4mJiQlne0NDQ3Lw4EG5
xnP69GnGNJlrq2tORwhhzIgAkHXr1rH2ffjw4Xr7trKyInfv3pVq++uvv9Zr5mdrayvRprq6minT
1taWKPv999+ZshkzZtR7XsLCwpj6K1askCpPTU0lXbt2ZZWLx+ORn376ScKE6kOltKCG/PX9a5km
uZf3vf8muYqYkAIgXl5eUmZ5hBAyZ84cpk5YWJhU+aRJk5jy1NRUhWT87LPPCACipaVFMjMzpcqL
ioqInp4eAUDGjx9f7xgGDhxIampqOI+XlZXF1B0+fLhM2d7V+aOw88MPP0jdp1avXt3g/jKSw6XM
b8NCuijcj+g9Y8eOHSQnJ0dimzFjBgFA7OzspExVRSauXOaoT58+Zcb58uXLRrUbNGhQvc+iUaNG
KSSfjo4OAUASExOZfaNHjyYAyKJFi1jbiNxRBgwYwFpOobBBV0ApKoUyTHAbmoIlPDwchYWFUvs1
NTUlzFuUyYEDB5iIcyLTHj09PUycOJFZGT1w4AAWL14sc3axoqICo0aNYsbu4OAAHx8ftGvXDllZ
WXj06BGzqtoU7QFg1qxZzIyqhoYGfHx80KVLF6ipqeHBgwe4fv06CgsL8fnnn+PSpUs4ePCgXH0B
gLGxMZPTs6SkBKmpqZyRiuXhyZMnyMjIgKamJnr06IH27dujVatWuH79Oq5fv46amhpkZWXhiy++
wMOHDyWCPlhaWsLDwwNv375Feno6AMDc3Fwi+Ipo9lkexowZg6+//hqlpaUIDQ3F1q1boa3NvTIn
isqopqaG6dOnS5RFRUVhyJAhyM3Nhbq6OsaMGQNXV1dkZmYyqzdLly5FSUkJ1q1bJ7eM7yM6hmr4
bI05bh4qwrWQwtrXsTrcPlyElIcVGPWDKUysNaQrfGC0bNkSJ06cgJGRkVSZjY0N8zk3N1dm+bJl
y7Bnzx65VqoqKytx+PBhALWppdgsIPT19eHs7Ix79+7h4cOHMvtzcXFBaGgos+ryLmnM+aOww7YC
2phAbW8ybkvts7D1UaiP58+fIyIiAgDw1VdfMQHk6pKeno6LFy9i0KBBcvct/hxXJGAVWztRJN6h
Q4dyWg3UZ1EjD5mZmQAk38MolMZCFVCKSiGPAiorDUteXh5zsxRHTU2t3sTR//3vf1n3Dx48GMbG
xjLbNgShUMikWtHU1JTwMQ0KCmIU0JSUFFy5cgX9+/fn7OvmzZuIiak1O3J3d2d9iSsvL5cy91FW
+3PnzjEKo5mZGY4dOwYfH8mHflRUFEaOHInMzEz8+eefGD58OGsUwfDwcAnlc8CAATh8+DBMTEwk
6hFCkJ2dzSpPfbRq1Qpr167F9OnTYWFhwez/8ccfkZycDEdHRwiFQsTFxTE+NiICAwMRGBiIvXv3
YubMmQCAsWPHYseOHQ2SRU9PD6NGjcKff/6JoqIinDhxAp999hlr3ezsbCYi5+DBgyVMswkhmDVr
FnJzc6Grq4tLly5JmNsuW7YM/fr1w5MnT7Bt2zZ89913EmP/EOHxeOgzyRC2HVvg+Jq3KM2XNhHN
fFqFPV9mY8g3xujs/2FHMB09ejSnCbysSQ8AmD59OjZt2oTq6mqEhITgzp07WL58OcaMGSMxQVOX
58+fM6a5mpqajDJaF9FEnGhShws/Pz8Jl4x3SWPOH4UdZZvg5rApoDY9Fepj3759IITA29ubM3Xb
5cuX8eLFC+zbt08hBVT0zDIyMmKdyFCknYuLC65evQo7OztOU2BlYGlpCQB48+ZNkx2D8vFBgxBR
VIr6fEDfvn2L8vJyqXIdHR2YmJhwBiBycHCQmVuspKSEebGvC5cy0FguXLjAvGyNHDkSZmZmTFm3
bt3g7u7OfK8vGJG4wjhp0iTWOtra2pwP9sa0r66uxrx585jve/fulVI+AcDT01PCx3b+/PlSv2VF
RQW++eYb5nuPHj1w7tw5KeUTqFUuFPEnFWfWrFn4/vvvWRWwdu3aSYSVT0pKatAxFEF88kE8ZURd
fv/9d9TU1Oa0rJv25c8//2R+x3nz5kn5epqbm2Pp0qUAaicTtmzZogzR3wvaumvhyz1WaNuF/R5Q
XUFw6tc8hC7PQWn+xxugSBZOTk4ICQlhVqeePXuGzz77DO3atcPu3bs58yKK+6BFRERg4sSJrJvo
2q2oqEBOTk7TD4iiEihTAa2uKkZhbpzUfnNr+RXQ6upq5h68d+9e7N69m3VbvHgxAOD06dMKKWaR
kZEAgC5dusjdhqudaNUzLCxMwmdT2bRt2xYAOK2gRDEMKBRFoAooRaWobwW0qSLgnjlzhlWx1dXV
xbBhw2S2bSgiU0pAWpmou+/kyZMyzbrETXn++ecfVFdL50OURWPanzlzBk+fPgVQq7yJolqy4evr
yyjWaWlpOHbsmET52bNnkZyczHxfvXp1s5jaied75VpxVya+vr6ws7MDAFy5coX1mIQQZsXc2toa
Q4cOlSj/9ddfmc+BgYGsxxk4cCDzWWRi9rGgZ6yGyT+bw2+6IXgcT77E2+XYFZSF+Jtl71a494SJ
Eyfi3r17+PTTT5l9r169QnBwMLy8vFhXL8XdGuzt7eHj41PvxhXMiPLhoUwFNDf7HgiRvHZ0DdpA
W0/+icrTp0/j9evX6NGjBzp27MhZb9y4cTAwMEB1dTWrO8mjR49w9epViX15eXmMdc/ChQtZ+1Wk
3eTJk+Hm5ob09HTMnz+fsSIQhxAW3wMFEQW6u3PnDs6cOcPsr66uxtdff80E2FPGsSgfD1QBpagU
9SmgssxvAW4FtL4IuKGhoaz7R4wYAR0dHZltG0J2djZzI7e3t4efn3SEvkmTJjHHrqysxJ9//snZ
34ABAxgzuLt378LDwwM3b96UW57GtE9ISGA+9+/fn9NMV/xYbG0ByZlUR0dH9O3bVy4ZlI0oQifA
HdlTmfD5fEZpFAqFrL/11atX8eLFCwDAtGnTJBRzgUDATALo6elx+v3o6+sz1gT1mTp+iPD4PPSa
aIhpmy1hbMXugVJWKMSxn94idEUOinPpamhdXF1dcfr0acTGxmL69OmMb1pMTAwGDBggtRLq7OzM
fO7fvz+uXbtW7yYy+aN8+LCtnDdYAc2SXqEzs/JiqcmNaGJY5F7Bha6uLiZOnAgAzMSgOFVVVfD3
98fYsWOxe/du/PLLL+jZsydSUlIwYsQIicnAhrZTV1fH/v37YWpqih07dsDLywsrV67Evn378M03
36B79+6YPHmyQuNnw8vLCyNGjABQGwV4wIABCAgIgJmZGU6dOoUffvgBAI2CS1EMqoBSVIqGKqD1
rYDKmsksLi5mwozXhS3FhTIQN6WcMWMG641blGtPBNtDToSjo6OED0hsbCz69OkDT09PHD9+vN6Z
yca0FzexEw/EwYV4nboh4kVKFFBrNv0uSE5Oxt69e/HTTz8hODgYI0eOlGkG21R8/vnnzGdR/jlx
RC9GPB5PIsULUOsnLFq1Likpgbq6OtTU1Fg3kZl7VlaWwivlHwqtXFpg5u6WcOsvnWZHROKtcuz8
IhP3zhSDCOnMfl06duyI/fv34/bt28x/+tmzZ/jnn38k6on73t+6deudykhRfZS5Avo2O0pqnyIK
aGpqKi5dugRDQ0O5Ag+K8mYmJiZKXdvdu3dHWFgY7ty5g+DgYCxcuBDp6emYO3eu1H+kMe26deuG
J0+eYMSIEYiNjcXSpUsRFBSE3bt3o7y8XGFTXy6OHDnCjPfy5cs4c+YMnJ2dER4eLneaOApFHBqE
iKJS1OcDWt8KaFyctP8HIHsF9MyZM6z+EwYGBpyzlI2BECLh0/nkyRPMmTOHta54bq/Y2FjcvXtX
IvG5OD/88APMzc2xcOFC5OfnAwCio6MxevRouLu7Y9++fTKTsDe0/fPnz5nP1tbWMkYuXUe8LQBm
hQ/4n99JU3Hq1Cls27YNV69eVQnTofbt28Pb2xt37tzB06dPcefOHcaPMzc3FydOnABQu4pU99yI
my0D8q3aCoVC5ObmKhSx90OihQ4fAQtN0b6HNsI256G8SPqcVZYShG/Nx4PwEgz5xgStOjQ8OMqH
ire3NxYsWMDcw+paNRgaGqJDhw6Ij49HfHw8oqKi4Onp2aQyiU/oUX9S1UZZCighQuS9fiC1XxEF
tE2bNqxmrFx069ZN5rNj4MCBePXqFVJTU1FQUIBOnTpJWNcoq52VlRVOnjyJmpoaJCYmQiAQwMXF
hTWa8PTp06Wip4tTWlrKur9FixbYu3cvtm7diri4ONjb2zPBGV1dXVndiCgUWVAFlKJSNEYBzcrK
Ql5enlRZixYtZIYi55qNHD58eKOi8XFx5coVCYXh0KFDcrfdt28fpwIK1PqNjh07Flu2bMGuXbsY
BTYmJga9e/dGaGioTJ/WhrQ3NDRkPpeV1e87V1JSwnyuGwVQPCgQW0ocZbF9+3Ym2JGxsTGmTJmC
MWPGwM7ODpaWlli7dm2TRhXkYsqUKUx6mZCQEEYBPXjwIGOqxvagFz9vDg4OEv7FsjA1NW2syO89
HXrroHWnFji7OQ9PI6X9wAEg+3k1Dsx5jU5+OvCbbgQjy4/v0SkQCDj9scUtV0S+zOJs2rQJAwcO
BCEEQUFBiIqKapJ7qwhzc3O0aNEClZWViIqKQn5+fpNEMqc0HmWlYSnOT0JNdYnEPnUNPegbt2+w
bMqiTZs276Sdurp6ve5GjUVbW5sz5QuFogjUBJeiUjTGB5TL/NbZ2ZnzxamsrAznzp1jLRM3f1Um
ovQqQO3MYbdu3WRu4srzkSNHJBQ4NoyMjLBs2TKkp6djw4YN0NWtNTMsLy9HUFAQ5zluaPv27f/3
gM/IyKh3/OJ1xNsCkuZ6dVdHlcXZs2cxe/Zs5viPHj3Cpk2b0LNnT9ja2kJTU1NmWommZPz48Uy0
5iNHjjAr8yKF0tzcHAEBAVLtnJ2dGd/btLQ0eHl5oW/fvvVuzTVOVUPXWA3jV5hj9GJT6BpxPxZj
r5Zhx7RMXN6bj7Kij8s/dOjQoQgODsaDBw+YVR+hUIhbt25h06ZNAGrz/7L5bfv7+2PChAkAgMeP
H8PDwwM3btyQWKkXCAS4desWFi5cKNdEliz4fD7jdiEQCLB69Wqam1NFUZYPaG72Pal9JpYe1C+R
QlFRqAJKUSm4zD9EUVobooDKmhEMDw9njX6rr68Pf3//+sRVmJycHJw6dQpArd9qTEwMoqOjZW6R
kZHMjHBJSQlnHr26aGpq4ttvv8XDhw+Z9tnZ2cwKm7LaiyuRdU1B2RBXLGUpoLGxsawr2o3lxIkT
zAv05s2bGf9hVcDIyIgJ9lBQUICTJ0/i9u3bjFnj1KlTWZVGLS0txiy3urpa7t+YIknHvrr4zwFr
uA/k9g0VVAORocXYOjkTEb8XoKLk44jYWlRUhN27d6Nr167Q1dWFu7s7bGxs0Lt3b0a527ZtG6fv
9p49e5hAW/Hx8fDx8YGuri7c3Nzg6OgIXV1d9O7dG7/88otSfJNXrFjBfN6wYQOsra3h6enJ6e5A
aR6UZYKb9/q+1D7TlnSljkJRVT4+OyKKylJSUsLqu6ajo8OsYCpbARX51dVl6NChMvOGNpQ//viD
mfH94osv6o0YCwBmZmYICAhgIvXu27ePCQYgD46Ojhg+fDiT8iQzM1Mhmetr7+PjAz6fD6FQiDNn
ziAnJwfm5uasfeXn50ukXundu7dEub+/P/T19VFcXIzS0lKsXr0aGzZsUEje+hAPFlFXAWaDy8dH
3ExMmasrU6ZMwZEjRwDUmuGKRwSV9bsHBAQw52rFihXw9fWls/8NQFufj+HzTdFliB7Obc1D9gt2
ZaiqnODmoSJEnSpGt0/14TlCD/pmH+4jddy4caiqqsLDhw9RXl6OR48eMWWurq5Ys2aNTPN+AwMD
HDx4EAEBAVi8eDGePXuGiooKPHnyhKlja2uLPn36KMU8d9iwYdi7dy/mz5+PwsJCVFVVITo6Wq7/
POXdoSwT3FwWBdTEUjpmQUlRGh5EfIv8t08gFFZDQ0MP2no24HHlZlIQM/Vq7N3QC9pa1bj6z5Am
b/c+weOrwaylJ1y6fQd1DeVnF6C8X/AIIYUADJpbEAolKyuLNYiNpaUlsrOzkZeXx+qzpq2tjbKy
MnzyySesiZJPnz4tkbdORHV1NczNzVl9DY8ePYoxY8Y0cCTcODk54dmzZ1BTU0Nqaqrc0eMuXbok
sSL75MkTCcU6PT0dtra2nApHr169cPv2bQDAgwcPpCLjNbb9zJkzGTPROXPmYPPmzaz9zJ8/n1GS
xo0bxyha4vz6669YsGABgNqZ8EOHDmHUqFGs/RFCpGResmQJVq9eDQBYt24d05cINzc35qV36dKl
EislQG2u2c8++4xRVCdMmID//ve/Use+desWo0A7ODggMTGR09S7pqaGWbkUXa9cCAQC2NraIisr
C2pqatDU1ER5eTl8fHxw7do1znYlJSVwcXFhJmnWr1+P7777jrM+pX6IkOBBeAkiQgpRViB7pZOv
BnT01cEnow1g5aD4C/T7Qn5+Pp4/f46MjAzo6+vD0dFR5r2Di7KyMsTGxuLVq1ewtLSEnZ1dk1gj
lJaWIj4+HpmZmWjbti3at2/fJJOLlIbh4uIikX4LqF0hF7eGqQ9BTTlO/NYGhEiaxQ+fnogW2mYA
AKGgCrH//oynD7cBaP6gcx8zdu3HwGvA7uYWg9LMUBNcisrA5dtYn/mtKAVAfHw8azlXCparV6+y
Kp9aWloYPHhwvfIqyrVr15i0I4MHD1YodHndyKd1U7IsW7YMjo6OWLduHeLj45lV1vv37+PLL79k
lEdHR0e4urpK9d/Y9qtWrWKCEW3ZsgVTpkzBs2fPQAiBUChEYmIiAgMDGeVTW1sbv/76K+tY586d
y+QOrKysxOjRo/HVV1/h0qVLyMnJQUpKCq5cuYJ58+bJjOrLhXgQp82bN2PJkiV4+vQpbty4geXL
l6NDhw6IjIxk6kRGRrKaAnfs2BHa2toAas2KFyxYwMzmKxJJsS5qamqYNGkS04/IRLy+KIN6enrY
tm0b833+/Pn49NNP8e+//zJ+u1VVVUhMTMTWrVtZczZSJOHxeeg6TB/fhFij10QDqGtyK1lCAfDk
chn2Bmfjt+AsRJ0sRvkH6CdqbGyM7t27IyAgAP369YOdnV2DVtp1dHTg6emJUaNGMf7XTYGuri66
d++OESNGwM3NjSqfKoYyfEAL3sZKKZ86+q0Y5bO6qhjXT43C04dbQZXP5udl0gmViDxPaV6oAkpR
GRqTAzQ9PZ21vY6ODmc6Dy7z2wEDBjCBd5SJeGRSRUOW83g8idDpf/75p5Tp0osXL/D999+jY8eO
0NHRgZmZGbp168YEPdLX18epU6c4w7k3pr2FhQUuXrzI+H8dPHgQTk5OMDQ0hIGBAVxcXPDXX38B
AFq3bo1z586xRssEagOZREREwM/Pj9m3c+dO+Pv7w8LCAu3atUP//v2xefNmiTQ18rJy5UqYmdW+
mBQVFWH16tVwdnaGj48PVqxYAVNTU0RERKBfv34AaleH7e3tsXTpUol+jI2NsWTJEub7xo0boaen
B2tra3h5KZb8vC5TpkyROtbo0aPrbRcQEIBjx44xlgJnz57FJ598AgMDA5iamkJLSwsuLi6YM2cO
Ll++TF8C5KSFDh9+040w+09reAboQa2e2E3Zz6txfkc+Nk7IwJGlOYi5UIKywg9PGaVQGosyTHDz
3zyS2mds7g4AEAgqcevsBLzNutswASlKR0fPhrqHUKgCSlEdGhMBl2v108XFhfVGRwjBmTNnWNuM
HDlSHnEVIjc3l0n3YmNjg6FDhyrcx7Rp0xgTz9zcXJw8eZIpGzFiBAYOHAgdnVq/CoFAwPgl8vl8
TJ48GY8fP+Y0a2psewDw9PTEw4cPERQUxKQ8EPlyAoCJiQmCgoLw5MkT+Pj4yBxry5YtcenSJfz0
00/MCnddnJ2d8dlnn8nshw1LS0tERERIpbPR19fH9OnT8ejRI/Tp0werV69mVnULCgpw4cIFqb4W
LFiA1atXM6sqNTU1yMrKkisPpyw6deoksbobGBgo98rN6NGjERsbi7Fjx0qkucnLy2MUTicnJ8yc
OVOunHSU/6FnooZBX5ngm4PW6PZp/YqooBp4eqccp9fnYcO4DPwx7zWuHSxAysMKVFd8HMGLKBRZ
KGMFND8nRmqfsUWtAhpzczHeZkm75lCaB40Whujmx+6iQ/m4oD6gFJXh7NmzrL6aQ4YMQVhYGJYu
XYqVK1dKlS9atAimpqaYP3++VNnnn3+OkJAQqf3R0dGsydDV1NSQnZ3NrJC9b1RVVSEhIQEZGRko
Li5mfJ7q5ttsqvbipKen4/Hjx9DU1ESnTp1Y/XvlJTs7G/fv30dlZSWsrKzg4ODAGehIXgghePbs
GeLj42Fra4suXbpI+XBWVFTg6tWrsLa2hqurK6ePZ0FBAeLj4/Hq1Su0a9cOTk5OzMRJc5OWlobH
jx+jpqYGLVu2hL29vUTeUErDKc0XIPpMMe6dLkFZoWIKJV8NsGynCYu2GrBoowHzNhowaqkOfVM1
tNChc8OUjwNDQ0Op/N+FhYVM7m95uHi4DwpzJSehe396FCBC3Dw7XroBTw12jqNg2rIb9Azb0YA4
7wgeTw0GJk7Q0FSNZyOleaHT3xSVoaE+oK1atcK9e9I5wABu/09RKpS69OjR471VPoFa06XOnTuj
c+fOzdJeHDs7O04zW0Vp2bJlg1aNZcHj8eDk5AQnJyfOOlpaWhgypP6IhEZGRujRo4cyxVMarVu3
RuvWrZtbjA8SXWM19P3cCL0mGOLJlVLcDytB5lP5/GqFAiArqQpZSdL1NbR40DNWA48PlBcLQYQE
fHUeDM3VoKXHPglCeb/Q0uWhe4A+2nT+uH1SG2uCKxBUoijvqdR+AxNnRByXvnfz+OroNeRvtGzd
TzFBKRSKUqEKKEVlaIwJLtsqJ8CtgJ4+fZp1//Dhw+sTk0KhUCRQ1+Shy2A9dBmsh5y0asRcKMHj
y6UozW+YmW11BUF+Vk2dveT/R+JtfI5MimqQGFmOL7Zawtqp8Wln3lcaa4JblJcoFYBIW9cKL58d
Q1nxS6n67j1XUeWTQlEBqAJKURkaqoDa2Nhw+oB26NBBal9aWppE7jlxRowYIY+oFAqFwop5aw0M
mGmM/jOM8DK+Ek8jy/E0shx5GXUVSsrHDhECsRFlH60CWl1dLRUITUNDQ6EANQU50s9yQ9MOSHy4
TWq/uXUPOLjJn0ObQqE0HVQBpagM9SmgL19Kz2aKYDPf1dXVRZs2baT2nz17lrUPZ2dnODo6yiEp
hUKhyIbH58GukxbsOmlhwExjvH1ZjbTHlUh/UoG0J5UoekOj4lIAfdOP16RaGRFwC3LjpPYJhTWo
qqibOosH995rFeqbQqE0HVQBpagMsnxAi4qKWMs1NTWRnZ3N2o4rAi6XAjps2DAFpKVQKBT5MbPV
gJmtBroOrfVpL35bgzep1cyWl1GD4rc1KM4VQECtbD8K7Dq1QLfhes0tRrPBpoAqGgG38K20AlrI
opTaOgTAyIzdJYdCobx7qAJKURlkrYA2xPyWzf+ztLQUERERrPXZIvBSKBRKU6Bvpg59M3XYd9OW
KisvEqCsSIiaaoKc1GoU5wqgpgGY2miAx6f58z4EWujyYO2o+VH/nspIwcK2AlpZ/lZqn3PXuQr1
S6FQmhaqgFJUBlkKaEZGBmuZjY0N4uKkH0AAuwJ6+fJl1llXY2Nj9OzZUwFpKRQKpWnQNlCDtkGt
aaZlW8VMEimU94XGmuCWlWSiurJQYh+PxwchksG/LFr1adDq5+vXrzknrMXp2rXrB+2+QwjB0aNH
IRQK4ejoKJGjmkJpKFQBpagMDVkBbdWqlUIroOHh4ax1Bw0axJnjkUKhUCgUinJprAlu3dyfAKSU
TwCw7zRdMcH+P3FxcZg4cWK99bZu3fpBK6DXrl3D+PG1+VSdnZ2RkJDQzBJRPgSoAkpRGWT5gHJF
rbWxseH06VREAVV2jkkKhUKhUCjcNNYEl00BlepP2wzWbQYqJBcbX375JaytrVnLvLy8Gt2/KvPb
b78xnxMTE3Hr1i306tVLZpvXr18jKysL9vb2TCBJCkUcqoBSVIaGrIDq6upyRsC1s7OT2Pf48WPW
fvh8PgYNGtQAiSkUCoVCoTSExq6AFuUl1lvHznEU+GoaCsnFxsyZM+Hh4dHoft433r59i+PHjwMA
eDweCCHYt2+fTAU0OzsbVlZWAICoqCh07979nchKeb/gN7cAFB99GOoAACAASURBVIqIhviA1tSw
59ZzdnaWioB77tw51rpeXl4wNTVVQFIKhUKhUCiNobE+oIW5ciigTmMVkokiycGDB1FVVYWOHTsy
edKPHj2KoqKiZpaM8r5DFVCKytAQBZTLbLdDhw5S+7gU0CFDhsgpIYVCoVAoFGXQmBVQQoQozn8m
s46uvh1MLLo0SLaG8uLFC/j7+8Pf3x85OTlIS0vD//3f/6Fjx45wc3Nj6tXU1ODixYsIDg5G586d
YWJiAh0dHXTo0AHLli1DaWkpa/8FBQVYvHgxOnToAB0dHZiYmMDNzQ0TJkyQKdeePXswYMAAGBsb
o1WrVggICMDjx4/rHc/evXsBAEFBQQgKCgIAlJWV4dChQ6z1ly9fLiHLN998w5yPffv21Xs8yscD
NcGlqAyyfEC5THDfvHnDur+uAlpUVITIyEjWuoMHD1ZASgqFQqFQKI2lMT6gpUVpEAgqZNZp5TC8
QXI1huLiYly6dAkAkJWVhfHjxyMxsXal1tnZmakXGxuLgQNrfVMtLCzg5OSE+Ph4JCQk4KeffkJC
QgJCQ0Ml+q6oqICvry9iYmLA5/PRqVMnVFZWIi4uDi9fvmSVp7y8HFOnTkVoaCj09fXh6uqK7Oxs
nDp1CpcvX8bx48fh7+/P2vbmzZtITEyElpYWAgMDYWRkBFtbW7x8+RL79u3DrFmzpNrExMTg+vXr
zPd///2X+dyly7udDKCoNlQBpagMXAqopqYm3r6VzuvF5/ORmprK2sbFxUXi+5UrV1BdLZ3d3cLC
QiX8Op4+fYro6GjEx8cjLi4O8fHxyM3NhYmJCUxNTWFlZYXOnTvDw8MDHh4esLW1bW6RVRZCCBM0
QV1dHV988UUzS0ShvBsSExMRHR3N3EPi4uKQn58PU1NTmJiYwMLCAu7u7vD09ET37t3RsmXL5hYZ
QG1+5r/++gsAYGBgUG/k0devX+PkyZMAahWWzz//HHw+Neh636iokFYg5VVA5fH/tG7bvJPLn3/+
OaqqqrBt2zYEBARIuAVpa2tj9uzZCA4OZhTTqqoqLF68GOvXr8fRo0eRlpaG1q1bM20OHz6MmJgY
6OrqIikpifGzLCsr44xM+/PPPyM0NBTe3t44ffo0zMzMAABr1qzB4sWLMXv2bMTHx7P+f0Srn6NH
j4aJiQkAYPr06VixYgXu37+PmJgYuLu7S7Q5ceIEsrKyYGNjAwC4e/cuPD09G3T+KB84hJBCQqE0
MyUlJQSA1KatrU2Sk5NZy1q2bEmMjY1Zy549eybRf1BQEGu9wMDAZhpxLWVlZeTbb78lfD6fVT6u
7cGDB80qtypTXV0tcf1QKB86ZWVlZO7cuQrfR2JiYppbdEIIIa9evWJkatOmjcy6FRUVxNvbm6m/
d+/edyQlRdkcOXJE6pocN26cXG0T7m0iodtNObdT+9oToVDQKPmuXLnCyKWnp0cMDQ2lths3bki0
efjwIdPGzMyMPH/+XKFjpqamMu0vXLggUbZo0SICgPTu3VuuvjIyMoiOjg4BQB4+fChRVlNTQ2xt
bQkAcvr0aam2eXl5REtLiwAg165dY/anp6cz95mvvvqK9bhZWVnMGKKiouSSlfLxQVdAKSpBQ/w/
LSwsWH0YWrRogXbt2knsu3jxImsfzWl+e/v2bUybNg1JSUnMPktLS3Tp0gXu7u4wNDRESkoKUlJS
EBMTg5ycnGaTlUKhqCZc9xF3d3d06dIFhoaGSE1NRXJystR9RCiUzpmo6syaNQt37twBAMyePRsz
ZsxoZokoDaUxPqBF9fh/tmzdDzye8lbF9fT0WGVTV+d+jf77779hb2+v0HFat24NLS0tVFRUoKCg
QKLM398fa9euxa1bt7Bjxw4EBwfLXPkPDw9HWVkZcz8QR01NDW5ubnj58iUePXqETz/9VKL8r7/+
QkVFBZycnODj48Pst7W1xaBBgxAeHo6///4b69evh5aWlkJjpFAAaoJLUREa4v+pp6fHut/JyQlq
amrM98TERKSlpUnV4/P5GDBgQAOkbTzXr1+Hn58f8wJoZGSEP/74g4kyVxehUIjo6GiEhYUhPDxc
KsKvKhMbG4ujR48iKysL3bt3ZwIZNBV8Ph9fffUVAMUiKlIo7xt17yOGhob4/fffMXLkSNb6hBBE
R0fj3LlzCA8Pb1Kz1Z07d+L58+fIzs7Grl27YGho2Og+N27ciD/++AMA0L9/f2zYsKHRfVKaj0Yp
oHlPZZa3tOvXIJm4CAsLU9hdp64rEBePHz/Gs2fPkJWVhTdv3rC6CwGAj48PPDw88ODBA3z99dfY
vXs35s6di88//xwaGtKpZp49q1XSy8vL0b9/f6nyuLg4AEB6erpUmciNhW2CJygoCOHh4SgoKMCx
Y8cwefJkucZJoYhDFVCKStCQFVBxJVOcujf9CxcusNbz8PBg/CHeJQKBALNnz2ZeGjt37ozjx49L
rdqKw+fz4eXlBS8vL/z000/vSlSlcOfOHUZmtoeksuHz+di+fXuTH4dCaU7q3kfc3Nxw/PhxmSsu
PB4Pnp6e8PT0xLJly5pUvtWrVyMzMxMAsGXLlkb3d/78eSxYsAAA4ODggNDQUJmrTxTVp6EKKCEE
RflJMutY2vrILFcFDh06hF9++QWPHj0CAGhpacHe3p75TxNCJOrzeDxERkZi2bJlWL9+PWJjYzFj
xgysXr0a+/btg5+fn0R9kWJZVFSEK1eucMpR17rq7t27iI2NBVA7yVXX0kw8/d2+ffuoAkppEPTu
TVEJZCmgXCugbBH0AOkIuFzmt6IIdO+aPXv2MDd0NTU1hIaGylQ+KRQKpS5s9xFFzf3eF54+fYoJ
EyZAIBDAwMAAp0+fhrGxcXOLRWkkDVVAy0syIKgp4yw3MuuEFtrvfnJZEXbu3ImvvvoKurq6WLt2
LXx8fNC1a1doampCW1sbFRUVrJZOLVq0wM8//4xJkyZh8+bNCAkJQUpKCgYOHIh79+6hc+fOTN1W
rVoBALy9vTmzALAhWv0EgLNnz8qse+PGDSQlJcHR0VHu/ikUgCqgFBWhIQpoYWEh635xBbSqqkoi
JLg4zaGA5ufn48cff2S+T5o0Ce3bt1f6cW7cuIH79+/jyZMnePHiBdq2bQtXV1d4eHjA19dXZluh
UIitW7cCqPVv+frrrwHUrricOHECp06dQlpaGiwtLdG9e3d8/fXX0NHRkern/v37uHnzJuOvBQCP
Hj3C5s2bme/6+vqsUWrz8vJw9uxZPHjwAK9evUJWVhbMzc3Rtm1bjB07Fj169FBY/qYYY10qKysR
FhaG6OhoREdHQ09PD127dkX//v3h7e0ts21kZCSioqIAAL169UK3bt0gEAhw7NgxRp6JEydKjYcQ
gmPHjuHatWtITk5GaWkpbGxsYGtrCzs7OwQGBirF/JGiOtS9j3z22WdwcnJS+nEacj3v2LED1dXV
Em4Ve/bskXCZGDBgADp27CiXDAUFBRg+fDgKCwvB5/Nx6NAhuU0bGzKG3Nxc/PnnnwBqV5yCg4Pr
NeWPi4tjUm/4+vpKKAEAmLQVSUlJSE9Ph6GhIWxtbdGqVSv06tULffv2lXs8HxINVUDr8/+0sOnd
YJneBdXV1Zg/fz4A4ODBgxg1apTCfbi6umL//v0IDg7GsGHD8Pr1axw8eFDCLF30LnT//n1UVFTI
5atZVFSEI0eOAAD2798v5TsqIicnB4MHDwYhBAcOHMDatWsVHgPlI4fQKLgUFeDw4cOsURrHjh0r
EfFQfDMyMmLdHxcXx/R79epV1jr6+vqkurr6nY/zzJkzjAx8Pp8kJSUptf+cnBwycuRImZEvhwwZ
QrKysjj7YIsi++zZM+Lq6sran6OjI3nx4oVUP7/++mu9UThtbW0l2ggEAuLn50fU1dVltps2bZpC
8jfVGMVJTU0lXbt2ZW3P4/HITz/9RIRCIWf7xYsXM/XXrVtHcnNzSY8ePST6mTNnjkSb5ORkTplF
m6pEOqUoj7r3kbpRv5VBQ69nXV3dev/3+/fvl2jDFQW3pqaG+Pv7S/wvmnoMAoGAiQ4KgPzzzz/1
Hkd0z+XxeFL39FWrVpEWLVpwnouAgACFxvQhsWzZMqnzsXz58nrbPYvZLTMCbkZyuFLkE4+Ce//+
fbnaiEfBTU9PZ63z77//MnVevXolVS6KPnvo0CG5jrlgwQICgHTq1Elif3JyMnPtbdiwQa6+du7c
SQCQtm3bynxeEUKIr68vAWozEoi/T719+5YZ35EjR+Q6LuXjg66AUlSChviA1o0QB9SuZjk4ODDf
RbPSdfH19W0W/yHxSJWtW7eWkLWxxMTEYPDgwcjOzgYAtGnTBr169YKTkxOeP3+O27dv4/nz5wgP
D4erqyvOnj0LLy+vevt99uwZPvnkE+Tn54PH48HOzg7l5eV48+YNM6b//Oc/OH/+vEQ7S0tLeHh4
4O3bt4wvirm5uUQO07p5CIVCIa5evQoAaNu2LTw8PNC+fXsUFxfjxIkTzLXw+++/Y8CAAfXmC5SX
ho5RRFRUFIYMGYLc3Fyoq6tjzJgxcHV1RWZmJk6ePImMjAwsXboUJSUlWLduXb3yCAQCfPrpp4zZ
lIWFBfT09CSCxlRUVGDUqFF48uQJgFq/OB8fH7Rr1w5ZWVl49OiRRBJwyodD3fuIss3fGnM9u7u7
o7y8HE+ePGGCqbi5uUncb+X1vZ8/fz7jQjF58mTGB7Qpx8Dn8zF16lSsXLkSAHDgwAGZK1SZmZk4
c+YMAMDPz0/inn7kyBEsWbIEAKCjo4MePXqgR48eqKmpQUpKCm7duiX3eD5EmmYFlAcza24LGVVA
X1+f+XzgwAHGmqGsrAwrVqxgzsvTp5KBls6dO4dOnTpJ5QEXxbkQ5RMV0bZtWyxatAjLly/H0qVL
4ezsjCFDhkjUqa6uxps3b5i8neLBh+oLdjhjxgxEREQgOzsbYWFhTBBFU1NTGBoaorCwEGFhYRg3
blz9J4Xy8UHoCihFBdi4cSPr7PDs2bOJpqZmvTPqos3JyUmi327durHW2759e7OMMzg4mJHB19dX
af0KhULi5eXF9B0YGEjKy8sl6lRVVUkc383NjdTU1Ej1Jb46qKGhQdq3b8/M1D99+pQQQkhlZSXZ
v38/4fF4TN2EhARW2X777Temzn/+8x+Z46iuriajRo0ily5dkpp9FQqFZOrUqUxffn5+nH2I6siz
AtrYMQqFQtKlSxcCgOjq6pLIyEiJ8jdv3jCrlNra2uT169esMomvgNrb2xMApG/fvhL52wSC/+W1
u3jxIlPf3d2dtc+ysjJSUVHBWkZ5f5k1a1aT3EcIUd71bG1tzcj45s0bmcdkWwHdv38/s8/T01Pq
ftaUY0hJSWH+92pqaiQzM5PzWCtWrOBc7RG3YDhx4gRr+/z8fLnH9aExb948qWfzxo0b620XcfxT
ztXPi4f7Kk0+8RXQNm3aEGdnZ9bNy8uLaSPPCqhAICDdu3dn6nXp0oV8+umnxNTUlFhaWpKBAwcS
AMTGxobs2rWLue+PHz+eqKmpET8/PzJ37lyycOFC4uzsTAAQHR0dqVyfhNTmzR0yZAhzLB8fHzJ3
7lwyb9480qNHD6KlpUUmT55MCCEkOjqaACDq6uoyr3kR5eXlxMTEhAAgw4YNkygTv0d5e3uTFStW
kIsXL8p97ikfPlQBpagE4g9x8Y3tAQWAMVGpu40YMYLpMzc3lzMxu0jJeNf079+fkUGWGamihISE
MP127txZZt0+ffowdXfu3ClVLq6cibZFixax9uXj41PvC5YiCmh9iJtU1zXfZZNfHgW0sWMUP/dL
lixh7ePo0aNMnR9++IG1jrgCCoCMGjWKVFVVsdYlhJB169YxdX/99VfOepQPj379+jXJfYQQ5V3P
jVFAb926xUw8Wltbk4yMjHc+BvFzzGX6W1NTQ1q1akUAEAsLC1JZWcmUCYVCoqOjQwAQAwMDickj
Si3iE6KibceOHfW2O7XfmVMBfXDje6XJJ66AytqMjY2ZNvIooITUTnL07NmTqauhoUFGjx5NXr9+
TbKysoiZmRkBas26Rdf/rl27iLe3N3NdiTYvLy9y+/ZtmWPZvXs3sbGxkWino6NDunfvzrwHzJw5
kwAgI0eOlPsczZ49m5moETcnLigoIKNGjZI43qpVq+Tul/Lh03RJwCgUBeDKAyoe7lscroAw4sEp
rl69yppovXXr1k0S+Ecenj9/LiGHsli/fj3zed68eTLrfvvtt6ztuAgMDMSaNWtYy8SjbnKZSisT
Hx8fJv0OV3CqhtCYMf76668S/bAhHvAqIiKiXnnatm2LkJAQmWlrxIO6/PPPP5y54ygfHuL3kTZt
2ii176a4nhWhqqoK48ePZ6KcDxo0CNbW1gr1oYwxiAdH+/3331n7CAsLY+5DU6dOlQhWxOPxoKur
C6A2sEtYWJgCI/g4aIgJblVlISrLczjLzVrW71YiL35+fiC1CzUyt7y8PKaNu7s7s7+uqaw4bdq0
wc2bN5GUlIRbt24xOTUtLCzQsmVLZGRkIDIyErm5ucz1P2vWLERGRqK4uBjx8fG4ceMGMjIycPfu
XZmB+QDgyy+/xKtXr5CTk4Pr16/j2bNnKC4uRlRUFIKDgwHUBgsjhOD48eNyn6MtW7aAEIKamhrG
jBeozUn8zz//4OXLl4iIiEBiYiIWLlwod7+UDx+qgFJUAi4fUK6Xai7fBHEF9PLly6x12BIyvyvE
lYbS0lKl9CkUCpmE0wDg7+8vs/6AAQOYz6mpqaioqOCsq6mpiT179nCWGxgYMJ9JnZxlTQGfz2f8
IJV1vMaMUSAQMH46enp6nL54+vr6TD9sSb/rMnPmTIlrhY0BAwYwCurdu3fh4eGBmzdv1ts35f1H
3IeMa/KuITTV9awImpqaWL58OfP9wIED2LZtm9ztlTWGUaNGMaleEhMTJaJ5i9i9ezeA2udRUFCQ
VPnQoUMl+vv+++85n3UfIw1RQIvryf9pauXZKJneJTweDw4ODujZs6fUpLqmpia8vb1Z0w3x+Xy4
uLigd+/eCk/OmJmZoU+fPnB0dJSIKdBUtGrVCn379oWTkxPN20uRgCqgFJWA66HMpRyxPbgA1VdA
xQNUiK9iNIa0tDTmfKirq8PS0lJmfR0dHRgZGQGoVV5lyaGmpgZtbW3O8vqCFDSG6upqnD17Fhs3
bsSCBQsQGBiIIUOGcK6KN5TGjDElJYWZJCkpKYG6ujrU1NRYt6KiIgBAVlZWvauV8rwYODo6Sryo
x8bGok+fPvD09MTx48ffyYQApXkQv4+8ePFCobZTpkzBmDFjMGbMGImJK6DprmdFmTFjBr7//nvm
+9y5c3HixAm52iprDC1atMCkSZOY73VXQVNTU5ngL3WDD4lYs2YNY+lSU1ODdevWwcbGBnPmzEFm
ZqZc4/mQYXuO15cqpLiA+3mlo2cDHT3FFDIKhdI80OkIikrApYCWlbEnm+aa9RdFgUtNTWV9MePx
eOjXr18DpWw84rPxir44ciGuQFpaWsqlvFhbWzNRhJ8/f45OnTopRRZl8Pr1a2zYsAEhISFMFFpV
JTk5WeI7m8l3XYRCIXJzc6UiADeEH374Aebm5li4cCHy8/MBANHR0Rg9ejTc3d2xb98+dO3atdHH
oagWjbmPnDp1ismh/N1330mUNff1LM6aNWuQnJyM0NBQCIVCTJo0CZcvX67X1FCZY/jiiy+wfft2
ALURbTdv3sysVO3du5fp+8svv2Tt18rKCnfu3MGUKVOYiOzFxcXYunUrfvvtN8ydOxcrV678aFeG
2CaYG7MCatqyu8IylJZkoKI0G5otjMDny873Smk6eDweWuiYQ02t/ijIlA+Dj/OuR1E5uBRK0Qy1
PNjY2DCmaVeuXGGt4+bmBnNzc8UFVBJ1Vy6qqqrqTXJeH4aGhsxnLoW9LuLnW7Qaqgrk5OTA19cX
CQkJAIBevXohKCgI3bp1g7W1NXR1daGjo6P0VdCGYmFhwXx2cHDA3r175WpnamqqNBmCgoIwduxY
bNmyBbt27cLr168B1Kbl6d27N0JDQzFs2DClHY/S/IjfR5KTkyEQCBjf6MagCtezCB6Ph5CQELx6
9QqRkZEoLy/H8OHDERkZKdOHX5ljcHd3h4eHBx48eICioiL8888/CAwMRHV1Nfbv388cLyAggLNf
KysrXLx4EREREfjll19w4cIFEEJQUVGBn3/+GVFRUTh//rxMf+8PFWWb4JpYyjfZVlVZiKSYXXj2
aBdqqpXjCkNpPOoaeujquxF2jtxpjygfDlQBpagEXCugbLk+uRA3v+VSQJtz9RMAnJycmM+lpaXY
tWsX5syZ06g+xV/G8vPzUV5eLtOklBCCrKws1vbNzdChQxnl8+eff2YNWtCUZr+K4uzsDD6fD6FQ
iLS0NHh5eck8902FkZERli1bhkWLFmH79u1YunQpSktLUV5ejqCgIDx79kzCb5DyfiP+ny0uLkZI
SAimT5/e6H5V5XoWoaWlhVOnTuGTTz7BixcvkJubi8GDByMyMpLT1UDZY/jiiy/w4MEDALVmuIGB
gTh58iQz0TNt2jS5lEdfX1/4+voiLi4OwcHBjL/21atXsWXLFsyfP7/BMr6vKNsE18TSo95jpj09
ipibi1BVKf+7BeXdUFNdgntXZsPCpje0dJpvoYDybqA+oBSVgEsBzc3NlbuPuhFw2WhuBbRPnz4S
JpGrVq1izOEaipGRkcSqbl0TtLqkpaUx/k66uroKBzFoKl6+fIno6GgAgKen53sRMU9LSwtt27YF
UOuzyhao5F2iqamJb7/9Fg8fPmRW1rOzs5tdLopy6dOnD7p06cJ8X7p0KcrLyxvdr6pdz0Bt0JTw
8HCYmJgAqL2/DRs2jDOIm7LH8NlnnzEK7LVr15CSklJv8CFZdOzYEdevX5eYMFAk6uiHhKImuEQo
QElhCmsZj8eHkZkrd1tCEHNzMaIuB1PlU4URCCpQWpTW3GJQ3gFUAaWoBFwmuIr4AIr8P+Pi4pjZ
aXHU1dXRp0+fhgmoJHg8HrZs2cJ8f/v2LRYtWtTogDG+vr7M5wMHDsisK26S1rt370YdVx7ETYxl
TSjcunWL+Szvqqw8/l1Njbj53YoVK1Qi+I+joyOGDx/OfKcBTz4s+Hy+xH0kIyMDa9euVUrfyrqe
5f3fy0P79u1x4sQJps979+5h/PjxEAgErPWV+Z80MjLCqFG1JoGEEPzwww/MBGe/fv0k0jTJC4/H
k0iH9bH+PxVdAS0tTodQyB7wysDEGeoa7OnZAODhje+R9Jg72jlFNdDWtYKhaYfmFoPyDqAmuBSV
gEsBVWR1ULQCyrX66enpWW9qi3dBz549MWHCBBw+fBgAsGvXLqSkpCAkJETCf4mNhIQE7Nq1C198
8QU6d+7M7F+7di1OnTqFyspK7N+/H9988w1rfsC0tDRm9l5NTU0iX15TIf6Cdv/+fU5/NfGZ75Mn
T6KoqEgiBQpQq1yL+38mJSVJmDU3B8uXL8eRI0fw6tUr3LhxAxs3bpQK7tIUpKenw9bWltMkWdzM
WvxaoXwY9O7dG+PGjUNoaCgAYOXKlUhLS8P27dsbZW6trOvZ3t4eqampAICoqChmgrCh9OnTBwcO
HMDkyZMB1ObgDA4Oxm+//dZkYxDxxRdf4O+//wYA5r4N1KZL4qK8vBzFxcWc93T6/1R8BbQ4n9v8
1tic+xw+i9mFF7H7uQXh8cHna9QGIlL7+HxxVQMe9A3boXOvVTInEigfEISQQkKhNDPq6uoEQKO2
rKwsQgghAQEBrOU//vhjM4/yf7x8+ZI4OTlJyGdlZUXWrl1Lzp8/T7KzswkhhLx584bcunWL7N27
l/j5+TF1IyMjpfr8/vvvmXJzc3Ny8uRJUlhY+/fOz88n//zzDzEzM2PqfPXVV6yyVVdXM3W0tbVl
jmPevHlM3W3btrHWycvLI9ra2ky9b7/9llRUVBBCCKmpqWHqpaenEzU1Naaej48POX78OElKSiJ/
//038fHxIQAIn89n6qxfv75B8it7jCdOnJD4LYcNG0bu3r1LioqKCCGEVFZWkoSEBLJlyxbSv39/
UllZKdXH4sWLmfbr1q2TKRMhhEydOpXY29uTn3/+mcTFxTF93rt3j8ycOZPpy9HRkVRXV9fbH+X9
Iz09nTg4OEhce+3atSP79+8n9+/fJ+Xl5YQQQoRCIUlNTSXnzp2T+C+y3UcIUc71LH4/srOzI/fu
3WPKBAKBRN1Xr14xddu0aSNzzD/99JOEbCtXrmyyMYgQCoXE3t5eoj8LCwtSVVXF2SY1NZVoaGiQ
sWPHkvDwcPL69WtCCCEFBQXkzz//JK1bt2b6CgkJkTnmDxXxcyDaUlJSOOs/fbiThG43Zd2SHu9l
bfM2K5oc3WHB2uZW2GRSlJ/URKOjUCiyoAoopdkpLy9nVRgVUUoNDQ0JIbUvNsbGxqx1IiIimneg
dSgrKyPffvuthEIlvom/KIpvPB6P3L9/X6q/yspK8t133xEejydR18LCQqqP4OBgUlpayiqXspUz
QghZvXq11G9rZWVFunbtKlFvyZIlMn/n//znP+TChQsS+7p160aePn2qkPxNMcZjx44RU1NTKZlN
TEwkfhMAjAIuTkMUUPE+1dTUpI6vr69P4uPj6+2L8v5SVlZGvvvuO9b7iJqaGrG3tye6urqs/ycu
BZSQxl/PeXl5UvceU1NToq+vT06dOiVRVxEFlBBCpkyZItHvH3/80SRjEGfVqlUS9RcuXCizfmpq
qtRxjY2NiaampsS+GTNm1DveD5WWLVtKnaPMzEzO+vcivuNUQN9mRUnVr6kuJ+f+8mKt/+TOqqYc
GoVCqQfqA0ppdrjMb+sLxy6OyLwrJiaGyYcojpaWFry9vRsmYBOhra2NDRs24ObNm/Dy8pIab92g
Io6Ojli5ciVSUlLg4SEd7U9TUxPr16/HxYsX0alTJ6ipSMb7ugAAIABJREFUqYEQwvjRqqmpwdXV
FRcuXMDOnTuZfHbvggULFmD16tWMf09NTQ2ysrKkfDiXL1+ONWvWSEWt7NChA8LCwrBjxw74+/tj
/PjxTNm9e/eUllO1MYwePRqxsbEYO3asRGqbvLw8xgfNyckJM2fOVErevxEjRmDgwIHM7ygQCBhf
Oz6fj8mTJ+Px48cSwbkoHx7a2tpYv349IiMj4e3tLeFDJxAI8OLFC4mAPRoaGujevTvmzp3LBOth
o7HXs7GxMa5cuQJPT09mX25uLmfAOUXYu3evhN97UFAQk2dTmWMQZ+rUqYzrgDzBh0xMTBAcHCyR
szU/Px9VVVUAgNatWyMkJAR79ny8folsJriyfEC5I+DyWP0GEx9sYW3TruNUdPpksdxyUigU5cMj
hBQCMKi3JoXSRKSmprK+CBkbG7Mqk2xMmTIFf/zxBzZs2MAazt7Pz48zNYuqIBAIkJycjLi4OMTH
x6Oqqgq2trawtbVF69atFfZ1LC8vR2xsLFJTU+Ho6AgXFxeFlPqmoKCgAPHx8Xj16hXatWsHJycn
Vn+1goICPHnyBHl5efD29mb1o3r69ClevHiB7t27N2tuVy7S0tLw+PFj1NTUoGXLlrC3t6/Xx7ch
VFVVISEhARkZGSguLkbbtm3Rvn17lcrvSnl3CIVCpKSkICEhAQkJCcjPz4eFhQUsLS1ha2sLDw+P
Bk0+NfR6FgqFeP78ORISEqCpqQkXFxe0bt26WdIpNeY/mZycDEdHRwiFQvTv359V4eUiMzMTycnJ
yMzMhIGBARwdHdGmTRul5G59n9HW1pZSQsvKyjjT5pz9oxPKS7Ol9usbOWDQpLuS/RRn4PzfXhAI
JPs3MnNDvzHnwVdrXP5tCoXSOKgCSml2njx5Ajc3N6n9pqamckdPXLNmDRYtWoRhw4YhLCxMqnzl
ypVYsmRJo2WlUCgUysfHnDlzsHXrVgDA0aNHMWbMmGaW6P2Hz+dLRSgWCATg86WN82qqSnBibxvW
fmwdAvDJwH0S+6KvzkZqwiGJfTyeGgaMj6BRVikUFYCa4FKaHS4T3LoPJlk4OztDIBAwyb3rIm6u
RaFQKBSKvBQUFDDprSwtLTFixIhmluj9p6qqSuoZr6mpyap8AkBxIXd+a0OzThLfSwpTkZZ4WKqe
o9tMqnxSKCoCVUApzQ6XAqpIjkdnZ2c8fPgQRUVFUmU6OjoSfkgUCoVCocjL3r17mefUtGnToKFB
U3U0FuX5fwJGdRTQpw+2ghDJ9weNFoZw6db06bEoFIp80DyglGaHSwEVBWuoD3V1dTg4OEgkZhen
Z8+e9IWBQqFQKApTU1PDmN7yeDzMmDGjmSX6MFBUAS0p4A40Z2TakflcWf4WqU+PSNVxcv8KmloN
94vPzs5GZGQk4uPjERcXh7dv38Le3h4ODg5wcHCAo6Mj7O3tZY5BmVy5cgU5OTkS+zQ0NNCqVSu0
a9dOJeMiUCjiUAWU0uxwRUWsrKyUq327du2goaGBiIgI1vK+ffs2VDSFKC4uxp49e3Du3DkUFRVB
R0cHLi4u7zTaLIXyLhEKhTA3N8eECRPoC4+SqaqqQmVlJfT09JolYA+lluPHjyM7Oxvq6urw8fGB
ubk5q6VNU8Lj8T6466BulHegvhVQdgVUs4URtPWsmO8vYkMgFEi+O2ho6sPBTXbUYi4IIdi9ezcW
LFggNVl++fJlie++vr64evVqg46jKCtWrOB0OeLz+Rg7dizWrVuH1q1bvxN5KBRFoQoopdnhWgEV
CARytRf5f966dYu1vKkV0Fu3bmHTpk04efKklNnwjRs3mvTYFIoqQAN8UT4Grly5AkNDw2Y5tpmZ
GXbu3ImxY8c2y/GVjeImuOwKqKHY6icRCpAc94dUnXYdp0JDUzraen0UFhZi1KhRjFLp5+eHCRMm
oEuXLrC2tkZaWhqSkpJw+fJlnD9/XqG4FbIoLy9HRkYGampqmBRzXLi4uGDChAmoqKhAVlYWLl++
jFevXuHIkSOIi4tDVFQUZ1RhCqU5oQoopdnhUkDlxcnJidP/U1dXF927d29U/1y8ePEC33zzDc6d
O9ck/VMoFAqFAgBv375FYGAgvL290apVq+YWp9EoboLL7gNqaPq/PMdZaZdQXpolUc7j8eHg2jCz
6RUrVuDq1avg8/n48ccfsXTpUokgSdbW1vD29sbnn38OQghSU1MbdJy6zJs3D3v27MGQIUNYo/qL
06FDByxdupT5LhAIMHfuXGzfvh2xsbE4fPgwpk2bphS5KBRlQoMQUZqdxiqgzs7OuH79OmuZt7d3
k/h/7tmzB25ublT5pFAoFMo7obKyErGxsc0thlJgU0C5VuoqynJQXcXuqiMe1TYl4W+pcqs2g6Cj
b6OwfAkJCdi2bRuA2jzjy5cv54zQC9SaSbPlM3/XqKmpYd26dUyO2cePHzezRBQKO1QBpTQ7XD6g
8uLs7Mxp6urj49OovutSWVmJqVOnYtasWSgrK1Nq3xQKhUKhcGFgYICuXbs2txhKQREfUFkBiEQr
oJXlb5GVdkmq3L7jlAbJt3TpUtTU1EBDQwM//vhjg/oQZ8+ePRgwYACMjY3RqlUrBAQESCmHL168
gL+/P7PqGRUVBX9/f2aTNy6Gjo4OE3uCzZWppqYGFy9eRHBwMDp37gwTExPo6OigQ4cOWLZsGUpL
S6XaiGTz9/dHTk4OampqsG3bNgwdOhSGhoZwcnLC+vXrZWYvSEpKwpQpU+Di4gIDAwP4+vpi//79
qKmpYfr+999/WdumpqZi2rRp6NChA5PZYNWqVQplS6CoFtQEl9LsNHYFtH379pzO+MpUQIuKijBi
xAhcu3ZNaX1SKB8CfD4fOjo6MlcIKPJBCEFlZSWqq6tBCAGfz4eWlhbU1enj+mOmbdu22LJlywcT
7EuRFVAu/08AMDCp9ZF8mXQSRFgj2Z+uFSztGpYD/P79+wAAf3//Rq1slpeXY+rUqQgNDYW+vj5c
XV2RnZ2NU6dO4fLlyzh+/Dj8/f3/H3vnHRbF2bXxe5feqwhSFGkqgoIVNRrzBiyoRFHUWGJHo2Kv
MaKxvTEaX01saJDYxRrFippEEUWUIh1BKSIgSFmkLux8f/Ax2WFn2V2KC/H5XRfXtfO0ObPA7txz
znMOgNqH8cHB/4jo/Px8xrG0YislJYV+sN+9e3eR/tjYWAwbNgwAYGRkBDs7O8THxyMhIQE//PAD
EhISEBgYyJgjbBuPx4O3tzcuX75M9/N4PKxatQolJSXYvHmzyDmDgoIwdepUFBcXQ1VVFY6OjoiL
i8OcOXMQHBxMr71kyRKRucHBwZg0aRIKCgpgY2ODnj17Ijo6GuHh4Xj06BGCgoJojy+h7UC+0Qhy
pykC1NDQEFlZWSgsLBTpU1VVRb9+/ZpiGk1RURHc3NwQHh7e4DhNTU107doVRkZGMDAwQLdu3aCs
rNwsNhAIrRFTU1OMHj2aJLogEAhSI4sHVJwAVdcyo5MLZSRfEOnvaOcFDkf2h2JVVVVIT08HAFhb
W8s8X5j//ve/CAwMhIuLC65evQpDQ0MAwPbt2/Hdd9/Bx8cH8fHx4HK56NmzJwQCAebPnw8/Pz+M
GDGCsQdUmizINTU1WLhwIQDAwMAAX3/9tcgYNTU1+Pj4YMGCBXSSo6qqKnz33XfYtWsXzp8/j/T0
dLEZdKdNm4bIyEisXbsWXl5eUFNTw/Lly3Hz5k3s3LkTGzZsYGx9evfuHb7++muUlJRgzJgxOHPm
DO2hffDgAaZNm0aPrZ/IqaCgAF5eXigqKsLJkycxZcoUAEBmZiaGDh2KW7du4dy5c6zXSWjdEAFK
kDtNEaB2dnZiw2/79+/fLOKvtLQUw4cPb1B8qqmpYe3atVi2bBm0tGTPtkcgEAgEwqcCmwAV9xBL
XAKiOu9nKS8D73OfifRb2I5vlG2pqam0t7FTp06NWgMA3r59i127dgEADhw4QItPAFizZg0OHTqE
pKQkXL9+HaNHjwZQKzLrhKbwa3EUFxcjKioKb9++RWJiIg4cOIDU1FRoaGjg8uXL0NTUFJljZ2cn
UjddWVkZixYtou1NSkoSK0DDw8Nx8eJFjBkzhm7btGkTbt68iYqKCqSmpjKy927evBklJSUwMjJC
YGAgVFRU6L7BgwcjPDwc7du3Zz3Xli1bUFRUBA8PD1p8AoC5uTlWr14Nb29v7N69mwjQNggRoAS5
05Q9oHZ2dmLDbwcPHtzodevg8/kYN26c2H0JAODg4IDAwECJ6dIJBAKBQCDIJkBLisWUYNGv3f+Z
mXKFtU84Q64s5Ofn06/19fUbtQYA3LhxA2VlZWjfvj169uzJ6FNQUICjoyMyMzMRHR1NC1BZuXv3
LpycnBhto0ePxs8//yyz97Zjx45QVVVFRUUFioqKxI47fPgwQ3wCtRmB66hfkaAuVHfmzJkM8VmH
np4e/bq+4D5//jwAYPjw4SLznJ2dAQAxMTEQCARkC0gbgwhQgtxpigC1tbXFnj17WPuaQ4B+++23
uHPnjtj+0aNH48yZM9DQ0GjyuQgEAoFA+BSQVoBSlAAfitNY19D5fw9o1qsgkT5zW89G2ybs9awL
xW2ICxcuICEhAebm5pgxYwbdnpycDKD2Wr/88kuReXFxcQCAjIyMRttqamqKgQMHgqIoXL16FZWV
lTA3N5dafL548QLJycnIzs7Gu3fvwOfzJc5xdXUVaRNXbeDDhw/Izq4tjSPrQ/rS0lJkZWUBqBW9
Fy4ww6zr/ob4fD5ycnIYIpjQ+iEClCB3mhKCq6mpidzcXJF2JSUluLi4NMUs7N27F0ePHhXbP2XK
FPz+++9k8zuBQCAQCDIgrQAtK8mCoIY9+6u2QReUfXiLgtwIkT4zq8Z5FAHAzMyM9gS+evVK4vgz
Z87g0qVLGDhwIEOA1glLHo+He/fuiZ2fl5fXaFv79++Pc+fOAQB27tyJNWvW4MCBAxgxYgRGjRol
dt7p06exc+dOREdHA6jdf2tlZUWHHtffi9lYMjMz6dfiwmylmRsVFdXg2Ly8PCJA2xjEX02QO2wp
v6WloKCAtd3Z2Zne5N4YHjx4gJUrV4rtnzhxIo4fP07EJ4FAIBAIMiKtAP0gJvwW4EBL1wZvX90Q
6dHR7wotXatG28bhcGBlVTs/PDy80WLMzMwMQG09coqixP4IZ5NtCitWrED//v0BALNmzUJOTg7r
uAMHDmDKlClISUnBjh07EBoaiuLiYsTGxtIhstIkPJIGYdH5/v17meaamv5Tv/X27dsNvoc9evRo
FnsJHw8iQAlyp7EeUAUFBSQlJbH2NSX89t27d5g0aRKqq6tZ+11dXXHixAmy34BAIBAIhEbAVkeb
7aFxiZgERBraHaGopI63abdE+kytxHv+pKWuTElcXBztYZSVbt26Aagt6cJWdqa5UVBQQEBAAFRV
VZGXl4eZM2eKiGc+n08/XD9+/DjWrl0LFxeXFsvWr6+vDx0dHQC15V/YqAvRrY+WlhbMzc0BACEh
IS1iH0F+kDtogtxprAC1tLTEo0ePWPsaK0ApisL06dPFfiDa29vj4sWLYvc7EAgEAoFAaBhpPaDi
SrBo69uhuuoD8rJE7wFMLUc22b7vv/+ezlq7fv161lJvkhg6dChUVFRQVVWFAwcOSD2v7v7i9evX
Mp/Tzs4O27ZtAwDcunUL+/btY/RHRkbS731DZepqampkPrc43N3dAQABAQEiUWvR0dEYMGCA2Lkj
RowAAPj7+4skNyK0bYgAJciVioqKRn/QWVhYIC0tTaSdw+Fg4MCBjVpz7969uH37Nmufvr4+rl69
SsqsEAgEAoHQBKT1gH4QI0B19LsgJ/MvCATMpDlqmh2g286hyfbp6upiy5YtAGqFYI8ePcSWfBOH
paUl1q1bBwDYuHEjbtwQDRfm8/l0op066sJ/ExISGiVCly5dSt8DrVmzBjExMXSf8P2Lv78//bqs
rAxr1qxBZWXtfltx0WWNYdOmTVBQUEBubi769++P3bt3w8/PD5MmTcLAgQNpkQlAJEvu9u3b6Xrv
M2bMYM3Om52dTdtNaDuQJEQEudKUBETiilY7ODgw0npLS1xcHP1lUR8ul4tTp06hc+fOMq9LIBAI
BALhH6T2gBaKqQGqZ4uc9Lsi7SYdRTO0NpZ58+bhw4cP2LhxIzIzMzF06FD06tULDg4O6Nq1K969
e4f4+PgGw0PXrl2Lp0+f4saNG3B3d8eQIUPg5OQEDoeDsLAwREREYPz48Thx4gQ9x8PDA+vXr0d5
eTmcnZ0xefJk6OvrY+vWrVLZzeVyERAQgB49eqCsrAxff/01wsPDoaqqCjs7O/Tp0wfh4eHYuHEj
Ll++DDMzM4SGhkJRURFubm64ffs2jh49CmNjY8ybN6/J241sbGwQGBiIGTNm4OXLl4z8Gq6uroyE
j/Xv6wwMDHDs2DFMmTIFly9fRmhoKL788kt07twZSUlJePLkCTIyMpCSkkILd0LbgAhQglxpigBl
e4IKAIMGDZJ5rZqaGsyYMUPsPo21a9ey1qEiEAgEAoEgG9J4QGtqKlFakikyDqjNgBvzRFSQNacA
5XK5WLlyJTw8PPDtt9/iwYMHCA8PR3h4uMg4BwcHjBwpGvqroqKC69ev4/Dhw9iyZQv+/vtv/P33
3wBqr9fBwUEkBNXS0hKnTp3CvHnzkJ+fj4MHD0JRUVFqAQoA1tbW2LFjB5YsWYLY2FisXr0a+/bt
A5fLRWBgIKZOnYpHjx4hMjISsbGxGDNmDA4cOACBQAAHBwdkZWXh22+/xZgxY5olu+y4cePQo0cP
/PHHH4iMjETHjh3h6uoKFxcXFBcX0+PYnAejRo1CTEwM5s+fj/v37+PUqVN0n4WFBUaNGgVtbe0m
20j4uHAoiioGQH5zBLkQGxsLB4fGhctYWVkhNVU0POf06dOYPHmyTGvt2LED69evZ+1zcXHBgwcP
oKhIntcQCAQCgdBUhg8fLrLd5ebNm4wHvbyCJNw+w76d5ssJ93H3/BeMNi5XCR6zX0JRWbP5DUbt
g+pXr14hISEB2dnZMDQ0hLGxMbp3704n2pFEfn4+4uPjYWJiAisrqwa9ixUVFUhMTERpaSm6dOkC
AwOD5roUUBSF1NRU5ObmwsnJiSH+q6qq8Pz5c3Tp0qVR0WSy8vjxY1qEf/jwocG66tXV1UhKSkJx
cTHs7e2lft8JrQ9yR02QK03xgIqrzyWrBzQlJQU//PADa5+mpiZOnjxJxCeBQCAQCM2ENB5QsRlw
tSyQn/1YpN3ApF+LiU+gNsusjY0NbGxsGr2GoaGh1EkSVVVV0bNnz0afqyE4HA6sra1hbW0t0qes
rNzkOuqycPDgQQC1DyUaEp8AoKioCHt7+49hFqGFIUmICHKlsTVA1dXVWWtzdezYkU7bLS3z588X
G3q7e/dusu+TQCAQCIRmhO27v774ECdAtfXtkJv5t0i7sfnnzWIboflZtGgRbt26haqqKrqNx+Nh
9erVOHnyJADA19dXXuYR5ABx6xDkSmM9oDo6OqxPUGX1fh4/fhz37t1j7fvyyy8xb968RtlHIBAI
BAKBHek8oOwZcLX0bPAq7rhIe3sZBGhpSSbevrqBqspiqGkYQ1WjvdRzCbJRWlqO/fv3Y//+/eBw
OGhvpA8Oh4PsnHwAgJKSIpb5TIGFcTHeprFXIWgKHHCgpWcDTR3LZl+b0HiIACXIlcYKUHGlW2QR
oMXFxVi1ahVrn7q6Ovz8/BplG4FAIBAIrZkTJ04gP79WAIwcORJ2dnYf9fxSCVAxGXAVFFRRzWfe
Oyir6EK3nWOD56zmlyI1xh+v4k/gQzH7Fh5C80NRFPx36oHPB/h8ClXV1aAoQElRF0qKgLYmF0pK
QXh0PajFbOBwuOgxcAtseni32DkIskEEKEGuNFaA1i9mXIcsAtTX1xfv3r0T22dpSZ6WEQiEj8/7
9++RmJiIxMREALX7xtq3bw9HR0fWWokEgqzs3LkTsbGxAABjY+OPLkDZvvulDcGtrBD9/m9nOggc
jvhdZamxAYgL24HKivcyWkpoKhwOB5rqHLnaQFECRIf6wsJuAlRU9eVqC6EWIkAJcqWxArS6ulqk
TU9PT+rN6XFxcdi/fz9rX48ePbB8+fJG2UUgEAiNJTU1FcuWLcO1a9dY+xUVFeHk5ARvb2/Mnj37
I1tHaEnu3LmDxYsXA6gtw3Hr1i05W9SySNoDWlVRhCoWoQkAvMJkkTYjs89Yx/KrShB+bzGyXrWc
d43QNqAE1aiqKCQCtJVABChBrjQlC259XFxcwOFI95TNx8eHVcRyOBy65haBQCB8LE6dOoXZs2ej
srJS7Jjq6mqEh4fDxsaGCNB/GSUlJUhOFhVW/0ZqampE/s65XC7U1NToY3HeTzUNExS+ixRpZxOg
VRVFeHDVE4V50U20mPBvwNCkH7R0reRtBuH/IXfZBLnSnAJ04ED2emH1uXr1Ku7fv8/aN23atI+a
fpxAIBDi4+Mxb948+qa8Z8+eWLt2LRwda/e0JSYm4vnz57h48SIdlksgtFWakgFXVcMY5aXZzDb1
9tDWs2W08atK8Pcf41CU/0KsHQqK6lBQVIOSsjY0dS3B5ZBb4n8lHA509LugS6+l8raEIAT5byPI
lcYIUC6XC4FAINJeV8i4Iaqrq7FmzRrWPi0tLfz4448y20MgEAhN4dtvv6WTsgwbNgzXr1+HgoIC
3d+1a1eMHTsWW7duxYsXL5CZmSkvUwlS8sMPP+D69evIzs6Gj48PVq5c2eD4/v3748KFCwBqv4v+
zUi1/7PwJetcNpHYzpT58JmiKIQFzxcrPs2sPWDfZzW09T/uvlcCgfAPRIAS5Epj6oCyiU9FRUX0
7dtX4lw/Pz+xHoSNGzfC2NhYZnsIBAKhsVRXVyMsLIw+3rVrF0N81sfR0ZH2jBJaL8+ePcPTp08B
gFH7UBympqbw9PRsabNaBWwCVFNTk3EszgNaVVUs0mZUT4DGh/+EbJZyHgqKaujzn19hbu0hi7kE
AqEFIAKUIFeaKwTXyclJYnbIkpISbNq0ibWvc+fO8PHxaRZbCAQCQVri4+NRUVFBH1tbW8vRGgKh
5WH73q/v9RUnQMt4GSJt7Tr8E/1UkBuBhGe7RMYoKKhi8OjzMOzQX1ZzCQRCC0AEKEGuNJcAlSb8
dvfu3cjLy2Pt27FjB5SVlZvFFgKBQJCW+p87T58+xeDBg5u87vv373H58mWEh4fj6dOnUFJSQq9e
vdC/f39MnTq1QS9rfe7evYuQkBA8efIE2dnZcHZ2Rp8+fTBhwgS0a9cO169fx7NnzwAAvXr1wqhR
o0TWuH//Ph4+fAgA6N69e4PevsjISFy9ehVArWdwzpw5Em188OAB/vzzT4SHh+Ply5fo2rUrevXq
BU9PT3Tr1q3BuQkJCQgMDAQAGBgYYNGiRQBqvdOXL1/G2bNnkZKSAiUlJTg4OGDevHlicwXs2bMH
PB4PSUlJjGvn8/mMcevWrWP87sXZwEZ5eTlu376Ne/fuIT09HZmZmaioqECnTp1gY2ODxYsXw8bG
psFrlieSPKCUoAYlRex1OmtqKhjHqupG0NKz+f++SoTfWwSKqh8lxYHLcH8iPgmE1gRFUcUUgSAn
XFxcKABN/gkMDGzwPHl5eZSWlhbr3P79+3+kqyUQCAQmfD6fUlVVpT+PHBwcqPz8/Cat+fTpU8rC
wkLs56WbmxtVUFAgcZ2qqipq1qxZYtcxMzOjQkNDKW9vb7rN29ubda3vvvuOHjNp0qQGz/vbb7/R
Y/v06SPRxsWLF4u1UUNDQ+L3w4ULF+jxtra2FEVRVEpKCtWjRw/WNblcLrV9+3bWtczMzKT6zuLx
eBJtYGPBggWUurp6g2srKSlRO3fubPCau3fvTo8/ffp0g2Obm6CgIBGbR4wYQfeXFKZSgb8aiPxc
PGwh0hZ6axY9LzbsR9Z5MU/Yf1cEAkF+EA8oQa40Zg8oG5I8oDt27EBJSQlr365douE6BAKB8DFQ
VFTEwoULsXv3bgBATEwM+vfvjzNnzqB3794yrydczoXL5cLV1RWOjo549+4d7t27hzdv3uDOnTtw
cXHBixcvxEZ+FBcXY8yYMXjw4AGAWk9tnz590Lt3b2RkZODhw4d48+YNhgwZAgsLi8a/AU2Ax+Nh
xIgRCA0NBQB07NgRQ4cORbt27RAVFYW7d++itLQUXl5eCAgIwDfffCPVusnJyXBxcUFBQW0dSmVl
Zejr6yMnJwdAbR6CDRs2wNXVVeR31KFDB3A4HOTl5dGh1To6OtDW1maMk7ZkWH0ePnyIsrIyKCoq
onv37rC1tYWZmRkePnyIZ8+egaIo8Pl8rF+/Hm5ubujRo0ejztOSsH0XC4fgigu/VVBQQQ2fec/Q
rkOtJ7q8NBtJkb+IzNFv3wv2fdkTDxIIBPnBlbcBhE+b5gjB7dixI0xNTcX2v3nzBgcOHGDtGz16
tNTlWwgEAqEl2LBhA2xt/ykjkZKSgn79+mHp0qXg8XhSr/Pu3TssWLAAlZWV0NbWxp07d3Dr1i3s
3LkTAQEBiI2NxdChQwEASUlJOH78uNi1du7cSYvPdu3a4dGjRwgJCcH//vc/XLp0CXl5efD394ea
mhpSU1MbeeVNY9u2bbT4nDBhAuLi4nDs2DHs3LkTd+7cwYULF+hQY19fX9baz/UpLS3F6NGjUVBQ
AAcHB1y9ehWlpaXIzs5GYmIiLbYFAgFr1vSwsDBkZGTA1dWVblu9ejUyMjIYP/WT7kiLqakpNm3a
hPT0dERGRuLcuXPYvXs3nj59irS0NOjo6ACoDR/+9ddfG3WOlkaSAOWJyYBbXSX6wLpdh9rv79gn
21BTXc7o43AV0XvoXnA45FaXQGhtkP9KglxpDgEqqW7ntm3bGEk+6uBwONi6dWuTz08gEAhNQVdX
Fw8fPkTPnj3pNoFAgL1798La2hp+fn6gKEriOr57aXZtAAAgAElEQVS+vvTN/dq1a/Gf//yH0a+j
o8MQJT/++CNqampE1ikoKMAvv/zjTbp8+TKrN3bmzJmIjY1l2P2xSE9Px969ewEAhoaGOHr0qEgp
j3HjxtF7TdPT03H69GmJ62ZlZSE5ORkeHh4ICwvD6NGjoahYGyxmZ2eHxYsX02Pj4uKa63Kk5tat
W/D19UWHDh1E+iwsLPDVV1/Rx8nJyR/TNKmR6AEVI0AFgkrGsbKKLrT1u6D4fSLSEs+JjLftsQA6
Bl2aaC2BQGgJiAAlyJWWFqAZGRnw9/dn7Zs8eTIpZ0AgEFoFRkZGePjwIRYtWsQIz8zLy4O3tzc+
//xzvHzJfmMO1H7WHTlyBEBtrWRxSWy6detGf+6lpKQgOjpaZMyePXtokeDo6NhglIi5uTn69esn
+QKbmW3btqGyslaQzJw5UyTEtY5JkybRr+vqbEpiyJAhuHDhAtTU1ET6hL8zXr9+LYvJHwUPj39K
jLRG+wCwevWFf38lReL/zoUxNOkPDoeD+Gc/oXYr6T8oq+qja69lTbKTQCC0HESAEuQGRVEoLy+X
PFACDe3/3L59O2sNNkVFRWzevLnJ5yYQCITmQlNTE7/88gsePHiArl27MvoePHgAR0dH/P7776xz
IyIiaG+mnZ2dSFkLYYT3bGZkiJa1CA4Opl9PnDhRpmv4WNTV2ATQ4F5ZSddaH11dXZw7d472etbH
wMCAfi1NSO/HRvj3Xj/zbmtBYghugXSeW8MOLuAVJONNyh8ifd16r4CSCvtDibZETU0NfH194evr
22o92k0hISEBixcvhqurK9zd3bFs2TKEhITI2yzCR4AkISLIjdLSUqnCyhpCTU1NbJKFjIwMHDt2
jLVv+vTppN4egUBolQwaNAjR0dHYv38/fH19aY9RRUUFZs6ciZKSEhEPp/DNKY/Hw/Tp08WuHx8f
T79mE2XCnrOOHTs2+jpaCoqiGN7g33//HUFBQaxjhaNspBGgRkZGaN++vdh+WcrXfAyqq6vx7t07
ZGdnIzs7G48fP5a3SRIpLi4Waavbu1pZ/h5VlYUsszio7+Vs18GFNfGQqroxOttLl3BKWnJycvDX
X38BAIYPHw5dXd1mXV8cAoEAP/zwAwCgb9++jL3i8iYjIwOPHz9GVFQUXrx4AR0dHfTo0QM9e/bE
Z599JrE2++3bt+Hh4UFHMigoKODGjRtQVVXFoEGDPsYlEOQIEaAEudEcGXB79+4NJSUl1r6GvJ8b
Nmxo8rkJBAKhpVBSUsLSpUsxYcIELFiwANeuXQNQK758fHwwYMAAODs70+OFBWhWVhZOnDgh1Xky
MzMZx6WlpXj37h19bGxs3JTLaBGysrJQVlZGH9+4cUOqeYWFhSgtLRXZK9rWKC8vx/nz53HkyBGE
hoZCIKhf97J1wyZA60JweYXivHxM8amgqA4VdSNkJIuGVXdx9oGComqT7RQmJiYGkydPBgBERUV9
NAHaWtm3bx9Wr15Ni8c6zpw5AwCwsbHB6dOnG4xOWLp0KSorK/HNN99g06ZNMDIywosXL6CiotKi
thNaB0SAEuRGS+7/fPv2LQICAlj7pk+fDktLyyafm0AgEFoaU1NTXL16FStXrqRLtVAUhY0bNzK8
fsIP9MzMzGBlZSXV+vVLqKSnpzOO9fT0Gmt6i1H/4eWgQYOk9ky2NbFWn/v378PT0xNFRUUAakvE
DB48GBYWFjAxMcHr16+lSrYkT9j2gNZ5QHkFSVKtYWDcG6/jT0AgYIYZK6vowbLb1KYbSWDlw4cP
mDhxIv3QZ/r06XB3d0evXr1QVFSE8PBwHD58GFFRURgwYAB++uknLFmyRGSdnJwcJCYmAqhNmNap
UycAQP/+/T/atRDkCxGgBLnRHAJU3P7PXbt2iTyZA4j3k0AgtE1+/PFHnDhxgvZOPnz4kNEvvGe0
R48eYkNSJVHfO1hXC7M1YWVlBWVlZTrCZc+ePY2qmdrWCAkJwZgxY1BaWgoOh4P169fDx8cHRkZG
9Ji7d++2egHaUAhuiVgPKBOD9n3wKk50P7S1w2woKjUc+kloPNu2bcONGzegrKyMAwcOYPbs2Yz+
Xr16Yfr06ZgxYwbOnz+P5cuXY/DgwXBycmKMS0tLo18L//0SPh1IEiKC3GiOEFy2p2X5+fnw8/Nj
HT9t2jTi/SQQCG0OBQUFjBs3jj7m8XjIy8ujj7t160a/Dg0NbfT+ejMzM0YCnuzs7Eat0xQkeSkV
FRVhY2NDH38qSUvmzZtHf2/u3bsXW7dubZM373XeW2FoD6iUApSCAJXl+Yw2DlcRVt1nNt1AAiuv
X7/Gnj17ANSGz9YXn3Woq6vjzJkz6Ny5MwQCAasHVDgBZWvbV034OBABSpAbTfWAdurUiTVZxN69
e1nFLZfLxdq1a5t0TgKBQJAXwl4EDQ0N6Ovr08f29vb068LCwkYno1FQUIC5uTl9/Pz5c4lzZH2Y
KLx/sz4lJSXYtWuXxDWEr1faPaDyojnCfvPy8pCQkACgNvne3Llzm7ymvGAToHV7KqUJweVwFJCf
HSbSbmY1Bqoa4hNItRSpqalwc3ODm5sb8vLyUF1djV9++QXu7u7Q0dGBnZ0ddu3a1eDfQXJyMmbM
mAE7Ozvo6uriP//5D44ePSrVg6S0tDTMnDkT3bp1g7q6Ovr27YutW7eyns/Pzw9ubm4YPnw4UlJS
WNeLjo6Gm5sbPD09Gf/bGzduRGVlJVRVVbFsWcMlbhQUFLBmzRoAtdEadREZpaWlcHNzw6pVq+ix
Y8eOpd+/2NhYiddL+HdABChBbjTVA8rm/SwpKWEUWhdm/PjxrSqDHIFAIMhCVFQU/drJyYnhOeja
tSuGDx9OHy9evJguyyIrvXr1ol+fOHGCdTtDHZs2bcLJkyclrim8l1ScV7WqqgpTpkxBUpJkEbJ0
6VK6XmpwcDCuXLkicc7HRLiuZVZWVpPXE34QoKmpCVVVyUl2Gvq9yRNxApRfVYLyUsked11DB+S/
DRVpl5f3s6SkBMHBwQgODgaPx4OXlxd8fHxw48YN8Hg8JCcnY9WqVWJLv927dw/9+/fH77//jrdv
36JLly54/vw55s6d22A2a6D2b79Xr14ICAhAdXU1evbsibi4OHz//fdwd3cX+Qz4+uuvkZmZidu3
b2PChAmoqKhg9FdVVWHatGkIDg6Gm5sbIyQ/NLT2PR8xYoRUycmmT58OLrdWZtQ9EKuurkZwcDDj
7/nPP/+k3z+2vw3CvxMiQAlyo6keULbi535+fmI/wNavX9+k8xEIBEJzc+vWLezcuRM5OTkNjouM
jIS/vz997ObmJjJm//79UFNTA1BbF3TZsmUSRQibl2TdunX064KCAsydO1ek5mVpaSkmT56MzZs3
S5W10s7Ojn79/PlzkWRHOTk5GDZsGK5duyaVuHJxccG8efPo44ULF0r01n7MBETC1xscHNzkmqHC
Xum8vDzcvHlTZExkZCTjd1dYWCiS5VjeVFRUiPxNKikpQV1dXeoERAosezy1dK3RrgN7UsKPybRp
03Dz5k2sXbsWERERSEhIwIgRIwAAO3fuFKnNyuPxMH78eBQWFmLWrFkoLCzEkydPUFBQgEuXLtGl
XwCIeEMLCgrg5eWFgoICnDx5EsnJyQgNDUViYiKsrKxw69YtnDt3jjFHU1MTFy5cgLq6OqKiouDj
48Po//777xETE4Nhw4bB29ubbq+qqqL/Zzt37izVe6GqqooOHToA+CdLt46ODgQCAe7evcu4DoFA
AIFAQMqvfEIQAUqQG83tAeXz+fjf//7HOnbUqFFi64USCASCvMjKysKaNWtgbm6OMWPGICAgAOHh
4SgpKQFFUcjIyMDu3bvxxRdf0DfugwYNYt1O0LlzZ/j6+tLHv/zyC5ycnHD8+HFERESAx+MhIyMD
Dx8+xPbt2zFgwABs27ZNZB1nZ2eMHj2aPj5x4gR69+6NVatW4b///S9cXV1hYGCAs2fPokuXLpg0
aZLE6+zfvz/tFRQIBBg6dCh2794NPz8/zJ8/H1ZWVvjrr7/QsWNHxjU0xI4dO2BiYgKgNvN5v379
sHTpUty+fRuZmZkoLi5GTEwMAgMDMWPGjI9aUmbIkCH069TUVEydOhUpKSng8/ki4lsaunTpwrB/
3LhxmD59Om7dugV/f39888036NOnD54/f87wWv3222+N9oS3BIWFojU+67zjvIJEqdYoKXwp0tZa
Mt+Gh4fj3Llz2LFjB5ycnNClSxds2rQJQK34Tk1NZYzfu3cvioqKYGFhgSNHjtD7r7lcLsaOHYvo
6Gix59qyZQuKiorg4eGBKVOm0O3m5uZYvXo1ANCZs4Wxt7fHoUOHAABHjhyhIxgePXqEXbt2QVdX
F7/99htjzqtXr+i/I1lqA9eNFS4TxeFwaM9o3bVyOBw6ooHwaUCy4BLkRlM8oMrKyiJZ1c6cOYM3
b96wjq/bi0AgEAitkerqaly7do2u9wmAkem1DhsbGwQGBoqtf7xmzRp06NABixcvRnFxMRISEvDN
N9+IPS+bJxUADh48iJycHISHhwOo3RdW/2a4ffv2OHfuHA4cOCDx+gwNDbF582Z679jr16+xcuVK
xhhLS0tcu3YNYWGi+/vY0NPTQ0REBObMmYPr16+jpqYGe/fuxd69e6Wa35IMHjwYXl5eCAwMBACc
O3eO9kYpKyvLHB6roKAAf39/jBw5EkCtmDlx4gSj3muHDh0QEBCAxMRE2rO1efNmHD16FJcuXULf
vn2b49KaBFtW5bq9zMVSCVAuKsvzGC0cjgI62nk1h3lN5vDhwxgzZgyjrc4LCIiWoKkrFzdlyhSG
KKtDeJ93fYF2/vx5AGCE3tdRVyM4JiYGAoFAZO1p06YhJCSEfgBkZ2eH6dOnQyAQ4Ndff4WpqSlj
vHDCM1lqoNY9dHr//r3UcwifBsQDSpAbTfGA9ujRQyTs66effmId6+LiQsI6CARCq6RLly4YMmQI
HTorjLD4NDY2xv79+xEXF0d7/cQxbdo0xMTE4KuvvhJ7s2hoaIixY8di6NChrP2mpqZ4+PAh5syZ
I2Ibl8uFh4cHwsLC4OjoKOkSaZYsWYL9+/eLlHpRVVXF7Nmz8ezZM0ZyIWkwNjZGUFAQ/Pz8YGdn
x3oTz+Vy4ezsjKVLl8q0dlPx9/fHsmXLWG1qDCNGjEBQUJBI7VZNTU1MnToVL168gKurK+bNm8eI
+MnKymKUvZAnDQlQ3vsEifNVVEXr0hpbfAFV9daRDdjV1VWkTdzDourqamRkZAAArK2tZTpPaWkp
vbf48OHD+PLLLxk/dZln+Xy+2PD+vXv3wsnJCaWlpRg4cCBevXoFT09Phje1DuGwW3EP+tmos1Ha
sF3CpwPxgBLkRlM8oPXDb2/evCk2e1pdKAqBQCC0NgYOHIi//voLfD4fERERiI+PR05ODnJzc6Gv
rw9ra2tYWVnB0dGRVaSKw9zcHJcvXwYAZGRkIDo6GjweDyYmJjAzM4ONjY3EkDcVFRUcOXIEBw8e
RHx8PGJiYqCvrw8HBweYmZnJfK0cDgfffvstpk6dipiYGLx69QomJiZwcnKCgYEBPW7WrFmYNWuW
TGvPnTsXc+fORVlZGWJjY5GUlARtbW2YmJjAzs6OLvPBhqenp9Rla3r27Cn1WA0NDfz8889Yt24d
4uLi8ObNG1haWqJLly6NtsHd3R3JycmIi4tDUlISrK2t4eTkxCido6KigqioKISHhyMnJwf9+vUT
KdcSExMj1TU0Nw17QCULUH5ViUhba/F+ykpmZia9N5gto7+kuXUIJydjIy8vj+GFrUNVVRXff/89
xo0bBz6fDzU1NRw8eJB1DVNTU2hoaKC0tJQWzdJQN1a4bBKBALRhAfr+/XuEhoYiOzsbfD7/oyYX
IDQPRkZG2Lp1a6Pmqqmp4ZdffqGPy8rKWNficrnIzMxkjCU0HQ6HAyUlJRgZGaFfv36sX24EAkF6
lJSU0K9fP9bkak3FwsJCxGsmC4qKinB0dJTJ29kQ2traGDhwIAYOHNgs6wlTV4aiNYSb1tGuXTt8
/vnnzbaeiooKnJ2d6TBLcfTp06fZztlciBOglRUFqCh7J3G+QMAMSVdU0kQHS9EQ1LaA8H1r/Wy0
khAOkb19+7bYUPqG4PF4jDD48vJynDt3DosWLWIdb2Njg6ioKEREREi1flpaGp0UklQgINSnTQrQ
a9eutZpwEkLjUVVVlSrboTSoq4tmxSO0HBRFoaqqCm/evMGbN29gbGyMsWPHMp7CEwgEAoEgjDgB
Wvw+vlHrmXZ2h4Ki9JEBrQlzc3NwuVwIBAKZS/VoaWnB3NwcmZmZCAkJaZQA9fb2xqtXrzBx4kR0
7NgRO3fuxIoVK8Q+wJk8eTKioqLw9OlThISESNza9PPPPwOofbj21VdfyWwf4d9Nm7tbPH78OIqL
iwGADmUxNDSEsrKynC0jED4d+Hw+CgoKkJycjOTkZOTk5CAgIAAzZswgIpRAIBAIrIgXoJLDbwEO
AGaYsoWtZ/MYJgeUlZVhaWmJ1NRUXLlyRaQkCgCxIbFA7Z5gPz8/+Pv7Y+XKlYzas5I4evQozp49
i86dO8PPzw/q6up4/PgxHj58iAkTJiAyMpKRAAmo3cN96NAhvH79Gps3b8atW7cYtYiFSU9Px9Gj
RwHUlkgSLktEIABtTIBevXoVxcXFUFJSwrBhw2BpaSlvkwiETxYdHR1YWlrC0dER169fR3l5Oc6f
P4/JkyfL2zQCgUAgtELYBKienh6K8+OkmM0UnyqqBmhvNkTM2LbBokWLsGzZMvz111/w8/Oja9vm
5uZi8+bNOHv2LD22/h7h7du349KlS8jKysKMGTPg7+8vknQsOzsb+vr6jKSN8fHx8PHxgZKSEs6e
PUsL17Nnz8LJyQkZGRmYNm0agoKCGPvEVVRU8NNPP2H8+PG4e/cu3N3dERgYKCJ8Q0NDMW7cOJSX
l8PAwAAbN25snjeL8K+izWTBzcvLo2tnDR8+nIhPAqGVYGJigjFjxoDL5SI/Px8pKSnyNolAIBAI
rZD8/HyRNkNDQxS9l0aAMjGz9gCHy+6Bayt4e3vD1tYWFEXB29sb5ubmcHBwgImJCY4dO4ZLly7R
Y+snDTMwMMCxY8egra2Ny5cvo0uXLpg6dSo2btxIh9V26NCBkbW2vLwcEydORHl5ObZv387YJ9yh
QwecPn0aXC4XN27cwPbt20Xs9fT0xIkTJ6CpqYnbt2/DxsYGnp6e2LFjB5YvX47Bgwfj888/R25u
Lnr27ImHDx/SdV4JBGHajAf00aNHAAArKyt06tRJvsYQCAQGRkZGcHBwQHR0NMLCwmROKU8gENou
M2fOpBMKkWQjhIZgE6AG+noofiX7HlBz67a/r1BNTQ1hYWGYPn06rl+/jjdv3iArKwuOjo744Ycf
JCbqGjVqFGJiYjB//nzcv38fp06dovssLCwwatQohody6dKliI2NxYgRI7BixQqR9f7zn//A19eX
/nFxccEXX3zBGDN16lT069cPc+bMwePHj3Hp0iWGUNbX18fs2bOxdetWsj2OIBYORVHFAKQPHJcT
hw8fRlVVFUaNGkW8nwRCKyQvLw9nz54Fh8MRm0WPQCAQCJ8u3bt3R1wc09v58K8ryI6dLdM6qurG
GDUjRmIpobbEhw8f8OLFC1hZWclclgWorSualJSE4uJi2NvbN1h6qLmorKxEXFwcXrx4ASMjIzg6
OjaqRBPh06PNeED5fD6A2lANAoHQ+qir40dRFAQCQbMVXycQCATCvwM2D6gyN1fmdcytx/yrxCcA
aGpqYsCAAY2er6ioCHt7+2a0SDLSlgQiEOrTZu4Q6zZfC2+kJhAIrQculwslJSUAtXVZCQQCgUCo
g6IovH//XqSdW5Mh81pm/4LwWwLhU6bNCFACgUAgEAgEQtukoKAA1dXVjDYtLS2UFsmWgEhNswMM
jPtIHkggEFotbSYEl0AgEAgEAoHQNsnNFQ21bd++PQrzomVax8yqecJv+ZU85Gc/QWFeDHIz/wSv
MAmCGj64CspQ1zSFggKJuGs1cDjQ0LKAfb+10NQheWD+DRABSiAQCAQCgUBoUdgEqIG+NvhV6TKt
Y2EzrtE2VPPLkPHyIjKSLyIv6xHq1xYFAPCBqgrReqUE+fI+Jxx52Y8x/OvHUFTSkLc5hCZCBCiB
QCAQCAQCoUVhE6C6OkoyraGh3Qn67WVPeMOvKkFy5H6kxBxFVWWRzPMJrYPyD2+Rn/0UxhZD5W0K
oYkQAUogEAgEQismKSkJqampyM/PB4/Hg46ODgwMDGBoaAhra2vo6+vL20QCQSLZ2dkibVrqfJnW
MLf2kPm8r+NPIubJVlSWi2bgJbQ91LVM5W0CoRkgApRAIBAIhFZGSkoKfvrpJ1y/fh1ZWVkNju3Y
sSOcnZ3Rp08frFu37iNZ+O9g9OjRSE5OBgD8/PPPcHd3l7NF/17YBKi6Ck+mNcysx0g9tuzDW4Tf
W4R3bx7IdA5Ca4WD7v3WQ1vPVt6GEJoBIkAJBAKBQGglVFVVYfny5Th8+LBIxlBxpKenIz09Hbdu
3SICVEbS0tJoAcrjySaGCLLx9u1bkTY1xTxIeyuqod0Jeu16SDU2J+M+woLnS9zLqaHdEUamn0HH
sBs44AIcLtQ1TKCiTmrOtzbUNc2gpmkibzMIzQQRoAQCgUAgtAIKCwvx1Vdf4cGDfzw2Wlpa8PDw
QM+ePeHk5ITOnTvj7du3ePXqFVJSUnDv3j08fvwYNTU1crScQJAMmwDV1RJIPV/a8Nvk6EOIDvke
rAmGAHC5yuhoNwGdu8+AvpGT1OcnEAjNBxGgBAKBQCC0ApYvX84Qn927d8fFixdha8sMOevUqRMG
DBgAANi0aRMKCgpw+/Zt3L1796Pa21y8evUKc+fORXZ2Nt6/f8+arKal2LNnD4qLiwEAffv2/Wjn
/RRhCyXX05G+HL25zdgG+ylKgKiQ75Dy4ojYMRa24+HQ/3uyj5BAkDNEgBIIBAKBIGeePn2K33//
nT6eMGECAgICoK6uLnGuvr4+Jk+ejMmTJ7ekiS1GUVER7t+/DwBQUpItK2pT+fLLLz/q+T5lMjMz
Rdr0daUToFq61tA17C62XyCoRliwN96k/MHar6Zhgt5f7CPZUwmEVgIRoAQCgUAgyBGKorB48WJQ
VG3IoK6uLvz8/KQSnwRCW+D9+/coLy9ntCkoANqaHKnmN+T9FAiq8eT2bGS9us7a3958KPq5HYaK
KskWTSC0FogAbQCKolBYWAgejwdtbW3o6uqCy5U+XIRAIBAIBEmcOHECT58+pY+XLVsGXV3dZj9P
TU0Nrl69iqioKMTExCAxMRGmpqZwdHSEg4MDRo8eDQMDA4nrHDx4EO/evQMAeHp6onv3Ws/U69ev
cejQITx58gS5ubmwsrLCgAEDsGLFCqiqqoqsExkZiatXrzKyo9bU1GDz5s2McS4uLnBzcxOZn5SU
hCtXriA2NhaZmZl4+/YtDAwMYGlpiaFDh2LWrFlQUFBo1LUIk5CQgMDAQACAgYEBFi1aBACorq7G
5cuXcfbsWaSkpEBJSQkODg6YN28eXFxcGjyvMA8ePMCff/6J8PBwvHz5El27dkWvXr3g6emJbt26
NThXnG2pqanYu3cvnj9/jtzcXOzfvx/Dhg0TmR8WFoZjx44hNTUVGRkZ0NbWhpmZGczNzWFtbQ0f
Hx+pr6MhMjIyRNr0dbjgcpsmQCmKQvjdhWLFp7XDbPT8bAc4HHLvRiC0JjgURRUD0Ja3IZL45Zdf
AADe3t5QVlZukXPk5OTg2rVruHv3LkJCQpCbm8tI7MDlcqGvr4/27dvD0dERzs7OcHZ2hpOTE/T0
9FrEJgKQmJiIq1ev0sfjxo2DtbW1HC0iiOPQoUPg8/mYOXMmNDU15W0OgdAmmDx5Ms6ePQug1vuZ
lpYGHR2dZj1HSkoKpk2bhidPnogdY2xsjN9++w0jR45scC0HBwfExsYCAE6fPo3Jkydj586dWL9+
PWsypK5du+LmzZvo2LEjo/23337DnDlzJNq+fPly7N69mz5+9uwZpk2bhsTExAbndevWDcHBwejQ
oYNM11KfixcvYvz48QAAW1tbui6rp6cnoqOjRcZzuVxs3bpVYkZiPp+PFStW0Pc39dHQ0MCxY8cw
YcIEsWuw2Xb8+HHMnj2bkUX57NmzmDhxIn1cVVWFSZMm4fLly2LXVlFRQUVFRYPXIC1XrlzB2LFM
EdnNWhGblkr+O9c1dIDrxD9Z+yIfrEFKzG+sfY4DNsPOaaHsxhIIhBaHeEABvHv3Dv/9739x8ODB
Bj9sBQIB8vPzkZ+fj7i4OJw5c4buS01NRefOnT+GuZ8cUVFRWLNmDX1sZ2dHBCiBQPjXUFcGBAD6
9evX7OLz4sWL+Oabb1BaWgqg1lPWu3dv2NvbIzMzE8+fP8erV6+Qk5MDd3d3LFu2DD///LPU6y9a
tAj79++nj9u1a4cPHz7QIZcJCQlYvHgx40EiAGhqasLc3BxVVVWMxEPm5uaMcfW9wenp6bT4bN++
Pbp37w5bW1uUlpbi2rVrKCwsBADEx8djyZIlOH/+vNTXIg3JyclwcXFBQUFtiQ9lZWXo6+sjJycH
QO29woYNG+Dq6orevXuzrsHj8TBixAiEhoYCqK3lOnToULRr1w5RUVG4e/cuSktL4eXlhYCAAHzz
zTdS2Xb16lXMmDGDDufW0tJiva9ZsmQJLT4VFBTQo0cPDBw4EAKBABkZGXj8+DFKSkpke2Ma4PXr
1yJthnrSeSUtbD1Z2xOf/0+M+OSg99A9sOw2VRYTpSInJwd//fUXAGD48OEtEqnQVomLi0NMTAwA
YOzYsVBRUZGzRYTWzCcvQP/++2+MGzeO/iKpj46ODqysrPD27Vv6y4WNug97AoFAIBBk4eXLl/Tr
Tp06Neva79+/x7x582jxOWrUKJw6dQra2u0JPgIAACAASURBVMzApx07dmDDhg0QCATYs2cPhg8f
zhr2Wp8jR47gzz//hKKiIhYvXowVK1bA1NSUFmE7duwAAFy7dg1xcXGwt7en506cOBETJ05EREQE
evXqBaA2CRFbuKYwCgoKcHd3x4IFCzBixAjG1hg+n4/vvvsOP/30EwDgwoULyMrKgqlp82Q9LS0t
xejRo1FQUAAHBwds27YNI0aMgKKiIpKSkuDm5oaMjAwIBAL8+OOPYsXvtm3baPE5YcIEHDt2DBoa
GnT/pUuX4OXlhZqaGvj6+mLKlClQVGz4lu3Dhw+YP38+AGD+/PlYtWoVOnfujKqqKvD5fHpcQUEB
Dh06RB8HBwdj6FBmch6KoiR6mGWBVYDqNxweXQsHFjaiAjQj+SJinmxlndHr810tIj4BICYmhvaS
R0VFEQEqxLfffktn8T5z5gwmTZokZ4sIrZlPOij+zJkzcHNzY4hPLpeLhQsX4sKFC0hNTUVhYSGe
P3+O7OxslJaWIjY2FidPnsTkyZOhr/9pbGgvKiqi09QTCAQCofnIzc1leJqaW4Bu3LiR/o7r378/
/vjjDxHxCQDr1q3D999/Tx8vXbqUIVrE8eeff0JLSwtBQUH4+eefaaHH5XKxadMmxvdkXFxcUy8H
APDVV18hKCgI7u7uInkZlJSUsGDBAkabsIe5qWRlZSE5ORkeHh4ICwvD6NGjaWFoZ2eHxYsX02PF
XW96ejr27t0LADA0NMTRo0cZ4hOo3Wri6elJjz99+rRE296+fYt3794hICAABw8epKOylJWVGetH
RETQrx0cHETEJwBwOBx07dpV4jml5dWrVyJtRoaSb0GNzD6DmqYJoy0/Owzh9xazjnd08UVne+m8
xQTx5ObmIioqSmoveGJiIqOE1NGjRyXOKS8vR0pKSrM+6CC0HT5ZARoVFYWZM2eiqqqKbjM0NMTN
mzfx66+/wtPTE507dwaH888GeXV1ddjb22PKlCk4ffo03r17h5CQEKxbt07ky6Otk5iYCEtLS6ip
qUFPTw9+fn5ys2XYsGGIiIigfz7//HO52UIgEAjNibD3E2heAZqRkYHDhw/Tx8uXL28wkd6iRYug
pqYGoDZs9uTJkxLPweVycf78edYEN8rKyrCzs6OP2bxgLYGlpSUcHR1b7LxDhgzBhQsX6PdKGGnO
u23bNlRWVgIAZs6cyfpAAADDg3ThwgWpbFu/fj2mT5/e4Ji6cwO124fERYA1JykpKSJtxoaSPaCd
7CYyjj8Up+HRjWkQCKpExtr2WAA7Z3ZhSpCenJwcGBsbw8nJSWpxWCc46+6Z79+/z/rQQZhly5bB
xsYGK1asaJrBhDbJJylAy8rK4OXlxfgQ7tWrFyIiIqQKOapDQUEBAwcOxPbt22FsbNwSpsqNsrIy
pKWlNVsCgqagp6cHJycn+qe590cRCASCvBD+HgLQrEn2oqOj6aRAampqGDduXIPjDQ0NGUJS2FMm
jjVr1rCKzzqEs+oKJ8VpabS0tOjX0nhypUVXVxfnzp0TGw4rzfUKZzwWt0cUACwsLOjXksKSAcDE
xIThxRaHs7MzXW+1rKwMbm5uiIyMlDivsVRXV7OKEeN2Dd+CKippwtRqNH3MryrBo+tfo6pCVDCb
WY2B48Afmm4sQWaqqqroGsbr168HUBvC7e/vL0+zCK2cT3IP6LFjxxhPnblcLo4fPy6S+IBAIBAI
hJakfkK11NTUZltbOPTU1NRUYkkSgCl6pAlddXBwaLBfmnM2BzweD9nZ2cjOzkZeXh7y8vJa5DxG
RkZo37692H5J10tRFOP+4/fff0dQUBDr2A8fPtCvpRGgWlpatLBsCBMTEyxevJhONPX8+XP06dMH
EyZMgI+Pj0wlZKQhLS1N5CGAshKgp9OwALWwGQdFpdpauJSgBk9uzwavUPRv0qB9b/T98gAjYk0e
pKam0uHfp06dgp6eHg4ePIhbt24hJCQExsbGmDt3rthIhKKiIvz000+4fPky0tLSoKqqCjMzM3Tr
1o3Okl2ftLQ0bN68GWFhYUhLS0P37t0xZswYrF+/nvUcmzZtQmhoKIYPH47ly5fj1KlTOH/+PO7f
v49jx44hJiaGTrIEAIsXL6Y99F5eXqxZqy9fvoz8/HwYGRnB19cXd+7cQXh4OAICArB582aR/4m6
9ykhIQFA7QMZYefPtWvXSAKjT4BPToDWJVgQxsvLS2KtreairKwMcXFxePHiBRITE2FiYgIHBwc4
Ojo2+KVWn5KSEkbtNFNTU0YYcEVFBa5fv46kpCS8f/8ednZ2cHJyQp8+fRpcNysrC6WlpUhPT2e0
5+XlidyMqKurw8zMTOxaFRUVePr0KTIyMpCZmYnc3Fy0b98elpaWcHBwYCSjaMq1yjK2se9LQ2Rk
ZCA8PBzh4eHQ0NBA79690atXLxgZGUk1X5LNjx49wtOnT5Geng4bGxssXEjSyhMI/xbMzc2hoqJC
e0LZQhUbS30BKg3C45pz72RLEBsbi6NHj+LkyZN4//69vM2RiqysLJSVldHHN27ckGpeYWEhSktL
m227z48//ggej0eHTtbU1ODs2bM4e/YsXF1dsWXLFvTr169ZzlUnNIQxMVKQKBgt7afRr6MebUBO
xn2RMepa5hgw8gQUFEXrzH5sSkpKEBwcDKD2gYi3tzejzA2Px8OqVatQUlIiUuu2oqICQ4cORVRU
FLhcLrp3747KykrExcUhMzOT9XzBwcGYNGkSCgoKYGNjg549eyI6Ohrh4eF49OgRgoKCRMRfVFQU
goODYW5ujsOHD9NJq4BaT3VUVBT+/vtvui0sLIx+7eTkxGpH3Ratb775BkpKSpg7dy7Cw8ORlZWF
mzdvYtSoUWLfJwDIz89nHAsEAtbzEP5lUBRVTLUB9u3bR+3bt4+qrKxs0jp//fUXBYD+4XK5VHx8
fDNZKZ6MjAzK1dWV4nK5jPML/1hYWFBBQUFSrXfmzBnG3CtXrlAURVE1NTXU9u3bKUNDQ9ZzjB8/
nsrLyxO77rBhw8TaV//H1dVVZH5JSQl18uRJytPTk9LQ0GhwvpeXF/Xq1atGX+vHfF/YCAkJoTp1
6iT2+iZPnkyVlZU1+vpiYmKofv36Mfr69u0rk40fm4MHD1L79u2jSkpK5G0KgdBm6Nq1K/0//sUX
XzTbuhMmTKDXdXd3l2rOr7/+Ss/R09NjHdO9e3d6zOnTpxtcz8PDgx67detW1jHPnz+nxygpKUm0
saqqivL09GR8NlpZWVETJkygli5dSm3cuJEyMzOj+w4dOiR2LWmu5cKFC/QYW1vbBm2LjIykxyoq
Kor0JyYmMuweNGgQNWTIEKl+eDxek2xj4/r161TPnj1Fvr84HI7Y35esbN++XWT9gb2UqcBfDcT+
3Dk7lJ6fEnOMdcylwx2povyEZrFRWu7cuUNfQ1RUFKNP+Hfv4uJCqaqqUmvXrqUiIiKohIQEasSI
ERQASlVVlaqqqmLMPXbsGAWA0tDQoN6+fUu3l5aWUs+ePROx4/3795Suri4FgDp58iTdnpGRQVlZ
WVEAqFOnTonMq/t/7NatG6WoqEjNmjWLunfvHlVQUEAVFRVRAoGAysrKoq/jyZMnlEAgoH/q8/Ll
S4rD4VAcDodKTk6mKKr2PlBTU5MCQHl4eLC+jwKBgJo3bx4FgBoxYkSD5yD8O/nkPKAPHz5kHA8f
PrxZM72xcerUKSxcuFBiJtmMjAyMGjUK3t7e2L17t8xPOouKijBx4kTcuXNH7JgLFy4gOTkZERER
LRIaFRQUhKlTpUt/HhgYiKdPnyIuLg7q6urNbksdLfG+7Nu3DytXrmxwb9GZM2eQmJiIK1euMMLa
pOHx48cYOXIkioqKZJpHIBDaHjY2NrSX6Pnz5ygsLISenl6T1xUO7xWOsmiIt2/fss5vLVRXV2PS
pEm4dOkSAMDe3h779u3D0KFDGR61e/fu4c2bN/IyUyxWVlZQVlamEyDu2bOnwX2gLc3IkSMxcuRI
3L17Fz///DNu3rwJoDZUeMOGDVBTU8Py5cubdA62bMCmxg1/z9o4zgUA5Gb+jcgHa1hGcNDf7Qh0
DLo0ybaWIjw8HBcvXsSYMWPotk2bNuHmzZuoqKhAamoqunT5x/a6aANnZ2eYmPyT9VddXZ0uUSTM
li1bUFRUBA8PD0yZMoVuNzc3x+rVq+n7yK+//prVvvj4eLH1foVDd7lcboOe6qNHj4KiKHz++eew
sbEBUFvfd9KkSTh69CiuX79OJzUShsPh0OsKvyZ8OnxySYhCQkIYxy0dertt2zZMnTqVFp8qKipY
uHAhjh07hvDwcFy5cgW+vr6wtbWl5xw+fBifffaZTAkbqqurMX78eFpkqaio4PPPP8fcuXMxfPhw
hqh68eIFfv31V9Z13N3d4e3tTad/r6N///7w9vZm/Li7uzdo02effYaNGzfi5MmTCAsLQ0hICPbu
3csINU5LS8OWLVukvk5Zaa73RZh169ZhyZIltPgcNWoUTp8+jejoaAQFBcHHx4f+MI2MjBT7BSCO
4uJiTJgwgRafHTt2hIeHB8aPHw9LS0uZ1iIQCK0f4T13xcXF2L59e7OsK/y9IiwsGyIrK4t+XXdD
2Zq4ePEiLT5tbW3x999/44svvmgzN7CKioqM97X+PYm8+PLLL3Hjxg1cuXKFEYa9adMmlJeXN2nt
6OhokTZzE/ECVFlVH+Y2Y8ErSMbjWzNAUTUiY3oM2gKTTq5NsqslOXz4MEN8AkCHDh3o1zwej9FX
twcyJCQE+/fvlxiGWldfdvjw4SJ9zs7OAGprlopbZ9CgQdi1a5eEq2gYPp+PgIAAAMC8efMYfXXH
1dXV9BgCQZhPzgNafy9Cc9dcEyY9PR1bt/5TKLlDhw64fPky+vbtS7f17t0bHh4eWL58OaZOnYpr
164BqBUuBw4cgI+Pj1Tn2rhxI+Lj4wHUpnX/4YcfGPszg4KCMHr0P9nk/P39sWTJEpF16mqYRURE
4OLFi3T7uHHjsGrVKol2aGlp4dtvv8WCBQvQvXt3kf6BAwdi1KhRsLe3pzPsXrx4kS5W3tw01/tS
R0pKCnbv3k0f+/r6YtOmTfSxo6Mj3N3dMXDgQEycWJs+/tGjR3jw4AEGDx4slc2bNm1CVlYWOnTo
gD179mDChAlt5uaKQCDIjo+PD/bv30977H755RcsWrQIHTt2bNK6wgI0NzcXGRkZDUZjUBTF2PMl
PP9jIenGWziKacqUKYyss20Fe3t72it448YNLF26VM4W/YOHhwfU1NTozMYlJSVISkpCz549G7Ve
eXk56x5QSzPxt5/WDnPAryzGw6CJ4FeJ1qG07DYNtj3ms8xsPbi6iorjhhJEDRkyBM7OzoiIiMCi
RYtw6NAhLF26FNOnTxeZV1paSj8oOnz4sEiJnroHBnw+Hzk5OQzhW4etrW2DJZmk4erVq8jNzYWB
gYFIhu0+ffqgR48eiI6Ohr+/P9asWUPuYwgMPjkPaGFhIeO4JQXoypUrGWVMrly5whCfwmhra+OP
P/5ghAP7+voiPz9fqnPFx8eDy+Vi79698Pf3F0kONGrUKMYG8pcvX7bIRm93d3fs37+fVXzW0blz
Z4boS0tLa7H0/M39vqxZs4b2fHbp0kVsynsvLy+GV0MWj8br16/RuXNnhISEwMvLi3xoEwj/ctTV
1fHjjz/Sx5WVlZgxY4bUn/911P8c7dOnD12Hk6Io7N+/v8H5t2/fpuv+KSoqYvz48TKdv7EI18Gs
qalBbm6u2LHPnj2jXxsaGkq1fv1SN/Jm6dKl9Od6cHAwrly5ImeLmLi6ukJTU5M+bkoZm6ioKLoU
UB0aahwYiakBqqCohk5dJuFh0GSUlYgm32lnOgjOg3c22p7WCofDQWhoKNasWQMFBQXExsZizpw5
sLOzw/37zORLwkmJoqKicO/ePcZPaGgo3d9S2aAB4MiRIwBqP7/mzp2L6dOnM37q/m5evnzJSGxE
IACfmACtrq5GSQnzaVpLCdCnT58ynkoNGjRIYqZVDofDeBJaVFQkk3DZuXNngx5T4QLZ5eXlUodk
tQTCe4v4fL7YLG/NQXO9L+Hh4XToF1B7E9HQftFp0/7J4Hf79m2Je4DrUFFRwR9//EHCbQmET4iv
v/4aAwb8H3vnHRbF1cXh3xaaSAdBpCggqCgoIorYS2IBjb1gV6LGaIwxmERjNIpGY2LQaMTe/SxY
F6wRS1QE6SpVkC5NpZdld74/yE4Ydhd26eW+z3Mf5tY5M7vMzrn33HMG0vkHDx7A1taWERJBGmlp
adi0aZPYiqmCggLD67uXlxcCAwMljvHu3Tt89913dH758uUyeyqvK126dGHEPxXtQ5RE5XBpp0+f
FlNuysrKsGXLFoaiKskEtClxdHRkmCyuWLECQUFB1fapzwnjFy9eMELBVCUwMJAOAaOkpARbW9ta
n8vf31+srIux9N9Nsx5z8cJvNT5mh4vVqWlaYOCY42Bzag410xJRUlLCL7/8gpCQECxatAgcDgcJ
CQn49NNPGd/hyibSt2/fBkVRUlNdPrvqePv2Lb21KTk5GadOnRJLIuszADhy5EiDyEFoubQpBbTy
aqQITU3NBjlX1Yfu0qVLZeo3d+5cqKioSB1HGtOmTcM333xTbRs9PT1Gvj6Dc8tL5WsEJH829UF9
3peqDqxqmlCo+jJYNbSNNDZs2FDtCjKBQGidHDp0iOGAJC0tDSNHjsS0adOwY8cO3L59G2lpaYiK
isL169exa9cuTJkyBaampti8ebNER0Njx47FuHHjAFTsLx0yZAh+//13hISEoKSkBJGRkTh58iT6
9u1Lv+Tq6uqKhYloSDgcDpycnOj8t99+i0uXLiEvLw95eXmMECvDhg2jj589ewYbGxt4enri9u3b
+Pnnn2Fra4uNGzcyzBbv379fr/FV64Pt27fTn3VaWhr69++P1atX4/bt20hOTkZubi4iIiJw4cIF
LFiwQMyJS124d+8erKysMGLECBw7dgwvXrxAfn4+IiMjsWXLFnz22Wd023nz5jEmB+RF0h5Xyy6S
FUgOVwV5H+OQmfJIrE5JWQeDnP8HReWGeWdrTvTq1QtHjhyBv78/9PX1UV5ejpMnT9L1ampq9ERM
U+0hPnLkCCiKgoODA4KCgqQmkWmut7c3capIYNCm9oC2b98eHA6HMWP69u1bmeOjyUPV+GkiM6ia
UFFRgbGxMd1f1jhslb2gSaMuPyItlfq8L5U/CxaLhZycnGrNSqqupCYlJTFWW6VRU2B3AoHQOunR
owcCAgIwadIkegVPKBTi0qVLYvu8JCHNc+6FCxewevVqHD58GCUlJdVOyg0YMAAnTpyoFy+88uDp
6Qk7OzuUl5cjOzsb06ZNo+u2bduG77//HgCwbNkynD17ljYzfP36tdgeyoULF2LHjh3o3bs30tLS
8PbtW3Tv3h2zZ89uNg5RtLS0EBwcjCVLlsDHxwcCgQCenp7w9PRslPNTFAU/Pz/4+flJbTNgwADs
3bu3TueoOnELAN3MJb96qqh2RIaEWJ8crgoGOZ9De43OtZalJWJvb4/58+dj586dYl78x44di4MH
D+Lo0aNYu3Ytw4y9rlSevElISBCbbBcIBDh69CiACksJkdMjSXz11Ve4fPkyiouL6YgQVc+TkJBQ
b7ITWg5tagUUEF/xbKhZ0aqKo6RN4NKorBDn5OS0mADbknj48CE2btwINzc3ODs7o2/fvjAyMmLs
d2opVP5MKYrCJ598gmHDhklNbm5ujP5JSUmNLTKBQGhhGBkZISAgAOfPn0ffvn1r3APO5XLh4uKC
ixcvSt0+oKqqikOHDsHb2xvdunWT6HzE2NgYHh4e+Oeff5rE+VCvXr3w999/13huDocDHo+HxYsX
i92bbt26wdvbG0ePHoWenh62bdsGJSUlABWWLQEBAQ0mf20wMDAAj8fDwYMHYWVlJfFzYbPZsLOz
q1dHRSNGjICrq6vUVVVdXV3s3r0bDx48oO9fbQgJCRHbg8hmAVZm4iugLLYCCnLjxctZHDh+ehTa
+tKVnNbAzZs3JW5Fun37NgAwQrYAFZMyurq6SE1NxYIFCySuLqanp9dq/7OOjg40NDQAAD4+PmL1
Pj4+SEtLg4aGBqZPn17tWEOGDKH/pw8fPsyoMzc3B1DhHJQooW2PNrUCCgAdOnRgKHRxcXENcp7K
ygqHw5HLfKbqimxsbGyL8vT3/v17HD58GIcPH652n0lLo67fleocaxAIBIIIFouF6dOnY/r06cjM
zMSDBw+QlJSE7OxslJSUoFOnTjA2NoaxsTG6desm8+/D5MmTMXnyZBQVFeHly5eIjY1F586d0bNn
T/qFUxYiIiJkbiuPg50hQ4bg1atXiIqKQmRkJBQVFdGtWzf6RVWElpYWDh8+jJ9//hnh4eEoKirC
oEGD0KFDB0a7+fPn47PPPsO9e/dgZmYm0bpElmuZMmUKKIqS6Rp69+4tc1sRbm5ucHNzoz+X6Oho
qKuro2PHjrCysqr2s5FHNhEODg44ffo0gIr3i6SkJKSlpUFTUxMWFhZ0rNK64uvrK1ZmacaFirL4
pAollLT1hYV+I/9s1uFW6osTJ07g0qVLGDp0KGxsbGhfEFFRUWjXrh3Wr1/PaK+jo4Njx47B1dUV
V65cwdOnTzFq1CiYmZkhOjoa/v7+SEpKQlxcnNj/jyzMmjULBw4cwMmTJxEbG4sxY8bA0dERo0eP
xsGDBwEAc+bMkSmG+5IlS+Du7o7Q0FAEBQXRcU0nTpyIH374AcXFxbCzs8OsWbOgra3NiB5BaL20
OQW0X79+DJfgDaWAVn54C4VCCIXCah3WVEYUoFpEXWYgG5vMzEwMGTIE0dHRdJmhoSFcXV1hZWUF
Q0NDaGtr49ChQy1uU3plExcdHR18+eWXcvWvvHeJQCAQZKFDhw41rjLIS7t27eDg4CDVK3tTwuVy
0bNnT5n2wRsaGtZoXaShoSEW17q50hSfS9euXRss3qsoVmVl7KxlVWxZsB/+B0ytptXctBUwbNgw
JCUlwd/fn+H1tn///vj9998lhsFxdnZGREQEli1bhvv37+PMmTN0nYmJCZydnWttmvvLL78gMzMT
ly9fxrNnz/Ds2TNs3boV3bp1o52EVbXyksb8+fOxfv168Pl8HD58mFZAu3TpgjNnzuDzzz9HdnY2
/vrrL3C5XKKAthHanALq5OTE2Mx9584d5ObmyjX7KwuWlpb06h9FUUhPT682/lplKgcCB5pnMHBJ
5OTkYNSoUbTyqaysjEOHDmHmzJngcplftar7GVoCPXr0oGO35ebmwt3dXabZPwKBQCAQ2hIREREI
Dxf3ZGtvU7MHWxaLA/sRe9C524yGEK1OjB49WuqKc02r3/r6+lLrly1bhmXLlkEoFCI6OhrZ2dkw
NzevcYLFxMQEvr6+KC8vR3R0NHJzc2FtbS31nVZWiwQNDQ14e3sjJSUFcXFx6NixI8zNzcHlcsU8
T9dEhw4dxBZWREyaNAljx45FVFQUCgsLxUyNCa2XNqeAjhw5EiwWi34I5OTk4JdffsH27dvr9TyW
lpYM2/m0tLRaKaCGhoaMeFzNGU9PT9qcicViwdfXF8OHD29iqeqPHj160Mfl5eXw9/fHiBEjmlAi
AoFAIBCaH5KcKZkZc2BkUP1rJ1dBFY6fHoWB6ciGEq1Zw2azGfHgZYXL5TZI2CQjIyOx+On1jbKy
ssQVXkLrps05ITI3N8fYsWMZZZ6enkhJSanX81R1pCBpJlAS2dnZDAW0uax+yrLHpLK3Ozs7u1al
fAJMBRQA/v777yaShEAgEAiE5klUVBROnDguVj5sQPXbiVRUDTB8Eq/NKp8EQluiza2AAsCaNWsY
m+OLi4vx9ddf49y5c2KmorVl+PDh4HK5KC8vBwDs37+fEXhaGgcOHGDEoWyqFbaq+04zMzOrbc/n
8/H8+XM6L28oEXmdKDQFo0aNgq6uLrKzswEAe/bswdKlS2Ve2SYQWiPl5eUoKysDn8+nU9W8pFRe
Xl7j3+qSQCAQy4tS1XzlJBQKxY4r/5WWKIqi/1Y9FiUAYmVFRUUoLi6GUCgEi8WCsrIyVFVVa/Ru
SyC0NAzU+Fi5RIiSUgrrV7RDUHgZHgWWIa+AQvt2LAwboCy1r7p2N1j0WoL83HgU5L0Fi8X+N3GA
f/+yWGyw2Jx/j/9N7Ep1dDlLvB+LDbBYYIH1bzkLAOu/Mvz7/8hiQVBeAqGAD65ie/J/2oxggQWu
ohr5TFoJbVIBHTlyJObOnYtTp07RZZcuXUJaWhrOnj0LU1NTmcfKzs7GkSNHMGPGDHTu3Jkut7Ky
wvLly+kYWmFhYbh37x5GjRoldayCggLs27ePzhsZGWHt2rVyXFn9YWZmxjBVrslTIJvNZiiRgYGB
EAqFEt3KFxUVISgoiFEWGxsrtsLY3NDW1sauXbuwYMECABWf1xdffIEbN26QByKhweDz+SgtLZU7
lZWVoaysjD6u+ldamSiJFMma8i1h8qg5UVhYiMLCwqYWg0CoV7p0An74ShssFgfq7YEOOoB1V0XM
mwKUl1PI+SiEspL038m891EIftg07zuEloNyO330G7GHrJK3AtqkAgpUrEg+f/6cES7l6dOn6NOn
D7y8vDB58uRqvdb6+/tj//79uHDhAkpLSzFu3DixNps3b8bZs2fpsC+TJ0/G2bNn4ezsLNY2Pj4e
EydOxLt37+iynTt3NpmTGxUVFZiYmCAxMREAcPfuXTx58gROTk4S23M4HPTs2ZMOnv7q1Sts3LgR
W7ZsYShnvr6+WLFiBd6+fcvo/+LFC0ycOLFhLqYemT9/Po4fP44HDx4AqIiHNWzYMBw6dEhq/Do+
n4+HDx9CU1MT9vb2jSgtoa4IhUKUlJSguLgYJSUljOPKZZVTaWmpxPKqbUTtqvtbWloKoVDY1LeB
QCAQquXHVVpSJ2K5XBb0dWWLAkAgjE7k7QAAIABJREFUVEdJUQb87yzB+HlhUFCqnYdfQvOgzSqg
7du3x/379+Hi4oKQkBC6/MOHD5g+fTqUlZXRq1cv9O7dGzY2NigpKUFMTAxiYmIQHR3NUBSloaWl
hd27d2PhwoUQCATIz8/HxIkTMW7cONjb26NHjx5ITExEcHAwbt68yQgkPG7cOMyaNatBrl1WPv/8
czr2FEVRGDlyJL788kvY29ujrKwMmpqamDBhAt1+8eLFtAIKAB4eHuDxeHByckJaWhqeP3+O9PR0
ABV7RDMyMuj9rl5eXjA2NsbEiROhr6/fiFcpP15eXhg9ejSSkpIAAI8ePYKtrS0++eQTdO/eHd26
dUNZWRkSExMRFRWFe/fuIS8vD3v37iUKaB2gKArFxcWMJDJvlFYmUhTlzYv+VjaHJxAIBIJkiBEQ
obHgl+WjIC8BWnq2TS0KoQ60WQUUADp16oTHjx9j+fLlOHPmDGOloaSkBIGBgQgMDKxxnO7du0NL
S0ti3dy5c2FhYQFXV1ckJCRAKBSCx+OBx+NJbK+kpIStW7dizZo1tbuoemTt2rU4e/YsHXqktLQU
v/32G10/d+5chgK6bNky8Hg8hvffsLAwhIWF0Xk2m41169Zh8+bNOHLkCJYvXw4AyMrKwtKlS+Hh
4UGvujZXLC0tERERgVWrVuHEiRMAKr4v169fx/Xr15tYuuZBUFAQvf9NUqqsKFb+W11daWlpU18W
gUAgECRw/2k+nEeqk+0ohAZHuZ0B1LUkW5wRWg5tWgEFAFVVVZw8eRLu7u7YsmULfHx8ZNqfo6Oj
g5kzZ2L+/Pno169ftW0dHR0RGhqKb775BjweT+LqqZqaGhwcHODp6dkgrrRrg6KiIp48eQJ3d3cc
OnRIpr1eV65cwY4dO7B161aGwsDlcmFvb4+dO3di8ODBACpWTE+ePIlnz57R7XJyciAQCKo1f24O
qKur4/jx45g4cSK2bduGly9foqSkRKwdi8VCz549MXTo0FbnFbg6xowZI/F+EAgEAqH1cepqObS1
itDPph24nIoVUXmUUZX2naCt1xssNgcUJQQoIShKCIoS/Jv+zQsFlcoEoITCSvX/lQGV+4vGowBQ
/+YpUKAAqmLhgcK/zsXKSyAU8gFQYLE44HCVKxwaEZoeFgtqmhawG/orOFyVppaGUEdYFEXlAmj2
htQiZz5Lly6FoqJig52Hz+fD398f/v7+yMzMRHZ2NkpKSmBoaAhjY2MYGxvDxMQEtra2tZYjMzMT
YWFhiImJgampKXr16gUTE5NmPXOYnp6OV69eISYmBrq6uujWrRssLS2hrCzZq9379+8RFhaG6Oho
mJubw9HRUWo801evXtH7b21tbaGgUHOg6uaGQCBAdHQ0wsPDkZ2dDQMDAxgYGKBHjx7Q1tZuavEa
DZEXZ3d3d6KAthG4XC4UFBSgqKgIBQUFOlXNKygo0G2r5iX9rXpcOXE4HKnHolQ1L0psNlvsmM1m
ix1XTRWeNVn0ceUyUQIglgcqLCQKCgrQrl07qKqqNtVHRSA0Cu3bt0fAXVdkp/4jV792asYYOPYE
tPRsGkgyAoHQXCAKKIFAqDeIAlr/KCgoQElJSa6kqKhI/618LEudSHkUpZryzXnijEAgNA0UJcSd
88OQl/Narn4cbjv0H30AnczEHTsSCITWQ5s3wSUQCARpsNlsKCkpQUVFBcrKyvTfqsfVJSUlJall
1f0VHUsKZUQgEAjNGRaLjUHjTsH3lD0A2UM1CcqL8PTmfPQZsh0WvZY0nIAEAqFJIQoogUBoEbBY
LFrxE6V27dpVm6/avmqZtHpRObG2IBAIhNqhqm4KK7svER28V86eFEIefYeyklz06PdNg8hGIBCa
FqKAEgiEeqd3795QUlJCu3btxJJIUax8XPWvpDIlJSVi7kkgEAgtiG59ViEm9CAoofxezF8FbAdF
lcPaYV0DSEYgEJoSooASCIR65+7du1KdThEIBAKhbaCorAVLWzdEh/xZq/6vA38Fm6OE7n1X17Nk
BAKhKSGbiwgEAoFAIBAIDYJ5z0V16v/SfyvevDxWT9IQCITmAFFACQQCgUAgEAgNgqq6CQxMRtVp
jJBH65CWcLOeJCIQCE0NUUAJBAKBQCAQCA2GmfXcOvWnKCH873yO95kh9SQRgUBoSogCSiAQCAQC
gUBoMDqajgZXUa1OYwjKi/HEZy6KC9LrSSoCgdBUEAWUQCAQCAQCgdBgsDmKMOk6uc7jlBS9wxPf
ORCUl9SDVAQCoakgCiiBQCAQCAQCoUExMp9QL+N8yArDC7+v62UsAoHQNBAFlEAgEAgEAoHQoOh1
coKCoobc/Vhs8YiBSTEXERO6vz7EIhAITQBRQAkEAoFAIBAIDQqbzUUns7Fy96OE5WCxxJXQ8Keb
kJn6T32IRiAQGhmigBIIBAKBQCAQGpyOnT+tVT+uYnuxMooSwv/2EhQVpNVVLAKB0MiITykRCHUk
LS0NwcHBdL5fv37Q19dvQonko6XLTyAQCARCc0TfeBjA4gCUQK5+/NKP0DHoj5x3zxnlpcXZeHZr
IYZPugE2R7EeJSUQCA0JWQEl1DuPHj2Ci4sLnfz9/ZtaJLlo6fITCAQCgdAcUVBUg17HAbXqm/ch
CjoGDmLl7zOCEPrPj3UVjUAgNCJtZgU0JSUFZ8+epfPdu3eHi4tLncY8duwYsrKyAAC9e/fGJ598
UqfxCAQCgUAgEFozBqYjkJX2RO5+/NJcaOvboSg/CcWF7xh1b14egW7HfjCxnFpfYhLaAIGBgfjh
hx+grq4Ob2/vphanTdFmFFBdXV1s374dHz9+BADo6+sjJSUFXG7tbkFaWhrc3NwgEFSYkVy8eLHe
ZCUQCAQCgUBojegbDUUEttSqb8LrU3D89Bj+8Z0NSljOqHvhtwYaOj2hodOtPsSsFd9//z3evXtX
bRtXV1eMGjWqkSRqXO7cuYNz585h9erVsLW1pcv9/f3h5eVF51ksFtTV1WFkZARHR0c4OTk1hbjI
zs7GvXv3oKOj0yTnb8u0GQVUWVkZM2fOxIEDBwAAGRkZ8PX1xYQJtYtLdfbsWVr51NTUrPNqKoFA
IBAIBEJrR1PPBopKmigr/Sh333J+IbLSnqC301aEPP6OUScoL8KzWwswctpdKCiq1Ze4cuHt7Y3Y
2Nhq2/Tp06fVKqB//fUXbty4gd9++41RHh8fj+PHj0vt179/f/B4POjq6jawhITmQpvaA7pw4UJG
/tixY7Ue69SpU/TxtGnToKSkVOuxCAQCgUAgENoCLBYbep0G1bp/XMQRmFhOgUnXKWJ1+R/jEPj3
yrqIVy+sXLkSsbGxEtP8+fObWrwauX79On744Qdcv35d5j6lpaW4e/cunJycoK2tLbENl8tFbGws
goKCcPnyZUyePBkA8Pz5c8ybN69eZCe0DNqUAurg4IAePXrQeR8fH3oPpzyEhYUhPDyczs+dO7de
5CMQCAQCgUBo7XSogwJazi9ATNgB9B3+O9S1rcTqU+N5iAreUxfx6oy2tjYsLCwkJg0NjSaVTRYO
Hz6M7du3IzAwUOY+fn5+KCwsrNEi0MLCAnZ2dpg0aRK8vb0xZ84cAMD9+/dRVlZWJ7kJLYc2Y4Ir
YsGCBXB3dwcA8Pl8nDlzBqtXr5ZrjMqrn507d8agQbV/kBIIBAKBQCC0JXQNHevUPy78EKz6fImB
Y47j3sXRKOcXMOpf+m+Flp4t9I2H1uk8DU10dDQKCwthbGwMPT09lJeX459//sHr16/xxRdfiLV/
9+4dwsPDERsbC1NTU9jY2MDExETm8YEKc1g/Pz9oampi5MiR0NTUpNsXFhYiOjoaubm5AID09HQ6
LJ2GhgbMzc2lnuvGjRsAAGdnZ7nuwZgxY3D69GmUlpaCz+dDUZEZTofP5+P58+dISEjAhw8fYGRk
BCcnpxrD42VnZ+PVq1eIioqCgoICTE1N0blzZ5iZmYHFYskkW0hICCiKgqmpKdknWs+0OQV07ty5
+P777+n9m8ePH5dLARUIBAxvunPmzJH5i0wgEAgEQl0RCoVISEhAYWEhdHV1oaenBwUFhaYWi0CQ
GQ2dHlBQ0gC/NLdW/flleXgTcQTd+q5GvxF78Oz2IkY9RQnhf8cNo6b9DVV14/oQuUGYN28eAgIC
sHfvXlhbW2PSpEnIzc1F+/btGQpocXExvv32W+zbt09sjGnTpuHAgQMSzV4rjz9p0iQ4OzsjNDSU
rjc0NASPx0OfPn0AAOHh4Rg4cCBdf+TIERw5cgQAMH78ePB4PKnXwuPxYGFhgW7d5HMClZCQAACw
traGqqoqo27dunXw8vKiFWIRqqqq2L9/v0Sz3eLiYvz000/4/fff6Xf9yhQUFIidRxIbNmyAh4cH
bG1t8fjxY3kuiSADbU4BNTAwwNixY+l/orCwMAQHB8POzk6m/n///TfS09PpvMh0oCaKiorw6tUr
hIeHIyoqCh07dkSvXr1gY2NT4yyOLPD5fMTGxiIyMhKvX79Gbm4uTExM0LlzZ3rWpyazj5KSEgQE
BCApKQnJycnIyMiAvr4+unTpgl69esHa2rrOcgJAbGws/Pz88PbtWygqKsLe3h729vYwMDCQqX9W
VhY+fPhA583NzcHhcKrtk5KSgqKiIgAAh8OpdhavttTX/cvPz2d8xzp16sR4WD558gQBAQFITExE
165dMXnyZOTn59P1RkZGaNeuncxyv337ljZ70dDQqJfvI4FAqH8ePHiAH374AcHBwSgtLaXLORwO
bGxs4OTkhK+//hpmZmaMfjk5OXBzcwMAdOvWDdu2bWtUuQmEqrBYLOh2HID0t7drPUZMmBe62i6D
kcUEWGasQEwoUzkrK3mPpzfnYvhkX3AVZP9NbApiYmKwceNGKCoqYsmSJdDS0qLrBAIBhgwZghcv
XsDMzAzu7u7o3r074uPjsW/fPly8eBHPnz9HREQE1NXVJY6fnJyMYcOGISkpCS4uLjA1NcWpU6eQ
lpaGJUuWICgoCABgamqKX375BSdOnEBkZCRGjBhBhxi0sLCQKn9YWBiSkpLw9ddfy3Xd8fHx8PT0
BJvNxi+//CJW//DhQ9jZ2WHKlCmwtLREZmYmDh8+jAcPHmDFihUYN24cw3FR5XvFYrHg5uaG0aNH
g8PhIDw8HOHh4TW+LwIVJsgeHh7o1KkTeDwe1NSaxqlVq4aiqFyqBbBnzx5qz549VGlpaZ3HunTp
EgWATitXrpS575w5c+h+Dg4ONbZPSkqiRo8eTbHZbMY5KycTExOKx+PV6lqysrIoV1dXisvlSh1f
lPbv3y/WPz8/nzp9+jQ1ZcoUSlVVtdr+06dPp+Lj42uU6dy5c4x+V69epSiKopKTkylnZ2eKxWJJ
HH/EiBFUZmZmjeOvWrWK0S8jI6PGPsOHD6fb6+vr10p+STTm/YuIiKD69+/PqHNwcKB27drFKNu0
aVON5xCRmprK+O6cOHFC5r6S+Ouvv6g9e/ZQ+fn5dRqHQCAwcXNzq/EZD4C6cuWKWN+kpCS6fuDA
gU0gPYEgTmTQH9SFP3XqlGLDD1MURVFCQTnld2WixDZPby2ihEJho1xT165dKQDU7NmzKV9fX7H0
7t07RnsHBwcKAMVisagZM2ZQ5eXlYmPu27ePAkB16tSJys7OZtQVFxdT9vb2FABq7dq1Yn0rj9+9
e3fG+Su/C+fk5DD6ubi4UACoDRs2yHTdW7dupQBQ9+/fl1h/5swZCgDF4XCoS5cuUfv376c+//xz
SkVFhTIwMKAuX74ssV/V+0VRFe+SovfIO3fuMOr++OMP+ppOnTpVo9y+vr4UAEpHR4cuu3XrFsXl
cqn27dtTISEhNY5BqB1tygmRCBcXF4Yt99mzZ2Xa+FxQUIDLly/T+ZpWP8+cOYNevXrh7t27EAqF
UtslJSXB2dkZy5YtQ2FhoQxX8J/c3bt3x5kzZ1BeXl5je0mmCDweD3PmzIG3t3eN575w4QJGjBhB
ryTKQ1hYGO1mm6IoiW3u378Pe3t7er9BS6Cx7t+zZ88wePBgPH/+XKxu7ty5DPO7EydOSL3HVTly
5Aj93dHS0sK0adPklo1AIDQs+/btw6FDhwAAenp6+OOPPxAWFob4+HjcvHkTW7duRe/evZtYSgJB
PnQMHOo8RkzIPlBCAVhsDhw/PYx27TuJtUmJu4bXATvqfC55OHv2LMaNGyeWnjx5IrF9//79cfz4
cYmrczt2VMi+YsUKsX2IysrKtF8TT09PlJSUSBzfxMQEd+7cYVg42dvb08cpKSnyXWAVbty4AU1N
TQwePLjadgKBAFOnTsUXX3yBgwcPgsViYdeuXVJDIkqyyDIyMoKVlZVEuXft2gUAGDp0qMwWipUJ
DQ3FtGnTQFEULly4QJ6rDUibM8EFAEVFRbi6umLPngovaTk5Obh+/TqmTp1abb/Lly/TygOXy8XM
mTOltvXw8MCGDRvovJKSEpYsWQJ7e3v07NkTqampCAkJwblz5xATEwMA8PLyQkBAAAICAsDlVv/R
bNu2DevXr2eUdejQAZMmTUK/fv1gaWmJ7OxsJCcnw9/fH48ePap2PAAYPHgwhg8fDktLS3Tt2hV8
Ph9BQUHYtm0bMjIyAFSYa27ZsgXbt2+vcTwRBQUFmDRpEtLS0gBUmEHb29tDVVUVQUFBiIuLo9sm
JSVh1KhRePv2rVRTkuZKQ92/3NxcrFixAh8/VsRMMzU1Re/evaGgoAAOh4MOHTrAxcWFnhxJSEjA
gwcPMHz48GrHFQgE9EstUKHIqqioyHvZBAKhASkpKcHatWsBAGpqanj06BFjj1WXLl0wZswYrF+/
HjExMVBWVhYbQ19fn/Zm2b59+8YRnECoAe0OvcFic0EJa55Al0ZhfhKS467CxHIKlFR0MXDcKfhd
Hg9BeTGj3esXu9BeowtMu82oq9gyMXr0aHz66adi5b169ZLY3tXVVeL/bkFBAZKSkgAAjo6SHTeJ
yvl8PuLi4tCzZ0+xNt988w2MjIwYZR07dqSPZZ20lkRGRgYCAgIwffr0Gt9duVwugoKCkJqaitDQ
UPz555+YM2cOPDw84O3tje7du0vtKxAIkJmZiYyMDPD5fABgLO7k5+fTCumUKeIhemoiOTkZ48eP
R35+Pg4cOICxY8fKPQZBdtqkAgpUeMMVKaBAhTOimhTQyt5vx4wZQ3sUq0piYiK2bt1K5w0NDXHl
yhU4OPw322dvb4+JEydizZo1mDNnDu09LCQkBPv378eqVaukypGQkIAtW7Ywyvr37w9vb2906iQ+
+ycaq/KeIRFqamr44osvsHz5cokPLScnJzg7O8Pa2pqeWfP29pZLgfrpp5+QkJAAIyMj/Pbbb5g8
eTLjIfXkyRO4uLjQ+zo/fPgAT09P/PjjjzKfo6lojPu3adMmpKamwtDQELt378a0adPEHF8tXryY
sTp/9OjRGhVQX19fJCcn0/nPP/9cZpkIBELjEBYWRj87nJ2dq3XwYWlpKbFctNeeQGhOcLgq0NTt
hQ+ZIXUaJzpkL0wsKxQOLT0b2I/wxPM74r9ngX5fQVnVoFE84w4cOBDffPNNnceJjY2ljyW93wEV
k/psNhtCoRAxMTES30Ua0lmmj48PKIqqMfyKCBsbG9jY2GDs2LH4+uuvMWnSJNy6dQuDBw9GVFQU
Y09ncXExTp06hcOHDyMoKKhaa8LK96rqPviaEAqFmDBhAtLS0jBo0CAsXbpUrv4E+WmTJrgA0KdP
H9ja2tL5W7duMRy/VCUlJQX379+n89XF/ly7di3DDOLq1asM5bMy6urquHbtGmPW56effkJ2drbU
8VeuXMkY38HBAQ8fPpT6cBKhpKQkVjZ+/Hjs27dP4gNLhJmZGePB8vbtW5lMfkW8efMGY8aMQXh4
uMQZMicnJ9y5c4dRtnv3buTl5cl8jqaiMe5fQkICzMzM8M8//2D69OkSf0g+/fRTxud/+fLlGu/f
gQMH6GMnJ6d6czJFIBDqj6ioKPq4srOxlkJeXh78/f1pKxACoTI6+n3rPMbH7Jd4l+RH5026TkYP
+7Vi7ShhOZ7enIecd0F1PmdjUfm9TbTqV5Xy8nJaMZO0itrQ3LhxAxwOp1YrhsrKyrh48SKUlZWR
k5OD3bt303XFxcUYP348li5ditLSUqxbtw4+Pj5IT0+XOBFX2VGQNFNkabDZbKxcuRIA8M8//+DX
X3+V+1oI8tFmFVAAWLhwIX0sEAgYK5xVOXv2LP0PrqGhIdVePSAgAJcuXaLzgwYNQr9+/aqVg8Vi
MULBfPz4UaqXwsePH8PHx4dRtn37donKZX1S2fsZn89nrJzVxPjx43H16lWGV7eq2NvbM/YOfPjw
AdeuXaudsM2Qutw/JSUlXLt2DV26dJHahsPhYMGCBXS+qKgI58+fl9o+MTERt27dovNk9ZNAaJ4Y
G/8XQuLmzZtITU2Ve4y0tDQYGBjAwMBA4iqFv78/XS9rqm4SFqiYROzRowc0NTXh6OgIAwMDGBsb
0/vZCAQA0NaXLQIBE/FX1+iQvYx8D4d1MLaYJNaunF+Ix7zp+JAVVovzNj4WFhZgsyuuV9r/fuVy
aVYQDUVpaSnu3r0LJycniWFgZKF9+/b0glBIyH+r4b/++iv8/PwwePBgBAQEYNu2bRg3bhwMDAwk
hp0yMzOjY4hGR0fLLceiRYvo55O7uzuOHz9ei6shyEqbVkBdXV0ZX+LqvmyVldOpU6dKnWXy9/dn
5GVdxq+6/67qOCKqOugZOnQoRowYIdM56kLVvYHyzC65ubnJpCDPnz+fkX/z5o3M52ju1OX+bdiw
odoVVhGLFi1irI4ePXpUatuDBw/SEyrE+RCB0Hyxt7enJ+8EAgE+++yzaq11JCEQCJCRkYGMjAy8
f/9erL6srIyulzVVDoVVmfz8fEydOhVr1qxBZGQkKIqi9/OnpKTgu+++w4wZM6Su5hDaFrVTQMXN
MDNTHuFDVjidZ7FY6DfqT+gZDhRryy/NxcNrk/E+o/k7PFRUVKT3jd6+LTlkja+vLwBAU1MTnTt3
rpfzipwhZWZmVtvOz88PhYWFMpvfSkIoFNIKo6amJl3+8OFDAMDEiRNleofkcDhwcnICUPGOI2nb
WU24u7vTptNLlizB9evX5R6DIBttWgHV1dWFs7MznY+MjJToZTQkJAQvX76k89XN/IocCokQeeqq
CRUVFcZMd9VxRFSd1Rk6tOH3MjQWXbt2ZeTfvn3bNII0M6Q5LaiKmZkZhg0bRuf9/f0Z5nsi+Hw+
QzklzocIhOaLuro6Nm/eTOdfvHiBnj17VjvBJC82Njb4+++/q00HDx5keOgcNGiQxLEWLlwIb29v
sNlsbN68Ge/fv0dubi5SUlLw2WefAajwCH7y5Ml6k5/QcmmvYQ4FRfkdDnIVVMXKokP+ZOQ5HCUM
HHcKGjri20sqlNBJyEh+KPe5GxsPDw8AFbEpX79+zahLSkqiPb9u2rSpRidAsmJqagoADEspSYj8
l1R+l5aHgoICLFiwgHayKFIggf/2rVZVAr29ven3w/j4eEbdrl27wGazkZiYiM8//1xssj8lJaXG
iAW//vor5s+fD4FAgBkzZuDx48e1ujZC9bRpBRRgmuECwLFjx8TaVF79NDExwZAhQ6SOV1VxNDQ0
lFmWynv4cnJykJOTI9amqgJqbm4u8/iy8PDhQ2zcuBFubm5wdnZG3759YWRk1ChmUwYGBox8QkJC
g5+zvmnK+wdUOCOqjKTv87Vr1/Du3Ts6T8xvCYTmzcqVKxle1d+/f4/Fixdj4MCBEidN5UVTUxMj
RoyQmuzs7PDbb7/Robxmz56N7777TmycJ0+ewNvbGwCwevVqbNy4kV697dSpEy5dukSv0OzYsaNa
hyKEtgGLxYJWB/lDXQjKxa2IUuKuoTCPub1FUUkDQyZcgpqmhVj7CnPcGUh4fVru8zcm48ePx9y5
c5GbmwtHR0esWLECe/bswVdffQV7e3skJSVhyJAhWLFiRb2dUzRZlJSUBHt7e/z666+4evWqWDse
jwcLC4tqnaNVRiAQYNCgQejbty8sLS2hqalJv2MPHz4cy5Yto9uKHIOKPH8vXboUdnZ2cHV1pf2q
nD59GufOnaP72NnZYfPmzWCxWDh58iR69OiBRYsWYfHixbCwsICxsXGN1nUsFguHDx+Gi4sLSkpK
4OLigvDw8Gr7EOSnzSugY8eOZcQZOn/+PGPGRCAQ4OzZs3Te1dW1Wm9ilRVQDocjplRVR1UnQpU9
ekkaH5Df05ck3r9/j507d8LS0hLDhg3Dli1bcPjwYfj4+CA4OBipqalyxSetLR06dGDkRTNizZ3m
cv+ACtfjlU1YTp06JRb/lTgfIhBaHlu2bMGJEycYe+mfPXuGgQMHYtWqVSgoKGiQ8/L5fEyZMoWe
/HRycpK6+ipSSlkslkQFlcPh0FstYmNjpcZEJLQttDv0kbsPRQnEVk4pSoDYsANibZXb6WHoZ1eh
ptlVrI4SluOF32qEPPoOQkHN8eCbipMnT+LgwYNQUVHB/v378dVXX2HPnj0QCATYvn077t+/X2+r
nwAwbNgw7Nq1C8rKyggKCoK7uzsuXrzIaBMWFoakpCS5zG8pisKTJ08QHByM+Ph4GBoaYvDgwThy
5Ahu377NsLJYunQp3N3dweFwEB0djYMHD0JBQQEBAQG4du0aTE1NkZSUBFdXV8aCzYYNG3Djxg10
6dIFCQkJOHbsGI4ePYqPHz9i2LBh1fojEcHlcnH+/HkMHjwYubm5+PTTT8VWWwl1o82GYRHB5XIx
Z84c/PbbbwAqlJ4rV65g1qxZAIA7d+4wvPfV5HhBtAEaqLBrFwqFEgMLS6KsjPnwk2TzrqGhwQi8
W7WPvGRmZmLIkCGMlVVDQ0O4urrCysoKhoaG0NbWxqFDh3DkyJE6nasmqnp4NDExadDz1QfN6f4B
FR7lZs+ejf379wMA0tPTcfMcNzTfAAAgAElEQVTmTdo8JjY2luHNmbgaJxBaDvPmzcMnn3yCFStW
0GGXhEIh9u7di+vXr+Pq1av1Hjh9+fLl9DPDzMwMV65ckfjbxOfz8ezZM7qdtDBllSdN4+Pjawxc
T2j9aOrZ1Kqfcjt98MuY3t4TIk+jh4M7FJU0GOUqqgYYNukaHl2fhtycV2JjxUUcRs67QDiM2g91
bdm2TklC2vYpachjweDm5gY3Nzekp6fjzZs3MDMzq9HKrrrxFRUVq43/+c0338DNzQ2RkZFQUVER
c3AkMr+VRQGdPXs2Zs+eXWO7yrBYLOzYsQPu7u6Ijo5G165dGc+VuLg4hISEoGvXroyJd6Bi1Xj8
+PHIyspCTEwMzMzMGHFPRYwdO1bqPVBRUcGjR4/kkpkgO21eAQUqzHBFCihQYbYoUkArm9/27du3
2iC5QIUHMtHKJUVRSE9Pl1mRqurhrOqeSADo3r07Xr367+EZFxdXaydEOTk5GDVqFK08KSsr49Ch
Q5g5c6bYTFrVMCkNQWWzUADVen1tDjS3+ydi8eLFtAIKVHyfRQqol5cX/bAlzocIhJaHgYEBvL29
ce/ePaxcuZLe552YmIjhw4fj1q1b6N+/f72ca+fOnfTEmaamJng8nlTFMj4+nra2yM/Pl/psqexA
KSkpqV7kJLRstPRsa24kgYLcBHC4KhCUF9Nl5fxCxL88hm59V4u1V27XAcMn3cAT37nIShNfff+Q
FYa754fBym4luvVZBa5i+1rJ1dB07NhRojLVEKirq0t9nvB4PGhqajb4JJKOjg4GDhR3JsXlcmuM
MqGnpyf1mUVoWtq8CS4AWFtbM77Ef//9N5KTk5Gfn8+wea9p9RMQd4GdlpYmsxyVFVBDQ0O0by/+
8KuqAEsy05UVT09PREREAKiYafL19cWcOXPq1YxDHqoqoPVhXiyiulm+2tLc7p8IOzs7xirIjRs3
kJ2djdLSUoan53nz5jVJzDACgVB3Ro0ahdDQUKxfv57eFvLx40e4urrWi4fZK1eu0Ga0XC4XFy9e
rHYCtvLKT2ZmJi5duiQxVTa7rU1IGULrQ1XdtFaOiCiqHLodxZWj2PBDUs1pFZTUMWTCJXTuNkti
vVDIR+SL3+Fzyg5RQX+gtFh6TPa2TEZGBgICAjBmzJgmf+chtEzIt+ZfFixYgMDAQAAVJk0nT56E
oaEhiosrZta4XC69KlodVRXQ8PBwDBgwoMZ+2dnZjB9jSaufAMQ2el++fBnbtm2TGBOpJip79rKz
s8Pw4cPlHqM+qRz/CZBdAa0ppMnTp08bZK9Rc7t/lVm8eDEdVJnP5+P06dPQ1dVl7JMgzocIhJaN
kpIStm7dis6dO8PNzQ1ARfiqCxcuwNXVtdbjvnjxAnPmzKEn7vbv349Ro0ZV26fyS6itrS3txKQ6
+vbtW2sZCa0HFosFTT0bZKX+I3dfiqLAYrFBUf85tCopykBi9EV06SH5f4DNUUC/kXuhqWeD8Ccb
IRSKT9iUlbxHhP9WvArYAX3jYTAwHQktvT5Q07KAgqJ6tb5A2gqXLl2S2Us/gVAVooD+y6xZs7Bm
zRo6btDx48dhZGRE13/yySdiTnIkMXz4cHC5XJSXlwOo+OGW5UX/wIEDjFlraWa148aNg66uLrKz
K2bl4uPjceDAAVrZkBU+n8/YGyDvQ6S+VxQpimJ4bO3YsSM++eQTiW2rhgzJzMyUaub87t07TJs2
rd5jzjW3+1cVV1dXrF27lv4+Hzt2DGpqanT9oEGD0KNHjwaVgUAgNA6LFi3Cjz/+SFuRhIaG1loB
TUlJwYQJE1BUVAQAWLt2La3cVkfl5wmbzcamTZtqdX5C20RLt1etFNDsdH8YdhmH1Hgeozw69E90
7j67WkWxq40bdDv2x/M7nyP/Y5zENkIhH+mJd5GeeFesjsXmgs2Wf/K/NRFxvyK1ZbgK7WHRaxF6
9Pu2qUVpURAT3H/R0tJizNjGxcXhwYMHdF4W81ugIu7n8uXL6XxYWBju3btXbZ+CggLs27ePzhsZ
GWHt2rUS22pqamLbtm2Msp9//pkRp1QW2Gw2QwkKDAyU6hK/qKgIQUFBjDJ5TH8PHz5MK8zS4PF4
jLif69atk2oeWnWVWdom+7i4OAwaNEguM2hZacz7Vxu0tLQwefJkOh8eHs5YBSarnwRC64HNZmPi
xIl0Pjc3t1bjFBQUwNnZmd6n+dlnn8kcQsrExASqqhWxGcPDw8WcyhEI1aGp27NW/YSCUolhXPI/
xCL97e0a+2vp2WD0zIfo0e9buZVJSlgOQXkxSW08lRZn4VXADiRGX5Dr+9PWIQpoJRYsWCCxXE1N
jfHjXhObN2+Gjo4OnZ88eTJ4PJ7EtvHx8XB0dGTsf9y5cyfatWsndfzFixfD3t6ezmdnZ6N///6M
cDGVKS4uxv/+9z+GksvhcNCz538P/FevXmHjxo1iK3O+vr6wtrbGtWvXGOUvXryQKl9VeDweevbs
SXtMq8q9e/cY3tE6duxYrXfWqmbIu3fvZjizKC0txZ49ezBgwAC8efMGBgYGNTqPkpfGvH+1pWpM
UBHE+RCB0PqovBWhNp5whUIhZs6cibCwMAAV2wpOnz4NNlu21wQWi0Vb7ggEAuzZs0duGQhtF41a
KqAA8DErHB06iTvCiQ7ZK1N/DkcJ1g7rMMbVH527zQSLRV6NCfKTlUrCSskDMcGtxCeffIJOnTqJ
OUaYMmWKmNlndWhpaWH37t1YuHAhBAIB8vPzMXHiRIwbNw729vbo0aMHEhMTERwcjJs3bzLiXY4b
N67GvaZsNhuHDh3CmDFj6BAxRUVFcHV1xbfffot+/fqhe/fuyMzMxNu3b/HixQvk5eVh9uzZjEDF
ixcvZihCHh4e4PF4cHJyQlpaGp4/f07PhNvZ2SEjI4O+N15eXjA2NsbEiRMZcVQloaGhgYyMDEyY
MAG9e/fGkCFDMGDAAKSkpMDf3x88Ho8OJ6OgoABPT89qneM4Ojqif//+9Mrnmzdv0L17d/Tu3RsC
gQCvX7+mZ9+VlJRw5coV/PDDD4iMjKxWTnlprPtXW0aMGEHHwaoMcT5EILQcQkND0alTp2o9OWZk
ZMDX15fO18YL7po1a+Dj4wOgIib1jRs36BVNWdm9ezfu3r2LkpISbN26FRMnTmRM1BEI0lDXsgSb
rSBxP2ZNpCfeQ//RB5CZ+phRnp3+HNnpAdDt6CDTOKrqpug38k/06Pct4l+dxNuo/6GkKKPmjgQC
AG19u6YWoUVBpnkqwWazMW/ePLFyWc1vq/Z5/PgxHUpEKBSCx+Nh06ZNmD59Or799lucO3eOVj6V
lJTw66+/Sl0lrErv3r0RFhaGkSNHMsrT0tJw7do1/PLLLzh69Cju37+PvLw8iWMsW7YM48ePZ5SF
hYVh//79uHr1KtLT08Fms/H999/D398fGzZsoNtlZWVh6dKlcHCo+cF+9+5d+r6GhoZiz549mD17
Ntzd3XH58mVa+dTR0cHdu3drXJ1jsVjYt28fI+ZqUVERnj59iufPn9PKp56eHnx9fWVyAlUbGuv+
1RYWi4WFCxeKlRPzWwKh5fC///0PnTp1wpQpU3Djxg28f/+eUR8YGIhx48YhKysLQEVYMXmd+3h5
ecHT0xNAxe/gjh078OHDB7x69UpqkhTv0NzcnH7OlZSUwMHBATt37mTE0hYIBAgLC4OHh0ejxEYm
tAzYHAU54m8y93UKyosAUNDQEfdrEB0s/0q8qropejn+COcFERg59Q6sHb6HYZdxUFKp2Q8Ioe3B
ZivAotdidOkhv67QliEroFVYsGABtm/fTueNjIwwbNiwWo3l6OiI0NBQfPPNN+DxeGJhRoAK814H
Bwd4enrC2tparvH19fVx584d/PLLLzh+/Dji4uIkOrfR19fHkCFDMHPmTLG6K1euYMeOHdi6dSvt
sAao8Ghob2+PnTt30jGeFi9ejJMnT9LBxoGKWJgCgQAcDkeijIqKiujTpw9OnDiBgQMHwsPDA8nJ
yYw2qqqqcHR0xF9//QULCwuZrr1v37548eIF5s2bh9DQUEadkpISZsyYga1bt8LY2Fim8WpLQ9+/
urJgwQJs2rSJ3p9KnA8RCC0PPp+Py5cv4/LlywCADh06wMTEBCkpKYzflf79+zNiAMuKaOUTqJgs
nTNnTo19DA0NJYZREYVu2bx5M4qLi7Fu3TqsW7cOWlpaUFdXR2pqKu2kT5qvA0LbREPHGh+zZfFn
If6ekxrvA6s+KxFwbzmjPO3tLeS9j5ZDuf0PFosNbX07xsoWRVEo5xcCFAUWu2F+twktCw5HiXwX
agGLoqhcAPIHYGpk9u6tsOVfunQpY+WrJZGZmYmwsDDExMTA1NQUvXr1gomJSb25887NzUVwcDBe
vXoFdXV1GBgYoEuXLlJDulTm/fv3CAsLQ3R0NMzNzeHo6CgxDilQsd/x6dOn6NOnD2xtbcVCwOTk
5NBOdhQVFWFnxzRLePfuHQIDA/Hu3TvY29vDxsam1gqYQCBAVFQUXr58iZycHHTu3Bn9+vVr9MDD
9Xn/6pO4uDhYWVnRCuipU6dkermsLSJvzgsXLpR6/QQCQXbOnTsHDw8PvH79Wqr37E6dOuGnn37C
woULJcbkS05Opj2FDxw4UCws1YQJE2S2vhEhTQEVERISglWrViEwMJAxOQdUeDIfMGAAvv76a7i4
uMh1XkLrJTpkH8Kf/lSrvgqK6nBe8Aq3zw1EUT5zktvUajocRsk/MUMgEBoOooASCK2YL7/8knY+
pa2tjdTU1Abd/0kUUAKhYfj48SMCAgKQlJSE9PR0cDgcmJubw8LCAj179oSSklJTiyiR8vJyREdH
IyoqCmpqaujYsSOsrKzI7zhBjHdJ9/H4xnSZ2rJYHFCUgFE22OUiCj6+Qcjj78Tajp0TCFV1yeHa
CARC40NMcAmEVsqHDx9w/PhxOk+cDxEILRdNTU2psZGbM1wuF9bW1nJvMSG0PTR0ZPdWL0kBTY33
Qe9BW/A68FeUluTQ5RQlQHTIXtgN/bXeZCUQCHWDOCEiEFopXl5eKCwspPPE+RCBQCAQmisqqh2h
qKQpU1uhsEysLC3BF2yOErraLhOrS3h9BsWF6XWWkUAg1A9EASUQWiF8Ph9//vknnR88eHC9x0Il
EAgEAqE+UZdrFZRpxFdSlImcdy9g0WsxFBTVGHVCYRmig/8EgUBoHhATXAKhFXL+/HmGgxCy+kkg
NB/K8j6gJPsdSt9nouR9Ft6/fI6yjzlgKypDw6In2ApkfyQAKKprwmDwOHCV2zW1KIRGQkO7B7LT
ntXcEICSio5YnM7UeB/odnSARa8liAzazaiLf3UC3exWQVm1YWJvEwgE2SEKKIHQCvn999/pY21t
bUydOrUJpSEQ2iaUUIi8+Nd4/zIQH14HIe/NaxQkxaIs933NnQkAgPamlhh+7CEU2jd7X4mEekCe
faDl/CKxstR4H9g6bUbX3ssRG36wImTKvwgEJYgK9kTvwdvqRVYCgVB7iAJKILRCKscaZbPZDRrq
hUAg/EfpxxykP/ZBxrN7yAr0I8pmHSlIjEHC1aOwnLO6qUUhNALyKaD5AIsNUEK6rDDvLXJzXkND
pwfMey5GdMgeRp83L4/Dss+XaNfesN5kroqXlxc2b97MKFNSUoKJiQns7Oywdu1adOrUqcHO39og
97N1QvaAEgitECUlJToR5ZNAaFjKS4qQyDuNf1ZNhO/YLgjeshyp97yJ8llPCErEV7oIrRMNbfl8
FbTX6CJWlhrvAwCw6rMCXAVVRp1QWIbIwF21F1AGCgsLkZ6ejry8PBgbG0NPTw/5+fl49OgR/vjj
D3Tt2hWhoaENKkNrgtzP1glRQAkEAoFAqAV5b14jZMdX8B1rjqCflyLT/x4ogaDmjgSZUWivAVPn
uU0tBqGRUFBSh4qqgeztFcTjTYsUUCUVHXS1Efd/kBB5Bvkf42ovpIxYW1vj+fPnCAsLQ3Z2Nvz8
/KCvr4/i4mIsX768wc/f2iD3s3XR4kxw+Xw+CWBNIDRDKIqC4N+X74b6Hy0rK0NsbCwMDQ2hpaXV
IOcgEGoiM/ABYk97IuPZnVr1ZysoQsXAGMraHcBVVUdxRgooQTnYispQ69INCqriL9VtEQU1LXSZ
tAjtDIybWhRCI6KuZYXiwncytS2SEFrlY/ZLFOYlQlXdFJZ9vkTcy6Pgl+bS9RQlQMTTnzFw3Ml6
k1kWhg0bhq1bt8LNzQ3BwcEoLy8Hl9viXsObDeR+tmxazCfF5XJRXl6Ojx8/QlVVteYOBAKhUcnL
y4NQWLEXp74UUIqicOLECfj5+SE0NBSRkZHg8/kAAFNTU9ja2sLOzg6rVq1q9Qrp/v37ce/ePQDA
Tz/9BFtb2yaWqO2R8ewuIg9vw/uIAJn7cFRUoWPrCG3rftCy7gv1Lt3RrqMJWGxigEQgSEJduxsy
Uh7K1La0KBPq2t2R9z6SUZ4a7wvL3suhqKQBqz4r8dJ/K7M+wRfZaf7QNRxQb3LLgmivIp/Pl6ow
+fj44MSJEwgKCoK2tjYGDRqEn3/+GWpqamJtv/jiC2RnZ2PLli0wMjLCgQMHcPv2bWRkZMDZ2Rmr
Vq2Cvr4+ysvL4eXlhZs3byIiIgLW1tbYvn271N+RgIAAHDx4EBEREcjKyoK1tTUGDhyINWvWQElJ
iW63a9cuBAQEYMGCBRg3bpzEsVavXo20tDTs27cPenp6tbrO2tzPwsJC+Pr64vr164iMjMS7d++g
p6eHgQMH4scff4SBAXOl3c/PD3/99RdsbGywYcMGBAcH4/Tp07h79y4UFBQwY8YMrF27FhwOR0yO
9+/fw8PDA/7+/sjKyoK9vT1Wr16N/Px8eHl50WNWJTc3Fx4eHnj69ClSUlJga2uLpUuXSr2XrYkW
o4Dq6OggIyMDMTExZLMxgdAMiYmJAQC5fjyqIyMjAwsWLMCtW7ck1icmJiIxMRHXr1/HkSNHcPr0
aQwZMqRezt0cCQoKwpUrVwCAmBs1Mjnhz/Fy34/ICXkiU3sVA2MYjZwMg0FjoGMzgIRVIRDkQF3b
Sq72apoWEhRQH1j2rnhOWtouxZuIIyiusloa8vh7jJr+N1isxpsMCg4OBgBYWFhAWVlZrH79+vXY
vn079PT0YG9vj7dv3+KPP/7AnTt38OjRI+jo6DDa83g8JCcn4/PPP8fy5cvh5+cHLS0tfPjwAeHh
4QgJCQGPx8OiRYtw6tQpqKmpobCwEElJSfD390dMTAx0dXUZY3p4eGDTpk2gKAo9e/ZE165dERAQ
AB6Ph7Nnz+LSpUuwsqr4jPT09HDx4kVkZWVJVJoiIiLg6emJvn37MpRPea+zNvfz/PnzWLx4MTQ1
NdG9e3d06dIFT58+RWhoKB49eoSQkBCGwpqQkICLFy/iw4cPGDBgACZMmIDi4mIoKiqirKwMISEh
+PjxI7Zv3y52jS4uLkhMTIS+vj5sbW3x5MkTeHt7Y9CgQbh//z4+fvwoJntUVBRcXFzw5s0bODg4
wMrKCvfv38eNGzfw559/4osvvpDpHrRUWswUbL9+/QAAr1+/RnZ2dhNLQyAQKlNQUICQkBAAQK9e
veo83p07d2Bra0srn+bm5vj+++9x+fJlvHnzBn5+fti5cydGjx4NAEhOTsaIESOwceNGehWWQKgr
hWmJeP7DXDxcMqJG5ZOjoorOny3E0CN+GHs9Cr2+2ga9vkOI8kkgyIm6lqWcPSixkuz05ygpygIA
cLgq6DlgvVibj9kRiH91ojYi1oqQkBDs2LEDALB27Vqx+lu3bmHbtm3o378/YmNj4ePjg1evXuGL
L77A69ev4enpKXXspUuXIiMjAw8ePEBOTg78/f0BADdv3oSTkxNu3boFb29vZGVlITY2Fjo6Ovjw
4QO8vb0Z49y7dw8bNmyAhoYGHj16hNDQUNy+fRspKSlwc3PDy5cvsXDhQlBUxT2fMmUKVFVV8fDh
Q7x9+1ZMrkOHDgFgxiKvy3XKcz8tLS1x4cIFZGZm4unTp3j8+DFiYmLAZrPx8uVLPHwoeZU9MjIS
Li4umDp1KgIDA5Gbm4v16yu+P56enox3DIqiMH/+fCQmJsLV1RXJycm4ffs2EhMT4e3tjbCwMLpd
VRYuXIi4uDj873//g7+/P27fvo2QkBCoqanh+++/l6i0tiZajALapUsXaGtrQygUgsfj4f174l2Q
QGgOFBQU4Pr16ygtLYWKigr69u1bp/FSUlIwadIkZGRUBBj/9NNPERQUhG3btmHSpEkwMzPDsGHD
8O233+LOnTvYvn072Gw2BAIBtmzZgqNHj9bHZTU7fvzxRwQGBiIwMBD9+/dvanFaNYKyUkQe3o67
M+yQeu9ytW1Vjcxg674b42/Gw+6HP6HTy6GRpCQQWidq2vIpoLk5kWivYV6llEJawk06Z2o1HZq6
NmJ9I/y30opqfZOZmYk///wT69evh4uLC/r27YuCggK4u7szFDIR69atA1CxAqmu/l/c2x9//BEA
cODAAannUlFRgZ+fH4YOHQoWi4X+/fujZ8+eAID4+Hj4+flh8uTJUFJSgpmZGYYPHw6gYtWvMmvW
rAEAuLu7Y+DAgXS5goIC9u7dC319fTx79gwXL14EALRv3x5Tp04FRVE4eZK5p7akpASnT5+Gqqoq
Zs2aVefrlPd+Dho0CNOmTWNEAjA3N6ev682bNxLPk5qaCldXV5w8eRL29vZQVlbGkiVLAADFxcVI
Tk6m2168eBEhISHQ0tKCl5cX41zOzs7w8PCQeI4rV67A398fgwcPxvTp0+lyCwsLzJo1C3l5eTh7
9qzEvq2FFqOAAqC/SPn5+Th//jz8/f2Rm5tbc0cCgVDvFBQUIDg4GGfPnkVOTg7YbDbjQVpbvvvu
OxQVVYRdmD59Onx8fKChoVFt+1OnTv2fvfOOa+p6//gnCXtPZSgbBJEhw72tdWutiypurbu1jjpa
V93brxVbWwe21km1VcFRJ4KACxFE9pIhM+yZ8fsjP65ck5CEGfC8Xy9er+Sc55773Ask9znPot7/
+OOPKCkpabQe8oaFhQU8PDzg4eFB+9ImNC25zx/h7leeePvbdvCqKsXKads5o+fuv/C5XwSsJ30N
BTVSOIhAaAqUVfSgrCJdCCYAlBYlwshssNB4RtIN6jWDwYTbwD1CMjVVRXj1eEPDFJVASkoKli9f
jp07d+LGjRtgMpl49OgR5bWrS23ILIPBgKWlJbKzs6kfBoMBNTU15ObmivWK+fj4oEOHDrQxY2Nj
AMCWLVvg6OhIm6vNf6ytqQAI8hEjIyMBCJ63P0ZZWRnjxo0DADx+/JganzVrFgDgjz/+oHn6/Pz8
wGaz4eXlRaXmNOY6Zbmf9VF7nyoqKkTOu7i44Pjx47QxCwsLKve1svLD90LtfRg7dqzI+jTM/8/1
ZzAYtPGHDx9S56p7D7Kzs6nfTW1aU3ulzeSAAoLCJrNnz8bFixdRXFxMeQNYLBapjEsgtCAcDof2
xaWqqorJkyc32jAKDQ2ldv1YLBZ27dolMuH/Y6ZNm4ZDhw7h+fPnyM7Oxs6dO4XyNJoTPp+PuLg4
VFRUwNHRsVG9V2tqapCYmIj8/Hy4u7uLzBNqKb3y8/ORnJwMFouFzp07C+UKtSeqSwoReXg9Uq/X
XxlT08oBjos2w2TQ2BbSjED49NDUs0NVZojU8ipqwq1bctIfo6aqGIrKgu8lfSNPWNh7ISXmAk3u
XcJVmNlNhInliMYp/RFdunTBkSNHwOPxMH/+fGRkZOCff/5B//79hWRrjQ0+nw8rKyuxa7579w46
OjpC4/VVf5W2MmytDgwGQ2ytlU6dOtFkAUE1WnNzcyQmJiIoKIi6vtrw2wULFgidoyHXKcv9rKW8
vByXLl2Cv78/srKykJWVhczMTLHygCCvVdRzh6ix+Ph4AIKiiLJQex+OHj2Ko0ePipSp62ltj7Qp
AxQAVFRUMGvWLERFReHFixcoLi4Gl8sVu5NBIBCaD3V1dTg5OVE52o3lxx9/pHZQvby86v2C+pgN
Gzbgyy+/BAAcOnQIq1atohlM9+7dw/Tp0wEAM2fOxN69e0WuExsbi4EDBwIAhgwZUm8YTHJyMpYt
W4bg4GAqGkNZWRm9evXCyZMnYW39cVjYB1auXEmtffHiRQwYMAAHDx7Enj17kJsrCAmLjIykwqg+
lq/Vsan14nA48PX1xfbt25GamkqbU1FRwejRo+Hn5yf2+LZI1uMAhO9ajso88a0flPU7wnHxZpiP
mUEq2BIIzYyWrh3yZDBAK8rfQ1XdmFZoiMerQWbKbZh3+eDNc+6zFZkpd1BdSU/jev7gOww38oCy
atNtsmlra+Pzzz8HIDDGRo0ahUOHDmHEiBFU/YJaqqurAQi+U0XlM9aip6fXZPp9TFlZGQCBwSpu
s7J2Q7Q2SgkQGKwzZszA9u3b4evri/79+yMuLg6BgYFwcnKipYw05jpluZ8A8Pz5cwwfPhxsNhvd
unVDv379sGDBAvj4+ODZs2eSbodU1HpDZW3/UnsfRo8eDQ8PD5Eytra2jVNOzmlzBmgt3bp1ox7M
KisrqX8cQttl165d+O2336SWHzJkCE6ePNmMGjUfBQUF2LJlC65fvy5RVkFBAQsXLsTSpUuhqqra
AtpJRkVFpVnaIb148YJ6LSqnoz6++OILGBoaIjc3F1VVVYiKisKgQYOo+aqqKiqvtLi4WOw6XC6X
kmOz2WLlAgIC4O3tTcmoqamhpqYGVVVVePToETw9PXHlyhWaDnUpKiqizlNdXY0FCxbU+/f8sXxz
6bVixQr4+PhQ7xUVFcFisVBZWYnKykqkpaWJPXdbo7qkEBH7V+PdzfNiZRgsBdh8tQwO89eTMFsC
oYXQ1JXt4Ts/KxSmVqOREHmCNp6RdINmgCqr6sO17zY8vbeUJldVkYvnD1aibzP1Bh05ciTmzZuH
kydPYtasWXj9+jVtgyCtphoAACAASURBVNTBwQGAwAhcsmSJUDhtS1Br8NTU1CA3N1ekDhkZGQAE
uYp1mTlzJrZv347Lly/j559/xokTgt9DXe8n0HTXKel+lpeXY/jw4SgsLMSNGzdoFXqvXbvWZAao
lZUVHj16JLO30sHBAffv34eZmRm2bNnSJLq0NdqsAVoXFRWVRoWpEeQDCwsLmXL3Hj9+DD09PaHY
+raAvr4+/vrrL/j7+2Px4sUSP7x2796NCxcu4MiRIxg7tn2G/n2c9/HxF5wkGAwGrKysKO9hXFyc
WCOrsURERGDs2LHg8XhwdHTE6dOn4e7ujpqaGty4cQPz5s0Dm83GnDlzEB8fL3F39Ny5c/D19YWu
ri4WL14MDw8PFBYWyvzl3Fi9Hj9+TBmf9vb28PHxQa9evai8nJCQEKSnp8t2s+SU90/u4OWOJajM
FW5kX4u+ax90X3cEWlYOLagZgUDQ1JHt878w7w0ce2wQMkDfp90Hp6YcCopq1Ji5/VS8S/gXWal3
aLKZyQGIj/gNti6ybX5Ky8GDB3Hnzh28e/cO8+fPxz///EPNGRgYwNzcnKqe2hqttkxMTKgWLiEh
IRg/fryQTFBQEAAI5ZTa2tqib9++CA4OxoULF+Dr6wsVFRV4e3vT5JryOuu7n6GhoSgoKICrq2uz
9tR0d3fH6dOn8e+//+Lo0aO0HqkxMTHYvXu3yONqvZ7+/v6orKz8JG0YEkdEkBvMzMxkki8oKMDb
t28lC8oxo0ePRnR0NJYtW0Ylq4sjJSUF48aNw4gRIxAdHd1CGrYcdXNKFBUVhZpES0PdPIza3Izm
YM2aNeDxeFBXV8fdu3fh6ekJJpMJZWVlTJw4EQcPHgQg+J2dPy/eu1aLr68v3N3dERsbix07dmDC
hAmYM2eOzAZoY/UKDv7QamT9+vUYMmQI1NQED26GhoYYN25cm+9NxqkoQ/iu5XiyYoJY41NBXQuu
645gwPE7xPhs4yQkJODKlSvYv38//vzzT+rBlCDfaMnoAQX4AANQUqGHbnI5FXifdk9I2mPIYZGF
jiKCNyJXhtBfWdDS0qKiXP7991+hQjf79u0DIOiRGRMTI3INUe08mgoGg4ENGwQFmXbv3k0LswWA
v//+Gy9fvoShoaGQZxP4UIxo1apVyM3NxaRJk6Crqysk11TXWd/9rHVmxMTEID8/nxqPj49HVFQU
gA/e3MYwd+5cGBsbIzc3F2PGjMGjR48QFhaGHTt2oE+fPlTv049Dmr29veHs7Iy0tDSsXr0aXC5X
aO3m/F3LA8QAJcgNsiZxA/QH5raKhoYGfv75ZwQFBQntKori9u3bcHFxwfLly9vVg1Rdg7Fz584S
DXJR1P0baq4Kcvfu3cN///0HAJg9e7ZIQ3n69OlUYTRfX1+Ja5qYmODOnTu0Rt2toVet9xhAu6wk
nP86FPem9UTyVfGtejr2GY5hF1/A6st5chddwePxkJiYiNevXyMzM5NWCIxAp7S0FEuXLoWdnR0m
TpyINWvWYObMmejduze6du3a2uoRJKCm2RlMlrJkwTrkZ4XB1FLY25WeKJzqoqLWAe6DDwmN8/lc
hNyag9LCJJnOLS3Dhg3DwoULAQjy+usaYJMnT8bMmTPBZrPh6uqKRYsW4ZdffsHu3bsxYcIEGBsb
N/um+zfffANPT0+EhoaiT58+2Lt3L06dOoWFCxdi6tSpUFBQwOHDh0VWpp8yZQpUVFSoSCZxaTRN
eZ3i7mffvn2hq6uLyspKuLm5Yc2aNZgyZQqcnZ2hry/YePDz80NAQIDM96guqqqqOHv2LPT09HD3
7l0MGjQIvXr1wo8//ojp06dj3rx5AEDzjAKC1KqTJ09CX18fPj4+6NmzJ7Zt24YTJ05g+fLl8PT0
FPIetzeIAUqQG2T1gAL0UuBtnd69eyM8PBy7d++WmF/J4XBw9OhR2NjY4H//+1+9OYFthbp53A0N
R6lbDbu+/M3GEBgYSL3u1auXSBllZWWqimBSkuQHmT179jS6uERT6OXm5ka93rRpE629TVuGV1ON
KJ/NeLTgM5RlJIuUUVDXgvum4+h7+ApUO5i0sIb18/DhQ/Tp0wdqamqwsbGBi4sLTE1NoaqqCjc3
Nyxfvlzk7zM/Px9ffvklvvzyS8qz8amwZs0aHDt2DHw+H0ZGRhg+fDhcXV1Jxfw2AoPBhKa29EXo
ACAvKxSdrIVTVLJS7oDLrRIaN7UaBRun+ULjVRV5CLw2CRVl4ouSNYb9+/fDwsIC5eXlmD59Ou37
+8yZMzhz5gwMDQ1x/PhxLFmyBOvXr0dQUBAcHBzqbUnWFCgpKSEoKAirV69GYmIi1q5di3nz5uH3
33+Hk5MTgoODMW3aNJHHamtr44svvgAgqFhbX3XaprxOUffTwMAAly9fhomJCdLS0rB//36EhYXh
/PnzePz4MVxcXJCcnIwxY8agtLRUtpv0EUOGDMHLly+xc+dOTJ48GWvXrsV///2Hw4cPUxu5oioX
e3h4IDIyEuPHj0dUVBQ2bdqEBQsW4Ndff0VFRQW6d+/eKL3kHQafzy8CQJrKEeQCTU1NmT4MzM3N
kZKS0nwKtRJpaWlYsWIFrl69KpW8paUltm3bhmnTpsmd10Za7ty5g+HDhwMQeIUb4oGbOXMmZTRN
njwZly5douYCAgIwevRoAMDChQvFNruOjo6mPNEjRozAzZs3afNfffUVLlwQlPEfPHgwtZv6Mffu
3QObzYaioiIqKyuFPLrz5s3DqVMCT9ydO3dEVvGTRb4p9OJyuXB3d0dERAQ11qNHD3z77beYOnWq
VC1x5I2ihCg83zwfRfGRYmU69BwKtx9/gVpH0a0HWpOvv/6aamdQH1evXqUe/mp59+4dtbHXp0+f
dhExIg1JSUno0qULOBwOXF1dERQURG3qVVdXIz4+XqpoE0Lr8uTmbFovT0kwmUoYNy8O/mecUVNN
LzTXd9RZkW1WeDwOAv/9ErmZT4TmNHVs0H/sZahrdZZd+SYgLy8P8fHxsLS0bFBKSmPh8/lITExE
YWEhHBwcmqXwINC811ldXY3o6GhoamrSqr/zeDxERETA0tJSpHHYVCxevBi//vorfvrpJ2zcuFGs
HIfDQUxMDLhcLhwcHD6JjbJ2UYSI0H4wMzOTKb8xNTUVaWlpDfKeyjNmZma4cuUKbt68ieXLlyMx
MbFe+eTkZHh7e2Pfvn3YtWsXRo4c2UKaNh12dnbU69LSUhQUFMjsFaxbodXEpHm8WHVDex88eCBR
vqamBjk5Oc3+ANEUerFYLPz333/44osv8OSJ4IHs6dOnmD59OrZs2YJt27Zh6tSpTa98M8DnchF3
9jCij28DnyM6VJWloganb3fBaqKwF0Qe8PHxoYxPQ0ND/PDDDxg8eDA0NTURGxuLFy9ewM/PD69e
vWplTeWL0NBQcDgcAIIewXUfnJWUlIjx2UbQ1BHfLkoUPF41CvMiYWI5Aqmxl2hz6YnXRBqgTKYC
eo84hbuXhqK8lJ4TWFKYgPt/j0S/0Weh28FV9gtoJAYGBq3ae5nBYMhcDLAhNOd1KikpwdVV+HfH
ZDKb3cOYk5ODc+fOgcViSfzeVFBQoDp7fCoQA5QgV5ibm4s1QLW1tamehnUJDAxst7HyI0eORFRU
FA4dOoSdO3dK9A5HRERg1KhRGDBgADZv3owhQ4a0kKaNx8zMDMrKyqiqEoRKpaWlNcoA7dy5eXat
61aO/fbbb6XaPW2uneO6NJVehoaGCAoKwsWLF7Ft2zbq/zE+Ph5eXl64f/8+jh07Jtfe0JLUeLzY
ugAFUeJL7es59YDHlhPQ6CzbQ25LUVlZSfXJ09TURGBgIOzt7al5S0tLjBgxAj/88APi4uJEhq13
7NiRajegofHptJBJTv4QZm1sbNyKmhAag6ytWAAgLzMUnazHCRmgmcm3wONWg8kS9iwpqxpgwDg/
PLg6FlUVebS5yvL3uPf3CHTruR52rkvBZJLHZgKdb7/9FgAwatQoWFhYgMfjITw8HBs3bkRxcTG8
vb1pG+wEAeQ/iSBX1OfJFBeS0J4NUECQD7l+/XrMmTMHGzZswJkzZ8Dj8eo9JjAwEEOHDkXfvn2x
adMmqnmzPMNkMmFvb0+Ff165ckXkzqU4IiMjaeHY48aNa2oVAQBdu3bF06dPAQhyP5rrPLLSlHox
GAx4eXnBy8sLd+/exerVq6nfy2+//QYXFxe5rIbL5/GQcO5nvPl1K3jVwjlfgKCvp8PXP6DLzFVg
yLERHRERQTU5HzNmDM34/BhxDzdKSkpim5y3Z3JycqjXn2J7g/aCrB5QAMjLCoFd9yVQUNQAp+bD
hm1NdTGy3z2EsYXo70JNXVsMGOeHh/+MR00VfaObz+MgMmQbkqPPwsF9JUytx0BRSVNm3Qjtk6io
KNy/fx9HjhyhjTOZTCxbtgw7duxoJc3kG2KAEuSK+irhivP+1S2+0p4xMjLCqVOnsHTpUnz33XdS
FWAKDg7G8OHD0atXL2zcuLFZ+2E1BatWrcLMmTMBAEePHsX3338vtedm9+7dVNnyXr16UU21RVGf
AZ+QkFDveepW0AwKCpIrA7SWptTrs88+w/Pnz/Htt9/i2LFjAEAVjZAnihOj8WL7YrDfPBcro2XV
FR5bT0Cni0sLatYw6lbHbIsViYuLixEdHQ1LS0t07NixQWuUlpbi7du36Nixo0xpFnXbF7TVnHgC
oNEgA/QpmExFmFiOQFqcH23uXcK/Yg1QANAx6IaB46/g8XUvVFXkCs2XFiXj2f3leP7gOyip6oHF
UoKCoga0dLuApUA2Oj5Vdq23R+ESc6RnFiMjqwjV1VwYG2nCrJMOOhjwEPN0fbOcV0WtI+xcFkJF
vWGfr60NMUAJckV9DxkVFRUix2NjY5GTkyNzz8S2iru7OwIDA3Ht2jVs2LABb968kXhMaGgoRo8e
DWdnZ3z33Xf46quvhMqCywPe3t44cuQInj9/DjabjV9++QVr1qyReFxCQgIuXrxIvV+0aJGQTN0+
XOLa16Snp2P+/PrzAYcMGQIGgwE+n48zZ85g3bp1ja5g2xQ0p14KCgrYtm0bTp48iaqqKlqIY2vD
rapEzOm9iDtzAHwuR7QQgwFb7xXounAjWEry93cviroh5Ddv3kRGRgZVwVhaMjMzqcrGnp6euH6d
3o4iNDRUqHCRJIYNG1ZvdeRDhw7h999/R0xMDGUIdurUCcuWLcPatWslrl9YWIjvv/8e9+7dQ3Jy
MrWGtrY2nJ2dsXXrVgwePFjksYMGDUJMTAzNYJ83bx6WLl1Kvf/zzz8lFvwiyAfKKnpQVNYW8kjW
B6emFIV5UehkPU7IAM1MDhAbhluLrqELhk66jeAAbxTli04H4vM5qCr/4GUvLhDdy5LwaaHJBOzr
fERX5AOp+eLlm4K0uMsY/lUwFJXbXi1Z0oaFIFdI6gUqLq/vU/GC1mXcuHF4/fo1Tp8+LbV34PXr
15gzZw7Mzc2xbds2Wt9HeYDBYODgwYPU+/Xr11NeN3GEh4djyJAhVCPnSZMmUQ2x62Jl9aGk/4sX
L4SaPMfHx2PgwIES74m7uztlpObk5GDFihUSQ6JbgqbQqz5PG4PBoPpO1hcO2pK8D76Fu14eiD21
R6zxqd7ZGgN/vwun5dvbjPEJCEr01zZx53K5+OKLL5CVlSXTGlwuF9nZ2cjOzha56VJdXU3NS/sj
rr1RSUkJJk2ahJUrV+Lt27fg8/nQ0hI8FKWnp2PdunWYOnVqvb1L79+/DycnJ/z+++9ISkoCn8+H
mpoaAKCoqAiPHz/G0KFDsWrVKipXvC75+fnIzs5GeXk5NVZUVETTX9RxBPlF1lYsgCAP1Mh8KBQU
6dEzNdUleJ92T+Lx6lpmGDrpNqy7zZP53ARCS1JRloWM5JuSBeUQYoAS5ApJhlRdI6Iun6IBCghy
DGbPno24uDgcOHBAai9wdnY2Nm3aBDMzM8ybNw+hoaHNrKn09O/fH+vWrQMgeIBeunQplixZghcv
XlAPr3w+H/Hx8fDx8UG/fv3w7t07AIJcuJMnT4pc18LCgqq0l5KSgpEjR+LWrVsIDg7Ghg0b4Obm
hqSkJKqpdX3s2bMHhoaGAAQelX79+iEsLIzWz43NZuPy5cuYOXOmWO99U9NYvby9vfH555/Dz8+P
MjT4fD7CwsLg5eVFGbS17Wxai5KUWASv+BJPvpsotq8nGAzYeC3F0L9Coe8sui+qPKOlpYWtW7dS
758/f45u3bpRrXiaAmdnZ9y7d6/en99++41WcKpfv34i15ozZw7+/vtvMJlMbN26FQUFBSgqKkJ6
ejrlZb106RL++OMPkcfHxMRgxIgRSE9PB4PBwMaNGxEfH4/S0lKw2WzcvHkTlpaW4PP5OHjwoEhv
6okTJ3Dv3j1MmDCBGtu8eTPtenr37t2YW0ZoYRoShpub+QQsljJMrYRTTt7F/yPVGiwFVbgN3IMh
E29C38hTZh0IhJZCUaltFpgjfUAJcgWXy4WysjLlzfqYcePG4dq1a0LjLi4upBUBgPLychw/fhz7
9u2T2Vvi6OiI+fPnY8aMGWJ7SLYkV65cwdy5c2mVj1VUVGBvb4/k5GShisheXl745Zdf6q3+euLE
CSxYsEDs/OrVqzF79myqHLqoPqC1REdHY8aMGXj58iU1xmKxYGZmBjabjcLCQmq8tLRUqOJsU/cB
bQq9xo4dixs3PvTd69ChA1gsFu1vaciQIbh9+zat6m5LUZGTibcndiH1+hnwxXxGAICGuR3cN/7S
Jg3Pj9m4cSO2b99OG+vduzcOHTqEnj171ntsY/uAFhYWolevXoiNjQUgaGny119/CckFBwdThunK
lStx4MAB2jyXy4WNjQ1SUlJga2uLmJgYob64tRtCAHDq1CnMmTNH6Dz5+fno2bMnEhMToaCggIiI
CFrucy3ffPMNfv75ZwCAn58fJk6cKNN1E+SHN0/3IvrZXpmOUVY1xLi5b5GVcgdB/tNocywFNYyb
GwMFRTWZ1szLDEXy27PISL6NmirRUQAEQkvTsfNg9B97EQxG2/MnkhxQglzBYrFgampKa6dRF3Eh
hZGRkSgsLGzWhsJtATU1NXz33XdYvHgxfv/9d+zZswcZGRmSDwTw5s0bfPfdd1i7di3Gjx8PLy8v
jBw5Eqqqqs2stWi+/PJLuLq6YtGiRQgODkZ5eTkqKytFbjSMGzcOJ0+epML1xDFv3jyUlZVh/fr1
NO+fjY0Ntm3bBi8vL6n70Hbt2hWhoaHYtm0bTp06hYyMDHC5XFp+pJWVFQYMGNCiTaUbo9ekSZNQ
VFSE0NBQqk9oLTo6Oli3bh2++eabFjc+y7MzEP/nQST/c1psdVsAYCgoosus1egyZ02bCretj23b
tsHW1hYrVqygvNIhISHo06cPli5dip07dzZLi5WamhpMnDiRMj779u0r1vtaG7HAYDCo13VhsViY
NWsWtm7divj4eAQHB6N///7U/N27dynj08bGRmQIPQDo6+vju+++w7Jly8DhcLBu3TqRG5KE9oOm
juwhuFUVuSgpTEDHzoOhpKyD6qoPm25cTjmyUm6js+2EelYQxsCkFwxMesGDz0dRwVukJ/yLqoo8
KCiqQ0vPvk0aAIS2jYpaB3TsPKjN/u0RDyhB7hgwYIDYCq9ubm7Iz89Hamqq0Nz169cxZsyY5lav
TVFVVQVfX18cPHgQcXFxMh+voaGB0aNHY/LkyRg1alSrGaNcLhcxMTF4/vw5EhISoKmpCQ6HgyNH
jiA7OxuAoFfipEmTMHPmTAwYMEDIw1KX4uJiREZGIjs7GxYWFnB1da1XXhry8/MREREBNpsNY2Nj
WFhYwMTEpFFrNgUN0ausrAyxsbHIyMgAn8+HjY0NrK2tW7xwVWHca8T/dQTpdy6LLzD0/xh6DITr
94egadGlhbRrWd6/f4+lS5fiypUrtHFzc3P8888/IlsWNcYDOn/+fCqc3crKCqGhoVR4d11qamqg
qqoKLpcLa2trsVWk//jjD8qw9PX1pRmZP/30EzZv3ky93rhxo1i9SktLoakpaIGhr6+PvLw8IRni
AW0/FGS/xD0/2duIuQ8+BKuuM/D8wXdIjqYXzTK2GI5+o4U9+QQCoeUgHlCC3GFhYSHWAE1ISMD4
8eNFVmEMDAwkBuhHKCsrY+HChfj666/h7++PQ4cO4f79+1IfX1paiosXL+LixYtQU1PDwIEDMWzY
MHz++edwdHRsRs3psFgsODo6Cp3zm2++wb59+3DgwAGUlJTg9OnTOH36NHR1ddGnTx/0798fAwYM
EMr70tLSQt++fZtUR319fQwZMqRJ12wKGqKXuro63NzcqAqqLQmnshwZd68g+eopFESGSZRXNeoM
p+U70GlY+zYyjIyM8Pfff+Pu3btYvnw51aYlNTUVgwcPxq1btySG5ErL3r17KeNTR0cHN27cEGl8
AkBSUhKVMlFSUoLJkyeLlKsbxv1xhEvdzTELC4t6ddPQ0ICBgQHy8vKQn5+P/Px8uUgZIDQPGg0o
QgQAeZkhsOo6A2a2XwoZoO/T7qGqsgDKKq1fvZxA+FQhBihB7qivEm5xcTFcXV3FGqAE0TAYDIwZ
MwZjxoxBREQEDh8+jHPnztGK00iivLwcN2/epHIijY2NMXToUPTo0QMeHh5wdXVtcQ+phoYGtm7d
ikWLFmHXrl34888/UVhYCDabDX9/f/j7+2Pjxo2k8IicU1NajJyn95F+9wreB90Et7Jc4jGKmjqw
m7kSNl5LwVL+dHrwffbZZ3j16hW2bduGnTt3gs/no7CwENOnT8fbt29p7YYawtWrV6kwWgUFBVy+
fBkODg5i5esajzk5OfDz8xMrW8vHaQF115Cm1YypqSnl+YyLiyP/3+0YJRUdoTBaacjNfAIAMDTt
C1V1I1SUvafm+DwO3sVfhY0TqXJLILQWxAAlyB2SWrEYGxuLHH/x4gXKysqEir0Q6Li4uOD06dPY
t28fzp49i5MnTyIqKkrmdbKysnD27FmcPXsWgMBL2bVrVzg7O8PKygoWFhawtLSEubk59PT0oK6u
3uiHY3EYGxvjyJEj2Lt3L65cuYKTJ0/iwYMHGDVqFK2SKEE+qMzPBjv6BQrePEfei0AURD2tt6hQ
XRTUNWE9ZTFsvb+FkuanmfOtrKyM7du3w8LCgiqqlZiYiEuXLmH69OkNXvf58+fw9vamWhQdO3YM
n332Wb3H1M0HdnFxkaqvqLu7O+09h/MhvLpuxV1xMBgM6vXH7ZQI7Q8NbUsU5ITLdEx5STrKSzKg
pmkKM7tJiA0/SptPjb1IDFACoRUhBihB7pBkgFZXV8PIyAjv37+njXM4HISEhEh8YCIIMDAwwIoV
K7BixQqEhYXh5MmTuHDhQr29IOuDy+UiMjISkZGR9coxGAwwmUyoqKhAXV2d9jDZlOjr6+Pp06di
NywIzYMKOFjWoQraigyoa2rC0MgUimrq4PH54JQUoiI3C9yKUpnXVdY1hNXkr2E9ZTGUtHSbQfO2
x9y5c7Fx40bqs/DVq1cNNkDT09Mxbtw4qofm6tWr660YXUvdKrRMJhNbtmyR+dx2dnYIDxcYGNIU
TasrY2trK/P5CG0LDW0rmQ1QAMjNDIZ5lykw7zJFyAAtyH6JYnYctHTtmkpNAoEgA8QAJcgdknKA
4uPj0b9/f1y+fFloLjAwkBigDaBnz57o2bMnDh06hBs3bsDPzw8BAQG0hu5NBZ/PB5fLRVlZGcrK
ypp8fULrocECfLqrfthUKC9ESZJsoXMfo2XtCOspi2A2atonFWorDUwmE+PHj8fx48cBQKg1kbSU
lpZizJgxVJ7mF198gT179kh1rJmZGdTV1VFWVobXr1+jpKSEKhIkLXZ2H4yA2p6+4igvL6fCb3V0
dMTmphLaDxralg06LjczBOZdpkBbvyt0DLqhMI8e6ZPy9gKc+2xqChUJBIKMtM3avYR2jZmZWb1e
sYSEBAwYMEDkHMkDbRzq6uqYOnUqLl++jNzcXFy+fBlTp06V+YGS8GmypYtyk3u0i5PfIv6vI3i2
cQ6ij29Dxv1/UJaRLPnAT4TKykrqtahKuJLg8Xjw8vJCREQEAEGl8bNnz0pdFZrBYFBFrrhcLo4c
OSKzDnWLJ124cKFe2XPnzlFhtx4eHjKfi9D2aLABmvGEem1h/5XQfGrsBfB49VfXJhAIzQMxQAly
h7KyMjp27Ch2Pj4+XqwBGhYWJlNhHYJ41NTUMGnSJFy4cAEFBQV4/PgxNm/ejD59+rR4H0hC20BZ
cvqe7PB4KE2LR+bDa4g5uRth66bj9oRuuD7EBI+XjkGUz2ZkPrqByrz3ktdqQ7x69Qq5ubn1ymRn
ZyMgIIB635AquCtXroS/vz8AQXGf69evy5xHf+jQIaioCLzT27dvlzmnfPTo0VRf0FevXtGuqS5l
ZWU4cOAAAIHhu2PHDpnOQ2ibqDfQAC0tSkRlmaBNl5ndJDCZ9BoEleU5yEq53Wj9CASC7BADlCCX
1JcHmpCQACcnJ+jqCueBVVZW4unTp82p2ieJgoIC+vXrhy1btiA4OBgFBQXw9/fH1q1bMW7cOKkq
VxLaPz8nVrVYUZia0iLkPnuAuDP7EbpmKgJGWePWeAc83TgHiZePozDuNfg8Xovo0hxcuHABpqam
mDhxIq5fv46CggLa/LNnzzBq1CjKSJ0zZ45QcR9JHD9+HP/73/8ACMJ59+zZAzabjTdv3oj9EdVP
2NraGj/++CMAwWdwjx49sHfvXqpHLyDwjkZERGDHjh1Ui5e6HD58mPK6Tpw4EadOnaJSAHg8HsLD
w9G7d2+q/cysWbPQo0cPma6X0DZpqAcUEIThAoCyqj5MLEcKzSdG+TZ4bQKB0HCIG4Mgl1hYWCAs
THQPwOLiYuTm5qJfv364fv260HxgYCD69evX3Cp+0mhqamLUqFEYNWoUNZadnY3w8HDExcUhPj4e
qampyMzMRFZWQnTEfgAAIABJREFUFgoKCmihgoT2SVw5sDOuAiusVaHEBFhMBphgAGgZo7Q8Kw3l
WWlIv30JAKCgrgV9557Qd+0Dg+79oOfoAaaiUovo0hTU1NTgypUruHLlCgCgQ4cOMDMzQ3p6Oq0I
W8+ePXHs2DGZ16/1fAICI8/b21viMSYmJiILBdW2btm6dSsqKiqwdu1arF27Frq6utDS0kJGRgZV
7Xb16tVCx7u5ueH8+fNYuHAhCgsLMW/ePHz99dewtLREVlYWLV/cy8sLhw8flvl6CW0TFTVDKCiq
g1Mje82A3Mwn6GwrqMxs2XUG0hOv0eaz3z1AaVFyo4xcAoEgO8QAJcglkirh1obhijNAN2zY0Fyq
EcTQsWNHjBgxAiNGjBA5X11djcLCQuTl5VEVcAntFw0NDep3XJIaj8TLvyL1+p/gVkj3EKnSwRTg
81CZm9VgHThlxcgO+Q/ZIf8BAJhKytBz9ISBWz8YdO8LPaeeUFCVz79DFxcXODo6Ijo6mvIq5+Tk
ICcnh5IxNTXF5s2bMWfOnFYPi2exWPjhhx8watQofPPNN3j27BmqqqrAZrPBZrMBAKqqqujVq5fY
FIopU6agV69eWLRoER4+fIiKigokJCQAEITcWltbY/v27Zg6dWqLXRdBPlDXskBR/huZj8vNCKJe
d+w8CBraligtoueQJ0b5wqUvaddFILQkDD6fXwRAq7UVIRDqcuzYMSxdulTsvK+vLxwcHETmPGlo
aIDNZrf6AxmBQKDDqShD3J+HEee7HzyO5FxtHYfucPvhGLiVFShOfIPixDdgx7xCUXyk1IZsfTBY
LOjYuUDftY/gx6knVAyMGr1uU1JYWIinT58iLS0NWVlZYLFYsLa2ho2NDbp16wZlZeXWVlEkHA4H
sbGxiImJgaamJoyNjdGlSxcoKUnngeZyuYiLi0NMTAxMTU3h6OhINq0+YZ7cnIWMJH/JgiIYNzcG
yqoGAIDYcB+8frKZNq+krIPRs15DQVGt0XrWxc7ODqWlH1pOMRgMGBgYwMLCAt7e3pg0aVKztSEj
EOQdYoAS5BJ/f3+MGTNG7PwPP/yALVu2QFdXl/YBX0tISAh69erVnCoSCIQGUpwcg6c/zEJxguRi
NYpauui99wIM3D6E1fN5PJSkxIId/QIFb56hIPIZihOjwOdyG62bmokF9Jx6QK9bD+h184S2rRNY
SvJp5BEInwoRwZsR98qnQcf2Hn4KnWzGAQCqK9m47tsNPG4VTcZt4D5Yd5vTaD3roqWlhZKSEtjZ
2UFbWxv5+fl49+4dampqAABfffUVzp0716TnJBDaCqQIEUEukdQLNCEhAQoKClTlxI95+PBh0ytF
IBCaBC1Leww+9RCdhk2SKFtTzMbjZWOQdvNDew4GkwktKweYj/FG97X/w9CzTzD2fhb6HwtA10Wb
0LH351BQb9i+anlmCtJvX8LrA6vxcM5AXBvUEfdn9sPLncuQ9PcJ5L8ORU1pw/ptEgiEhqGhbdHg
Y3PqhOEqqejCzG6ikEx8xG/NVkDt8OHDePr0KRITE/H+/XssXrwYAHD+/Hncvt00VXiDgoJga2uL
Pn36yOV6BMLHkBhFglwiTQ4oAAwaNAg3b94Umn/48CFVFINAIMgfLBVVeG73hUoHEyT8VX/vSD6n
Bs83z0NlbibsZq4UKaOgqg5Dj4Ew9BgoOIbHQ1FCFPJfPUFeeBDywoNRVZAj8lhJ5y6MCUdhTDht
XMXQGFrWjtA0t4O6qSXUTS2gbmoJNWMzuc0rJRDaKupaFg0+tm4eKADYuSxCylu657GkMB7vU/+D
scXnDT6PNOjp6cHHxwfXr19Heno6wsLCMHz48EavW1hYiISEBKipNU0YcVOvRyB8DDFACXKJhoYG
9PT0hFoP1FJbmGLQoEEi54ODg8HhcEgeKIEgxzAYDDh/uwssRWXE+u6TKB91dCNqykrguHizRFkG
kwkdO2fo2DnDesoiAIJiSLXGaP6rYJRnpTVY98rcLFTmZiEn9K7QHEtVHSr6HaGs1wHKugZQVNeC
gpoGFNQ1oaCqDqaSMhhMFkqSY8ApLwNLVQ3aNt3aVIXe9oiSlg6M+o+Cggp56JY3GuMBLWbHobI8
BypqHQAA2vpd0aHTAOSkB9LkYl4eaXYDFBB87pmYmCA9PR0VFRUiZaqqqnD48GEEBQXhzZs3MDAw
gJOTExYsWCCUXrR582bcv38fAJCamoopU6YAEFTNPnr0KABBD92AgABcu3YNb9++xfv372FoaIg+
ffpg48aNMDIykmm9WoqKirBjxw48efIE6enpcHFxwcKFC2kV8gkEUZCnc4LcYm5uLtYALS4uRk5O
Dtzc3KCpqYmSkhLafGlpKZ4/f07yQAmENoDjki3glJcg8dKvEmVjT+8Fj1MDp+XbZT6PprktNM1t
YfmFINerPDsD+RFPkB8RgvyIUBQlRAJN0DuUW1GGsvQklKUnNXotQsuiYW6HwacfQVGDlMaQJ9Q0
O4PBYILPl/z/yWCwwOfT88FzMoJgZvsl9d7OZbGQAZqXFYq8rDAYGAsXN2xKqqqqEB0dDQBwcnIS
mo+Pj8fEiRMRGRkJQ0NDuLq6Ijc3F3/88QfOnDmDTZs2YdOmTZT8y5cvERERAUDw7FNrPNaNJLt4
8SLmzZsHHR0dODg4wNLSEk+ePMGrV68QGBiI8PBwasNemvUAICYmBmPHjkViYiJ69OiBLl264P79
+7h+/TqOHj2KJUuWNNUtI7RDSA4oQW6RlAcaHx8PBQUFsT0/SR4ogdB2cF65DyaDxkolG//nIUT5
SPaCSkKtoyk6fz4ZrmsOYujZJxj3/3mkjku2wnjAaLmriEtofkpT45D8z6nWVoPwEUymAlQ1TKWS
/dj4BIDcdHoYrrHFMGjrOQjJRT/d2zAFpaS6uhpLlixBaWkpLCwsMGmScB783LlzERkZidmzZyM9
PR137txBeHg4goODoa+vj82bN+PWrVuU/PXr16liRo6OjsjLy0NeXh5evHhBydjZ2eHSpUvIycnB
kydP8PjxY8TFxYHJZCIqKgqPHj2SaT0AmDNnDhISEnDhwgWEhobi9u3bCA8Ph6amJtavX4/CwsIm
vXeE9gUxQAlyi6Q80Li4OADiw3CJAUogtB0YTCY8fjoFbVthj4Ao4s7sR9wfB5tUBwU1DRh6DESX
2avRe/8ljApIxMiABPQ+cBkOX/8Ik8HjoWFmCzDJV2d7hltZ3toqEESgoW3Z4GNzMh4Ljdm7fys0
lp3+CHlZYQ0+jyj8/f2xZ88eLFu2DNbW1jh16hTMzMxw69YtobZEV65cQVBQEPT19XHs2DHafI8e
Page5ytXis6FF0e/fv0wefJkKCoqUmPW1tZUkaHExESZ1rt69SpCQ0PRv39/KkQXAGxsbPDVV1+h
uLiYVPgl1AsJwSXILbIUIhIFyQMlENoWCipq6LXvIu7P6IOaEsm751FHN0JJWw8W42c3m06qBsZQ
7W8M4/4fcpq41VUoTY1DcXIMyt4loiwzFWUZySjLTEFlbhb4XE6z6UNoXhQ1tGE+ZkZrq0EQgbpW
/c8EdBgAPlS1LS1KRnlJOtQ0O1FjnW0m4M3TfSgtohtfkSHbMPjLG43U9gM+PvT2MV988QX++usv
kQV+Hj8WGMqjR4+Gqqqq0PzkyZOxYsUKvH37Fvn5+dDX12+Ubh06CPJixeWiiqN2g9/FxQXZ2dm0
udp80lonAYEgCvJkTpBbpPWAuru7kzxQAqGdoG5iDvdNxxG6ZqpU8uG7v4GKoQmM+jR/8ZBaWErK
0LZ1Eumt5fP5qClmo7IgB1UFOaguKgCnrAQ15aXgVpSCU14Gbk0VakqLUBQXCW5lOZiKytC0tIei
ukaLXQNBGEVNXVhOmAs1o86trQpBBLIYoErK2qiuom9iZacHwtJhGvWewWShq8dKPL23lCaXlxWK
zOSbMLEc2TiF/5/t27fD09MTd+/exb59+/Dw4UPk5eXBzMxMSLb2uaZzZ9F/g0ZGRlBQUACHw0Fc
XBx69+4ttR7l5eW4dOkS/P39kZWVhaysLGRmZjbommr1PHr0qFBholrevXvXoLUJnwbEACXILZJy
QGs/AFksFvr16yeyHcuDBw+IAUogtDFMBo6B1aSvkeT3m0RZPpeLpxtmYMBv/0HHzrkFtKsfBoMB
JW09KGnrAZb2ra0OgdBu0JDZA0on590jmgEKAGZ2kxDz8n8oZtO9dRHBm2FkNhRMVuMrU7u5ueHz
zz/HZ599hqCgIISEhGDGjBl48OABmB+F85eVlQEAVFRURK7FZDKhqKgIDoeD8nLpQ8WfP3+O4cOH
g81mo1u3bujXrx8WLFgAHx8fPHv2TOZrqq6uBiDw1Hp4eIiUsbW1lXldwqcDMUAJcoskD2hCQgL4
fD4YDIbYfqAPHjzA+vXrm0tFAoHQTDh9sxM5zx6iNJX+YMhgssDn0YuMcMpLEbJqMgb7BkJFv2NL
qkkgEFoIWTyg1VVFQmPZ6YHUM0MtDCYLTr03IjiAHnZdWpSE2HAfOHh813CFP4LJZMLX1xeurq4I
DAzE7t27qZzOWmxtbfHo0SOxnkk2m02Fy9rY2Eh13vLycgwfPhyFhYW4ceMGrUXKtWvXGmSAOjg4
4P79+zAzM8OWLVtkPp5AIJUUCHKLnp4eNDTEh6RVVFQgPT0dADB48GCRMsHBwdROHYFAaDuwVFTh
vuk4wKB7Mvg8LhS19ITkK7LTEfr9V+DVkP93AqE9oi5TL1AemEy697KqIhdF+dFCkiaWI2Fo0ldo
/O3zAygplK04jyTs7Oywc+dOAIJ+mx8bf926dQMAhISEiDw+KEhQzVdTU5MWpltrVBcXFwsdExoa
ioKCAjg7O0vdn7O+9QBQXk9/f39UVlZKtSaBUBdigBLkGmnzQN3c3KCtrS00X15ejrCwpq1oRyAQ
WgZ9px6w+WqZ0HhNcQFUOwi3ZCiIDEP4rm9aQjUCgdDCKKvoQUFR+jxpUQZrdtp9kbKu/XeCwaA/
EnO5lXh2b7lQxEVj+eabb9C/f39wOBxMmzYNpaWl1NzcuXNhZGSEV69e4erVq7TjysrKsGPHDgDA
unXraOG7nToJiiulpKQIVbStrY8RExOD/Px8ajw+Ph5RUVEAgIyMDNox9a0HAN7e3nB2dkZaWhpW
r14NLlf4HvH5fKExAqEWYoAS5BppeoECgjzQAQMGiJSpbaJMIBDaHl0XboRqx05C4zxONZR0DITG
U2/8icTLx1tCNQKB0MLIWojoY96/eyBSVsfAETbOXwuN579/iuhn+6RXUAqYTCZOnz4NdXV1JCQk
4NtvP7SD0dTUxJEjR6CgoIDJkydjyZIlOH36NHbv3o1evXohLCwM3bt3x6pVq2hrOjg4UM9L48aN
w8GDB+Hn5wcA6Nu3L3R1dVFZWQk3NzesWbMGU6ZMgbOzM1VF18/PDwEBAVKtBwAKCgo4efIk9PX1
4ePjg549e2Lbtm04ceIEli9fDk9PT3h7ezfpfSO0L4gBSpBrpPWAAsCQIUNEyhADlEBouyioqsP1
+0NC41UFuejY+zMwFBSF5l4f/B75EaJD2AgEQttFFgOUwxFuLZKXGQpOjejiPd16roeapnD12ejn
+5GZfEt6JaXA2toau3fvBgCcOnWKZtxNnjwZT548gaOjI3799VfMnTsX69evR2pqKr7//nuEhIRA
WVmZtp6SkhLOnTsHCwsLREdHY9WqVdi+fTsAwMDAAJcvX4aJiQnS0tKwf/9+hIWF4fz583j8+DFc
XFyQnJyMMWPGUN7Y+tarxcPDA5GRkRg/fjyioqKwadMmLFiwAL/++isqKirQvXv3Jr1nhPYFg8/n
FwHQam1FCARR7N27F2vXrhU7P3r0aNy4IejX9fr1a7i4uAjJKCkpobCwUGRPLQKB0DYI/d4LmQ+v
08aYikpwWLABb45tEZJX0TfCkD+DoWJg1EIaEgiE5iYiaCPiIn6RSlZBUR0sBXVUVeTQxvuNPgdj
C9Ftm3IznuDhP+NRt4coALAU1DBw/FXoG7k3SO+GUlxcjLdv36Jjx44wNzenFVASRU1NDeLi4lBR
UYEuXbpAU1OTmquurkZ0dDQ0NTVhbW1NjfN4PERERMDS0hI6OjpSr1cXDoeDmJgYcLlcODg4QEmp
8dWDCe0b4gElyDWyeECdnJxgYCAcklddXY3g4OAm141AILQcTt/uBlOJvuvPq6lGYcwrWE1cICRf
mf8eYRtmgMfhtJSKBAKhmZHJA1pTBgPjHkLjWan3xB5jaNpHZOVbLqccgdcmIjfjidTnbwq0tLTQ
s2dPWFhYSDQ+AUBRURGOjo7w8PAQMhaVlJTg6upKMz4BQUhw9+7dhYxPSevVRUFBAd26dYOLiwsx
PglSQQxQglwjKQc0OTkZnP9/wKxtxyIKEoZLILRt1E0tYOu9Qmg84/4/6DR8CvSchfv95r96giif
jS2hHoFAaAHUtcxkkhcVUvs+9b96j3HssQ4dOw8SGufUlCLw2kTEvTrW5IWJCIRPDdIHlCDXSPKA
cjgcJCcnUw2PBw8eTMulqOXBA9GFBwgEQtuhy+zVSL12BpV572njb45tRs/dZ3F/Rl9U5WfT5hL+
OgJ9514wHTy+JVUlEAjNgLqWhUzyDAYDDAYLfP4Hg7GsJA3FBbHQ0usi5hgmeg8/hftXRqG4IIY2
x+PVICJ4E5Ki/4RFFy9oaFtBWb0DVFSFo68I9aOoqAEVddK3+VOF5IAS5Bo+nw9VVVVUVVWJlblx
4wZGjx4NQFBm3MHBQUhGQUEBBQUF9YaQEAgE+SflX1+83LFUaLz3gctQVNfC46WjwP+oJYCCuhaG
/BEEjc7WQscRCIS2A5dTgSvHhb2a4jA2H4aamlLkZdKLkjn13gR7t/pbNlWUvcejf75ASWFCg3Ql
SMbEciR6DT8BFktZsjChXUFCcAlyDYPBgJlZ/SE3ta1YAMDe3h7GxsZCMhwOB4GBgU2uH4FAaFnM
x8yApqW90PibX7ZCv3tfOC79SWiOU1aMsPXe4FaRhukEQluGpaAKFbUOUssX5kXCxFy44FBmUoAI
aTqq6kYYNOEa9DqQaq7NRWbyTSRE/NbaahBaAWKAEuQeSXmgdQsRAeLbsdy7J77wAIFAaBswWCx0
W7ZNaLw4IQoZd6/AznsFTAaNFZovinuNiAOrW0JFQhOQl5eH5ORkJCcno6JCuJ0G4dNFXVP6PNCK
svcwMBGRH579ApXlOSKOoKOi1gGDJlyDdbc5MulIkJ5idpxkIUK7gxigBLlHUh5obGws7f3QoUNF
yt29e7fJdCIQCK2Hcf9R0HPqKTT+9sRO8Hk8uG86DvVOVkLzKf+cRlrAuZZQsVnJyMhAeHg4UlJS
UFJS0trqNAtr166FlZUVrKysEBQU1NrqEOQIWSrhAoJquJo6th+N8pGZcluq41kKqnAbuA+DJ9yA
vpFwVV1C4zCxHNHaKhBaAVKEiCD3NJUBGhUVhZycHHToIH34DoFAkE8cF2/G4yWjaGMlyTFIv/s3
On8+GT13ncXDeYPBq6bnj4fv+gY69t2hZSWcKy6v/P3337h16xbevHmD6OhoFBUV0eZVVVXh6uoK
T09P9OjRA15eXmCxWK2krYCdO3fi+fPnUssvXLgQw4cPb0aNCO0FWSvhFuZGwsRyJGLD42njmUkB
sOo6Q+p1DEx6YcjEABTmRiIh8iQykv3BqS4DACgqa0FRiZRTkQUFRQ1Yd5sNU6vRra0KoRUgBihB
7pFkgGZmZqKsrAzq6uoAADMzM9jY2CAhgV44gM/n4/79+/Dy8mo2XQkEQstg6DEQBm79kffyMW08
5tQedBo2CTpdXOCyaj/Cdy2nzXOrKhC2bjoG+wZCQU2jJVWWmezsbCxevBhXr16tV66iogIhISEI
CREUWhk7diy0tFr3YTgkJAQ3btyQWn7YsGHNqA2hPaEmowHKzouErfPXiA0/QhvPfvcQNVXFUFSW
7X9Fx9AJHkMOwwOHZTqOQCB8gBigBLlHUg4on89HXFwcunf/UChg6NChQgYoIAjDJQYogdA+6Pr1
jwhcRPealSS9FfQGHToBlhPmIu/VE7y7eZ4ukxKLlzuXocd23xbUVjauXLmCr7/+Gvn5+QAADQ0N
eHt7o3v37ujevTs6dOiAlJQUJCUl4eXLlwgICEBSUlKL6FZdXS1Ts/l+/fpRrbLEYW8vXFiKQBCF
LDmggKAQkV5Hd6ioGaGy/EMLJx6vBhnJN2FhP7WpVSQQCBIgBihB7pHkAQUgZIB+9tlnOH78uJAc
KUREILQfDNz6waB7P+SF03MEY0/vRaehEwAA3dcfQWFMOEqS6f380u9chr5Lb1hPXthi+kpLUlIS
pk2bRrWfcnR0hJ+fn5CRZm5ujoEDB2LOnDn4+eefERcXh4CAAJmMQ1no2rUrMjMzoampiXfv3kl9
3Pz58zFr1qxm0Ynw6SFrDmhpYSK4nAp0shmLhNe/0+bSE/4lBiiB0AqQIkQEucfU1BQKCvXvlXyc
Bzp48GAwGAwhuVqPAYFAaB/Yz18vNFYU9xpZQTcBAAoqaui5+y+wVNWF5F4fWouCqGfNrqOsrFq1
ijI+BwwYgLCwMKk8hHZ2dlixYgVUVFSaRa+3b98K5Z8SCC2NmoYpGAzpH1/5fB6K8t+is/V4obna
MFwCgdCyEAOUIPewWCyJvUA/bsWir68PV1dXkbLEC0ogtB86eA6CnpNwZcpY3/3Uay1Le7htOCok
w+fUIGzdNFSxc5tVR1n477//8M8//1Dv9+/fT+W3NyV8Ph+xsbF49eoVampqmnz9lqakpATR0dEI
CQlBeno6eDyezGvU3pPY2Fjw+fwG61JTU4OEhAQ8efIEiYmJ1GYCoWlgshShqi7c77s+CvNeQ9+4
J1TUjGjjPF41MpL8m1I9AoEgBcQAJbQJJOWBfuwBBUg7FgLhU6HLnO+FxgpehyIvPJh633n4FFhN
+lpIriInE09/mAU+l9usOkrL1q1bqddjxoyBp6dnk66fnJyM0aNHQ1dXF/b29ujevTs0NTUxaNAg
JCYmijzGxMQERkYfHtwzMzNhZGRE+ykrK2tSPSXB4/Fw9+5dLFu2DJ07d4aWlhYcHR3Rp08fdO7c
GTo6Ovjpp59QXl4uca2YmBgMHz4cOjo6sLe3h729PfT19eHt7Q02m40///yTus4DBw6IXScuLg7T
pk2DqqoqbG1t0bdvX9jY2EBVVRUdO3Yk7WSaEFnDcAtzI8FgMNDJRrhHcGrc5aZSS26JiIjAq1ev
GrWxQiA0JcQAJbQJJBmgH3tAAUEeqCgePHhAPoQJhHaEcb+R0LZ1EhqPPUM3Fpy/2wNdRw8hudzn
jxB59Mdm008WIiMjqdfLly+vR1J2AgIC4O7ujoCAABQVFUFNTQ2KioqoqqrCo0eP4OnpiYcPHwod
l52djezsbOo9j8ejxmp/WvozNSMjA8OGDYOPjw/S09MBAGpqatR8SUkJNm/ejCVLltS7jp+fHzw9
PXHnzh0UFwtCMVVVVcFms/HXX3/B3d0dwcHB1HWKM7QTEhLQo0cPnD9/Htz/38zQ1NQEg8EAn89H
Tk4OtT6h8cjaioWdJ/i/MrOdJDSXmxGEirKsRuvE5/MRGRlJ+3n79q1c/N49PT3RvXt3VFRUtLYq
UhEfH4/IyEgUFha2tiqEZoIYoIQ2gSQDtLi4GO/fv6eN9e/fX2QxjtzcXLx69aop1SMQCK2M3axV
QmPZT26jKCGKes9UVELP3X9BScdASDbhryN4d/tSs+ooiY+NFEmVY2UhIiICY8eOBZvNhqOjI54+
fYqSkhKUlJTAz88P2traYLPZmDNnDjgcDu3Yu3fv0lIXDA0Nce/ePdqPqqpqk+kqLUpKSvjqq69w
69YtZGRkoKysDElJSdi3bx/VB/XMmTOIiIgQeXxoaCgmT56M0tJSMBgMbNmyBSkpKSgvL0dsbCx8
fHxQUFBAK2gnztBeuHAhlR+7efNmJCQkoLi4GJWVlYiIiMCRI0ckppIQpEdNxkq4RfnR4PE40Ddy
h7qWBW2Oz+chNbbxXtCKigo4OzvTfrp27QptbW2Ym5vjl19+afQ5PgXev3+Prl27wtnZGevXC+f4
E9oHxAAltAksLS0lynzsBVVTU0Pv3r1Fyv73339NoheBQJAPOg39Euqmwp8TcX8cor1X69gJPXac
AZjCX38vti8GO/pls+koifj4eOo1i8VC586dm2ztNWvWgMfjQV1dHXfv3oWnpyeYTCaUlZUxceJE
HDx4EICgUNv58/S2NYMHD8aQIUOo98rKyhgyZAjtp9bgE0V+fj7evXsn8qfWeykrhoaGePfuHc6d
O4fhw4fDxMQEgOC7YvXq1Rg4cCAl+/Kl6N/pmjVrqNc///wzNm/eTFVdt7Ozw5IlSxAeHg53d/d6
deFyuQgNDQUAWFtbY9OmTbC2tgYgMJKdnZ2xfPlydOvWrUHXShBG1hBcHrcKJWzBM4K5nbAXNCXm
vNBYY9i2bRsOHDiA77//Hi4uLkhLS8OSJUtw9KhwLjqBjq+vL7UJdv78+XrD6NlsNgIDA/HixYuW
Uo/QRBADlNAmkOQBBUTngYprbk4MUAKhfcFgsWDrvUJoPP2/yyh/T28Z0sFzELot2yYky6uqRMia
KajIa3w4XkOou4nWqVMnidW/peXevXvUZ97s2bNp+Zy1TJ8+nYoY8fX1bZLz1rJq1SqYmZmJ/LGz
s2vQmioqKujQoYPY+YkTJ1KvReW23rx5k8rJtLCwwKJFi0SuY2lpiQULFlDvRVVXLysrox6Sy8vL
qRBcQvOhrin75gw7VxCGa24v3Au8hB2PvMzQRutVy4IFC7By5Urs2bMHr169ov6Gajd6CKLh8/k4
ceIEGAwG1NTUUFRUhMuXxXun/fz8MHDgQGLYt0GIAUpoE0hjgIrKAxVngAYFBaGysrKxahEIBDnC
fIw3lHUHq95tAAAgAElEQVQNaWN8LhcJ534WkrXzXoFOw4Q9IZW5WQhZNRmcSsnFa5qauvmFdfMZ
G0tgYCD1ulevXiJllJWVYWpqCgDtolWVoeGHvwNRn/XBwR8KVM2ePbteD64ktLS0YGNjAwDIysrC
5MmTkZGR0eD1CJKR1QMKAIW5rwEAGtoWMDTpIzSfFP1Ho/USx7x58wAAqampQiHuteTl5eHmzZvw
9/en5Vx/TFJSEpKSkqhw8OLiYty4cQPBwcFSFd36mNLSUgQHB+PSpUvw9/dHWlqaxGMyMzNx7949
XLx4ESEhIcjKyhIZns7lcvH69WtcvHgR4eHhEitu379/H4mJifjss8/g7e0NADhx4oRI2YyMDOTm
CiqYl5SUUPeloKBAov6E1qdptlcJhGbGxMQEioqK9X54ifKAenh4QFdXF2w2mzZeWVmJx48fizVQ
CQRC24OlrALrqYsR/etPtPHkf31hP389lLR0aeNuG39BaVoCCmPpOeGFb8Px7IdZ6LXvIhgiQnWb
i9qwTUAQCsvn80V63ERRt/jNpEmTaL1A627OnTp1Cv/++6/INWoLfmRkZIDH44HZRNe+a9cuTJgw
QeSctNcnieL/Y++8w5q6vz/+Tgh7I1OGDGUJ4kKqYkWxfl04WsU9UNSqdbXWWa27tlpbrVpH1aK1
ta1YUahYhuIEJ4gCgixlyB6CrMD9/ZFfrlxvAkmIYPDzep48Tzj38zn3JIFwzz2rvBxZWVl48eIF
cnNzERUV1eT6xu+J0HlsCd988w0mTJgAAAgKCkJkZCT8/PywZMkSxudKkA/qWmbgcHmgGkQ7c6Io
KXxIP7dxnoaCnJuM489TzsGt/2aoqrNrxFuK8BqkZ8+erMwGPp+PNWvWYNeu16OjuFwutm/fjlWr
VrF0OTo6oq6uDi9fvsTixYvx22+/0U6tgYEBTp8+LfG1zdixYxEaGsoYFaSkpIQ1a9ZgyxZ2lkhy
cjLmzp3LuKklJD09nREsiI2Nxccff4z09HRa5urqinPnzsHW1lakPYcPHwYgiCDb2Njg8OHDuH79
Op48eQIHBwfG2nHjxuHOHcEc58DAQAQGBgIAVq1ahR07dkj0+gltB4mAEhQCLpcr9SxQ4b7GtUuN
IWm4BEL7w3b8PCipMaOH9VWVSD/LvovOU9PAB7v+gmoHE9ax3Gv/IvY7dkrv26Rx06Gqqirk5kqe
Cjxr1ixMnz4d06dPZ3XdbPzdePnyZZw5c0bkQ3iRXFdXh/z8/Ba+mteYmZnBwcFB5EPWFFxAcOF+
9uxZjBgxAvr6+ujatSu8vb0xbdo0HDlypMm9jettLSwsZLZByPjx43H06FGoqqoCEERk9u7dC0dH
R/j7+0v1WRKah8PhQkNLus+ttCCejtJZ2I2Giqoe43hDQy3SHp+Um42NEaa1jxo1inVs7ty52LVr
F4YOHYrg4GAcOnQInTt3xurVq3H69GmxOlesWIGQkBDMnDkTu3fvxtChQ1FcXIwRI0Ywfr+b4sGD
B/jyyy8RGhqKe/fu4ZtvvgEAbN26FQ8ePGCsffr0Kbp3746rV6/Cw8MDp0+fRnR0NI4fP47ly5cz
5hUnJiaib9++qKiowIYNG3D16lXMmjULiYmJGDVqlMg5vQUFBTh37hyMjY0xduxY9O7dm57nLioK
un79esycORMA0L9/fxw7dgzHjh3D+PHszBbCuweJgBIUBmtra7Fz6gBBWkpdXR2UlZUZ8o8++oi+
M9YY4oASCO0PFR19WI+ZhdQ/DzDkqX8eRJepS8FVZnbG1jAxR9+df+LqgmFoqGGmaqafPQoVPUN0
/XTDW7cbEHzH8Xg8OpqRmppKN9dpCY0jLkuXLoWenl4TqwU0vph8F6mqqsLw4cPpSGfHjh0xdepU
2Nvbo2PHjrh+/Tp9MS2Kxim34lIipWX27Nn46KOPsGXLFpw4cQI1NTXg8/k4evQo/v33X5w7dw59
+vSRy7kIglEsleUZEq/n11WgoiwN2np2UOKpwdpxMpLjmJ1pn8b/Aocei8BVYnfQl4aamhpkZ2cj
OTkZ+/btw9mzZzFgwABWrfHdu3cREBAAGxsbXLp0iZa7uLigf//+2LFjByZNYtesAoLmWnFxcTAz
MwMALFu2DD4+PggJCcH27dtx/PjxZu1MTU1lfD/07NkTERERCA8Px507d9CjRw/62OLFi1FVVYW+
ffvi8uXL9M0WDw8Plt6VK1eiuroaBw8epJ3EAQMGIDs7G2FhYTh//jzGjh3L2BMQEIDa2lrMnDmT
vo6bO3cuFi1ahBMnTmD79u2M6zsfHx+8ePECAQEB6NKlC/z8/Jp9vYR3B+KAEhSG5jrh1tXVIS0t
jZWmIS4VJS4uDgUFBYxaIQKBoPh0mbIYqX8fBBrdZa8ueoFnF/+A9eiZrPUGLu5w33wMMaunAm/U
MT059i146ppwEDHmRd7weDx06tSJvtH2559/YsCAAS3W6+zsjNu3bwMABg8ejNGjR7dYZ1szbtw4
2vn86quvsHHjRoZTKW5epxBbW1u6c2ZOTo7c7LK0tMThw4exfft27N69G7t27UJdXR1yc3Ph6+uL
xMTENhlZ0x6RrRFRHLT1BCnRnbv5IznuIIDXf/PVr/KQ+eQv2DhPa5Ftwm7KQoQprW/WGv/666+g
KIpO3xbi7u4ODQ0NxMXFobKyUuQNoUuXLkFf/3VZAYfDwYIFCxASEoLLly9LZKeoRmc9e/ZEeHg4
XV8JCDpZh4aGAhB0+BU6n6IoLCxEcHAwVFRUMGbMGMYxLy8vhIWF4ebNmywHVJi10Ljp19SpU7Fi
xQrk5+fjwoUL+PjjjyV6XYR3H5KCS1AYZO2Ea2trK7LegKIohIeHy8M0AoHwDqFhZgULb/aFSsrv
P4md42g+aAxcl4muG3q8fwOST/4g8pi8mTp1Kv388OHDEqfSNYWzszP9XNj5VZFJS0ujo0U+Pj4i
L+ybo/H/BKFzLg5R5R3NYWhoiO3bt+P+/fswMDAAIGhAI7yIJ7ScljQiEu43txnOWpN0fw+ohpZ1
Mvbz88OiRYvoDAZTU1ORv6PCa5agoCB4enrSj0GDBtFrnj9/ztoHQKQTKEzjz8rKkjiyX11djaCg
IPz4449YtWoVnR3W+Luy8bWVuPF2b67l8XgYNWoU43WdPClIcX6z0VFUVBSSk5Ph5eXFKEXQ1dWF
r68vAPHNiAiKCXFACQqDJA5oUlKSSDkZx0IgvF+IGsnyMi0Rebf+E79n8mewn7lC5LFHP32FhMPb
5GafOFatWkXXJNbV1WH16tUt1jl48GC62U9AQIDMXSKFF9AFBQUydduUF9euXaOfi+vq2xhRNx2G
D3/teJw4cYJuwNSYhoYGLFu2rEWjM1xcXDB79mz658YNWQgtQ0OWCGh+HONnh55LWGsqytKR+eQv
me0CBE2p9u3bh6NHjwIQ/F0/evSItU5Ya62hoQEej8d4uLu7Y+DAgVKN9dHW1gYg+N2VZN/OnTvR
sWNHjB07Ft9//z0yMzNF1mcKu/JqaWk126Fb+JpUVVVZr8nExAQDBw5kzTgWRj+TkpLQq1cvxkMY
zb106ZJYZ5ygeBAHlKAwyBoBBYgDSiC8b+g79YBhT3b6asqpvU3uc1m0CTYfzxF5LOmX7Yjb9QUo
ERdo8kJDQwPfffcd/fPZs2cxbtw4FBUVyayzV69e8Pf3ByC4OFy2bJnIi8zmEH4H19TUIDIyUmZ7
WkptbS39/OzZsyKPN05BzMjIYK0ZOHAgvL29AQg66A4cOBCxsbFoaGhAaWkp3dxoz549cHR0pPcJ
Z6U2prq6uskO7Y0dgca6CC1DU6fpxoSiKClgOqAdTHvDyNyTte7R7W9Qz2/5qLZhw4bB398f1dXV
mDJlCmskkLAD85IlS3DlyhWRj65du0p8PqHzZ2Zm1mSaLAAcOHAAK1euRLdu3ZCeno7nz5/j9OnT
GDZsGGutsJNzRUWFyJs1ol6Tjo6O2Ne0c+dOen1xcTHOnDkDDQ0NWFhYgMvlMh7GxsbQ09NDQ0OD
RHWtBMWAOKAEhaElEdDBgweLTH/JyspCQkJCS00jEAjvIF2msqMbBXeuoDT5oYjVr+m+ag+sx4pu
aJH610FEfzkR/KqmawxbwuTJkxl1mufOnUO3bt1w8uRJJCcnM5zHly9f4vbt2806lN9++y1d737y
5El4enoiJiaG4cyVlJTg77//xowZM1BVVcXS0bghyc6dOxEdHS3za2wJ7u7u9PN79+5h8eLFSExM
xLNnz/DHH3+ge/fu+Pnn181lYmJiRNaEfvfdd9DR0QEAPHz4ED169ICOjg4MDQ3xySef4NKlS+jV
qxc+++wzek/j8TZCHj9+DEtLS6xZswaPHz+mHc7i4mIcPnwYBw4IGmIZGBg0m75IkBxNbekd0Lra
clSUMaPQXd1XstZVVeTgyYP9MtvWmO+//x5WVlaIj49njVXp1q0bAODixYtyOdfDh4LvtsZp9+IQ
psPu2bOn2esre3t72qENCQmRaG1mZiYSExMlsqOmpgZz587FnTt3RD7Wr18PQDBGStR3XeMxMgTF
gDigBIWhY8eOIu8+N0ZcBFRfX59x0dKYxp3nCARC+8HUczi0OrHHfDQXBeVwOOix5ifYjJst8nju
tX8RNfcjVGa/vXTKoKAgHD58mHaQcnJyMGPGDDg4OEBLSws9evSApaUldHR04OHh0Wy9l76+Pq5c
uYKePXsCAG7duoUPPvgAGhoasLW1hb6+PgwMDODr64uTJ0+KvMjbvHkz3YXy6tWr6Nu3L6ytreku
nK1F9+7d6c6aALBv3z44OzujU6dOmDJlCp49e4YjR47Q9bTZ2dno3Lkzvv/+e4aenj174vbt23By
cqJllZWVtAM5ZMgQhIWFMW5eiosq5eXlYceOHXBxcYGGhgbs7e1hYmKC+fPno6amBkpKSjh9+jSj
aQyhZahpmoLLVW5+4Ru8mYZrZN4PJpaDWOuS7v+IirIMWc2j0dHRoVNxf/rpJ4azuWjRInTo0AF/
/fWX1E7ouXPnGD/X1dXRNzuWLl3a7H7haKDG101VVVV0qnBhYSEtV1NTw5dffgkAWLduHTIzM1n6
hH83qqqqtKO9YMECVtT3TRrP/hTHjBkzoKKigszMTEbvDmNjYwAQOZeU8G5DHFCCwsDhcFid5d6k
qKhIbKra0KFDRcr/+098TRiBQFBcOBwOukxZzJJn/fc3qgqanssodEJF1ZICQFlyHCKm9UP25fNy
sVUUc+fOxePHj/Hxxx/TjigguEiMjY1FVlYWLVNRUcEHH3yAL774gq4DexNnZ2dER0dj/fr1MDc3
ByC4aExPT6fT6mxtbTFr1iyRN/ucnJwQEhLCiJZkZmbKXFPaEg4cOIBly5YxnENlZWUMGTIEsbGx
8Pf3x8aNG9GhQwcAwIsXLxAUFMTS4+DggHv37iEiIgLfffcd5s+fj02bNuHGjRsICwuDvr4+Xf8G
vL7gbYy5uTlmzpxJv6e1tbVISUmhbwp4e3sjOjpabCkIQTY4HI5sdaBvpOECQLd+G8HhMC+J6/lV
uBO5GBTV8pT7IUOG4NNPPwVFUfDz86NTZQ0NDbFv3z4oKytj1KhR8Pf3x6+//oqAgAAsWLAAPXr0
wOPHj0XqnDdvHkaPHo1jx47h5MmTGDZsGKKjozFkyBCR80ZF2QQInOBVq1Zh1apVcHZ2puuUg4OD
cePGDXr9mjVr0K1bN2RmZqJXr15Yvnw59uzZg6lTp8LCwoJRm7127Vr07t0bUVFRcHNzw86dO3Hm
zBls27YNPj4+mDdvHgDg5s2bSEhIQL9+/ZpMNTY0NKS75jZuRvTBBx9AU1MT2dnZmDhxIgIDA0XW
2hLePTgURZUB0Gl2JYHwDjB06NBm6zavX7+O/v37s+Q3b94UKVdXV0dxcbHI1CoCgaDY1NdU46KP
A2pLCxly+5lfwGXRZol0pJzai/i9a1kjWoRYjZgC12U7oKrXocX2NkVOTg4SExORmJiI/Px8GBkZ
wdjYGFZWVujRo4fU32FFRUWIi4tDSUkJzMzMYG1tLdHc0draWjx58gQpKSkwMTGBo6Mj7ei1Nvn5
+YiPjwfw+mK0MXV1dbh8+TJMTEzg4uIidbdcQBB9EaYr3rt3j44iiyI9PR3Pnj1Dfn4+zMzM0KVL
F5iYmEh9ToJkXA36BHlZUVLtMTYfgIFj/2HJ70etQuqjoyy5U+8v4OKxplm9r169on//Xrx4wfrc
Kyoq6HrLUaNG4cKFC6/Pff8+5s+fj/v379PZB3p6enBxccGpU6dgZfU63VhFRQV1dXV48OAB/P39
6XFCqqqqmD59Ovbv38+6gSTcU1lZSTcRKi0txcSJE+mb8Do6Oli9ejVWrVqFoUOHIiIiAlwuF69e
vaIj/1VVVVi2bBlOnjxJp+lraGjA2dkZx48fh4uLC33Ouro6bNy4Efv370dZWRkAgMvlonPnzpg5
cybWrl2LWbNmISAgAL/++isjq0EUYWFhGDp0KFRUVJCdnQ1DQ0MAwF9//YV58+bR59i6dSvWrVvX
9IdFaHOIA0pQKObNm0d3SxPH0aNHGV0HhdTX16NDhw70l1RjwsLC6LuBBAKhfZFweBuSftnOkClr
62F4cDJ46uz5eqLIuXIBd9b7ob6GXRsJAKr6RnD+dAM6+cwAV8RsPYJi8vLlS3Tp0gV5eXkwNjZG
ZmYmuVn5DnH38nKkJ5yUao+yijbG+KfRnaGF1NW+xKU/+qOqgj0XtvfgvbBxmtIiWyWhsrISSUlJ
MDY2ZnWKFfKmM1lQUIDnz5/DxcWl2TIlUWRkZKCsrIx1gyY+Ph5WVlbQ1dVl7eHz+UhMTISamhrs
7OzA5TadUJmRkYHi4mI4OTm9lTm4r169wpMnT6ChoQE7OzuR800J7xYkBZegUNjY2DS7RlwdqJKS
Et318E1IHSiB0H6xHT8XXBVm7V7dy1JknD8hsY6OXj748EgYNDpaizxeU1KAB98sRvikXsgMOYX6
WtIU413n1atXjCZMb0JRFNatW0en4K5YsYI4n+8YsjUieomKslSWXFlFG70H7RG5527kEiTd+1Eu
6bhNoampiV69eol1PkVhZGSEnj17yuR8AoIGj25ubqzsAFdXV5HOJyCY8enq6oouXbo063wKz9Gz
Z8+34nwCgihsjx494ODgQJxPBYFEQAkKxenTpzF58uQm14wePVpkrQ8AHDp0CJ9++ilL7uLiQqdx
EQiE9sf97Z8h4xyzhb9GR2v872w8OBJcQAmpqyjDvS0LkHNZ9HeMEBVdA1gNnwyzD0eiQ/d+4PKk
b5ZCeLucO3cOs2fPxvjx4zFq1CjY2NjAwsICBQUFSEpKwq5du+i6NkNDQ2RkZLBSfAlty7PkM4gJ
Y/9Pbw6Pjw7Cyn68yGOPorch8d4PIo+pa5lDz9AVahpG0O3gDCUl2Zy+luDQfQ74/Ho8unMI6upN
j1ohMFFW0YGZ9VDwlMnfcVtDHFCCQhETE9Ps4HEHBwex41gyMzPFthvPysqim0gQCIT2RXl6EsIn
9mLJPXacgvngsVLryzgfgPg9a1H3sumZeADA09CCjl1X6Ng6oa7yJaiGBihr6UC3swu4yq1/AUsQ
8Mv5//DNib+bXWdv2RHbF8xAD3u7t26Tio4eTAeMAE9N462fqz1QmHsbl8+OkHpfl27z0H3AdpHH
KKoB0ZfmICv1gsjjbU1peQMoCtDXJUmMsqClawPv8f9BRY10pG5LiANKUCjy8/ObbejA4/FQVVUl
Ng3DyclJpIP6yy+/YM4c0QPoCQSC4nNj2cfIu8lMtzdw7QOvo5dl0lddlIeHu1ciK+yMPMwjtDL1
FIXaBoBPAQ0UIGwxxfn/B5cDKHMAVSVOE1rkj1Yneww6HgVlLXJp1hxVlbkI/tVV6n0dTN0x+BPx
Y0/q62sQfckfOenymc9JeLfo2mc1nN1XtLUZ7zXk9glBoTA2NqY7uImDz+cjNZVd3yHkf//7n0g5
qQMlENo3XaYuYcmK42+j6GG0TPrUOpigz7YAeP16FcYeouvLCe8uShwO1JU40OZxoKvMgd7/P3SV
OdBR5kCLx2l15xMAKjKTkX7uWKufVxFR0zAFlyt9FkFpQTwaGsTPzlVSUkXfYcdh331hS8wjvKPw
6161tQnvPcQBJSgcLWlEBADDhg0TKQ8LC6MHKRMIhPaHsbsXdO3dWPKU335skV4D517w/Ok8Bh69
DKsRU1gNjwgEaamvJhfIkiCYBWoh9b76+mqUFSU0uYbL5cGt/2Z4jT0PA6MesppIeMdQ4mnAxnlq
W5vx3kNaRREUDhsbG7GDmYUkJiZi9OjRIo8NHDgQampqqK6uZshLS0sRExODfv36yc1WAoHwbtFl
6hLc/ZqZap8TFYyKZ0+hZdW5Rbo7uPZBB9c+6Pb5d8i9GoIXNy8hPyZSojpRAkGIspYuOo2a3tZm
KAyaOlaoKEuTel9x3j3oG3Vrdp2ReT94+4ahICcaifd+QFVFDjgcLrT1u0BFhaRJKxLKqjqwcZ4O
bb23X89NaBrigBIUDkkioOKaEAGAuro6Bg4cKDLl9uLFi8QBJRDaMRYfjcfj/RtQlZ/9WkhRSPl9
L3qs3iuXc6jo6KPTqGnoNGoaKIrCq5xMlKcloPRJHPLvXEFdeQk4Sjxo2zhCWVNLLucktA+UtfVh
M242NEwlH8PxvqOhLdt7VZx3D3YufhKvN+r4AYw6/inTuQgEAhPigBIUDkkc0MTExCaPDxs2TKwD
umXLFpltIxAI7zZcHg+dJ3+G+D1rGPLMkFNwnr8eqvpGcj0fh8OBprk1NM2tYTZgBJz81zS/iUAg
SIwss0ABoOjFPTlbQiAQJIXUgBIUjpbWgALA8OHDRcrv379PDx0nEAjtE+uxfuBpMlPnGmqqkfrX
wTayiEAgyIqmjmwR0JelKaitbp30+KKiIty4cQP3799HZWWl3PSeOHECGhoaGDVqlNx0EgitAXFA
CQqHuDmejSktLcWLFy/EHndwcBDpyFIUhdDQ0JaYRyAQ3nGUNbVh+4k/S5525jD4VfK7OCQQCG8f
DRkjoIAgDfdtkpaWBh8fHxgaGsLT0xO9evWCtrY2rKyssHTp0hbr5/P5qKqqQk1NjRysfft4eXlh
8ODBbW0G4R2AOKAEhUOSCCjQdB0oID4KevEimftFILR37CYtBIenzJDVlhUjI+jXtjGIQCDIhKwR
UAAoenFHjpYwKS4uhpeXF4KDg9GpUycsX74cO3bswJQpU1BRUYH79++/tXO/i2RmZiIqKgq9evVq
a1MI7wDEASUoHLq6utDX1292XXN1oOIc0P/++4+MYyEQ2jnqhmawGj6ZJU85tRcNfPHzAQkEwruF
rLNAgbfrgO7YsQPPnz+Hk5MT0tLSsHv3bqxatQq//fYb8vLy8NNPP721c79tJk+eDFNTUwQFBUm8
Jzg4GADg4+PztswiKBDEASUoJC3thAsAgwcPhqoqe15fSUkJoqNlG0xPIBAUB/vpy1iyqrwsPL9E
Ol0SCIqCrLNAAaAo7x6ohrdzwzkmJgYAMH/+fHC5zMttZWVldO/e/a2ctzVISUlBXl4eGhoaJN5z
4cIFGBgYoH///m/RMoKiQBxQgkIiDwdUQ0MDAwcOFHksJCREJrsIBILioG3tALOB7OYdySd2g6Ko
NrCIQCDIgqaMo1j4dRUoK0qQszUClJSUAABRUVFS7SsrK8PKlSvh6ekJa2trjBkzBv/++69MNoSE
hMDX1xd2dnZwd3fH8uXL8fLlS7Hr+Xw+9u7di/Hjx8PZ2Rl2dnYYPHgwZs+ejYqKCjx69Ai+vr5I
SxPMXd21axd8fX3h6+uLq1evitVbUVGBy5cvY/jw4fT7Qni/IQ4oQSGRxygWABg5cqRIuaxf9gQC
QbFwmLmCJXuZnoTcqOA2sIZAIMiCho7sjYgKX8TI0ZLXCK8vzp07h82bN0tU2pOUlITevXtj165d
4PP5cHBwQGRkJEaNGoUDBw5Idf5169bBx8cHUVFRcHR0xKtXr/Djjz/igw8+QFFREWt9SkoK3N3d
sXTpUvzzzz8AgI4dO+LBgwc4fvw4Xr16hZKSEkRGRtJObHx8PCIjIxEZGYnc3Fyxtvz333+ora0l
6bcEGuKAEhQSSRzQrKysZtudjxgxQqQ8Li4OWVlZMtlGIBAUBwMXdxj2+pAlTzr+bRtYQyAQZEHW
WaAAUJjzdkpuPvvsM3h5eYGiKHz99dfo06cPbt261eQePz8/PH36FKdPn0Z0dDQuXbqEBw8eQFtb
G2vWrEFpqWRjY0JDQ7F9+3Z4eHggJSUFISEhePz4MRYuXIiEhATs2bOHsZ6iKPj5+SE2NhaWlpa4
ffs2EhIScO3aNZSUlCAzMxMGBgYYMGAACgsL4ebmBgAICAhAYWEhCgsLMXHiRLH2XLhwATweD8OG
DZPIfkL7hzigBIVEEgeUoqhm54F27twZ9vb2Io+RbrgEwvuBwyx2FLQ08QHyboW1gTUEAkFaWtIJ
t+AtOaCqqqq4ePEi/P0FI5/u37+Pfv36Yfbs2SIdyX/++QfR0dEYMGAAfH19aXnnzp0xefJklJeX
4/fff5fo3KtWrQIAbNu2DTo6r2cer1+/HgBw8CBz5vHff/+NGzduAAB+/fVXVqdaKysr8Hg8ic79
Jg0NDfj3338xYMAA6OrqyqSD0P4gDihBIZF0FIskabjioqCkDpRAeD8w8fCGvlNPljzxl2/awBoC
gSAtLZkFWv3qBSrKMuRnTCPU1NRw5MgRhIeHw8HBAQBw/PhxdO3aFfHx8Yy1V65cAQC4ubkhLy+P
8TA1NQUAJCcnN3vOkpISPHz4EBwOBzY2Ngw9HA4HGhoaKCgoYDjBN2/eBAC4urrKfU7n7du3kZ+f
T9JvCQyIA0pQSKytrcHhcJpd11wjIkB8HWh4eLjCDHcmEAgtw2H2KpasOD4G+bcvt4E17y/19fVI
TxeAk2wAACAASURBVE9Henp6kzVlBEJjWhIBBYCCnJtyskQ03t7eiI+Px/bt26GqqoqcnBx4eXkh
Pz+fXiN0Lvft2wdTU1PGY9OmTQCA58+fN3suoR6KomBra8vS9erVK5YuYbaYo6OjfF5wIy5cuACA
jF8hMJEtnk4gtDFqamowMzNDTk5Ok+skcUA//PBDaGlpoaKigiGvrKzE5cuXSc0CgfAeYPbhSOh2
cUVZCjMqkXhkG4z7DGojq9g0NDQgPT0dlZWVMDQ0hJGREZSVldvaLLmRk5MDW1tbAEC/fv3otEAC
oSmEs0AbGmpl2l+QfQM2TlPkbBUTZWVlrFmzBn379sWgQYNQXFyMvXv3YuvWrQCA2lqB7SNHjkTv
3r1F6ujSpUuz5xHq0dTUxIoV7PICIQYGBqw9Ghoakr0YKbhw4QIcHR3RuXNnuesmKC7EASUoLLa2
ts06oJKk4KqoqOCjjz6iu741Jjg4mDigBMJ7AIfDgeOc1YhZPZUhL4q7hbyYCJh4eLeRZQKuXLmC
tWvX4v79+4zMDCUlJXTr1g39+/fH8uXLaeetrUhNTcWXX34p8Xo9PT0cO3bsLVpEeB8QzAK1REVZ
qkz7C3Ja70aHl5cXPDw8EBMTg7i4OFru5OSEyMhIWFlZYePGjTLrd3JyAiC4ib5w4UIYGxs3u8fR
0RGRkZF4+vSpzOcVRWZmJuLj45t0hAnvJ8QBJSgsNjY2uH79epNrUlJSwOfzmy2e9/HxEeuA7tu3
r0V2EggExaDjoDHQseuK8tTHDHnCz5va1AGdN28ejhw5IvJYfX09Hjx4gAcPHsDb27vNHdDS0lKR
36XikOTimECQBE0d2R3QVy+zUFGWAS1da/kaJQZHR0fExMTAxMSElgmjniEhIaiuroaamppMug0N
DdGpUydkZmYiMDAQCxYsaHaPu7s7ACAmJgYpKSnNRlqFJVDl5eVNriPptwRxkBpQgsIiyYVWbW0t
UlOb/4c0YsQIkTWlmZmZePTokUz2EQgExYLD4cBp3jqWvCThHnKuXGgDi4D9+/fTzqeRkRF+/PFH
xMXFIS0tDRcvXsTWrVvRvXv3VrGFoijU1dVJvF5LSwt+fn5NPiZPnvwWLSa8T7RkFAsA5Gdfk5Ml
As6cOSNyFFxBQQFCQ0MBAJ6enrR82rRp6NatG549e4YVK1aInBtKUZRE5965cycAwSxQcaVIjXVN
mzYNzs7O4PP58Pf3R0lJCWNtdXU1qqur6Z8tLCwACHplNEVwcDAMDAzQv39/iewmvD+QCChBYZH0
Tn9iYiLdfU4cJiYmcHd3x+3bt1nHgoOD4eLiIpONBAJBsejoNRp6Dt1R+iSWIX+0fwPMBowAR0mp
1Wyprq6mU9e0tbVx9epVRpMQGxsbDBs2DOvWrUNycrLMEZPmOHjwILZt24a8vDz8/PPPmDNnjkT7
DA0NSXotodXQ0GmhA5p1DbbO0+VkDfDpp5+itrYWY8eORffu3WFmZoawsDAEBQWhuLgYw4YNw4wZ
M+j1PB4PR48exbBhw7B//35ER0djzJgxMDMzQ1xcHKKjo2Fvb49Tp041e+4JEyZgxowZOHHiBLp3
745Zs2bBzc0NZWVliImJQXR0NCIiIuDs7Eyf+/DhwxgxYgSuXr2Kbt26wcfHBwYGBrh27RpiYmIQ
FRUFDw8PAMDw4cNx7tw5/P3331BSUsKgQYPg6ekJOzs72oaKigpcvnwZEyZMgFIrfm8SFAPigBIU
FmlGsYwdO7bZdaNGjRLpgJ4/fx6rV6+W2j4CgaB4cDgcOC/YgJvLPmbIKzKTkXE+ADbjZreaLXFx
cXTUYdSoUU12qBQ3z1ge5OXlISsr663pJxDkgaZ2yzrh5mfJNwLarVs3XLt2DSdPnsTJkydpuYaG
BtauXYvVq1eDy2UmIvbu3Rvx8fFYsGABQkNDce/ePQACB9HBwQE9evSQ+PwBAQHw9vbGunXrcOjQ
IVpuaGgIV1dX1kzO/v3748GDB5g1axZu3ryJn3/+GQCgo6ODXr16oUOHDvRaf39/PHjwAIcOHUJA
QAACAgLwzz//MBzQ//77D7W1tST9liAS4oASFBZJI6AJCQkSrRs1ahQ2bNjAksfExCA/P5/UKhEI
7wmm/f4Hwx6eKHzArDFPPLwNlsMmgqeu2Sp2NE6de/nypdz0lpeXIyEhATY2NowaNEWkvr4eL168
QFZWFjQ1NWFtbQ0tLS2p9ZSXlyM5ORkODg7Q1taW2Z6ioiKkp6dDSUkJlpaWMDQ0lFkXQTo0dTq1
aH9NVQHKipKg20E+o0giIyNRWVmJuLg4ZGdng8/nw87ODo6OjtDR0RG7z8zMDOfOnQOfz0dSUhLq
6+vh5OQEFRUV1trZs2dj9mzxN8VmzJiBGTNmoLCwECkpKbCxsaFniorC1tYWV69eRWVlJR4/fgwT
ExN06sR+X7lcLn7++Wds3rwZT58+hZmZGaysmBHoCxcugMfjkUaOBJGQGlCCwtKxY0eoqqo2u06S
TrgA0KNHD1hasu+gNjQ0ICQkRGr7CASC4uKydDtLVl30Ak9+3dVqNjT+Prp48SKys7NbpO+HH36A
s7Mz9PT00LdvX5iamsLS0hLffvut2PWmpqZ0PRkAfP755yLnE7YmOTk52LdvH7y9vaGurg4LCwt8
8MEHcHV1hba2Njw9PRETE9OsHoqisH37djg6OkJPTw/u7u7Q09ODq6srAgMDAQiiWKampjAzMxOr
h8/n45dffoG1tTUMDQ3h7u6Onj17wsjICOrq6hg/frzcXjtBPC2NgAJAftZVOVjyGk1NTfTr1w8T
JkzA5MmT0adPnyadz8bweDy4uLjAzc1NpPMpDYaGhvTfvCRoamqiT58+Ip3PxhgZGaFv376wtrZm
RHMbGhrw77//YsCAAaxIK4EAEAeUoMBwOBxYW1s3uy4pKUniwn1xqSLnz5+XxjQCgaDgGDj3gvmQ
j1nylFN7UJmd0So29O7dG/r6+gAEkb6xY8ciNzdXaj0vX77E+PHj8fnnnyMxMREURdEXwVlZWVi9
ejUmTpzIajBUUVGBvLw8RiOV8vJy5OXl0Q95RmYlZf369Vi8eDEiIyNRV1cHDofDqH+9ceMGPvzw
Qzx58kSsjpKSEowcORLr1q3DkydPQFEUlJWVweFw8OjRI4wfPx5ffPEFXrx4Qb9WcSxbtgxz585F
ZmYmAMG8R6E91dXVePbsmZxeOaEpVDWMwVVq/qZ0U7x4Hikna95vbt++jfz8fJJ+SxALcUAJCo0k
abiVlZUSXwCI+7IMCwtjdIAjEAjtH5dFm8FVZkYeGmpr8PDHVa1yfh0dHUaE8e7du3BxcZG6sY+f
nx8CAwPB5XKxadMmFBcXo6ysDFlZWXR9/F9//YUTJ04w9k2fPh0RERGYOXMmLfviiy8QERFBPz79
9NMWvELZsbe3x+7du/Hw4UNUVlairKwMISEh+PDDDwEIOqCvWbNG7P4pU6bg4sWLAARzE6OiolBe
Xo7S0lKEh4dj9OjR2L17NwoKCgCI7z567do17N+/H4BgtEZERARKS0tRVVWF/Px8BAUFYdasWXJ8
5QRxcDicFkdBC7JvoKG+Vk4Wvb/Y29vj4cOHmDt3blubQnhHITWgBIVGmk64zaWSAMCgQYOgpaWF
iooKhryyshIREREYOXKkTHYSCATFQ9PcBl2mLsWTX3cy5LlRwci9fhFmnsPfug2LFy9Gfn4+tm7d
CgAoLi7GnDlz8Msvv+CHH36gu1KK48aNG3Q66bJlyxh17ubm5jhz5gw6d+6MjIwMfPvtt/Dz86NT
6aytrWFtbY1r1143Z3FycsLgwYMlsp3P5+P58+dij+vp6clUb7lx40ZYWFiwRmeNGDEC2tratBMq
bODyJhEREfQYDHt7e9y4cYOONAOAt7c3vL298cMPP+DLL78UOQ5DyI0bN+jna9asYbw3RkZGGD16
tNSvjyA7mjpWeFn6VOb99fwqFOZGw9jiQzla9f5hYGAAAwODtjaD8A5DIqAEhUYaB1QSVFVV8b//
/U/ksaCgIIntIhAI7QMHvy+hZsSu/4v9bjn41a9axYYtW7YgICCA4STdunUL/fr1w5IlS1g3zBoj
7ODN4XBEdvNWUlKiI5wpKSkMh6qlZGVlwcrKSuxD2GVTWiwtLUXObQYEcxWFjZWysrJQW8uOZq1d
u5Z+vmrVKsb72pjly5fDyMgIAMSeTxghBeTbKIogGxotnAUKALmZTc+2JBAILYc4oASFRtJRLJJ2
wgUg9o71+fPnJa4lJRAI7QOeuiZcl7AbElW9eI7EQ1tbzY4ZM2YgISEBH3/8ui61oaEBP/30E1xc
XBAbG8vaU1dXh1u3bgEQ3KwTOlNv0vhGXlpampwtb104HA49LqKhoYHlgNbU1ODu3bsABDccp06d
2qLz9ezZk36+YcMGxrgNQuuj2cJZoACQmxEmB0sIBEJTkBRcgkIj7wgoIBjHoqSkxEq7ysvLQ3R0
NPr27SuVjQQCQbGx/J8vMoN/Q35MBEOe8sdPMP/oExg492oVO0xNTREYGIjw8HAsXryYHtOSmZmJ
QYMGITQ0lJGSm5aWRn+PvXz5EhMmTBCpt3FjI3k2zDE3N0dERITY4+IcYmmor69HTk4OcnNzkZub
i4KCApSUlIhdn5qaioaGBgCCSKokndSbYtKkSdi5cyfi4uJQXFyMGTNmYN++fVi6dCkmTpwIJSWl
FuknSIemHCKgL0tTUFGWAS1d65YbRCAQREIcUIJCI2kEVBoH1MDAAAMGDMCVK1dYx4KCgogDSiC8
h3Rf9SPCJ7ujoaZRM7KGBtzbNA+DT96EkkrLHBlpGDJkCGJjY7FlyxZs374dFEWhtLQUU6dORWJi
IpSVlQEAycnJ9J78/HycOXOmWd0tHfXSGGVlZTg4OMhNX2PS09Nx9OhRHD9+HDk5ORLvS0lJoZ9b
WFi02A4lJSWEhYVh7NixuHnzJgBBB9CpU6di48aN2LJlCyZOnNji8xAkQ1QElMPhgaL4UunJyQiF
vVvbNNgiEN4HiANKUGh0dHTQoUMHFBUVNbmuuLgYeXl5Eg9dHzNmjEgH9Ny5c9ixY4csphIIBAVG
y8IWTnPW4PGBrxnyl+lJeLxvPbp9/l2r2qOqqoqtW7fC2tqa7jSZmpqKv/76i04r5fFe/4t3c3Oj
O942Ra9erRPNbQlBQUEYP348+Hw+uFwuRowYgSFDhsDc3By6urqYO3eu2OZHjSOSfL50Tok4jIyM
cP36dfz555/YsmULXfKRkpKCSZMmITIyEgcOHCDR0FZAlANKoUFqPTlpF+XqgBYVFSEpKQnq6upw
cHCApqamXPSeOHECn376KQYPHozg4GC56HxbNDQ0ICMjAxkZGbCwsIC1tXWL55sSFBfigBIUHltb
22YdUEAQBZXUAR07diyWL1/Okj958gRJSUlwdHSU2k4CgaDYdJm2DNmXz6E08QFD/vT0fhh/MASm
/Ya2uk2zZ8/G+vXr8eLFCwBAbGws7YA6OzvT67hcLjZu3Njq9smbqKgo+Pr6gs/nw9raGqGhoawo
a1OddRuXbUgTOW0ODoeDSZMmYdKkSQgPD8eKFSsQFxcHADh8+DDc3NywcOFCuZ2PIBpVdUMo8TRQ
z2/UIIyS3gEtzL2FmupiqKq1rJNrWloali5dynAOORwOLCwsMG7cOOzZs6dF+vl8PqqqqlBTU9Mi
PW+Tc+fOYevWrUhISEBVVRUt53K5sLKyQufOnbF06VKMGjWqDa0ktDakCRFB4ZG0DvTx48cS67S2
tka3bt1EHjt79qzEeggEQvuBy+Oh14ZDrNmgAHD3a3+8ypNf+qrENnG5GDNmDP1zWVkZ/dzKyoqO
tDx8+LBddGk9evQo3VgoMDBQ6hTfxmUbz549ox13UeTk5KCyslJqG4cMGYK7d+8yHM5Dhw5JrYcg
G5o6sswCZXY5pqgG5KRdbJEdxcXF8PLyQnBwMDp16oTly5djx44dmDJlCioqKnD//v0W6X/XKS4u
xpQpUzBu3Djcu3cPPXv2xJIlS7Bnzx6sXr0a48aNQ3l5OcLDwxEfH9/W5hJaGeKAEhSet9EJFwDG
jRsnUv7PP/9IpYdAILQfdO26outnW1jy2rIixKyajPra1o9EVFe/rkvt3r07/ZzD4dBzKevr67F3
716Z9DdOHc3MzJTRSvkgnEmqpqYGNze3Zte/2blcXV0dXl5eAATRI3GjYOLi4uDh4SGz087j8bBl
yxa6yVF6erpMegjSo6nd/MxvcN68/GV3uM9KbdnotR07duD58+dwcnJCWloadu/ejVWrVuG3335D
Xl4efvrppxbpb0smT54MU1PTJsfTzZ07F3/88Qd0dHQQGBiI69evY8+ePViyZAm++eYbnDlzBvn5
+bh+/Tq8vb1b0XrCuwBxQAkKj52dnUTr5OWA3r17t8nh6gQCoX3TedIimPT9iCUvSbiH+1vll2YZ
GxvLmDMpiry8PPz777/0z4274ALADz/8ADU1NQDA1q1b8ejRI6ntsLa2pp83PldbIIx+VldX4+JF
doQqNjYWeXl59M8ZGRmsNVu2vL6BsHXrVuzcuRMlJSWgKAqxsbH49ttv4enpifr6eujq6gKA2Fq1
phxUDoeDuro6ACBlG62IJBFQ0VNdmeRlXUVttfiOys0RExMDAJg/fz64XObltrKyMuNmkaKRkpKC
vLw8uqP0m0RERNDZYv/88w9jfFRjlJSU0L9/f/Tp0+et2Up4NyEOKEHheRspuICgaYc43SQKSiC8
v3A4HPTe9AvUjTuyjj0PPY3HP2+Sy3lOnz4Nc3NzfPLJJ7hw4QKKi4sZx+/cuYMRI0bQTqqfnx+r
iZCdnR2++uorAAKnrU+fPvjuu+8YTlp9fT3i4uKwbds2HD16lGVHjx496Of379/H/v37UVpaKpfX
KC3u7u708xUrVuDUqVMoLS3FzZs3sXz5cvTu3ZvREyAyMpKlw9PTk66TbWhowMqVK2FgYABdXV30
6NEDq1evRmVlJfbt2wd1dXUAoJ34N5k2bRqGDh2KM2fO0ONfKIpCTEwMJk2aRF+gjxw5Uj5vAKFZ
NHXYEVAOl9nyhBJRF6rEU2euaeAjK/W8zHYIMweioqKk2ldWVoaVK1fC09MT1tbWGDNmjMw3fkJC
QuDr6ws7Ozu4u7tj+fLlTd404fP52Lt3L8aPHw9nZ2fY2dlh8ODBmD17NioqKvDo0SP4+vrS84J3
7doFX19f+Pr64urVq7SelStXAgC8vLzoLAxpuX37Nvz9/eHh4QFbW1v4+Pjgm2++EVvvunDhQvj6
+uLJkyfIy8vD1q1b4eXlBUdHR0ydOpU1K/nbb7+Fr68vfvnlF7E2rF+/ntZJkDMURZVRBIICk5GR
QUGQP9Pso6CgQCrdX3zxhUg9Xl5eb+nVEAgERaHwYQz1Tz89KtBdg/V4cvKHFutftWoV67vH2NiY
6t27N2VqasqQe3h4UFVVVSL18Pl8auvWrZSysjJjj76+PtWpUyeKx+PRshUrVojUMW3aNMZedXV1
ys7Ojtq5cydj3d27d+k11tbWUr/mZ8+e0fv79evHOp6QkECpq6uL/Y739vamwsPDKSUlJVo2ePBg
KiMjg6GnoaGB2rx5M8Xlclk6tLS0qN9//52iKIoyMTGh33dRjBo1ivX5mJmZMWSDBw+m6urqpH4v
CLKRlRpM/bWvA+Nx9pA1S/bmI+ioI0sWGThSZjt27dpFAaA4HA61adMmis/nN7snMTGR6ty5M8Xh
cCgPDw9q6NChlJaWFsXhcKj9+/ez1h89epQCQA0ZMoR1bO3atRSHw6GMjY2pESNGUM7OzhQAytnZ
mSosLGStT05Oprp3704BoLhcLuXk5ER5enpSenp6FAAqLy+Punr1KtWhQwf6O0NbW5vq0KED1aFD
B+r06dMURVFUbW0t/fcn/DuSlq1bt1I8Ho9SUlKi3NzcqKFDh1LGxsYUAMrFxYVKSkpi7bG0tKQA
UBcvXqRfh4qKCv13qKGhQYWEhNDrjx8/TgGgzM3Nqfr6epa+zMxMisvlUpaWlhJ9dgTpIBFQgsJj
YWFBz71rDmnTcMWljVy7dq3Z1DgCgdC+6eDaBz3WiK7jerR3HZ4EfN8i/W5ubujatSs4nNcJg/n5
+bh79y7dPMfc3ByHDx/G9evXxUbplJSUsG7dOsTExMDT05OuSywpKUFmZib4fD7U1dUxaNAgfPjh
hyJ1HDhwAPPmzaNtqaqqQmpqKp1i2lo4OTkhNDQU9vb2DLmZmRm+//57hIWFwdvbGwsXLqRtjYyM
RGpqKmM9h8PB+vXrkZycjN9++w3Lly/H559/jkOHDiErKwuTJ08Gn8+no6nGxsYi7Rk/fjwGDBhA
/w/Kz89Hbm4uAEBPTw87duxAcHAwYyQO4e2ioS0qBZdd4/kmtdXFLFlhbjQqy5/JZMdnn30GLy8v
UBSFr7/+Gn369MGtW7ea3OPn54enT5/i9OnTiI6OxqVLl/DgwQNoa2tjzZo1EmcehIaGYvv27fDw
8EBKSgpCQkLw+PFjLFy4EAkJCazuuxRFwc/PD7GxsbC0tMTt27eRkJCAa9eu0d8TwhnphYWFdP11
QEAACgsLUVhYSM+7TUtLQ319PQCgc+fO0r5tCA8Px1dffQVdXV1cvXoVsbGxuHTpErKysjB37lw8
evQIfn5+rPpuIZ9++il0dHRw+fJlvHz5EtnZ2Rg6dChevXqFzz77jB6/NGHCBGhrayM7Oxv//fcf
S8+RI0fQ0NCAOXPmkBFKbwEORVFlAHTa2hACoSXY29szBoyL48CBA1iwYIHEehsaGmBubi6yU+Kh
Q4cwb948qewkEAjtj4RDW5B0VPR8YLuJC9Bt2bfgtOACprS0FLdv38azZ8+Qm5sLJSUl2NnZoXPn
znBxcaEdSknh8/n0SCltbW2YmZnBwcFBopl8eXl5ePz4MSoqKuDg4AA7O7s2ca74fD4SExORmpqK
rl27okuXLqw16enpSEpKgru7OwwNDaU+R1paGt1jwMfHB+fPi0/HrKysxJMnT5CdnQ2KotC5c2fY
2dlJ/dkQWk5tTRmCfmH2huBwlEBR9QyZEk8d9fwqhkxNwxTVr5j/7517r0BXj9Uy2VJdXY3Fixcz
0jz9/Pywe/du6OnpMdYKayUHDBjASGcFBE7VoUOHsH//fkZ35WPHjmHOnDkYMmQIwsLCaLmbmxse
PnyIiIgIRgrsixcvYGZmBiMjI+Tn59Pyv/76i3Yg39wjit69e+PevXs4e/Ysq1/GhQsXMHr0aACC
GzJGRkZN6nqTbt26IT4+Ht9++y2dyiukpqYGnTp1Ql5eHv7880/4+vrSx6ysrPD8+XNMnz4dR48e
ZQQmCgoKYGFhgdraWpw5cwaffPIJAGDevHk4cuQIfH198eeff9Lr+Xw+rKyskJ+fT88tJcgXckuO
0C6wtbWVyAGVNgLK5XIxbtw4kZ0SAwMDiQNKIBDgPH89qovykXHuGOtY6p8/ozw1Ae6bj0HN0FQm
/Xp6ehg6VH4zRnk8Hrp27YquXbtKvdfExETiecpvEx6PB1dXV7i6uopdY2NjI3GXdFEEBgbSz4Wd
c8WhqamJnj17omfPnjKfjyAfVFR1oayig7raclr2pvMJiHZAdTs4sxzQ9KTf4dxnJTiszrnNo6am
hiNHjmDSpElYtGgRnjx5guPHj+PSpUsIDQ1l/P5euXIFgMB5bFyjDQCmpoLvjuTk5GbPWVJSgocP
H4LD4cDGxoahi8PhQENDAwUFBSgtLaWd4Js3bwIAXF1dZa7ZFCKMMAKQOnJYVlZGj2SZMGEC67iq
qipGjx6NI0eO4Nq1awwHVMj8+fNZWXFGRkbo27cvoqKikJiYSMvnzJmDI0eOICgoCMXFxTAwEMx9
PX/+PHJzc+Hj40Ocz7cEScEltAsk7YQrbSMiQJBiJYrIyEi66QSBQHi/6bF6D6xGTRN5rOBuFMIm
9UbG+QBQYrpGElqX5r6709LSsG3bNgCCi9f58+e3hlkEOSGqEdGb1POrWTIul+0wVVXkIDeDnaIp
Dd7e3oiPj8f27duhqqqKnJwceHl5MaKQQudy3759MDU1ZTw2bRI0NpOkA79QD0VRsLW1Zel69eoV
S5ewyY48ujU3Trt9M/W9OYS2czgcmJubi1wjdAglccYb07GjoGlc487YHh4e6Nq1K2pqavD777/T
8oMHDwIA+bt/i5AIKKFdIGknXGkjoAAwcOBAGBoaorCwkCHn8/kICgrCrFmzpNZJIBDaFxwuF73W
HwRPTQNpZw6zjteVl+D+1oV4+sd+dJm2FObe48BT02gDSwkAMGjQIKirq2PKlCno3r07OnXqBA0N
DaSkpODy5cvYtm0bfaG+YsUKaGpqtrHFBGnQ1LFCaWE8Q/ZmGm49/xVrX1lRAowtPkR+FjMF9mn8
L+hoM6xFNikrK2PNmjXo27cvBg0ahOLiYuzduxdbt24F8HrE0MiRI9G7d2+ROkSlmr+JUI+mpiZW
rFghdp0w2td4j4ZGy7+T7OzswOFwQFEUkpOTGZ2rm6OyshKAIMNBXG8PYa278O9TUoQ14VpaWgz5
nDlz8Pnnn+P48eP47LPP8PTpU4SHh8PS0hLDhrXsMyeIhzighHaBpBHQvLw8RpqFJCgpKWHs2LEi
W3X//fffxAElEAgABBc43Vf+AA0zKzzatx4Q0SSjPPUx7m2ah9gdS2HQvS946prgKvHA09SBbmcX
cJWbr8MktJynT5JQWV2D6OhosWuUuFzM8fkIPlbaSAsUP6pBXqjo6MF0wAhyY0IOiIqAqqjpo6aK
eSOZw+EyRrK8qsiGk/sKlgOa9/wKyoqSoNuh5RFCLy8veHh4ICYmBnFxcbTcyckJkZGRsLKywsaN
G2XW7+TkBEDgzC1cuFBsA63GODo6IjIyEk+fPpX5vEI0NDRgZ2eHp0+f4sCBA/TII0kQOth1kct3
iwAAIABJREFUdXUoKCgQaXt2djYA6RscCXt5vJmWP336dKxevRr3799HXFwcTp06BYqi4O/vT5oP
vUWIA0poF0gaAQUEabgDBgyQSv8nn3wi0gENDw9n1FEQCASC/fTl0O3sgrsb56KmRHS37PqaKhTE
sGdUElqHI1254Deoo556PS8FADgAuBxBfZKaEqCUcw2Ju6+1ml1anewx6HgUlLVIb8iWoKljxZK9
OecTANQ1O+JVRRZDxuNpQl3TDFWVuQz5kwd70WfIAbnY5+joiJiYGEY9tTDqGRISgurqarFdrZvD
0NAQnTp1QmZmJgIDAyVqvCiMUsbExCAlJaXZSKswmlheXi7y+MaNGzFt2jTcvHkTgYGBdNOf5ujY
sSP09fVRUlKCW7duYcyYMaw1169fBwCpatirq6vx4MEDAMy5xoDg/Ro9ejTOnDmDgwcP4syZM1BS
UsKcOXMk1k+QHlIDSmgXSOOAypKG6+3tDX19fZa8trYW586dk1ofgUBo35j0/Qjev8fAfIjoUU6E
tkWVy4EmjwMdZQ50lTnQ+/+HrjIH2jzBMaVG429ai4rMZKSLaGZFkA5NbRE1oCIyElTU2DePi/Lu
oIsbu/bvWXIgKsrSJbbhzJkzdEppYwoKChAaGgoA8PT0pOXTpk1Dt27d8OzZM6xYsYIeZcJ8Cc2P
kwGAnTt3AgDWrVuHpKQkkWsa65o2bRqcnZ3B5/Ph7+/PqpGurq5GdfXrmllhHWZ4eLhI3VOmTEHf
vn1p3YcOHRK5js/n4++//8bZs2cBCBzbtWvXAgB27NjBSrMNDAzE/fv3YWRkhLlz54rUefjwYVRU
VDBkBw8eRElJCT744AORo6aEzuahQ4dQWFiIkSNHiq1BJcgHMoaF0G4wMTFhFPSLY8mSJawZWJIw
Z84cHDvGvjAYMWIEQkJCpNZHIBDeD/LvXEHCzxtR/OhOW5tCUACc5q2Dk//atjZDoSkvTsalP/ox
ZCqq+qitYTpWOgZOKC9OZMj0DLvBa1wQQgK6oa72JeOYlf0EeHzE7oovCkNDQ9TW1mLs2LHo3r07
zMzMEBYWRndcHTZsGEJCQsDlvo4F3b17F8OGDUNRURF69eqFMWPGwMzMDHFxcYiOjoa9vT1OnTpF
rxc3hgUAZs6ciRMnTkBVVRWzZs2Cm5sbysrKEBMTg+joaERERMDZ2Zlef+PGDYwYMQLl5eWwsLCA
j48PDAwMcO3aNcTExCAqKgoeHh4ABE7e/PnzoaqqikmTJmHQoEHw9PRklEOlpqZiypQpuH37NgBB
hLdPnz5wcXFBUVERkpOTER4ejtzcXGzcuBFff/01AMGNfU9PT9y5cwdubm6YMmUKDA0NERMTg6NH
j4LD4SAgIABTpkxhfjb/P4ZFX18fenp6mDRpErp06YKbN2/i6NGj0NDQwKVLl9C/f3/WZ9XQ0ABr
a2u6MVNwcDBGjhwp0edMkA3igBLaDf369Wt2yDMgiGaKu2vXFKGhoRg+fDhLrqysjPz8fJKGSyAQ
mqToYTQyzv2KnKvBqCsnHbQJbJS1dOH9eww0TC3b2hSFpp5fjbOHmh+foapuhJoqZpo8h8PFGP9U
JD/Yj4S7u1h7vMf/BwOT5sftDB48GNeuXWOMJQEENZLLli3D6tWroa2tzdqXm5uLBQsWIDQ0FDU1
NQAETXkcHBwwa9YsRmOhphxQADhx4gTWrVuHrKzXacaGhoZwdXXFyZMnWVG+tLQ0zJo1Czdv3qQj
sDo6OnBxcUFAQABdd9nQ0IBFixbh0KFDdCT1n3/+wdixYxn66uvrsWvXLuzatYvVyBEQBA6mTp2K
hQsXMpzX2tparFu3DgcPHqSjmRwOB25ubjh06BD69OnD0iV0QENDQ3Hy5En8+eef9Hvv5OSEU6dO
sdJvG7NhwwZs2bIFlpaWyMjIYNwYIMgf4oAS2g3Tpk1j3BkUh6mpKXJzc5td9yZ1dXUwNTVFcXEx
69ixY8fg5+cntU4CgfD+QTU0oCwlHoUPriP7chDqykvAUVKGto0jlDW1mldAaJcoa+vDZtxsaHZs
foQIoXkuHO+K6lfMeZpvdsIFAA1tK7x6+YwhG+DzNzqY9sa/J3qgtqaUcUzfyA2Dx18Cl9t8G5XK
ykrExcUhOzsbfD4fdnZ2cHR0hI5O85fdfD4fSUlJqK+vh5OTE1RUZG9QVlhYiJSUFNjY2NAzRZuz
+/HjxzAxMUGnTuJ/HwsKCvD06VOYmZnBysqqSactPz8fjx8/RlZWFszMzGBpaQk7OzvweOLfR4qi
kJqaitLSUjg5OTXZjVrogF6/fh39+/dHVVUVHj16hE6dOknUiGnlypXYuXMnNm3ahA0bNjS7ntAy
iANKaDd8/fXX2Lx5s0Rri4qKpOqEK0RcGu7QoUNx6dIlqfURCAQCgUCQP5GBw1H0gpn2rq7VEVUV
OQyZqZU3XjyLYMicen8BF481SIk7hNjr61i6nd1XomuflfI3miAzbzqg0lBRUQFLS0u8fPkSmZmZ
pP6zFSDxZUK7QdpOuLIwceJEkfKIiAgUFIjudkkgEAgEAqF10dSxZslU1QxFyNg3owtzBON57Fzn
QNfAiXU84c5OZKeR3g/thWPHjqG0tJQ0H2pFiANKaDdIOgsUAB49eiTTOby9vWFkZMSS19fX48yZ
MzLpJBAIBAKBIF9Ej2JhjzYR1Vm2KO8u6utrwOXy0HvwHnA4b86DpBB9yR/pib/Ly1xCG9HQ0EA3
ppw/n939mPB2ICm4hHZDTk6OxHeuFi1ahH379sl0noULF+Lnn9ld8D788ENERUXJpJNAIBAIBIL8
yEj8A3ciFzNkBia9UZx3lyEzNh+AsuIkVjMir7HnYWQu6KSbcOd7PL79jcjzqKjqQ1XDCBpa5tDU
Js2j2oonT/NRV1cPW+sO0FCXvF62ppaPlFTBZ9/V0ZSecfo24XB5MLUahI427MaW7wvEASW0GyiK
gqamJqqqqppd6+XlhcuXL8t0nqtXr2LgwIEsOYfDwbNnz+j5WAQCgUAgENqGguybuHJuNEOmo++A
8pInDJmquiGMzT3x/ClzpnfXPqvg7P4lAMH1xa1QP2SnBb9downvFd09t6OL27y2NqNNICm4hHYD
h8ORuA5U1hRcQDA4umPHjiw5RVE4ffq0zHoJBAKBQCDIB00ddvfWV5W54HKZ0bGaqkLoGXVjrc3P
uk4/53A48PjoZ5hYDpK/oYT3lpS4g21tQptBHFBCu0I4o6o5CgsLkZ+fL9M5uFwuJk2aJPKYJGNg
CAQCgUAgvF3UtcxYzia/thxaeuwb1apqHViyohd3UM9/nVGlxFOH58hT/8fefUdFdbx9AP8uLL0u
RapIBwG7Yjdo7MYWWzRRIyqWqFh+scUaY4kxUaPYSYwaayxEY0VRQVBEFEWq0hGQ3jv7/sHLleXe
pS6g8HzO4Zzdmbl3ZlNgnzszz8DUZobkB0taJWkZxeYeQrOhAJS0KE2RiAgApk2bxln+4sULBAcH
1/u+hBBCCGk4Hk8Kihx7MhVV2NtkiouzIa8oelZkWVkRkv8/G24FKWlZdBv4G/qPvgAlFXaSI0Jq
S0pKFh17b2zuYTSbmk/RJeQTUpcA9PXr1xg0aFC9+unWrRusrKwQGhrKqvv777/x008/1eu+hBBC
CJEMZbV2yMl8K1ImK6fOapeZGoQ2hp8hJuyCSPn7uAfQNWIvu9U1GoiRM/yREH0XCVE3UVKcD2V1
E8grsI95IaQqHo8PbYM+UFYzae6hNBsKQEmLUtsluEDDZkCB8lnQjRvZT6/+/vtvbNmypUkyqRFC
CCGEm5Iq+wu+lJQMqywzNRjmdo6sADQp9n6199dr9zn02n3eoDES0hrRElzSojTVElxA/DLcqKgo
eHl5cdYRQgghpGkoq7ETEZWVFbPKslKDoW3Yn1WekRKI/NzERhkbIa0ZBaCkRWnXrh34/NpN7Dc0
ADU3N0evXr04606ePNmgexNCCCGkYbgy4RbkvWctwy0tLUBZST5U1C1Y7ZNi6ndkGyFEPApASYvC
5/PRrh37Dw6XrKwsxMTENKi/6dOnc5ZfuHABhYWFDbo3IYQQQuqPa49dblY01LTsWOUZKa+ha8TO
C5EYc7dRxkZIa0YBKGlxmnIZ7pQpUyAjw95PkpGRgX///bdB9yaEEEJI/XGeBZodBzUNa1Z5Zupr
6LYbzCpPjLmHsrKSRhkfIa0VBaCkxWnKAFRTUxMjR47krDt+/HiD7k0IIYSQ+uPLKEFOQVukTCgs
hYKyPqttRkogtA36QJqvIFJeXJSFlHfeEh9bWVmZxO9JyKeCAlDS4jRlAAoAM2ZwH0p969YtJCQk
NPj+hBBCCKkfZY5ZUBlZZVZZevIrSEvLoY0BOxnRu8hbEhnL+/fvMX/+fFhaWkJWVhZ6enoYNGgQ
Fi5ciEuXLkmkD0I+BRSAkhanKY9iAYAvvvgCmpqarPLS0lKcOnWqwfcnhBBCSP0ocewDLSsrBU9K
NGFhQV4iCvNToG8ynNX+XeSNBo8jJCQEVlZWOHz4MMLDw2FtbQ2BQAAvLy8cPHgQrq6uDe6DkE8F
BaCkxanLDGhwcDBKS0sb1J+srKzYI1loGS4hpKGKi4vx+++/Y8KECbCxsYFAIICZmRl69eoFR0dH
uLq64s2bN809TEI+SspqxqyyvOw4qAosWeUZKYHQNx7GKs/NjkF6ckCDxvHVV18hIyMDn332GcLD
wxEYGIigoCCkpaXh9OnTGDhwYIPuX1fJycnYvn07lixZQsuBSZPjCYXCTACqzT0QQiQlLy8PysrK
EAqFtWpf8VSyIfz9/dGtWzfOOh8fH7HHtRBCSHUePnyIuXPnIiwsrNp2/fv3x8OHD5toVIR8OqJD
zsH37nciZfomIyEjq4Lo0HMi5R16b4B11yW4+88wpCU9E6mz7rYUHXqtq9cYYmNjYWRkBODj+U5Q
+XtLSUkJpKWlm3lEpDWhGVDS4igqKkJPT6/W7V+9etXgPrt27YoOHTpw1tGyGkJIfURGRmLMmDFM
8Glqaoply5Zh165dWLRoEQYOHMiZhZsQ8oGyuimrLDczEgLtjqzyjOSXAAAD01Gsurg39c9sHxUV
xbxWU1Or8/VFRUUICAjAyZMn4erqiqdPnyI/P19s+9DQUPj7+yM5ORlAeYB5//59HDhwAADw5s0b
hISEMO39/f2Zn7y8vDqPj5C64tfchJBPj5mZGd69e1ertq9evcLEiRMb3KejoyOWLVvGKj979iz2
7NkDJSWlBvdBCGk9vvnmG2RmZgIA5s6dCxcXF1bAmZ6ejitXriAiIqI5hkjIR09J1ZhVlpMVBXWO
ADT9/wPQtubj8MrnR9FrMiOQluQPDZ2udR6DpaUlpKSkUFZWhi1btuDUqVOQkqrdHJCnpydmzJgh
EsQCgJaWFg4fPowvv/ySdc2MGTPg6+uLffv2wdbWFuPHj0dmZiaUlZWxcOFCfPfdd7h9+zbT3t7e
nnn99OlTdO/evc6fkZC6oBlQ0iLVZR+oJGZAAWD69OmQlZVllefk5ODcuXMcVxBCCLfU1FR4e5cf
/aCrq4sDBw5wznYKBALMmjULW7ZsaeohEvJJkFfUBl9GNOttaUk+5BXbsNrmZEaguCgbSqpGELTp
wqqPCbtYrzHo6Ojg22+/BQCcOXMGQ4YMwdu3b2u87vLly3BwcEBUVBTmzZsHNzc33LhxA2vWrEFG
RgYmTJiAvXv3ir0+LCwMEyZMgKysLObMmYMFCxYAAGbPno3Fixcz7bZt24YdO3Zgx44dMDQ0rNdn
JKQuKAAlLVJdMuFKKgDV1NTEuHHjOOuOHj0qkT4IIa2Dv78/89rS0hJ8Pi1YIqS+lDky4RbkvYey
GvthdUWyobbm7L/nMeGXUFZWUq8xuLi4YNSo8qW99+7dg52dHdauXSt2yWt+fj6WLl2KsrIy7Nix
A4cOHcKYMWMwfPhwbNu2DWfPngUArF+/XuyRb/v378fQoUORkJCAo0ePYufOnQCAyZMnMwExAKxc
uRKrVq3CqlWroKurW6/PR0hdUABKWqS6zIBGRERIbM/D7NmzOcsfP36Mly9fSqQPQkjLVzkrpY+P
D5KSkup9L6FQCF9fX2zZsgWOjo4YMmQIHBwcMGvWLOzevRu5ubmsazIyMrBnzx7s2bMHJ06cqFU/
Pj4+zDXR0dGcbYKCgrBv3z7MmDED/fv3x4IFC+Dq6oqsrKx6fz5CasIVgOZkRECjTWdWeXrScwCA
keUE8HiiX5ML85OREHWbdU1tyMvLw83NDbt27YKioiIKCgqwfft2dOjQAR4eHqz2Z8+eRUxMDNTV
1UVmKytMmDABtra2yM7OxsGDBzn77NmzJ44fP04JhshHhwJQ0iKJmwHlmkUoKyvD69evJdLv4MGD
YWxszFl3+PBhifRBCGn57OzsmNfFxcXYunVrve5z7tw5tG3bFj179sSGDRvw559/wt3dHQ8ePMDx
48exfPlyWFhY4MmTJyLXqampYe/evVi2bBlmzZqF2NjYGvtydnbGsmXLsGHDBmhpabHq9+7di06d
OmHJkiU4efIkvLy8cOjQIcyZMwe9evVCeHh4vT4jITXhDEAzIyDQYS+zTUt+AQBQUNKFTlv20ShR
wafrPQ5paWmsWLECgYGBzIqpiIgIDBkyBH/99ZdI26CgIABAp06doKioyHm/imy6FW2r+vrrryEv
L1/v8RLSWCgAJS2SuABU3JmfklqGKyUlhTlz5nDWnTp1inOmgRBCqjIwMMCkSZOY9/v27cO0adOQ
lpZWp/u8evUK8fHxkJWVhYODA5ycnPDjjz/i888/Zx7IJSQkYPbs2SguLmau4/F4mDFjBoDyh3Qn
T56stp+AgAA8ffoUADBt2jRW0rUZM2Zg6dKlKCkpgY2NDZYvX44ff/yRWZIYHBwMe3v7WiePI6Qu
lNXYmXBzMiOhoS1+BhQAjK2nsuoTom8jN6vmBzLVMTExweXLl3HlyhVoaGigtLQUs2fPFgkkK7Jf
GxgYiL1PRV1NxzQR8rGhAJS0SOrq6pxP4MWdDSqpABQoz4bLNdOalZWF06fr/+SUENK6/Prrr2jX
rh3z/syZM7C2tsaJEydqfc6xoaEhtm/fjtjYWHh4eODw4cNYv3493N3dERoaymTifP36NR4/fixy
bUUACoA1O1NV5X3uc+fOFam7cuUKE8BOnToV/v7++PXXX7F+/Xpcu3YNhw4dAlC+7Pe3336r1eci
pC64Z0Ajoa7dgbXMNjc7BoUF5Q96DExHQk5BW6ReKCxDxOvjEhnX2LFjcf36dQDlD8iPHDnC1MnJ
yQGAyIOhqgoLCwGAZjnJJ4cCUNJiNUciIgDQ09PDmDFjOOtcXFwk1g8hpGVr27YtvLy8YGNjw5Ql
Jydj5syZsLe3x7Nnz2q8x/z587F69Wq0acPO+Glqaop+/fox76sugTUzM2Pqw8LCmKy8VeXn5+Pv
v/8GAHTp0oU53B4oP39w1apVAMqX9e7bt4/5Yl1h3rx5zJLjw4cPIz09vcbPRUhdcJ0FmpMZAb6M
ElQElqy69Pfly3ClpGVhavMNq/7t6+MoKcqRyNh69uwJa2trABA5TsnKygoAEB8fL/baijpLS/Zn
IORjRgEoabHqEoBKOkHQ/PnzOcsDAgLw6NEjifZFCGm5DA0N4efnh//9738iiUT8/PzQs2dPrFq1
CgUFBfW+/+eff868jouLY9VXzpQpbhb0woULyMjIAMCe/XRzc2OWB44cORKampqc9xg6dCiA8mOr
KpbyEiIpCkq6kOaL7qMsKc5FQW4SNDiOW6kIQAHA1PZb8HiiSXyKCzMREVS75Fy1oaGhAUA0gWLF
gxx/f38kJyezrikqKoK7uzuA8gc/dVX598n79+/rfD0hDUEBKGmxxAWgXIc/JycnIzExUWJ9Dx48
WOwTyf3790usH0JIy6egoIBffvkFPj4+IgfEl5aWYufOnejXrx9SU1Prde/K2wUqZ96tMGnSJCgo
KAAoT2iUn5/PalOx/FZRURHTpk0Tqauc4K26L8mVzx6MiYmp5egJqT0VjlnQ7MwICDgy4aa9/7AP
VFHFAEaWE1htQvz3oaS4dnkdnjx5gitXrnAup/X29oavry8AYNCgQUz52LFj0aNHDxQUFGDdunWs
Zffbtm1DYmIiDA0NxT70rk7l5f03b96s8/WENAQdLEZaLAsLC85yJSUlZGdns8pfvnwpsfOveDwe
Fi5ciKVLl7LqLl68iISEBOjp6UmkL0JI69CjRw/4+vrijz/+wPfff88sVX327Bk+++wzPH78GMrK
ymKvj4iIwN27d5GQkICEhAQkJibWmAFcVVUV48ePx+nTp5GZmYkrV65g6tQPiVlCQkLg5eUFoPxs
QTU1NZHrKydHWbVqFVavXs3ZT+Uv1xSAksagrGaKjJRAkbLyo1jYD0ZSE/1E3lt1WYLo0PMiZYX5
yQh7cQg2PVbU2HdwcDBmzZqFNm3aYMSIEbCxsQGfz8eVK1fw6NEjlJWVwdHREaNHj2au4fF4OHDg
AIYNG4YjR44gODgYw4YNg5SUFO7fv4/bt29DXl4eLi4urKRftaGurg4HBwfcv38fzs7O8Pb2hq2t
LaZPny52pQIhkkIzoKTFqssSXEDyy3C//fZbzj8KxcXFOHDggET7IoS0DjweD7Nnz0ZwcDAcHByY
8tevX+PXX3/lvMbNzQ2DBw+Gubk5nJycsHHjRhw6dAhXrlyp1dEnM2fOZF4fP35cpO7YsWPM66rL
bwHRPW1CoRBlZWWcP5UDUFoOSBoD1z7Q7Iy3UNfqAClp0X3JhfnJyM368CBETdMabc3Hsa4P8d+D
vGz20vWq9PX1YWhoiPfv3+Ovv/7CqlWrsGLFCnh6ekJDQwO7d+/mPMuze/fuCAgIwPDhw/H48WOs
W7cOa9euxd27d9GvXz/4+/uLzTlRG3/88Qfs7e2RnZ2NY8eOYdmyZXXOtE1IffCEQmEmANXmHggh
kpaWlsb5FE9aWprzOJbp06fX+sD12po/fz7n+Z9aWlqIjY2lzHWEkHorLCxEt27dmFlMXV1dJCQk
iLTZv38/c4i9QCDAzJkzMXHiRBgZGUFHRwfbt2/Hpk2bAAAbN25kXldWVlYGIyMjxMfHQ0pKCjEx
MTAwMEBRUREMDAyQkpICW1tbBAYGsq4dN24c3NzcAAA//fQT+vbtW+PnMjAwELuChZD6igo+g6f3
FouUGZiOQp8Rf+HexRFITRTde9xz6BEYWXzJvM/JjMTN070hLCsRaadj+Bn6j/kHPB6vxjHExMQg
ODgYCQkJUFJSgrm5OaytrZll7tUpKipijmmxtraW2PcHoVCIiIgIJCQkwNTUFPr6+hK5LyHVoSW4
pMXS0NCAQCBgZVQUdxaopGdAAWDRokWcAWhKSgpOnTol9sxQQgipiZycHL7++musXbsWAJCYmIiM
jAyoq6sDAK5du4YlS5YAKM+S6e7ujrZt24rcQ0ZGpsZ+pKSkMH36dOzYsYM5E3T16tW4cuUKUlJS
AHDPfgKAjY0NE4Dm5+eLzNoS0pSU1c1YZdkZbwAAGjrdWAFoWqKfSACqrGYCi45OCHshuoIpKe4B
gv12wabH9zWOwcjICEZGRvUZPmRlZdG5M3u/akPxeDyYmZmJJEAipLHRElzSotXlKXpwcDBKSkpq
blgHdnZ2GDJkCGfdnj17an2WHyGEcBk1apTI+8qJhC5fvsz8jtmzZw8r+KwLrjNBK5IPycnJYfr0
6ZzXVT5C5uHDh/Xun5CGUhGwt+XkZERCKCyDpk53Vl1KIjsbs639aiipsAPI174/I8R/r2QGSkgr
QDOgpEUzNzdnsstVpqSkhNxc0ex1RUVFCA0Nha2trUTHsGzZMty5c4dV/vr1a1y/fp31BZIQQmqr
8pJbU1NT5jgHAExyIKB25wRW90Csffv2sLe3h6+vL0JCQnDmzBncvXsXADBhwgSRfiv7/PPPoaKi
guzsbHh6euLu3bsiR78Q0lTk5DUgK6eOosIMpqysrAh52XHQ1GUHoBnJL1FSnAe+zIfjW/gyiujx
+X48cBsHoVA0a/Qrny14++oPKKubQ1HFkDPr7qeMBymoadlB12hgcw+FtAAUgJIWTVwiIoFAwApA
gfJzOiUdgA4fPhzW1tYICQlh1e3cuZMCUEIIy6NHj6CgoICuXbuKbSMUCrF374dZlz59+ojUy8l9
SKxy4sQJbN68WaQ+NjYWN27cYN5XzljLZebMmcwDPScnJyZgFbf8FgD09PSwZcsWJiP4/Pnz4eXl
BR0dnWr7IqQxKKubIS3pmUhZdsYb6BoNgoKSHvJzPzzQEQpLkfbeH20M+om01zbogw69N+Cl9ybW
/fNy4pGXE98oY/9YWHVZgo59NjT3MMgnjpbgkhZNXAAqbt9TQECAxMfA4/Hg7OzMWffw4UM8fvxY
4n0S8bZv346FCxfihx9+aO6hECKWh4cHunXrhs6dO+P333/H69evUVRUxNS/ffsWEydOZAJIXV1d
/PzzzyL36NWrF/N6z549WLduHUJDQ/Hw4UNs2rQJNjY28Pb2Ztp4e3tXmwHzq6++gqysLAAgJycH
QPk2h88++6zaz7Jo0SImkH7z5g3at2+Pw4cPIyoqigliU1NTcfPmTSxatAi///57jf98CKkPFXX2
d4Ls9PJ9oFp6PVl1Ke+ecN7HqssiWHZaINnBfSJCn+9DUWFmcw+DfOIoACUtmrg9oAUFBZzljRGA
AuVHsrRp04azbseOHY3SpzgpKSnYv38/vvvuO4wePRqLFi3C/v374e7ujvj45n9ym5aWBi8vL3h5
eSEpKUni979w4QIOHjyIkydPcta/ePECXl5eePqUvf9HEhr785GWJSAgAM7OzrCzs4OioiLMzMyg
qakJc3NzXLp0CUD5loLz58+zsldu2bIFWlpaAICsrCxs3boV1tbW+Oyzz7B582ZoampK1wupAAAg
AElEQVTCw8ODWRIbExMDMzMzbNjAPbuhoaHBOvJhzpw5NWb/lJaWxu3btzFx4kQAQHp6OubPnw8T
ExMoKytDWVkZWlpaGDFiBFxcXFiZfAmRFBUB+ztBRSIiTa4ANEH8A+JO/bbA1n4NgJqz37YsQqDK
8mNC6ooCUNKiiZsBrcjcWFVjZMIFAHl5eSYbZVX//vtvo/Vb1cGDB2FpaYnFixfjwIEDuHbtGlxc
XLB48WIMGTIEhoaG2L9/f5OMRRwvLy/0798f/fv3x3///dfk/Ts6OqJ///6YMGFCo9y/uT8f+TR0
7NgRXbt2hbS0NFNWWlqKiIgIZpZSRkYG3333Hd68eYP+/fuz7qGjowMPDw+RmVAAUFFRgaOjIwIC
AjBgwABs3boVampqAICMjAzcunVL7LgqnwkqIyODb7/9tlafR1NTExcuXMDJkydhZWUFKanyrx95
eXnMdghlZWUMHTq0xhlVQuqLewa0/CxcrhnQ1ERflJWJT05o02MFBo6/CmU1E8kN8iNnavstZOUF
zT0M8omjPaCkRdPS0oKamhoyM0WXixQXF3OeB5qQkIDk5GRoa2tLfCwLFy7Ejh07mKVrFYRCIbZu
3Ypz585JvM/KTpw4gYULFwIoXxbcs2dPjBo1CllZWXj9+jU8PDyQn59PmXkJ+QiMGTMGY8aMQU5O
Dnx9fREZGYmEhAQUFBTA2NgY5ubmsLGxEbuyooKdnR28vb0RFhaGoKAgtG3bFl26dBEJbHv27InE
xETcu3cP+vr66NChg9j7ffHFFw36HfHNN9/gm2++QV5eHgIDAxEREQFNTU3o6+vDysoKfD59LSGN
R5VzBrQ8AFXXtAVfRhklxR/+RpcU5yL9fQA0dbuJvaeWfi+M+OYposMuIib0PIqLsiEnr/H/s60t
Z3aUx+NBXcsOhubjmnsopAWg3/SkxTM3N8ezZ89Y5YaGhoiOjmaVBwQEYPDgwRIfh0AggJOTE377
7TdW3T///IPg4GC0b99e4v0CQHJyMhN8Ghsb4/79+2jXrp1Im5ycHFy9ehV6enqNMobasrGxwc6d
OwEAPXr0aPL+ly5diqSkJKioqDTK/Zv785FPi7KyMgYNGtSge/B4PFhZWcHKykpsG3l5eYwcObJB
/dSFoqIi7O3tYW9v32R9EqKsZgIeT0okg21+biKKi7IhI6sCLT17JMbcE7km+d2jagPQCu0sJ6Cd
ZeOsnCGkpaEAlLR4FhYWnAGotrZ2kwagALBixQocOHCAtQe1rKwMmzdvxtmzZxul38ePHzPL3DZs
2MAKPoHyL7pTp05tlP7rwtzcHN9/X/OB3o2l8nmHjaG5Px8hhLRWUtKyUFJth5zMSJHy7PRwaOh0
hbZBX3YAGv8I1l25t9AQQuqH9oCSFk9cIiJ5eXnO8sZKRAQA+vr6mDNnDmfd+fPnG20vaGBgIPO6
IotlQyUnJ0skiU5UVBRrWXJdFBQU4O3bt0hOTm7wWD4FcXFxYpNoVaekpATR0dG0xJoQ0qqpCNhn
4lbsA9XW78eqS37ng7LS4kYfFyGtCQWgpMUTF4AWF3P/QWnMABQAVq9eLXI+XwWhUIj169c3Sp+6
urrMa1dX13rfJyMjA7Nnz4aJiQnatGkDXV1dGBoaYtGiRdUGRePHj4eVlRUcHBwAAJGRkfjuu+9g
YmICExMTnDlzhml77949ZrngxYsXWffKz8/HpUuXMH36dOjq6kJBQQHm5uZo06YNVFRUsGDBArx/
/77en7HqWKsaMGAAM77a/AQHB4tcX9Pn46p/+fIl5s2bBxMTE7Rt2xbKysoYMmQIIiMjWddXdfr0
afTp0weqqqowNjaGQCDAqFGjEBYWBi8vL6YvcVmBCSGkJVHlCECz0svPwBW06QS+jJJIXWlJHlKT
/JpkbIS0FrQEl7R44gLQ1NRUzvLg4GAUFRVJbKawKgMDAzg6OuLgwYOsun///Rc+Pj7o3bu3RPsc
OHAgZGVlUVRUBA8PD6xevRpbt24VSURSk4CAAHz55ZeIiIgAUB7U5uTkID4+Hi4uLvD19cX169eZ
Yx8qi46ORlhYGPLz85GZmYmRI0ciJCSEs5+cnByEhZV/GaiaPAoA7ty5I5KhVlFREQoKCkhNTUVO
Tg4OHToEPz8/PHnyhMm0WReVx8olIiKiTsfVFBYWiryv6fNVrff19cXQoUNF2paWlsLd3R19+/ZF
SEgIVFVVWfcpLi7GsmXL4OLiwpRpaGggNzcX169fh6enJ7755humr4yMjFp/JlI7ZWVlyMjIQFpa
GtLS0pCeno7c3FwUFBQgLy8P/v7+yMzMhIKCAjp27Nhov3NaIoFAgNGjR0NRUbG5h0I+MdwBaPkM
qJQUH1p6vZAYc1ek/n3sA2jrS/bvMiGtGQWgpMUTF4DGxMRAS0uLdSRLcXExgoKC0Llz50Yb0w8/
/IDjx49zBjn/+9//8OjRI4n2Z2xsjBUrVmD79u0AgJ9//hl3797FkSNH0KVLlxqvz8nJwfDhw5GY
mIhu3brhzJkzsLCwgFAoxLlz5+Do6IinT5/i559/xi+//CL2PiUlJZg0aRLevHmDESNG4Msvv4SF
hQXr/MKa2NnZYcGCBRg9ejQMDQ0hFArh7e2NZcuWwc/PD35+frh48SImTZpUp/vWhru7O0pKxKfl
P3LkCPbt2wcAsLKygqmpab378vHxwbJly1BWVoY1a9ZgxIgRiI+Px86dO/H8+XMkJCRg9+7d2Lhx
I+vaHTt2MMFn9+7d8ddff8HGxgZFRUXw8/PDypUrRR6C0NLc+klKSkJAQADevHmDqKgoREZGIioq
ClFRUUhLS0NZGZ2X11isra3x5MkTzgcwhIjDtQQ3Ky2Uea3T1oEVgCbF3odtz9WNPjZCWg2hUJgp
JKSFEwgEQgCsn379+nGW//nnn40+pu+//56zbwDCCxcuSLy/srIyobOzs0g/UlJSwjlz5giTk5Or
vXbDhg1CAEI5OTlhVFQUq3758uVCAEJlZWVhWloaq75Lly5MnzweT3j27Fmxfbm5uTFtXV1dWfUF
BQVirz1x4gRz7bp16zjbVIylbdu29aqvzq1bt4R8Pl8IQKipqSkMDw9ntanp81WuByA0NjYWBgcH
i7SJi4sT8ng8IQDhqFGjWPdISkoSKisrCwEIzczMhDk5Oaw2xcXFwoULFzL97N27t86ft7WJjo4W
nj17Vrhy5Urh0KFDhTo6OmL/H6afpvn55Zdfmvs/C/KJKSrMEp7frynyc8FFW1hSUv63JSMliLO+
MJ/9t40QUj+0B5S0CuJmQSvvjazsxYsXjTkcAOV7QSsOf+eqq7p0s6F4PB727NmD06dPM8tky8rK
cOzYMdjY2IjNwJufn49du3YBAEaNGsWZQXfixIkAymdK7969y6qvbPPmzZgyZUq9PwfX/tkKI0aM
YF5zZThuTEFBQZg8eTJKSkogKyuLy5cvw9ycfeh5XaipqeHOnTuwtrYWKTcwMICmpiYA7s+5b98+
JrHT0qVLoaSkxGrD5/MxduxY5j2P13LOq5OU8PBwHDlyBNOmTYOhoSHatWuHr776Cjt37sTt27cl
koSLNExeXl5zD4F8YmRkVaCgJHrcmFBYhpyMtwAANc32kFdsw6pPjPVosjES0tJRAEpaBXEBKNcX
c6DxExEB5fvxVq5cyVn39u1bJuiTtKlTpyI4OBgzZ85kgo7k5GRMnToVTk5OrCWDYWFhzJe8Tp06
oaioiPWjo6PDtI+JiRHbt66ubqMlWgIABQUF5nVpaWmj9VPV+/fvMWrUKGaf5rFjx9C/f/8G33fD
hg1ig9iKhxdcSzwrZ1MeP358g8fRWmRlZeGff/7B3LlzYWxsDEtLS8ybNw9nzpyp075f0jTU1dXx
7bffNvcwyCdIVYN9Jm5m2oe8BDptHVj1idHuDerz8OHD0NfXZ34MDAxgY2ODzz//HEuWLBGbF4GQ
loj2gJJWQVwAKi5IaYoZUABYvnw5jhw5wjmLtW3bNkyfPh1GRkYS71dLSwvHjx/HggULMHfuXLx6
9QoAcPToUUhJSeHQoUNM24okNQCwceNGzv2GlVUXgMrIyDRw5B+UlZXhzp078Pb2RkJCAhITExuU
/ba+CgoKMG7cOERFRQEA1q1bh+nTp0vk3urq6mLrqpuxrPh3xufzoaenJ7YdKX/Y4+bmhqtXr+LR
o0dis2PXl6qqKjQ0NJgfFRUVyMvLQygUIjQ0FAUFBZCXl0f79u1pL2MdCAQCODk5NcrvR9LyqWpY
Iyn2vkhZ5X2geu2GIjr0vEh9QrQ7hMIy8Hj1m7vJzc1FQkIClJSUYGtri4KCAiQlJSE4OBj37t3D
/v37cf78eWZFESEtGQWgpFWoLhOuvLw86wiRjIwMREdHcy43lSR5eXns3LmTc0lqXl4eFi9eDDc3
t0brv2fPnnj27BmcnZ2ZhDRHjhzBvHnzmOREcXFxdbqnuOzCkrR//37s2rWLCdxVVVVhYGAgMgPa
FIRCIWbNmgUfHx8AwJQpU/Djjz826Ri4VMzWCQSCemUCbun8/f1x6dIlXLlyBa9fv27QvWRlZWFj
Y4MOHTrA1NQUxsbGMDExgbGxMQwMDMDn059ZQj42XDOgWakfjszSMRoIHk8aQuGHh9RFBWlITfCF
ln6vBvVta2uLJ0+eMO8DAgIwbdo0BAUFwcnJCePHj69ThnpCPkX0l5G0CuIC0Ddv3sDOzg5+fuwz
vl68eNHoASgATJ48Gfv27YOXlxer7t9//8X58+cxefLkRutfRkYGBw4cwJMnT+Dv7w+hUIjLly8z
AaixsTHT1tXVFY6Ojo02ltr46aefmGW8kyZNwvfff48ePXoAKH/CrKys3GRj2bhxI7N3tlevXjh+
/PhHsZdSX18foaGhTBbW1h6ECoVC+Pr64vz587h06RIzW11XMjIy6NKlC/r06YMuXbqgc+fOaN++
vURn9gkhjU9Noz2rLDPtQwAqK6cGLb2eSH7nLdImPvJGgwPQqjp16oTffvsNw4cPR3p6OiIiIsR+
ZyGkpWjd30pIqyHul3lkZCQ6duzIWddUy3ABwMXFRexMyeLFi1lHxTSGykFuZGQk89rGxoZ5zRUk
N6WgoCAm+Jw7dy7Onz/PBJ9N7eTJk9iyZQuA8iDdzc0N8vLyzTKWqiqOfiktLa12SXRT7pNtDr6+
vlixYgWMjY3Rq1cv/Pbbb3UKPvl8Pvr164cNGzbg3r17yMrKwpMnT7B7927MmDEDHTt2pOCTkE+Q
moY1qywnMwolxR+SWumbDGe1iY+41ijjqXxcV1pamkidr68v5syZg549e8LU1BSjR4/G9u3bxSYq
XLhwISZPnozQ0FAkJSXhp59+goODA6ytrfH111836XcbQsShAJS0Curq6tDW1maVl5SUwNDQkPOa
58+fN/awGB07dsTy5cs5696/f4+5c+c2+hjMzMyY15VnPc3MzKCiogIAuHnzJpNdtTk8fPiQeT1v
3rxmG4enpyfmzJkDoHz577Vr19CmTZsarmo6lc92/euvvzjbhISEYNGiRcx7YQs5B/TFixdYs2YN
TE1N0bNnT/z222/VBuFVGRkZYcGCBXBzc0NaWho8PT2xefNmDBw48KN5wEAIaRi+rDKUVKruHxYi
K/3DPlAD0y9Y1+VmRSP9veQDuIp9+1JSUrC1tWXKt27dir59++L48eMoLCyEhYUFfH19sXbtWnTv
3h2hoaGse127dg0XLlxAZGQkhg8fjvXr18PHxwehoaE4ffo0+vbti+vXr0v8MxBSFxSAklbD0pJ9
+DQAJriqqikDUKB8OWflwK+yK1eu4OjRo/W+d3p6eo1tbt68ybzu3r0785rP52Pz5s0AgISEhEbN
YluTyrNXlTO9VkhISGBeN9Ze1Ldv32L8+PEoKioCn8/HhQsXRL4wfAycnZ2ZDM+//vqryL/bvLw8
/PPPP+jTp4/Iw4RPeSYvKCgIGzduhJWVFbp06YIdO3aIzOJXh8fjoWfPnti2bRtevXqF6OhoHDhw
AGPGjBH7u4EQ8ulT1WQvw81K/ZCJVknVCALtTqw2sW/+leg4SkpKsG3bNgDlf3srtpG4u7tj3bp1
UFNTw8OHD/HixQvcunULcXFxmDt3LgIDAzFr1iyxDw/nz58PVVVVeHh4IDs7G/Hx8Rg6dCjy8vKw
aNEilJSUSPRzEFIXFICSVkNcAFpSUsK5Ry4mJoa1FKYxKSoqwtXVVewewiVLltQ7KF66dCl69OiB
gwcPIiMjQ6SutLQUu3fvhqurK4Dy2bNhw4ax+q6YVduzZw8cHR1Z/2wKCgpw48YNXL16tV5jrI3K
y6V37twJT09PAOWzxLt37xaZ+Xv27BnnESUNkZ6ejlGjRjHB7a+//goHBwfOo2kqfiQ9htpo06YN
Vq1aBQDIzs7GiBEjYG5ujn79+kFDQwOTJk2CtrY29u7dy1xT3fmqH6OgoCBs3rwZdnZ2sLW1xY8/
/iiSsbk6fD4fgwcPxoEDBxAfH4/Hjx9jzZo1sLOza+RRE0I+FmocAWhmapDIewOz0aw2seEXG7Ri
RCgUorCwEFFRUXBzc0Pfvn3h7e0NJSUlHD9+nGlXsSpq5cqV6NOnD1MuIyODffv2QUdHBz4+Prhw
4QJnPwMGDIC7uzscHBwgKysLfX19nDp1CrKysoiMjGzUBIeE1IQCUNJqiNsHGh0dLbauqWdBBw0a
BGdnZ866goICfPnll/XeD+rn54eFCxdCQ0MDxsbGGDFiBEaMGIF27doxf+g0NTVx6dIl1lJDaWlp
XLx4Eb179wYA/Pnnn9DW1oa5uTkGDRoEW1tbCAQCjBw5Erdv367X+GpjwoQJTJAQEhKCAQMGQEND
Azo6Oli+fDkGDBiA1atXAwBSUlLQqVMnnDlzRmL9379/X2TJk7OzM+Tk5Kr9OXXqlMT6r4v169dj
z549zN7it2/f4tGjRygsLISOjg6uXbsGgUDAtP8Ulpc+f/4c69evh42NDWxtbbFp06ZaZ7GVkZHB
8OHD4erqiqSkJNy5cwcLFiygY2oIaaU4ExFVCUCNLCaw2uTlxCP53aN69/v06VPIy8vDxMQE48aN
g6+vL7p3744bN26gffvyMWVmZjLHo02aNIl1Dzk5OYwZMwYAmAexVc2bN4+1skVbW5v5Ox4cHMx1
GSFNgrLgklZD3AxoeHg4unTpwrmX4vnz5/j8888be2gitm/fjtu3byMoKIhVFxUVhdGjR+Pu3btQ
VFSs9T27du2KBw8eIDo6GkKhENHR0SJnj8rJyWHBggVYu3Yt515ZADAxMYGnpyd+/vlnuLi44N27
d3j79i3evn0LoHxWqWfPnujXr18dP3HtycnJ4erVq5gzZw7u3r0LoHxWUk9PD+vWrcPChQuRn5+P
y5cvIzQ0FIGBgfj7778xderURhvTx8zZ2RkjRoyAp6cn/P39YWBggMGDB6Nbt26QlpYWOQpA3L/3
5lRSUgJPT0+4ubnBzc2tztlrpaWlMWjQIEyZMgXjx4+HhoZG4wyUEPLJUdO0YZVlpoWIvFdSbQst
/d5IeecjUh4dchZtDOr3t04gEMDBwQG6urowNTVFx44dMXToUJE2Fas5eDweDAwMOO9Tkb+itis/
Kujr6wNAvbOBEyIJFICSVkNcABoWFoahQ4cyx2lU1tQzoED5TNQ///wDe3t7zoQ/jx8/xoQJE3D5
8uVaz1o5OzvD2dkZ8fHx8Pf3x7t375Camgp9fX2YmZnBxsYGmpqaNd5HWloaa9euxdq1a5GSkoKX
L1+isLAQenp6MDc3F3sEir+/f63GCQBjxoypdnmTsbEx3N3d8fbtW4SFhcHCwgLm5uZMvYKCAoKD
g+Ht7Q0VFRXW/syaxlJd/fjx4xucrKemz1dTfYXw8PBa9WdpaQlLS0vMnj2bVRcREcG8Frf/uKkl
Jibi1q1buH79Om7duoXMzMw6XS8lJYX+/ftjypQpmDhx4kcZWBNCmp+Kujl4UnwIyz7shSzIS0Jh
QRrk5D88rGpnNZkVgMa+cUOnflshK6dW534tLCxw6dKlatvk5uYCKH+wK25/fsXf/7y8PM56cSq2
+TTlkWWEVEUBKGk1zM3NwePxWF/u4+LiRI4aqaw5AlAAaN++PY4dO4avvvqKs/7mzZsYOXIkLl++
DDW12v8BNDAwEPs0ta60tLQwaNAgidyrPszMzEQy91bG4/HQt2/fJh7Rp6WkpATnzp0DUP7PsvIx
AE0pKysLnp6e8PDwwJ07dziTS9WEx+OhV69emDJlCiZNmsQ84SeftuLiYpHVCydOnKjTyg9CqiMl
LQMVdXNkVZn1zEwJRBvDAcz7tubjEOC1HiXFHx4Il5bkIzrkHCw6OTXK2Cq2BRUXFyM5OZkzy3p8
fDwAiDyArY3ExEQA5auaCGkuFICSVkNBQQGGhoaIjY0VKRcKhWKfBIaFhSEvL69ZvvRMmTIFL1++
ZLLjVeXh4YHu3bvj3Llz6Nq1axOPjnzsQkNDoaGhwTkDWFpaivXr1zPLvH/44QdIS0s3+phKS0sR
FhaG58+fw8fHB97e3ggICKjXeaQ8Hg+9e/fGpEmTMHHiRLHHKX3KKi+R09XV/ST26UpSWVkZLl68
yLyvSJRGiKSoa9mxAtCMlNciAaiMrAraWU3C28A/Rdq9eXUU5h3ngMeTfDoVfX19CAQCpKenw8fH
B2PHjmW1qTiXuy5Z2AsKCpgH65WT9hHS1CgAJa2KpaUlKwAFyo/sMDQ0RFxcnEh5aWkpAgICmE37
TW3r1q2Ii4vDiRMnOOvfvHmDHj16YNasWViwYAG6du0qNosuaV0OHTqE/fv3Y+jQobC3t0e7du0g
JyeH8PBwuLm5MUuNLSwsMH36dIn2nZOTg8jISERFRSEiIgKBgYEICAhAYGAg8vPz631fPp+Pzz77
DF9++SXGjRvXomc6S0tLRWYo3N3dm3w/OiEtHdc+0IyUQFaZmd0sVgCakxmJ+Ij/YMiRKbeheDwe
1q5di++//x47duzAkCFDRB6EX7x4Ef7+/tDW1hZ7TviRI0fQqVMnkQfshw4dQnp6Onr16oUBAwZw
XkdIU6AAlLQqlpaWTPKaysLCwtC1a1dWAAqU7wlsrgAUAI4dO4bs7GxcvnyZs76srAyurq7M7IC0
tDTk5eWhpKREwWgrlpGRgZKSEly/fl3soeMKCgrIyMiodvawrKwMubm5kJaWRrt27dCpUydIS0tD
WloaQqEQRUVFyMvLQ3p6OtLS0pj9xZKiqqqKYcOGYezYsRg5cqRI5l5CCGkIdS320UtcAaiapg10
jQYhMeaeSHnQ019gYPpFo/ytXbJkCc6fP4/Hjx+jT58+mDZtGrS0tPDkyRO4urqCz+djz549Yrfh
XL16FZ6envjqq69gYWEBb29vuLq6QklJCbt27ZL4eAmpCwpASasi7riVigD033/ZB0zXJYFOY5CR
kcH58+cxffp0zkRJVZWWliI3N5dJYkCIOPn5+XWakQwMDERgIPvLmaR16NABw4YNw6hRo9C3b1+x
STgIIaQhuALQ7PQwlJUWQ0pa9PeOdbdlrAA0MzUIMWH/oJ0V+6iUhpKVlYWXlxd++OEHHDp0iDnb
mcfjoVOnTjh8+DDs7e3FXn/mzBmcPHkSv/zyC0pKyhMttW/fHn///TctvyXNjs4BJa1KdZlwxe2j
bO4AFChfevj333/jhx9+oFlN0uKYmZnB0dERJ0+eREJCAl6+fIlffvkFDg4OFHwSQhqNvGIbyCuK
JvgpKytm7QsFAG393tDmOHrlpfdGFBdm1djX8uXLIRQKRY6/qomsrCx++eUXZGVlITw8HE+fPkV2
djaeP39ebfAJlGe5PXXqFLKysuDr64ukpCQEBQVR8Ek+CjQDSloVKysrzvLQ0FCxAejr169RVFQE
WVnZxhxajaSkpPDTTz/B3t4e8+bNYzLZEfIpkZaWhqGhIfr27Yvx48ejT58+LXovJyHk46auZcea
2UxPfgl17Q6stp36/gj3858D+JBNvyDvPZ7dX45ew4412hh5PF6ds91WUFBQQI8ePSQ8IkIahmZA
SatibGzMOaOSmpoKBQUFzlTnxcXFePXqVVMMr1bGjBmDkJAQLFmyBAoKCs09HELqpLS0FNHR0Th9
+jSWLl2KXbt21WlGgDRcfHw8bt26BR8fH2RnZ9frHsXFxYiMjISnpyfc3Nzw7NkzpKWl1ete+fn5
8PT0xKNHj+p8piEhDaWu3ZFVlp7MfRyUQLsjTNpPY5XHvrmCl96bG3xONCGtBc2AklaFz+fD1NQU
oaGhrLqKWdCbN2+y6vz9/dGtW7emGGKtqKmpYe/evVi/fj2OHj2K33//nWZESaNTVlaGrq4uk3yo
sLAQWVlZKCgoqNf94uPjsXv3buzevRvm5uaYOXMmZs6cibZt20p45CQ6OhrOzs7w9PQUCRR5PB6M
jY3x9ddfY8OGDdUuec7MzISbmxuuXLmCW7ducQaLX375JXbu3Cn2jN7K3N3dsWrVKrx8+ZLZo8bn
89GlSxccOnSoTsdLEFJfAu3OrLL05Bdi23fquwWJsR7Iz3knUh76fB9iwy9DVcMKSmomUFJpnqOh
iovKHyrFhP0DLcX6nWXO40lDU9cemrofz/ce0rLwhEJhJgDV5h4IIU1l7NixnMmGjh8/jrCwMM5z
N+fPn4+DBw82xfDqraCgAAkJCRAKhVBSUmru4ZAWRllZWex/V9nZ2YiOjkZISAiCg4Px6tUrPH36
VOQcy9qSlpbGiBEjMH/+fIwYMQJSUq1zoU5paSn4/A/PiBtyDMuJEyewePFiZGV92KfG4/FYszVd
u3bFqVOn0L59e877uLi4YNGiRSJlXPfR19dHSEgIVFRUxI7p4MGDWLJkCRN4Vr2XnJwcdu3ahcWL
FzP1GRkZYjN+ElJfuVkxuH5SdAuONF8B4+dGgSfFfT5ycvwjPPh3AoRlJZz1zWMl3tUAACAASURB
VKmsrPz/ISmphueL6DLgZ5h3mN3g+xBSFc2AklZHXCKi0NBQsbOcfn5+jTkkiZCXlxc5N5CQpqKi
ogI7OzvY2YlmlExJScGjR4/g4eEBDw8PvHzJvaytstLSUly7dg3Xrl2DmZkZFi9ejNmzZ4ucZUdq
7/Tp05g5cybzfuHChfj666/RqVMnZGVl4fnz59i4cSP8/Pzg7++Pvn37IiwsDFpaWpz34/P5GDNm
DKZNm4b27dvDzMwMoaGhuHjxInbv3o3s7Gy8e/cO27dv53yYBwCurq5YuHAhgPIHDps3b8bYsWNh
bm6O58+fw93dHTt37hQJPgHQ8kbSKJRUjSArp46iwgymrLQkH1npYVDT5H4Yo23QF90cfoPfvSVN
Ncxak0TgWSHw8VYKQEmjoBlQ0uocO3aM8+DmCRMmYNeuXZxBnJycHLKzsykjJyENEB8fj2vXruHq
1au4c+cOioqKanWdQCDAggUL4OzszLlPuyWSxAxobm4urKysEB8fD6B81nH+/PmsdgUFBZg0aRKu
XbsGAJg3bx4OHTrEahccHAxVVVUYGBhw9jdnzhzmPGIHBwd4eHiw2hQVFcHCwgIxMTEAgHPnzmHy
5MmsdpGRkZg1axYePHjAlKWnp0NdXb2mj01InT1w+xLv4x6KlHUfuBcmNl9Xe11UyDn4eTh/lDOh
ksCXUcJ4p+jmHgZpgVrn2ibSqlV3FIuxsTE0NTVZdYWFhU1y/iEhLZmBgQHmzZuHa9euISkpCa6u
rhg8eHCNy2zT09Oxbds2GBsbw9nZGXFxcU004k/bjh07mOCzQ4cOnMEnUL56YteuXcwRT0ePHuWc
rW7fvr3Y4BMApkyZwrwODw/nbPPnn38ywWePHj04g08AMDExwY0bN8T2RYgkce0DTXtf8/5JY+sp
+HziLSgqt8x961ZdFtfciJB6oCW4pNURdxRLeHg4ysrK0K1bN9y+fZtV/+zZMzo/ixAJUVdXh6Oj
IxwdHREbG4sTJ07g2LFj1e4bzc/Px++//47Dhw9j9uzZWLNmDQwNmyfRx6eg8l737777rtq2VlZW
GDx4MO7cuYOysjL8999/6NiRnR20OpUf7mVmZnK2OXbsw1EVjo6O1d6v6oMJOgOZNBYNHfYxbGlJ
tTsDXKDdCaNmPsebV38iPuIaSopzIK+oA2W1T3dLDI8nDS09e+ibDG/uoZAWigJQ0uro6OhAVVVV
JCEHUL4MLTY2VmwA6ufnhzlz5jTVMAlpNdq2bYsffvgBa9aswa1bt/D777/j1q1bYvf8FRYW4sCB
A3B1dcWcOXOwdu1aOku0CqFQiDdv3jDvO3Rgn2lYVYcOHXDnzh0A5StC6qqwsLDGNpXH1KlTpzr3
QUhj4ApAM9OCUFpSAGm+fK3uYd5hFsw7zJL00AhpkWgJLmmV6pOI6NmzZ405JEJaPSkpKYwYMQI3
btxAcHAw5s6dCzk5ObHtCwsL4eLiAjMzM6xYsQLJyclNONqPW1xcnMgxKdUtneVqw3VUVYXCwkKc
OXMGkydPRp8+fWBiYgIFBQWR1SVcDw8yMjKQkfEh0Yuurm6NYyKkKSgq60NeUUekTFhWIvY8UEJI
w1AASlolcctwQ0ND0b17d866V69eobi4uDGHRQj5f1ZWVjhy5Aiio6OxcuXKao/0KCgowG+//QZT
U1OsW7dOJMhprWJjY0Xea2tr13hN5cy34vbZbt68GQYGBpg2bRouXLgAX19fFBcXo2PHjjWelRwZ
GSnyvrUklCKfBq5Z0NRE32YYCSEtHwWgpFWqLgBt166d2EREr169auyhEUIq0dHRwc8//4zo6Gis
X7++2nMgc3JysHXrVpiammL79u3Izc1twpF+XKrujU1JSanxmsozyG3bspOqLF++HJs2bUJqaipM
TExw4MABpKWlIS4uDk+ePMHFixeZtlz7NSuf+QmgVf/7IR8fDR32A5TUxKfNMBJCWj4KQEmrVF0A
CkDsLOjTp/THiJDmIBAI8OOPPyIqKgobNmyAqqr408PS09Oxdu1amJmZ4ffff6/V3sSWpm3btlBQ
UGDev3v3rsZrKjLmAuxtChcuXMDu3bsBlGfD9fb2xoIFC6r991BV1SOuEhMTa30tIY1NS7cHq4wC
UEIaBwWgpFWqbwDq5+fXaGMihNRMXV0dmzdvRmRkJNasWQMlJSWxbZOSkuDs7AwLCwscPXqUNQPX
kvF4PJibmzPvg4KCarym8goPCwsLkTp3d3fm9YoVK+q1f1NLS0vk31dwcHC17cvKyurcByH1JWjT
BTwp0dycBXnvkZMZ1TwDIqQFowCUtEqWlpacS8Ti4uKQm5uLHj3YT0IBmgEl5GOhoaGBbdu2ISIi
AkuXLoW8vPhMlbGxsXBycoKVlRWOHz/eagLRMWPGMK8PHjxYbduQkBDcvXsXQHnwOny46PELjx8/
Zl5raGjU2Le4f8Z2dnbM6z///FPs9Tk5OawzQsVlRSZEEvgyilDXYmeLTnnn0wyjIaRlowCUtEoK
CgowMjJilQuFQoSFhYkNQF+/fo38/PzGHh4hpJbatGmD3bt3Izw8HE5OTuDzxZ8uFhERgVmzZsHa
2rpVBKKrV6+Gnp4egPLVG6dPn+ZsV1hYiJUrVzIB3qxZs9C1q2hClspB59GjR1n3yMjIwJYtW5j3
BQUFiIiIYLVbsWIF8/rOnTucY4qNjUXfvn1x48aN6j4eIRLHtQw3OYECUEIkjScUCjMB1H4TByEt
xLBhwzjP+zxz5gy++uor6OvrIyEhgVXv7e2N3r17N8UQCSF19ObNG2zatAlnzpypcQmniYkJVq1a
hW+//bba416aQ2lpqUgw7eTkxFoWy8XKygqjR49m3p84cQIzZ84EUD6zuXbtWkydOhXW1tbIzs6G
v78/1qxZA1/f8myfqqqqCAsLg46O6JEUGzZsYAJMHo+H8ePHw8nJCTIyMvDx8cH+/fuRmJgIWVlZ
FBUVAQC2bduG1atXi6w2EQqF6NChA16/fs3ca+rUqejXrx+ys7Nx69YtPHr0iAmKd+7cyVybkZFR
bRIqQhoq7s2/8LnlKFKmrGaCEd/Q6idCJIkCUNJqLVmyBPv27WOVb9q0CRs3bsTYsWPx77//sur3
7t2LJUuWNMUQCSH1FBgYiA0bNuDy5cs1ttXT08OSJUswf/58qKurN8HoalY1AK2tiRMn4sKFCyJl
R44cwbJly0TOBZWTk2MlZ7K1tcWJEydYs59AecbaLl26IDw8nLNfeXl57Ny5Ezo6OpgyZQpTbmVl
hfPnz6Njx45M2YsXLzB27FjExMSI/RzDhw/H+fPnRZIcUQBKGlthfgr+/cOaVf7FzFdQUNZrhhER
0jLRElzSalEiIkJaLjs7O1y6dAl+fn4YNWpUtW0TEhKwZs0atG3bFosWLWJ+B7QUTk5O8Pf3x8CB
A5m9spWDTx0dHfzvf//Ds2fPOINPAFBSUsLdu3fxxRdfiJTz+Xw4ODjg2bNnWLx4MSZNmoSBAwcy
9aGhoayluJ07d4afnx+GDx/OCrLV1dXxww8/4OrVq5CVlW3Q5yakruQUtKCqwf5ukBT3sBlG03is
rKygqKgIHx9aXkyaB82Aklbr7t27GDx4MKu8a9euePbsGW7evIkRI0aw6q2srBASEtIUQySESMiT
J0+wefPmWu0r5PF4cHBwwLx58zBu3LiPbnluQ5SWliI0NBSvX7+GlpYWOnToAC0trTrdIzIyEoGB
gVBQUEDv3r05MxG/fPkSMTEx6NmzJ7S1tcXeKz8/Hy9evEBUVBQMDQ3RtWvXajMbE9LY/B+swttA
V5GydlaTYT/4QL3uZ2lpiZycHOa9jIwMdHV1oa+vj3HjxmHq1KlN/rDFyMgIsbGx8PLyQt++fZu0
b0IACkBJKxYXF8d52LqSkhJycnKQmprK+cWMx+MhLS3to1mqRwipPV9fX2zZsgXXrl2rVXuBQICv
vvoK06ZNQ9++fTmzZxNCWo64t1fhc3OWSJmCki6++DawXvdTVVVFdnY2LC0toaamhrS0NMTHx6Og
oAAA0K1bN3h7ezdpEEoBKGlutASXtFoGBgacT9pzc3MRFxcHTU1NmJqasuqFQiEtwyXkE2Vvb4+r
V6/ixYsXmDJlCqSlpattn56ejoMHD6J///4wMjLC8uXLcf/+/RafQZeQ1qqNQX/weKJfj/NzE5GZ
2rCVT3v27IGvry/evHmD1NRUbNu2DQDw7Nkz7N+/v0H3JuRTQwEoabV4PJ7YfaAVS2zt7e056ysy
RhJCPk2dOnXC2bNnER4ejiVLlkBFRaXGa+Li4rB7924MHDgQ2tramDx5Mg4dOtTi9owS0prJyqtD
0KYLqzwx+o7E+lBUVMSaNWvQq1cvAOVBKCGtCQWgpFWztmZnuwMoACWktTAxMcHevXsRFxeHPXv2
iP2dUFVGRgYuXLiABQsWwNraGm3atMGoUaOwadMmXLx4EcHBwSguLm7k0RNCGoOu0SBWWUK0u8T7
qVhllZaWxpSdO3cOkydPxpEjR1jtMzMzMXnyZEyePJm1CqOkpATHjh2Dg4MD2rVrB2trawwZMgSH
Dh2qdgxFRUVwcXHB2LFjYWpqirFjxyIoKEgCn44Q8eqe452QFoQCUEIIUL5Py9nZGc7Oznj48CFc
XV1x8eJF5Obm1ur65ORkXL9+HdevX2fK+Hw+9PX10bZtWxgYGEBTUxMCgQBKSkoIDw9Hfn4+lJWV
0bFjR8r4KiECgQCjR4+GoqJicw+FfMJ0jQYh6OkvImUpCY9RVJgJWTnJHQUUFhYGAOjQoQNTFhgY
iAsXLkBdXR1OTk4i7QsLC5ljlk6dOiVSt2jRIhw+fBgKCgqwt7dHXl4eHj16hDZt2mD+/Pmc/RcW
FmLChAm4du0aZGRkUFxcjMjISDx48AChoaGs84AJkRQKQEmrVlMA2rVrV/D5fNaTxoSEBMTFxcHQ
0LDRx0gIaVoDBgzAgAED4OLigsuXL+PcuXO4fft2nWc0S0pKEBMTU+15l0TyrK2t8eTJE5EzRAmp
Cw2dbpBT0EJhfgpTJhSWIiHqFtpZTZZIH//99x+z9Lby0UX1kZKSgsOHD0NGRgahoaFMgsXS0lKR
2dWqnJyckJubi+PHj2PcuHGIi4vDqFGjEB0djT/++ANr1qxp0LgIEYeW4JJWraYAVEFBAXZ2dpxt
njx50mjjIoQ0P2VlZUyfPh3Xrl1DUlIS/vrrL0yaNIkCm49cSEgI5/JFQmqLx5OCvvEwVnn829pl
z+ZSUlKCjIwMPH/+HGvWrMHkyZMhFArh6OjIeeRbXSQnJwMoX8lR+dgjaWnpao9BSktLw61btzBz
5kyoqanB1tYWDg4OAD7MzhLSGCgAJa2ahYUFpKTY/xvEx8cjOzsbANCzZ0/Oax8/ftyoYyOEfDwE
AgFmzJiB8+fPIyUlBQ8ePMCmTZvg4OAABQWF5h4eqSIvL6+5h0A+cfqmI1lliTH3UFKUw9G6ZmPG
jIFAIEDXrl2xY8cOCIVCrFy5UiIZcNu3bw8bGxukpqZiyJAhCAgIqNV1R48eRceOHUXKKh7MVxwT
Q0hjoACUtGry8vIwNjbmrKvIbFmRpa4qmgElpHWSkZHBgAEDsHHjRnh4eCArKwvPnz/HkSNHsGjR
IgwaNAh6enrNPcxWS11dHd9++21zD4N84nQMPwNfRlmkrLS0APER/9Xrfr1798bUqVOxdu1aHDt2
DG/fvsXPP/8ssQdYLi4uMDAwgJeXFzp37owhQ4bA29u72mt0dXVZZTUdTUWIJNAeUNLqWVtbIyIi
glUeEhKC7t27i50B9fPzQ0lJCfh8+t+IkNaMz+ejc+fO6Ny5s0h5fn4+YmNjERsbi6SkJKSlpSE9
PR3v37+Hn58fsrOzISsri/bt29OyXgkRCARwcnKCkZFRcw+FfOKk+fIwMB2F6NBzIuXRoefRznpK
ne+3fv36Bi+1rY6DgwMCAwOxcuVKnDhxAu7u7vg/9u47rqmr/wP4J2GPMBQQB8MiCOLAUeMoWLei
FqvWVbU4qFZra+3T1v4q1da+1PaxWh9tHXU+Vlvt07r3liKKA5GhIioISATZm4Sc3x80twm5gQAJ
Afy+X6+8JOeec+73ZlzzveOcc+fOYfny5Vi2bJne1ktIXdAvZ/LS8/b2Vhm5UkFxH6i3tzdsbW2R
l5ensrykpAR3795Fjx49GiROQkjTYmFhAS8vL3h5eRk6FEJIHbh6TVBLQDPSwlBckAZLUdsGj0cu
l1e73M7ODlu3bsXXX3+Njz/+GPv27cOKFSswd+5c3rOdhBgKXYJLXno1DUQkEAg0TsdCl+ESQggh
zVOrdgEwt1SdioQxOR7H79bbOhXjUqSnp1dZL8O//vUvrfpwdnbG3r170adPH1RUVOCPP/7QeZyE
1AcloOSlpykBvXfvHve3pvtAaSAiQgghpHkSCI3QvtPbauWP4/ZAXlGul3UqplC5efMmKioqAFQO
CPT+++9j//79vG2eP3+O3NxclTK5XI6cnBwAoEv8SaNDCSh56fn4+PCWP3z4kJv/kxJQQggh5OXz
Sqd3IBCo/lwuK8nEk3v79LK+oUOHwtzcHBKJBB06dMDEiRPh5OSE3bt345dffuFtExERgTZt2uDt
t9/GunXrsHnzZgwbNgwPHjxA+/btMXr0aL3ESkhdUQJKXnoODg5o2bKlWrlUKsWjR48AaJ6KJSEh
AVlZWXqNjxBCCCGGYSlqizbuI9TK799eD3mFVOfrc3Nzw65du2BjY4OkpCT873//g6enJ06cOIGB
AwdqbCMWi3HixAksXrwY7733Hs6fP48RI0bg9OnTsLe313mchNSHgDGWB4DOzZOXmr+/P/766y+1
8oMHD2Ls2LEAgI4dO/JOzHz06FE6ukgIIYQ0UzkZd3Du9yFq5V36fgnvHh/oZZ3FxcWIj4+Hq6sr
nJyctG735MkTPH/+HB4eHnB0dNRLbITUF50BJQSaL8NVvg+0b9++vHUiIiL0EhMhhBBCDM/eyQ/O
roPUyu/d/B6FeUl6WaelpSV69epVq+QTANq3b48+ffpQ8kkaNUpACQEloIQQQgjRrGu/5Wr3gsqk
RYg4NQvS8gIDRUVI00TzgBICzQmoYioWAOjXrx9vncjISFRUVMDIyEgvsRFCCCHEsGxbdoJH51lI
jNmmUp774i5O7+sPJ5cA2Nh7wcxcfUyJ5kggNIZjm76wsnE1dCikCaJ7QAkBkJycDHd3d7VykUiE
/Px8AJVDmtvb23PPld2+fRvdu3fXd5iEEEIIMRBZeSHO/T4EBbmJhg6lURAamaHfyN1o7aZ+fywh
1aFLcAkB4OrqCktLS7XygoICpKamAqicHLp379687cPDw/UaHyGEEEIMy9jUGn2Gb4exiZWhQ2kU
5BVluHt1uaHDIE0QJaCEABAIBPD29uZdpnwfaP/+/XnrUAJKCCGENH92Dr7wH70fRsbqB61fRjJp
kaFDIE0QJaCE/E1TAhofH8/9TQkoIYQQ8nJzaNMHQyeeh5mFg6FDMTjPriGGDoE0QTQIESF/69Sp
E2+58hnQPn36QCgUQi6Xq9RJSUlBSkoKXFxc9BojIYQQQgxPZO+JMTPjEROxAs9TLqNCVgJzK2dY
2bwcvwOEAmO0ch2Idh5jDB0KaYIoASXkb5oSUOUzoCKRCF27dsWdO3fU6oWHh2Py5Ml6i48QQggh
jYdAIETXfssMHQYhTQ5dgkvI37RJQAG6DJcQQgghhJC6ogSUkL95eHjA1NRUrTwrKwsZGRncc00J
6F9//aW32AghhBBCCGkOKAEl5G/Gxsbw9PTkXabNSLh3795FXl6eXmIjhBBCCCGkOaAElBAl2lyG
6+rqCldXV7U6crkcV69e1VtshBBCCCGENHWUgBKiRNv7QP39/XnrhYWF6TwmQgghhBBCmgtKQAlR
4uPjw1tOCSghhBBCCCH1RwkoIUq0mQsU0JyA3rhxA6WlpTqPixBCCCGEkOaAElBClHh5ecHIyEit
PD09HTk5OdxzHx8ftGzZUq1eWVkZIiMj9RojIYQQQgghTRUloIQoMTMzg4eHB+8y5ctwBQIBXnvt
Nd56ly9f1ktshBBCCCGENHWUgBJSha+vL295XFycyvMBAwbw1rt06ZKuQyKEEEIIIaRZoASUkCrq
m4BGRESgvLxc53ERQgghhBDS1FECSkgVmgYiqpqA+vn5wdbWVq1eSUkJbty4oZfYCCGEEEIIacoo
ASWkCk1nQKtOxSIUCjWOhkv3gRJCCCGEEKKOElBCqujYsaNWI+ECdB8oIaTxSEtLw7Vr1yCRSAwd
CiGEEKKRsaEDIKSxMTMzQ4cOHfDgwQO1ZXFxcSqj32pKQMPDw1FeXg5TU1O9xfkykkql3P21VlZW
Bo6GEMMrKyvD2rVr8d133yE3N5crt7Ozg7e3N3x8fLBlyxaYmJg0aFxr1qzBgQMHaqxnZ2eHM2fO
NEBEDeNl3e7qbNu2DVu3bgUAmqaMEAKAElBCeHXq1EmrBLRHjx6wsbFBfn6+Sr3i4mJcu3YNAQEB
eo/1ZbJy5UosX74cAMAYM2wwhBhYeXk5BgwYgOvXrwOonB7Kz88P2dnZePr0Ka5du4Zr165h48aN
DZ6AJicna3UvPN98yk3Zy7rd1UlLS6NxEQghKigBJYSHr68vDh48qFZe9T5QIyMjBAQE4NixY2p1
L1y4YNAEtKysDMOGDUNJSQlEIhFOnz4NY+PG/5UXi8VgjCEkJAQhISEN1paQpmbp0qW4fv06BAIB
Vq9ejenTp6N169YAgJycHBw6dAj79++HQCDQ2TqTk5Nx6dIlpKenY8GCBRCJRDW2OX36NFq0aMG7
rCnsk+rqZdjuY8eOISkpCW5ubhgzZgxvHU9PT4wcObKBIyOENGbNYw9IiI5pGogoNjZWrWzgwIG8
CejFixe5s3WGcPDgQVy5coV7fuzYMYwdO9Zg8WhLcYlWYGBgg7YlpKn59ddfAQDTp0/Hp59+qrLM
3t4eM2fOxMyZM3W6zjNnzuDdd98FAMyYMUOrBLRbt25o1aqVTuNoCl6G7Z47dy6ePXuGkJAQjQno
1KlTMXXq1AaOjBDSmNEgRITw0HYuUAAYNGgQb91r166huLhYp3HVxs8//6zyfNu2bQaKpHZGjhyJ
kSNHwtPTs0HbEtKUZGdnIzU1FQDQtm3bevdXWloKqVRa7370KT8/X6tL78vKylBaWlpjvcLCwgaL
yZDKy8tRUVFR63aMMbXbSxqKLt4boHJaNEJI40MJKCE8OnbsyHuJ1PPnz/HixQuVsm7duvHez1Ne
Xo7w8HC9xVidxMREXLx4EQBgbm4OADh16hTS0tIMEk9tnDhxAidOnMDbb7/doG0JaUpEIhG3j9q7
dy/kcnmt+5BKpQgNDUXPnj1hY2MDkUiE3r17Y9euXWp1JRIJxGIxVq5cyZWNGjUKYrEYYrEYixcv
rvO2KNu2bRvXJwAkJSVh0aJF8PLygq2tLVJSUri6inqKg227d+/GqFGjYG9vj/nz56v1zRjD5s2b
MWTIEDg5OUEkEqFVq1YYOnRotQfoahNTXYWGhkIsFuOtt97SWCcoKAhisRgrVqyoMcaKigqsX78e
I0aMgJ2dHaytrTFs2DAkJiZWG0d6ejrmzZuHXr16QSQSwdbWFjY2NujatavKWcwVK1ZALBYjMzMT
AHDo0CFu/WKxWOV2laqx8anrewOofw7u3LmDBQsWwNPTE5aWlnBxccEPP/zQ6A8UEPJSYYzlMUKI
mk6dOjEAao+LFy+q1Z0wYQJv3U8//bThA2eMffbZZwwAc3JyYqtXr+biWbFihUHi0ZXly5dz21Jf
UqmU5efn16uP0tJSVlJSUu9YCKmL4cOHc9+HyZMns6KiIq3bpqWlsb59+zIAzNjYmPn4+DAnJyeu
v8WLF6vUT0pK4t3HKR6BgYEq9d9//31umUQi0Tou5e94Tk4O8/b2VllPcnIyV1dRtmzZMrZ582aV
ejNnzlTpVyKRqLxeFhYWrFOnTszc3JwrGzVqFMvMzKxXTHXd7ilTpjAAzMvLS2MdNzc3BoAFBwdX
G6NUKmWTJk3ifZ8cHR1ZdnY2b/+7d+9mdnZ2XF0jIyPm7u7OjI2NGQDm4ODA1Q0ODq728xAZGckb
G5/6vDeMqX4OwsPDmUgk4o3pm2++0fjaEkIaFp0BJUSDzp0785bz3Qc6ePBg3rpnz57VaUzakEql
3BmM4OBgzJkzB2ZmZgCAHTt2VHsU+OnTp9zRZE1TBBw7doyrozzfYGlpKd544w2IxWIMGjQIWVlZ
vO0rKiowceJEiMVirFmzRm151aPZtVFd2+zsbOzatQtBQUFo27YtzMzMYGNjg5YtW2L8+PFISEjQ
ut+qZ1qWLVsGsViMfv36VXvJWlZWFvr06QOxWMyNXEpIXX3//fewsbEBAPz222/w9fXFiRMntGob
HByMiIgIiMViJCcnIz4+Hs+fP8f27dsBAGvXrsWtW7e4+i4uLpBIJCrf2Tt37kAikUAikWDv3r06
3LJKEydOhEQiwQcffIDLly8jKioKTk5OavUuX76M999/H/7+/ti0aRPu37+Pzz77TKXOnDlzcPr0
aVhYWGDPnj0oKChAXFwcCgoKsGvXLpibm+P48eOYN2+eTmIypMmTJ2P//v0YO3Ysfv31V0RHR2PO
nDkAgMzMTGzYsEGtzY0bNzBz5kzk5ubCzMwMW7duRX5+Pp48eYLCwkJERUXhp59+4uqvX78eEomE
u8d12rRp3GdBIpGge/fuWserq/fm2rVrGD58OOzs7LB06VJERUVhz549cHd3B1A5ijpdkktII8Ho
DCghvL766iveo6hz585Vq5uQkMBbVyAQsIyMjAaN+3//+x+37oSEBMYYY5MnT+ZiOnfunMa2Dx48
4Ort27ePt87OnTu5OklJSSrLzp8/z4RCIXdGRC6Xq7VfuXIlA8DatGnDauRXdQAAIABJREFUeyQe
Skezq6rpSLq2bc3NzZmPjw8zMzNTOTOQlZVVY798Z1qOHj3KPd+6dStvH4wxtmbNGgaAtW7dmkml
Uo31CNHWzZs3Vc5cAmAjRoxgjx490tjm5MmT3JnPBw8eqC1XnI2aMGGC2rKtW7dy60lLS9O4DuUz
gb1792b9+/dXe9T0PTUzM2Ph4eEa16G8zUFBQayioqLa7QXAtm3bxltH+Xt94cKFOsekvN3/+te/
2PLly9UeBw4cUGunyzOgANjq1atVlsvlcta2bVsGgL355psqyyoqKljPnj25tseOHdMYQ1Vt2rRh
AFhISIjGOtXtt+v73jCm+jl45ZVX2LNnz1SWb9myhVseHR2t9bYRQvSHzoASokFtzoB6enrC1dVV
rZwxhnPnzuk8tuooJvx+/fXXucF4lKck0edgRIMGDcLXX38NoPJ+zNWrV6ssj46O5kYG3rZtG+zt
7fUWS1XW1taYO3cubt++jaKiIsTHxyMzM5O7nyozMxObNm2qtg9NZ1pGjhyJNm3aAAB27tzJ25Yx
hi1btgAAZs2a1WymYSCG1bNnT8TFxancn3fq1Cl06dIF69at473iYePGjQCA7t27w8vLS225YmC1
sLAwncQYGRmJ8PBwtQffXMvKduzYgX79+tXYv5+fH/bu3QuhkP8nzY8//ggAcHBwwLRp03jrzJgx
g5syRVG/PjEBwJo1a7B8+XK1x++//65V+7r69NNP1c4ACwQCtG/fHkDlWAbKbt++zZ3tfv311zFq
1Ci9xqdMl+9N69atcfbsWW4qIgUPDw/u76rbTggxDPoFRIgGmhJQvpFwAWDo0KHc5WvKzp49iylT
pug0Nk2SkpK4y36Vk86BAweiQ4cOSExMxMGDB5GVlaW3idD/7//+D+Hh4Th58iRCQ0PRr18/DBgw
AOXl5Zg+fTrKy8sREhLS4PPCffzxx2plIpEIixcvxurVq1FUVIR79+5V28elS5cQFBSEP//8U+3H
7jvvvINVq1YhIiIC9+/fh7e3t8ryCxcu4OHDhxAKhTRHKdEpBwcH7N27F++88w4WLVqEe/fuobi4
GIsXL0ZcXBy2bt2q8nm9f/8+AMDExIT3gInicvSMjAyUlZVxl/DX1enTp3n3N5rmyFTQduqOoKAg
WFlZaVyuSHS7dOmicVssLCzg6+uLsLCwahPj2kwn8sUXX/BOU1N136BrVQ/8KVhaWgKA2kEJ5e19
44039BcYD12+NyEhIXjllVfUyhXbDahvOyHEMCgBJUQDDw8PmJubqw3nn5ubi7S0NLWpD4YMGcKb
gDbkGdBt27aBMYaWLVti3LhxXLlAIMCcOXOwZMkSlJWV4ZdffsGHH36olxgEAgH27NmDHj164OnT
p5gyZQqioqKwdu1axMTEoH379li7dq1e1l0XlpaW6N69O/766y+kp6dXW7e6My2zZs3CqlWrAFSe
Bf32229Vlm/evBkAMGzYMLi5uekoekL+MWzYMERHR2P16tX4+uuvIZPJsH37dnTs2BGffPIJgMrR
uZOSkgAAV69exdWrVzX2xxhDamqqyhmkujDkfJgymQxPnjwBUPN0NYrliYmJkMvlGs+oamvhwoUG
2W6BQFCr+spJHV8Cpy+6fm9qu92EEMOhBJQQDYyMjODj44OoqCi1ZbGxsbwJqFAoVJsOISUlBfHx
8ejUqZNe45XJZNzZjBkzZqgdTQ4ODsbSpUshk8mwbds2vSWgANCyZUscOHAA/v7+SE9Px/DhwxET
EwOhUIhdu3bB2tpab+uujeLiYjx//pw7yFDT0fHqzrR06NABAwYMwOXLl7Fnzx6sXLkSRkZGACqn
sDh8+DCAyonbCdEXExMThIaGwtfXF+PHjwdQeUbs448/hlAoVPmM+/v7a5zHWMHW1lav8eqbVCrl
5sA0NTWttq7isniZTKaTBLSpUP5M1Pdsd23Qe0PIy4sSUEKq4evry5uAxsTEYPjw4SplDg4O6N69
u8rIkQqnTp3SewJ6/PhxPHv2DADQu3dvREdHq9URi8UIDw9HbGwsrl+/Xu28bPUlFovx3Xff4aOP
PuJi+eijjxAQEKC3ddbkxYsX+O9//4tffvkFjx490vkk67Nnz8bly5eRnp6OkydPYvTo0QCA7du3
QyqVok2bNlwZIfo0btw4eHl5ISEhAdnZ2Xj69Cnc3d1hZmYGDw8PJCQkwM7Ojrsnu7mysLBAu3bt
kJKSUuM8yIrl7du3f6nu0Va+JLimeUJ1id4bQl5edAiJkGp06dKFtzwmJoa3vGpSqnDy5EmdxaSJ
8tQjU6ZMgZ+fn9ojPDycq6PPwYgUqt5T2b9/f72vU5OLFy/Czc0NH3/8MR48eICePXsiNDQUf/zx
h84ODkyYMIE7Y6Q4Gy2Xy7n3hgYfIg1JeXooxdl4ANznPTw8HGVlZXXuX3H2qrHr2LEjgMp7WzVd
5SCXy7l7X/kGZmooUqmUtzwsLKzGWwTqSnn/V9epw+r6WWhK7w0hRHcoASWkGrpKQMPCwlBUVKSz
uKpKSUnhklxvb2/06tVL40MxKMZvv/2GwsJCvcX0+++/Y+vWrTA1NeVGXwwJCeHuP2tICQkJGDNm
DIqLi7m57i5cuICvv/4a48aNg4ODg07WY2FhwQ04dfToUbx48QInT55EcnIyhEIhNxcfIQ1BcQDI
yckJLi4uXLliPsXs7GzuvmVtKQ+qc+PGDR1EqX8TJ04EADx58kRjgnX48GHuLJvi0uWGpDhw9fz5
c7Vk7s6dOxgzZgzKy8v1sm4/Pz/07dsXAHDkyBGVA5U1UXwe6vpZaArvDSFE9ygBJaQamhLQe/fu
8R7x7devHzcxvLKysjJcuHBB5/Ep7NixA3K5HLa2trh16xZu3Lih8bF48WIAQGFhIfbv36+xT74j
8RUVFfjzzz9rjOfJkyfcSK/ffvstjh49CktLS+Tk5OCtt96q11mXujh27BiKiopgZWWFzZs3w8TE
RG/rmj17NoDK1++XX37hpl4ZPnw4DT5EdObatWsYOXIkfv/9d97v04YNG3Dp0iUAlfeEKxs+fDgm
TZoEAFi1ahXWrFmjtj+rqKjAlStX1A6cKc5YAcCBAwcgk8l0sTl6NXv2bPj5+QEA5s+fz40CrHD7
9m188MEHAIBevXohODi4oUOEj48PgMr70leuXIni4mJkZGTgp59+wvDhwyESiWBnZ6eXdQsEAmzY
sIG7r3L06NE4evSoSp2ioiLs2bMHxcXFKuWKz0NMTIzGA7PVaQrvDSFE9ygBJaQa7dq14/1Pv7S0
FA8fPlQrNzY2VrnsTZm+LsOVy+Xc6Ltvv/22ypDzfGbNmsX90Kh6Ga7ygCOK+0kVGGOYPXu22g+T
qqRSKSZPnoy8vDyMHj0aixYtgq+vLzfH5s2bN/HRRx9pt3E6oriP19TUlPfAgaKs6ojHddGrVy90
7doVALB+/XocP34cAPDuu+/Wu29CFORyOU6dOoWJEyeiVatWCAgIwNy5czFv3jx0796d+9Hu7+/P
e5Zzw4YNGDhwIMrLy/HJJ5/Azc0NgYGBmDlzJoYMGQInJycMGDAAubm5Ku38/Py4eTD3798PFxcX
zJo1Cz/88IPGWFu3bg2hUKjxUXXEaF0TCoXYuXMnXF1d8ejRI/Ts2RODBg3CnDlz8Nprr6Ffv35I
TU2Fu7s7tm/fbpDRVKdNm8ZNVfPll1/C2dkZbdq0wYIFC2Bubo7Lly/rdUConj17YuPGjTA1NUVu
bi7eeOMNODk5YdCgQejatSscHR0xY8YMtX3kggULuL+7deuGoUOHYvr06Wr/f2jSFN4bQojuUQJK
SA1qexluYGAgb7kiEdG1U6dOISUlBYB2SY6rqyuGDRsGoPIsivK8pq1atYK9vT0AYPfu3YiKioJc
LseVK1cwefJk7N69W+ProfDFF18gMjISbdu2xa5du7jyGTNmcJegbtq0Cfv27avVdtaH4hLgnJwc
fP/999zZXYlEgrfffpu75CwmJkZtFOO6UJwFTUpKglwup8GHiM61bNkS3bp1g1AoRF5eHsLCwrB1
61Zs2bIFd+7cQYsWLfDdd9/h9OnTvPcdOzo64vz581i3bh3atGmDtLQ0nDx5Ert27cKlS5fg5OSE
iRMnqo1YLRAIsHfvXm4wMYlEgp07d1Z7CSZjrMaHvvn5+SE6OhrTpk0DUHlP+Pbt2xEeHg5TU1OE
hITg7t273MGjhtaiRQscPnyY21cVFBTA3Nwco0ePxqVLlxpkepT33nsP4eHh6N69O4RCITIzM3Hx
4kXExcWhbdu2ePPNN9VGyR02bBg2bNgAKysrMMZw7tw5/PLLL7W65aSxvzeEED1gjOUxQohG8+fP
ZwDUHl9++SVv/dTUVN76AFh0dLTO4wsKCmIAWO/evbVu87///Y+LadGiRSrLvvrqK5WY7ezsuL+/
+OILtmPHDu55UlKSStuTJ08ygUDAjIyM2OXLl9XWW1JSwrp168YAMCsrKxYfH69WR9H3smXL1JYt
X76cW85HU9vHjx8za2trbrmzszPz8fFhAoGAtWjRgn3++efcsqFDh7Lz589rHROfrKwsZmZmxrVb
unSpVu0Iqa28vDx24cIF9t///petW7eO/frrrywyMpIVFhbWqp/MzEx24cIFdvv2bVZSUlJjfblc
zh49esROnz7NoqOjtWrTWFRUVLAHDx6wM2fOsCdPnjC5XG7okDjl5eXs7t277MqVK6ysrMxgcRQU
FLCwsDAWGRnJioqKtKp//fp1duHCBZaWllbn9Tbm94YQojuUgBJSg02bNvEmk2+++abGNookq+rj
m2++0WlsaWlpzNjYmAFg27Zt07pdeXk5c3JyYgCYg4ODyg+d0tJStmDBAiYQCLi4vb292dq1axlj
jO3cuZM3AX327BlzdHRkANjy5cs1rvvhw4fMxsaGAWA+Pj5qP5T1kYAyxtj58+eZu7s7V8fExISN
GTOG+7E0evRobtmUKVO07leTSZMmMQBMKBSqJeqEEEIIIS8rAWMsD4D6qCmEEACVUxW89tprauUd
OnTgvQ8UqLwMdeXKlWrlYrEY165d03mM+pCRkYG4uDh4eHjA1dXV0OHohFQqxb1795CTk4NXX31V
7X7Z6OhoGBkZoVOnTvWe6Hzs2LE4fPgwRo4ciRMnTtSrL0IIIYSQ5oISUEJqkJeXxzsQkUAgQEFB
AaysrNSWXbt2jRvWvmqb9PR0tGrVSi+xksYhMTERHTt2hFwux6FDhxAUFGTokEgjxRhDboEU+UUy
FBXLUFAsQ2GxDOVSOYpLKxD7MB9FpTJYmRvDy90KQgEN3UCIPrW0M8XrrzrA2Ii+a4ToC82ITkgN
bG1t4ebmhuTkZJVyxhhiY2MhFovV2vTu3RtOTk7IyMhQa3P06FGaD7KZ++GHH2jwIQIAkMrkeJpe
jBRJCZ5KKv9NyyhBZnY5MnPKkJVbjgq5/gfhIYRor1cnO+xY0ZOSUEL0hBJQQrTQtWtXtQQUqLxk
ky8BFQqFGD16NHbs2KG27M8//6QEtBnLycnhRv+dPXs2jIyMDBsQaTC5BVLEPsxD/OMCJCQXIiG5
AElpxZBVUIJJSFNyMz4X565lYkR/ulqJEH2gBJQQLXTt2pV3/su7d+9qbBMUFMSbgJ4/fx75+fmw
saEr35ujLVu2oKioCEKhkA40NHOPU4twPSYbd+7n4m5CPpLTiw0dEiFER0pK1eeMJoToBt0DSogW
Dhw4gEmTJqmV+/v748qVK7xtSkpK4ODggOJi9R+l+/btw5QpU3QeJzE8uVzOzWtIZz+bl+dZpQi7
9QIRd7NxIzYHL3LLDR0SIUQPWjuY49D6PhBZmRg6FEKaJToDSogWNE2AHRMTo7GNhYUFhg8fjoMH
D6ot+/PPPykBbabqO3ouaTzkcoao+7m4fPMFrtx6gYTkQr2sR2RlDFtrE1hbGsHa0gQiS2OYmQpR
Vl6B1OclkFUwWJgbwdPVGmam9PkiRJ8c7MwwNdCFkk9C9IjOgBKihYqKCohEIpSUlKgtS05O1jhN
yS+//ILp06erlVtaWiIjI4N3BF1CiOFIZXJERGfj7LUMXIzMQHaetN59Otqbwb2tJVydLeDibAkX
Zws4tzSHYwszONqbwsyUzpQTQgh5edAZUEK0YGRkBF9fX9y8eVNt2d27dzUmoKNHj4apqSnKy1Uv
1SsuLsaxY8d4L+slhDQsuZzh2t1snAiT4Ny1DOQXyerUj0AAeLSzQlcvW/i8IoKXmzU83USwE9GZ
FEIIIUSBElBCtNS1a1eNCaimqTbs7OwwZMgQnDhxQm3Zb7/9prcE9PHjx7h//z6EQiE8PT3h7u5O
9yMSUsWDpAIcvpiOY1fS8SKn9vdzmpoI4dfRFr272KOHjz26eNrAyoL+WyWEEEKqQ/9TEqIlTfeB
3rlzp9p2EydO5E1AT548qfPRcFNTUzF79mycOXNGpdzPzw9RUVE6Ww8hTVV+oRTHwyT441wa4h8V
1Lq9d3trBPR0RH+/FujW0Q6mJo3jnsy0tDSkpKTA3d0dzs7Ohg6HEEII0YgSUEK0pCkBjY6OrrZd
UFAQ72W4ZWVlOHToEGbMmKGzGKdNm4bLly/DyMgIAwcORIcOHV6qxFMsFoMxhpCQEISEhBg6HNKI
RCfkYf+pFJz86znKyuVatzMzFaK/X0sM7O2IgB4OcGxhpscoa6esrAxr167Fd999h9zcXK7czs4O
3t7e8PHxwZYtW2Bi0nCXAOfl5WHo0KG8y0xNTWFra4sWLVqgR48eGDBgAHr06NFgsRFCCGkcaBAi
QrSUk5ODFi1aqJULhULk5+dXO6DQ2LFjcfjwYbXywYMH49y5czqJLyIiAv369QMAHD9+HIGBgTrp
tykRCAQAgGXLlmH58uWGDYYYXHFpBY5dTsevJ1PwIEn7EWwtzY3w+quOGNG/Ffp3bwkLs8Z3+Xp5
eTkCAgJw/fp1AJWffT8/P2RnZ+Pp06fcVEBFRUWwtLRssLiysrLg4OCgdf1BgwZh/fr16Ny5sx6j
IoQQ0pjQGVBCtGRvbw9XV1c8ffpUpVwulyMmJgZ9+vTR2HbKlCm8CejFixeRmpqKdu3a1Tu+uLg4
7m9/f/9699eYHDt2DElJSXBzc8OYMWM01hs5ciQAwNPTs6FCI41Qcnox9p1IwcHzz1BYrN2AQibG
AgT0dMCYAa0R0NMB5o0w6VS2dOlSXL9+HQKBAKtXr8b06dPRunVrAJUHyw4dOoT9+/dzB2V0ITk5
GZcuXUJ6ejoWLFgAkUhUbf3x48djyZIlAIDS0lIUFRVBIpEgKioKu3btQl5eHi5cuIDXXnsNR44c
QUBAgM5iravabmNj1Vy2gxDSPNEZUEJq4Y033sDRo0fVyjdt2oR58+ZpbFdSUoJWrVqhoED9nrNV
q1ZxP9Lq48svv8SKFStgZGQEmaxuo3g2Vm3btsWzZ88QEhKCrVu3Gjoc0ggxxhAelYVfjqfgyq0X
Wrfr3MEG44a0wYj+zk1qtFoXFxekpqZixowZ2L17d4Os8+eff8a7774LoPKe0zZt2qjVUT4DOm/e
PGzatIm3r6r3qzs6OuLRo0cGT5S02camoLlsByGkeWocoycQ0kT4+fnxltd0H6iFhQXGjx/Pu0xX
Px6l0sr5CnV5xqM2ysvLUVFRUae2xcXFXPwNqby8XCfrrcu2FxUVqd0XTGqvuLQCv55Mwej3r+Ld
r6O0Sj5trY0xfYwrDq/viwNrxJg8wqVJJZ/Z2dlITU0FUHlwpr5KS0sb/PvXrl07nD59GlOmTAEA
ZGZm4rvvvtOqLd+BvJrI5XLk5eXVul1tlZWVobS0VO/r0ec+s7BQ+8vVNWmo14EQ0jRRAkpILXTr
1o23vKYEFADeeecd3vL79+/j6tWrdY5p586dEIvFXCIrk8kgFou5x++//87VDQ0NhVgsxltvvaWx
v6CgIIjFYqxYsUJt2bZt27h+AaCiogLr16/HiBEjYGdnB2trawwbNgyJiYk1xr1v3z6MHDkS7u7u
sLa2hoWFBVxdXREQEIBTp04BAFasWAGxWIzMzEwAwKFDh1S2LT4+XqVPRfnPP/+scb1JSUl45513
0KVLF1hbW8PKygpdu3bFzJkzkZKSorGdLrY9ISEBb7/9NpycnGBtbQ1zc3M4Ozujd+/eePDgQY2v
GflHemYpvt+dgEGzr2DFlvt4klZcYxs/b1us+tAXl3YE4PPZHeHpZt0AkeqeSCSCsXHlHTR79+6F
XK79oEoKUqkUoaGh6NmzJ2xsbCASidC7d2/s2rVLra5EIoFYLMbKlSu5slGjRnHfh8WLF9d5W1at
WgUzs8qBndauXYsXL/gPIERGRmLMmDFwdnaGjY0N2rVrhylTpuD58+ca+5bJZNi2bRu6dOkCCwsL
2NnZwdLSEl5eXmpXndR2G6vua3bv3o1Ro0bB3t4e8+fP5+o9ffqUq1t1dHKFY8eOcXUkEonG7dFm
n1mX94oxhs2bN2PIkCFwcnKCSCRCq1atMHToUGzbtk1jPLV5HQghRAVjLI8RQrSSmJjIAKg9rKys
WEVFRbVt5XI5e+WVV3jbBwcH1zmmb775hrdPxWPDhg1c3SlTpjAAzMvLS2N/bm5uGmNavnw5169U
KmWTJk3iXaejoyPLzs7m7T89PZ0FBgaq1HdwcGAODg7c840bNzLGGAsODq522yIjI1X6VpQvW7aM
d927d+9mIpGIq+fq6spcXFy457a2tmzfvn28beu77QkJCczGxoar5+Liwjw9PZm5uTkDwCIiIjS+
J+Qfd+7nsMX/jmad3zzLfILO1Pjo/tY59uWPcez+k3xDh65Tw4cP5z5LkydPZkVFRVq3TUtLY337
9mUAmLGxMfPx8WFOTk5cf4sXL1apn5SUVO33MDAwkKv74sULrnzevHlaxTNr1iyuzenTp9WWb968
mZmamnL7Cl9fX2ZiYsIAsHbt2rH4+Hjeft977z2uXzMzM9a5c2fWqlUrBoANHz68ztvImOq+ZvPm
zSp1Z86cydV78OABV65p37Jz506uTlJSktry2uwza7sdEolE5bNkYWHBOnXqxO2XALBRo0axzMxM
3ti1fR0IIUQZJaCE1IJcLldJYJQfDx48qLH9ihUreNtaWFhoTNhqUlhYyCQSCVu4cCEDwIyMjJhE
IuEexcXFXF1dJqDjx49nANjYsWPZr7/+yqKjo9mcOXO45V999RVv/6NHj+bqBAQEsISEBG7Zs2fP
2KlTp1hsbCxjjLG8vDwmkUi4H43Tpk1T2TapVKrSd3UJaGRkJBMIBAwAGzx4MHv27Bm3LDU1lb3+
+uvc63fnzh2db/uECRO4H46PHz/mysvLy1l4eDjLyMjgfb0IY1JZBTsRls4mfXJdq6TTJ+gMG/pu
GNt5KInlFZQbOny9iI2NVTmg4e7uzo4fP65V26FDhzIATCwWs7S0NK58+/btXH83b97kyisqKphE
ImFr1qzhlt+5c4f7Hubk5HB165KArlu3jmvz448/qiz766+/GAAmFArZ1q1buXKJRMJeffVVBoCN
GTOG9/VR9PnFF1+wkpISbllqaioLDw9XqV+bbWTsn33N66+/zoyNjZm/vz/btGkTu3//Prt//z5X
TxcJaG32mbXdDkXfFhYWbM+ePUwmkzHGGJNKpWzXrl1cIjp+/Hje2LV9HQghRBkloITUUv/+/XmT
yP3799fYNi0tjRkZGfG2X7t2bb3iWrJkCXdGQxNdJqAA2OrVq1WWy+Vy1rZtWwaAvfnmm2rtDx06
xLXt27cvKy/XLjlo06YNA8BCQkKqracpAZXL5axPnz7cD/WqiStjlYmg4mxoQECA2vL6brvi7Pfc
uXO12GLCGGO5BeXs5z+esIGzL2udeM4MvckuXM9gFRVyQ4evdzdv3lQ5cwmAjRgxgj169Ehjm5Mn
T3L7Cb6DZoqzYRMmTFBbtnXrVm49yomrsrokoEeOHOHaLFq0SGWZ4ns7ffp0tXYREREMABMIBCwm
JkZl2X//+1+uz/T0dK3iYEy7bWSMqbzmQUFBGq+AqW8CWtd9pjbbofgsAGDbtm3jraN8VvPChQtq
y7V9HQghRBndA0pILWkaiCgqKqrGtm3atMHo0aN5l23cuLFO93IZyqefforPPvtMpUwgEKB9+/YA
wHtvlvK9matWrYKJScMM/HL79m1cu3YNAPD+++9z988pMzExwfvvvw8AuHLlCmJjYzX2V5dtt7W1
BVA5R2t195oS4FFKIb7adA8DZ13B2v8+hORFWbX1TU2EGD+0LQ6v74sdX/fEwN6OEAoNMxhXQ+rZ
syfi4uIwdepUruzUqVPo0qUL1q1bx80Fqmzjxo0AgO7du8PLy0tt+aBBgwAAYWFheopanbOzM/d3
cfE/9/LevHmT+95OnjxZrV2fPn1gYWEBxhj++usvlWWK7xsAbN68Wdchc/z8/LB3714Ihfr5OaXP
feaPP/4IAHBwcMC0adN468yYMYOb/1pRn4++XwdCSPNC84ASUkvdu3fnLdcmAQWABQsW8M4J+vjx
Yxw5cgRjx46tV3wNZfXq1bzliknv+X78KgbasbGxwYABA/QXnIb1AsCrr76qsV6vXr1U2nTu3Jm3
Xl22ffbs2Xj//feRmpqKTp064bPPPsPcuXPh6Oio1TY0d3I5w5VbL/DL8ae4eidbqzYO9qaYGuiC
ScPbwd7GVM8RNk4ODg7Yu3cv3nnnHSxatAj37t1DcXExFi9ejLi4OGzdulUlKbh//z6AygMuO3fu
VOsvISEBAJCRkYGysjJugCB9UozoC6jO4auIFQBiY2N5D+xYWlqipKREbX7moUOHcvM2f/XVV7h0
6RKWLl2KIUOG6DT2oKAgWFlZ6bRPZfrcZyr67tKli8b32cLCAr6+vggLC6t2oDR9vw6EkOaFElBC
aqm+CeiQIUPg7e2t8uNK4d///neTSUBrO91LeXk5njx5AgB45ZXqKWEtAAAgAElEQVRX9BGSRoof
1UD101YoL1NuU1VdprqZP38+Hj16hHXr1qGwsBChoaFYuXIl5s+fj88//xwtW7asdZ/NQV6hFAfP
P8O+EylIfV6iVRufV0SYMcYVgf7OMDGmMy4AMGzYMERHR2P16tX4+uuvIZPJsH37dnTs2BGffPIJ
gMrvYFJSEgDg6tWr1Y6+zRhDamoqPDw89B67Yr8AQOWsrPJ3sOoVB1VVvarAwsICx44dQ2BgIFJT
U3H58mVcvnwZPXv2xIoVKzBy5EgdRa8/+txnymQyru+apvJRLE9MTIRcLqeznISQeqMElJBa6ty5
M0xMTNTmYMvIyMCzZ89qnPBbIBBg0aJFmDdvntqyq1ev4vLlyw16drChKJ8VbIizKsrKyv65hNPU
VPOZMuVLc3U9R6dAIMDatWsxYcIELF++HGfPnkVJSQm+//57/P777zh27Bi6dOmi03U2ZjEP87D/
VCqOh0lQVl7zpecCATCotyNmvOGGV33tGyDCpsfExAShoaHw9fXl5h1evXo1Pv74YwiFQpXvoL+/
P3e5rSbKl7Hq071797i/lRNQ5XiXLl0KIyMjjX3wXa3QpUsX3Lt3D+vWrcOGDRuQmZmJW7duITAw
EB999BHWrl2roy3QD33uM6VSKTd3cXX7ROCf/aJMJqMElBCiE5SAElJLpqam6NSpE+/cn1FRUTUm
oEDlfTWhoaHc/JbKVqxY0SwTUDMzM7Rv3x6JiYlazROqS8qX9aWlpcHFxYW3XlpaGm8bXerXrx/O
nDmDuLg4fPjhhzh//jyePn2KqVOnIjo6uln/uCsqkeH4FQn2n0rFvScFWrWxsjDC+CFtMW20K9q1
stBzhM3DuHHj4OXlhYSEBGRnZ+Pp06dwd3eHmZkZPDw8kJCQADs7OyxfvtzQoSIjIwP79u0DALi4
uKicce3UqRP395tvvokePXrUun9ra2uEhobi008/xZYtW7B06VIUFBRg3bp16Nu3b7VzIhuaPveZ
FhYWaNeuHVJSUlT2e3wUy9u3b897/zwhhNRW8/2lQ4ge1fcyXAsLC3zwwQe8y86fP49Lly7VNTSt
VD17qxAWFob09HS9rVfxgzIrK0vr10qZ4oh9bXXs2JH7u7r7mDSdidEHX19fnDt3jhtAJjY2Fg8f
PtTrOg2BMYabcTn4fH0s/N+5jOWb7mmVfLq1scT/zemISzsCsGR2R0o+a2nw4MHc38pnDhXfwfDw
cJUrA2qrrt/Fqv79739zAw+tXbtWZZAd5QT0woUL9VqPmZkZPvjgA0RGRnIHef78889q2+hqGxX4
9rsVFRXVxlHffaZiHXwU+8WEhATe+9YBQC6Xc5dC63ufSAh5eVACSkgd1DcBBSpHY9V0iduSJUs0
/iCoD8X6nj9/rvaj5M6dOxgzZozOLz1V9t5773F/13RPlzKRSAQAuHHjRp3W26tXL26E2i1btmis
99NPPwEAOnTogK5du9ZpXbWlfC9afRKCxiYprQj/2ZeIYXP/wowvbuLwxXSUanGprX+Pltgc2h0n
fuyHaaNdYWVBZ1zqQnEwxcnJSeWMv+LS/+zsbKxatapWfSq+h0Ddv4sKcrkcq1evxvr16wFUDho0
YcIElTpdu3ZFv379AFReSvzixYt6rRMAvL29uX0B3/dNl9sIqF7G/OzZM5VljDHMnj0bR48e1di+
vvtMQPN2TJw4EUDlPbhnz57lrXP48GHuDKjism5CCKkvSkAJqQNNCejt27e17sPOzg4fffQR77Lr
169zl6Xpko+PD4DKqQ5WrlyJ4uJiZGRk4KeffsLw4cMhEolgZ2en8/UqjBgxAm+88QYA4OzZsxg3
bhzy8vJU6ty9e1ftx5DiSH1MTAxiYmJqvV4zMzOsWbMGABAREYHQ0FCVBF8mk+HDDz/E3bt3AQDr
1q2r8b6o2mCMYeHChVz/CuXl5dzUBiKRCL6+vjpbpyGkSIrx8x9PMP6jawhccBWbDzxBWkZpje1s
rIzxzhuuOLmpP7Z82QMBPR3qNNDTy+LatWsYOXIkfv/9d94kasOGDdxVFDNmzFBZNnz4cEyaNAlA
5bQea9asUTsYVVFRgStXrqCoqEilXPlKggMHDkAmk9Uq7uzsbFy9ehU7duzA4MGD8fnnn0MqlaJT
p07YtGmTWn2BQIDNmzfD2NgYWVlZGD16tMpVCgrp6em4deuWStlvv/2GXbt2qUzrAgBHjhzBo0eP
AFRO41JVfbexqlatWsHevvKe5d27dyMqKgpyuRxXrlzB5MmTsXv37mrv/a7vPrO67Zg9ezY3rdj8
+fPVBsa7ffs2d6VOr169EBwcrOVWE0JIDRhjeQ0//SghTVt+fj4TCAQqk3ArHllZWbXqx9HRkbef
1q1bs9zcXK37WrJkCTfBvCZZWVmsZcuW3DpEIhEzMjJiAJirqyt79OgRc3NzYwBYcHCwWvvly5dz
bTUZNmwYN2k6n7S0NNa7d2+uH2NjY9atWzfm7+/P2rVrxwCwhQsXqrQ5ffo0V18gELAhQ4awadOm
qU2wrqizbNky3nUvXLiQq9OhQwc2depUNmHCBObq6sr1/dFHH/G2rc+2y+Vyrq23tzcbN24cmzx5
MrO1teXK9+7dq7Hfxiz+UT7bsC+Rjf3wKvMJOlOrx6RPrrM/z6WxklKZoTejSQkPD+c+N7a2tszf
35+9++67bO7cuczPz49b5u/vz6RSqVr7jIwMNnDgQK5e27Zt2ciRI1lwcDAbPHgwa9GiBQPAUlNT
VdrJ5XLWr18/rp2zszObOXMmW7duHVfnxYsXKvsxgUDAParu40xMTFhoaCgrKyurdnt37tzJrKys
GABmamrKXn31VTZt2jQ2fvx41q1bNyYQCNicOXNU2nz55ZcMALOxsWEBAQFs1qxZrEePHty6/fz8
WFFRkdq6tNlGxmre1yj76quvVLbbzs6O+/uLL75gO3bs4J4nJSWpta/LPlPb7YiKiuL2f5aWlmzg
wIFs9uzZrH///szMzIwBYO7u7iw6Opp322rzOhBCiAIloITUkZeXF2/iePbs2Vr1s3HjRt5+ALDZ
s2dr3Y82CShjjP3111+sffv23DqsrKzY6NGj2ePHjxljTO8JKGOMlZeXs3/961/M3t5eZXttbGxY
v3792J49e9TabNiwgfsRqngkJCSo1NHmx9CRI0eYh4eH2o9kHx8fdubMGY3t6rvts2bNYt27d2em
pqYq6+7YsSM7ePCgxj4bm4IiKTtzVcKWbohlAcGXa510iqdeYCu23GP3HucbelOarPv377Nu3box
oVDIu99o0aIF++6771hxcbHGPuRyOVu3bh1r06aNSlsjIyPm7e3NJk6cyHsA7MmTJywgIEClzdSp
U7nlVRNQ5Ye1tTV79dVX2YwZM9jq1atZbGys1tv88OFDNmTIEC4pUt7WAQMGsN27d6vUP3HiBAsM
DGTOzs4q9Y2Njdm8efPY8+fPNa6rpm1krHaJV2lpKVuwYIFKEu7t7c3Wrl3LGKtMsKtLQBmr2z5T
m+1gjLGcnBw2bdo0ZmlpqVJXJBKxkJAQlp+v+btKCSghpC4EjLE8ADYghNTKlClT8Ntvv6mVf/vt
t/j000+17qeiogLdu3fXeGnpgQMHdD5So1Qqxf3795GbmwuxWKzTy01r69GjR3jy5Am8vLzg6upa
bd3CwkLEx8ejqKgIHTt21GrEYU3y8vIQHR0Nc3Nz+Pr6Ntgk6lKpFHFxccjKykKHDh3g4uLSqEe+
LSqR4fa9XETG5uBGTDbiHhWgQs5q1YdQCPTt1hJjB7bG0L6tYGrSeLe3KcnPz8etW7eQmpqKrKws
ODs7w8PDA506darV5/nFixeIiYmBnZ0dfHx8YG5uXm19xhiePHmCxMREODs7w8vLq8Y2uiKTyfDg
wQNIJBJ4e3vXOIclAEgkEsTGxqJFixbw9PRUuT9SE31sY0ZGBuLi4uDh4VHjvq46tdln1mY75HI5
EhMTkZycDE9PT7i5udGl8IQQvaAElJA6WrNmDTfBu7KJEydi//79terr6tWreO2113gHHrK2tsal
S5fQs2fPOsdKiDbKpXI8SilCXGIeoh/m425CHh6lFEJe89hBvHw9bDB6gDMC/Z3haN+wc78SQggh
pHGiBJSQOrpw4YLKVAcKHTp0qNN0GosWLeJGhKzK3t4ev/76K4YPH17rfgmpKjuvHCmSYjyVlCBF
UoxHKUVISCpE0rPiWp/drMrXwwbD+jlhRP9WcHG21FHEhBBCCGkuKAElpI5yc3O50Q2VCQQC5OTk
aJxiRZPS0lL07t272lFezc3NYWFhAWdn5wa7ZJQ0XhVGtpBaD4S1yB4+nTqhZYsWf9+kWnnpnayC
oVwqR0GRDHmFUuQVypBfKIVUVr8kU5mREdDpFRu86msPcZcWcGxhBqEAEAgFEAgAoUAAoQCA4m/l
cmHlv1B6Lvi7PldPWPlcoFRfKKTLAgkhhJCmihJQQurBw8MDjx8/Viu/ePEiXn/99Vr39/DhQ4jF
YuTk5OggOtKcidoOQtuen72092gJtEhaoSgXCCAQqia9AsE/7QRCAQRQbqfUN/5JkCvXWdlvZXug
8uk//Sli+7va388r+4fgn9j/2Q7V90/x7EVuGTKzyyFnDOZmRnB1toCJMd07S5o+gQBwbW2JeW+9
gpZ2hht/gBBiODTDNyH10LNnT94E9ObNm3VKQD09PXHw4EGMHDkSJSUlOoiQNFdt/Ba9tMknUHmW
t4IxVMiByoE4mzMp0jNrnk+VkKYjC9fvZuOPdX3owAohLyH61hNSD5oGBrp582ad+xwwYACOHj2q
1UiN5OUlENLxQ0JI05WYUoT4R/mGDoMQYgCUgBJSD7169eItr08CCgCDBw9GREQEfH1969UPab6K
s2INHQIhhNRLC1u6BJeQlxHdA0pIPeTm5qJFixa806dkZ2fzDlJUGzKZDJ988gk2btwImUxWr75I
89NO/DWsHLsDEMDIyAhGRpVnRRkAJmeo54C2GlmYCWFjbQJba2OYmhhBzhg38BFjgJxVrr/y77/j
UPytXC6v/JfJAYbK5+zv+ly9v7eDKddv7lfcEvISWDjFA+9NesXQYRBCDIASUELqycvLi3falbNn
z2LIkCE6WYdUKkVERARSU1Ph6OhY78SWNB8CgQCurq5wdHTkXV5UIkNmdhnSX5TieVYZ0jNLkfSs
CI9Si5CUVozi0op6rd+7vTVG9HfGqABntHWyqFdftVGZmNactCqSXSavkvSyf9ox5SRXJVmuTIwV
zxXJNbj2fyf7iudQWoZ/RiMGFMsqY1dOoKsevFI8k8rkeJJaBKmMwcHeFK1amuvx1SSk4QgAtHO2
gHsbGsmdkJcVJaCE1NPUqVPx66+/qpWvWrUKS5YsMUBEhGiHMYb0F6WIf1SA2MR8xCbmIfZhPvKL
6na2vZevPYIGtsaI/q1gZUH3qBJCCCFEHSWghNTT2rVr8fHHH6uVjxs3Dn/88YcBIiKk7hhjeJBU
iBtxOYiMycbNuBzkFdYuIbU0N8JIf2e8NbQtunrVbj5cQgghhDRvlIASUk9XrlzBgAED1MpdXV2R
nJxsgIgI0Z2KCobohDxcvpmJK7de4EFSYa3ad/IQYWqgC0b5O8PM1EhPURJCCCGkqaAElJB6Kiws
hK2tLeRyudoyiUSCVq1aGSAqQvQj7XkJTl19jtPhzxGbqP0UCrYiE0we3g5TR7nA0d5MjxESQggh
pDGjBJQQHejcuTPi4uLUyo8cOYIxY8YYICJC9C/teQmOh0lw5FI6HqcWadXGxFiAUQHOmPWmOzq4
WOs5QkIIIYQ0NjQPKCE60Lt3b97yyMjIBo6EkIbTtpUF3p3QHsc29sOBNb0xeUQ7WFtWP/iQVMZw
6EI63lgYgfdX3kH0g9wGipYQQgghjQGdASVEBzZv3oz33ntPrXzYsGE4ffq0ASIixDBKyipwOvw5
fjuZgrsPtbtEt3dne8yb+Ar6dG2h5+iap5KSEiQkJMDIyAienp4wM2uclzhnZWUhISEBFhYWaNmy
JZycnBptrIQQQvSHElBCdOD27dvo2bOnWrm9vT2ysrIgEAgMEBUhhhWbmIe9x1NwIkwCqYzVWN/P
2xbzJ76C13o4NEB0TV9UVBQWLVqEsLAwbj5RIyMjtG/fHt7e3pgzZw6CgoIMFp9MJsP333+PU6dO
IT4+HhkZGSrLjYyM4OPjgx49emDmzJl4/fXXDRMoUZOXl4ehQ4dqVfeTTz7BW2+9peeIGgexWAzG
GEJCQhASEmLocAhpsmiiNkJ0oEuXLjA3N0dpaalKeU5ODhITE+Hp6WmgyAgxnM4dbLHqQ1ssnuGJ
X0+k4NdTqcgrkGqsf+d+Ht79OgpdPW0wf7IHAnpSIqrJwYMHMWHCBG7wM0dHR7i6uuLBgwdITExE
YmIifHx8DJaARkdHIzg4GHfu3OHK7Ozs4OPjg8zMTCQnJ0MqlSI2NhaxsbFwcXGhBLQRkclkuHHj
hlZ1nz9/rudoGg/FbTWBgYEGjoSQpo0SUEJ0wMTEBN27d0dERITassjISEpAyUvN0d4MH7zdASET
2uOPs2nYdTgZzzJLNda/+zAf81ZUJqILpnjAn86IqkhLS8OsWbMgl8vRu3dvfPvtt/D394eRUeU0
N5GRkThw4ADatGmj0/UeO3YMSUlJcHNzq3ZwtYMHD2LSpEmQSqUQCARYsmQJ3n33Xbi7u3N15HI5
YmJicPz4cZw4cYKLnTQ+48ePx5IlSzQud3V1bcBo9CM5ORmXLl1Ceno6FixYAJFIxFtv5MiRAED/
pxNST3QJLiE6smjRIqxfv16tfOHChfjPf/5jgIgIaZxkFXIcvyLBz38kaTV6breOtlg41QP9urVs
gOgav+3bt2POnDkAgMePH6N9+/YNst62bdvi2bNnCAkJwdatW3nrFBUVwdvbG6mpqbCxscG+ffsw
atSoGvuWy+UQCmlcxMYiKysLDg6VB37mzZuHTZs2GTgi/fr555/x7rvvAqg8wKPrgzeEEFW0tydE
R8RiMW/5tWvXGjgSQho3YyMhgga2wZH/9MW6T7uio3v107FEP8jDnGW3Mf3/biAyJruBomy8oqOj
AVReeeHk5FTv/goKCurdh8KqVauQmpoKAFiyZIlWyScArZLP8vJySKWaL+HWVllZWbXL5XI5iouL
69w/Y6zGdfCRyWT1fi/y8/O5+4E10eX73dBKSkrq1K64uFgnn53a0tVntry8HBUVFTqIiJDGgRJQ
QnREUwIaHR1dpx8jhDR3QqEAw/u1wp/r+mDD593g8wr/ZW8Kt+JzERx6CzNDb+L2vZd3+pYWLSpH
C5ZKpfjtt9/q1EdkZCTGjBkDZ2dn2NjYoF27dpgyZQrv/XwrVqyAWCxGZmYmAODQoUMQi8XcIz4+
HgCQm5uLNWvWAABatmyJhQsX1ik2ZUlJSXjnnXfQpUsXWFtbw8rKCl27dsXMmTORkpKisd22bdu4
+IDKxGXlypUICAiAtbU1fHx8sGTJEuTn/zNS86lTpzBlyhQ4OjrC2toaHTt2xOHDhzWuQ9H/zz//
DKDy0uPJkyfDyckJIpEIPXr0wOrVqzUmhNnZ2di1axeCgoLQtm1bmJmZwcbGBi1btsT48eORkJCg
1bYlJSVh0aJF8PLygq2tLe/rUpv3uz5CQ0MhFourHZQoKCgIYrEYK1as4F1e9XW9c+cOFixYAE9P
T1haWsLFxQU//PBDjYn2vn37MHLkSLi7u8Pa2hoWFhZwdXVFQEAATp06BQCQSCQQi8VYuXIl127U
qFFcDIsXL642Nj66+sxWVFRg/fr1GDFiBOzs7GBtbY1hw4YhMTGx2u0mpElgjOUxQohOODo6MgBq
j6tXrxo6NEKahPPXn7NxH0Uwn6AzNT7mLL/Foh/kGjrkBhcREcHtW+zt7dm5c+dq1X7z5s3M1NSU
AWAODg7M19eXmZiYMACsXbt2LD4+XqV+cHAw735N8YiMjGSMMXb16lWubNGiRfXezt27dzORSMT1
6erqylxcXLjntra2bN++fbxtly9fztUrLS1lI0aM4I09JCSEMcbYH3/8wYyMjHjrhIWF8a5DsXzZ
smVs3759TCAQ8LZ/4403WFlZWbUxmpubMx8fH2ZmZsaVOTo6sqysrGrb5eTkMG9vb5X1JScnq9Sv
7fvNGGMvXrzg+ps3b16N75XClClTGADm5eWlsY6bmxsDwIKDg3mXK7+u4eHhKp8B5cc333zD2z49
PZ0FBgaq1HVwcGAODg7c840bNzLGGEtKSqr2sx0YGKgxNj66+sxKpVI2adIk3pgcHR1Zdna2xteX
kKaAzoASokN9+vThLafLcAnRzqDeTvhjbeUZUe/21V+aGx6VhcmfRmLeiijEJWo352hz0KdPH8ya
NQtA5UjbQ4cOxdy5c5GdXfPlyeHh4Zg3bx5kMhm2bt2KzMxMxMbGIiUlBa+++ipSU1Px2WefqbRZ
v349JBIJWrVqBQCYNm0aJBIJ9+jevTsA4OHDh1ybDh061Gsbb9y4geDgYBQUFGDw4MF49uz/2bvz
sKqq/X/g78NhElAmGQRBBUVQRgUVck7FTG1ySDNLb6Z+UatbmVld7TbXvZlZXq201LypZY5Zjjmn
oiiDgoqgMk8CyszhrN8f/NiX4znMZ0B4v55nP2z22nvtzz5no+dz1l5rpePWrVu4ffs2UlNTMXz4
cBQWFuLZZ5+VHkmuy9SpU3HkyBG8/vrruHTpEmJiYqQpRr799lu88847mDZtGkJCQrBx40akp6dj
9erV0vRZn376ab31nzhxAs8//zxGjhyJb7/9FvHx8di3b5/0uuzevRvr1q1TO87Kygpz585FVFQU
iouLceXKFeTk5Egtgzk5OQ32vZwyZQoyMzOxaNEiHDt2DBcvXlR5LLs573drcebMGYSHh8PGxgZv
v/02Ll68iE2bNkmDWX344YcaH8mdM2cO9u3bBwAYOnQorl27hpycHOTk5CA9PR1//PGHNOKym5sb
MjMzpZZ7oLrFtebe3rx5c6Pj1eY9+/TTT2Pr1q14/PHH8dNPPyE6Olrq952Tk4NVq1Y1Oi6iVkmw
BZRIa95//32N31hOnjzZ0KERPXCUSqU4cDpTTFx0ulEtovPfjxKXE9vHf2lVVVXixRdfVPl3xs7O
Tnz99ddCqVTWedygQYMEAPHss8+qldW0rMpkMhEbG6tW7uLiotJqeL+33npLimXv3r3NvjalUinF
2b17d1FZWam2T0VFhdSyNHToULXy2q1JZmZmavHs379fraWrrKxMZR9/f38BQPTq1UtjnLWPX7p0
qdrrfvfuXeHo6CgACDc3N1FRUdGo6y8uLhaWlpYCgHjmmWcavLZTp07VWVdz3+/aLaDBwcFi+fLl
Gpfs7GyV47TZAgpAeHh4iPT0dJXytWvXSuXR0dEqZTt37pTKQkNDG/2af/PNN9JxaWlpde5Xs8/9
LaDavmcBiI8//ljtHK6urgKAeOKJJxp1XUStFVtAibQoNDRU43ZN07MQUf1kMhlGhzph5xeD8K9X
/dDD1aLe/Y9G5mLSq2fxfx+0/RZRIyMjrF27Fr/++iucnZ0BVPcpjIiIwNChQ1VaI2ucP39eehrj
6aefVisfNGgQOnToACEETp482eSYbt68Ka137dq1ycfXiIqKkuJcsGABjI3VZ4wzMTHBggULAADH
jx9HXFxcnfX9+uuvaoMh1e6zP2rUKOzYsQNmZmYq+wwYMAAAGmxZjoiIwAcffCC1mNbo2LEjnnvu
OQBASkoKEhIS6q2nhoWFhdR6mpGRUe++69evR1hYmMYybb3f58+fx/LlyzUuNf2CdaFLly44ePAg
unTporLd09NTWr+/D2vtvpkfffQRTExMdBZfbdq+ZxcvXqzWMi2TyaQRr9vT3KvUNnEeUCItGjBg
AORyudpodampqUhNTW3RhzKi9komk2HcEGeMfcgJe49nYvWWG7idWfdomEcjc3E0MhdD+3fG/Ck9
ENDbRo/R6tcTTzyBESNGYNmyZVi9ejUUCgVOnjyJ0NBQ7N+/H/3795f2rZ0AxcXFafwQa2FhgdLS
Uty+fbvJsdQ8ogsA2dnZTT6+xtWrV6X1kJCQOvcLDg5WOcbX11fjfuPGjVPbVjtBePjhh2Fqaqq2
T2OTl5rpSjTp16+ftH7z5k34+fnVW1dJSQmysrJQVlY9T65oYKCd6dOn11mmrfd74MCBeOKJJzSW
aWMU5rrMmTMHHh4eatstLP73RdT9r0/NvdOpUycMGzZMZ7HdT9v37Mcff6xxe821N3RfELV2TECJ
tMjKygq+vr4a+3ecPn0aU6ZMMUBURG2DkZEME4d3wbghTth9NANrtiUjNavuRPT4hVwcv5CLQf52
eHFSDwzyt9NjtPpjY2ODlStXYtasWZg9ezYuXryIvLw8jBs3Djdu3ICVVXVf2tqjqjbU76++0Trr
Urvf540bN6R+lk1VO05XV9c696tdVteIsYZW0zoNQGOSl5ubi40bN+LHH3/EjRs3VEblbSltvd9B
QUEG6Sd6f4tyQyoqKpCcnAwAGhNXXdL2PdvUayd60DABJdKy0NBQJqBEOmQsN8KTD7ti4vAu2Hk4
HWt+SUZ6dlmd+5+JuYMzMXfg16sT5jzVAw8PdGiTH/ACAwNx4sQJjBo1CmfOnEF2djbWrVuHl156
CYBqq8nbb78NuVxeZ111tczUp1evXtK6pkeAG6v2tFWaWiZr1G7FrKioaPb5dKn20zA10+fU+PPP
PzF+/HiUlJTAwsICAwcOxODBgxEYGIh33nlHmt6muXT9frc2ta/3/sepda0t3bNE+sAElEjLwsLC
sGbNGrXtp06dMkA0RG2XsdwIk8Z0xWMjXbDzSDrWNpCIxl6/i0UfR6O7iwVmTnTH4yNcYG5W94fy
B5GlpSUWLVok9Ue7ePGiVNanTx9p/YknnlB5PFQbevfuLaaqwMEAACAASURBVK3/97//xT//+U9Y
Wlo2uZ7aiWxaWhrc3Nw07peWlqbxmNYkMzNTWq/dKnft2jVMmDABJSUlmDVrFtauXavyyO/KlStb
fG5dv9+tjZmZGXr06IHExES9z5XZlu5ZIn3gIEREWlbXgBCXLl1CSUmJnqMhavtMjI0weUxX/L76
Ifwzog+6OnWod/+b6SX455oEjHjhBL74MREZOXUnrQ+ihx9+WFqv3epVOyE5cuRIs+u/v497DTc3
Nzz11FMAoDa1RVPUTmRr9627X3x8vLTu5eXVrHPpWu1+mLUT0L1796K4uBiWlpZYs2aNTgbL0db7
3RyVlZUat584caLBgZVaouaa8/LyVL58aYq67u/6tKV7lkgfmIASaZmnp6fKYBw1FAoFzp07Z4CI
iNoHE2MjTBrtin2rw/DRS30bHDW38F4lvvklGaPnnsCij6NxOjqvTQzuUftDbu1BT/z9/aUvyD7+
+GPk5uY2qd6OHTsCqJ7vsC6fffaZ9PjjZ599hj/++KNRdefl5anEXDPa59q1a+s8ZvXq1QCq+576
+/s36jy6UFhYqHG7UqnExo0bAQATJ06Eg4ODVFaTHJmammpMeGq21QxG1Bwtfb+bw9raGkD1KK33
X9elS5cwYcIEnT56On/+fGm9Kf1Wa+5toP77uy4P2j1LZGhMQIl0oK5W0OZMbUBETWMsN8JjI1yw
Z1UYvljsj76enerdX6kEDp3JxgvLojBm7kms+TkJmbmtt1X0+eefx9KlSzX2s0xPT5emerC1tcX4
8eOlMplMhjVr1sDY2Bh5eXkYP368SrJaIyMjAxcuXFDbXtPKExsbi9jYWI2x9ejRA6+99hoAoLi4
GOPGjcPixYs1Dq5TXFyMb775BoGBgfjkk0+k7WZmZlLr6V9//YV33nlH5YsBhUKBl156CTExMQCA
FStW1NvvTte++OILvPjiiygqKpK2KZVKLFq0SBp4aNmyZSrH1CQr+fn5+Pe//y21GGZmZuKZZ56R
umzExsZCqVQ2K66Wvt/N4ePjA6B6NN8PP/wQJSUlyM7OxurVqxEeHo6OHTvCxkZ3o1KPHTsWEydO
BAAcPHgQTz75pNoXBDExMTh48KDKttotmNu2bYNCoWjSeR+0e5bI4IQQ7WPWbiI9+uyzz1QmlK5Z
wsPDDR0aUbt06lKumP2P88LnsQONWvo8fkDMeue82HE4TRSVqE8qb0ijR4+W/k3x9vYWTz75pHj5
5ZfFU089JSwtLQUAYWRkJPbt26fx+O+//17az9TUVISEhIgZM2aIp556SgQEBAiZTCZeeOEFteP2
798vnVcmk4lRo0aJGTNmiLS0NJX9lEql+PLLL4WFhYXK/p6enuLJJ58UjzzyiPD09BRyuVwqf/31
19XOt3DhQqm8Z8+eYvr06WLSpEnC3d1dqvOVV17ReI3Lly+XjtWkqKhIKv/oo4807jN//nwBQNjb
22ssrzk+ICBAmJiYCCsrKzFmzBgxY8YM4enpKcX43nvvqR2blJQkrKyspDqcnZ2Fj4+PkMlkws7O
Trz55ptS2ejRo8Xhw4cbfW33a877nZubK51j3rx5jTqPEELk5eUJe3t76diOHTtK77O7u7u4ceOG
6NatmwAgnn/++Xpf12XLlmksP336tLTP/v371crT0tLEgAEDpH2MjY1FQECAGDJkiOjatasAIBYu
XKhyjFKpFGFhYSrvx6xZs8SKFSuaFJsu71khhBgzZowAIEJDQ+vch+hBwASUSAf++usvjQlop06d
RFVVlaHDI2q3ribfFW+ujBX+Tx1sdDLq/9RBEfHBRbH7aHqrSEbfeOMNlQ/59y9jxowR58+fr7eO
69evi1GjRgkzMzOVY+3s7MSwYcPEhg0bNB63atUqKZmpWa5du6Zx38TERDFmzBhhbm5eZ6whISHi
q6++Enl5eRrr2L17t5TM1U5mfXx8xIEDB+q8Pn0moMuWLROnTp0SXl5eKnG6urqKn376qc4YDx8+
LLp37y7tb2JiIiZMmCAl9OPHj5fKpk2b1uhr06Sp73dzE1AhhDh58qTo0aOHdLylpaUYP368SEpK
EkIInSegQghRUVEhXnvtNWFra6v2f3BYWJjYtGmT2jHJycli6NChKvtPnz69SbEJobt7VggmoNR2
yIQQhQDqfz6JiJqksrIS1tbWKC1Vn6MwKioKQUFBBoiKiGrkFpTj5wNp2LY/FVl55Q0f8P+ZGMsw
0M8Ow4I7Y1iwQ4MDHumKEAJXr15FQkKCNKiLp6cnevXqJT3e2RgKhQJXr15FZmYmvL29653DsEZR
URGuXLmC4uJi9O7dGy4uLvXur1QqkZSUhCtXriA5ORkODg5wc3NDjx490LVr10bFWVhYiOjoaJib
m6Nv377NGl1X22qm8lm2bBmWL18OoLrvY1xcHLy8vOocCbW2yspKxMfHIz8/HyEhIbCwUO23HB0d
Dblcjj59+sDIqOW9pprzfjdHZWUlEhISUFBQgIEDBxr0cdMbN24gOTkZXl5ecHd3r3dfIQSSk5OR
mJgIZ2dneHl5wdzcvFnnbY33LFFrwQSUSEeGDx+OY8eOqW1fuXIlFi1aZICIiOh+iioljkbm4ucD
qTh5MQ9NHYOoh6sFBvrbYYCvHUL62sLehv262gtNCSgRETWM84AS6cjgwYM1JqAnTpxgAkrUShjL
jTBqkCNGDXJERk4Zdh5Jx+6jGbiV0bgpk5LTSpCcVoItv6cCqE5I/XpZw7dnJ/j27ATvHh3b3Fyj
RERELcEElEhHhgwZonH78ePH9RwJETVGFwdzzJ/qgflTPRB9tQC7j2bg4F/ZyC1o/LQRNQnp7qPV
j8XKZEBXpw7o4WoJj66W6O5igS4O5nDubA5nezN0tNT+/I9EREStGR/BJdKRe/fuwdbWVuMcb/Hx
8fD29jZAVETUFEqlwIUr+fjjVBYOnslGbr525zA0NzWCdUcTdLIygbWlMSwtjCEDkJ5ThtLyKhjL
ZXBztoC9NR/tbW2+Wj4KADBg+EwMGD7TwNEQqTIzM8KEoV0Q5KO7aW+ImosJKJEOBQcHa5xfbc2a
NZg7d64BIiKi5hJC4MqNezh+IRfHzucgNvFuk/uMEhHpi0wGfLusH8IC7Q0dCpGKlg+pRkR1Gjp0
qMbtmvqGElHrJpPJ0LdnJ8yf6oEtnw3EqQ3DsPINf8x41A29u1sZOjwiIhVCAD/9nmLoMIjUsA8o
kQ4NHz4cK1asUNt+9OhR/QdDRFpl08kUo0OdMDrUCQBwt6gScTfu4nLiXcQl3sXlG3eRnl1m4CiJ
qD2z7MCP+tT68BFcIh3Kz89H586doVQq1coSEhLQu3dvA0RFRPpSUlaFm2nFuJFajOS0YqRnlyEj
twxZuWXIzCtHRaX6vw1ERNpgZ22CHz8KQXcXzkFKrQu/FiHSIVtbW/j5+SE6Olqt7M8//2QCStTG
WZjL0cezE/p4av6et7hUgcKiStwtUuBuUSVKyqpQqVDi2s0iZN0pg5GRDD3drGDRgVO5EFHjmZvK
ERZoD5uOHGmbWh8moEQ6NmLECI0J6JEjRzBv3jwDRERErYVlB2NYdjCGi4Pq9prHeomIiNoaDkJE
pGMjRozQuP3PP/+E4BCaRERERNSOMAEl0rFhw4bByEj9Ty03NxcxMTEGiIiIiIiIyDCYgBLpmLW1
Nfr166ex7NChQ3qOhoiIiIjIcJiAEunBww8/rHE7E1AiIiIiak+YgBLpwahRozRuP378OCoqKvQc
DRERERGRYTABJdKDhx56CGZmZmrbS0pKcOrUKQNERERERESkf0xAifSgQ4cOGDx4sMay/fv36zka
IiIiIiLDYAJKpCdjxozRuJ0JKBERERG1F0xAifSkrgQ0OjoamZmZeo6GiIiIiEj/mIAS6UlAQACc
nJzUtgsh8McffxggIiIiIiIi/WICSqQnMpkM4eHhGst+//13PUdDRERERKR/TECJ9Gjs2LEatx84
cAAKhULP0RARERER6RcTUCI9GjNmDIyM1P/sCgoKOB0LEREREbV5TECJ9Mje3h6DBg3SWLZnzx49
R0NE1Drl5eVh8+bN2Lx5MyIjIw0dDhERaRETUCI9Gz9+vMbtTECJiKolJSVhxowZmDFjBjZs2GDo
cIiISIuYgBLpWV0J6LVr15CQkKDnaIiorbhx4wasrKxgaWkJKysrxMbGGjokIiIiNUxAifTMz88P
3bt311i2a9curZ1n6NChsLS0hKWlJS5fvqy1eh9kFy5ckF6TV1991dDhEGnVunXrUFxcjJKSEhQX
F+O7774zdEhERERqmIASGcBjjz2mcfuvv/6qtXOUlpaipKQEJSUlUCqVWqv3QaZUKqXXpLy83NDh
EGmNQqHA999/r7Ltxx9/5H1OREStDhNQIgOoKwGNjIxEamqqnqNpPzp06IA+ffqgT58+6NKli6HD
IdKaPXv2IDMzU2XbnTt3tPqlFhERkTYwASUygKFDh6Jz585q24UQ2L59uwEiah98fX1x+fJlXL58
GW+99ZahwyHSmm+++QYAYG5ujrlz50rb+RguERG1NsaGDoCoPZLL5Xjsscewbt06tbJt27bhpZde
MkBURPQgunXrFg4cOAAAeOqpp/D666/jm2++gRACf/75J5KSkuDh4VFvHYcOHZKevpg2bRrMzMxw
584dbNiwAdHR0SgvL0f//v3x0EMPITQ0tM56cnNzsXfvXgCAt7e3NO3UsWPHsHPnTty+fRvdunVD
cHAwwsPDYW9v36RrzcvLk0YMt7Ozw8SJE+vdPzs7G/v27QMAhIaGonfv3k06HxERaR8TUCIDmTRp
ksYE9K+//kJKSgrc3NwMEJW64uJiHDt2DLGxsYiNjYW5uTn8/Pzg7++PoUOHQi6X67weXX84buhc
VVVV2LVrFw4dOoSsrCx4enpiwoQJGDJkSIPXnZqaiqNHjyIyMhK5ubkICQnB8OHDERgYiJs3b+Lo
0aMAgODgYPj6+jZYH9H91q1bJ/XzfvHFF+Hp6YmRI0fi8OHDEEJg3bp1+OCDD+qtY8WKFVKiNn78
eBw4cADTp09HUVGRtM+WLVsAAIsWLcK///1vGBurf4RITk7GrFmzAAARERHw9fXF008/jd9++01t
Xzc3N+zYsQP9+/dv9LV26tQJb7zxBrKzs2FsbIyUlBQ4OzvXuf9XX32F9957DzKZDImJiY0+DxER
6ZAQolAQkd5VVlYKe3t7AUBt+fTTT1tcf3BwsFRfTExMs+o4efKk8PDw0BgjABEaGioSExN1Xs+4
ceOkfXNycsTu3buFlZWVxroWLVokKisrNdZz7tw5ab+IiIhGnSshIUH07dtX7TwymUwsXbq03uv+
6aefhKWlpcZj33rrLbF582Zp2yeffNLg60h0P4VCIVxdXQUA0bt3b2n7li1bpHvLxcVFKBSKeuup
fd//+uuvwsjISAAQJiYmYsCAAcLZ2VnlHp4+fbrGemr/jf3f//2fGDNmjPS7q6ur6N+/vzAxMZG2
mZubi+jo6Hrruf9v9dVXX5XKPvvsszqvqbKyUri4uAgAYvTo0fVePxER6Q/7gBIZiLGxMZ588kmN
Zf/973/1HI261atXY+jQoUhKSoKFhQWmTZuGTz/9FP/85z8xceJEyGQy/PXXXwgMDMThw4d1Xk+N
EydO4PHHH0dRURFMTEwwYMAAlRaQL7/8Es8995xWXoNr164hNDQUly9fRqdOnTBkyBA4ODgAqO6v
++GHH+LYsWMaj33vvfcwbdo0FBcXw8rKCjNmzMCKFSuwcOFC+Pn54YMPPsDf//53rcRJ7de+ffuQ
lpYGAJgzZ460/YknnpD6maenp0utm40xb9482NnZYdu2bcjLy8PZs2eRkZGBLVu2wNTUFADw008/
ITo6ut56fvnlFxw4cADPPvssLl++jNTUVJw/fx7Z2dkYNmwYAKCsrAzLly9vyiXjb3/7m7R+/8i/
te3evRvp6ekAqluGiYiolRBsASUymCNHjtTZKhgbG9uiulvSApqSkiIsLCykVouoqCi1fXbv3i21
7vXs2VOUl5frrJ7arTOOjo6ic+fOYtu2beLu3bvSPlu2bBGmpqZSC+OlS5fU6mlqC6irq6vUWllz
rtLSUrFkyRJpnxkzZqjVce3aNamVx9HRUZw/f15tn1WrVgkzMzO2gFKLTJgwQQAQpqamIicnR6Xs
73//u3R/TZw4sd56at/3Pj4+4saNGxr3e+utt6T9Jk+erFZe+29MJpOJDz/8UGM9BQUF0r8NMplM
xMXF1VmPpr/V0NBQqfzMmTMazzF69GgBQDg5OYmKiop6r5+IiPSHLaBEBjRs2DB07dpVY9nGjRv1
HM3/LF68GCUlJQCATz/9FEFBQWr7TJgwAYsWLQIAJCYmYsWKFTqrpzZ7e3ucPXsWkydPRseOHaXt
U6dOxeuvvw6gunWyoT5vjZGeno4ff/wR77//vnQuc3NzvPHGG9I+V69eVTtuyZIlqKysBAB88skn
Gvu4LViwAKtWrWpxjNR+paWlSS2btVs8a7zwwgvS+r59+5CRkdGoevfv31/noEW16zxz5ky99cya
NQtvvvmmxjJra2tMnjwZQPXf69mzZxsVW42GWkFv3LiBQ4cOSXGYmJg0qX4iItIdJqBEBmRkZITp
06drLNu0aRMUCoWeIwIqKiqwbds2AICTk5P0IVGTBQsWQCaTAaie9F4X9dxPWx+OG+Odd97R+P7Y
2NjAwsICQPWonLWVlpZix44dAAAHB4c631+gekAVouZav349qqqqAKg+flvDx8cHgwcPBgAoFAps
2LChUfV26NChzrLu3btLX8akpaVJX7Q0tR4A8Pf3l9Zv3rzZqNhqTJ06FVZWVgCqB0cqLS1VKa8Z
BVgmk2l8bYiIyHCYgBIZ2PPPP69xe2ZmpsaRI3UtKSlJ+lDr6+tbb8uBi4sLHB0dAVS3XtaMxKnN
eu6nrQ/HjbFw4cImx5GYmAghBAAgICBA6jNHpE1KpVIaRdvDwwNDhw5FVVWV2jJ79mzpmHXr1kn3
ZkvU9LlWKpVISUlpcT1A0xNQKysrTJkyBQBQWFiIX3/9VSqrqKiQWkVHjRrV4BQ0RESkX0xAiQzM
x8dH43QgALB27Vo9R1M98E4NV1fXBvev2aesrEzlw6i26mkqbX04bq7a191aptKhtufAgQO4desW
gOove0xNTWFsbKy21E5AExMT6xw0qylqf6lS8ySAIeqp6zHc7du3IycnBwAwd+7cZsdHRES6wQSU
qBWo6xGx/fv3Izk5Wa+x5ObmSuuNeUS09j61H0fVVj1Npa0Px81VWFgorTf0CCJRc33zzTfNOu67
775r8bmzsrIAVP991TcHZ2PrAdCsVsqwsDD4+PgAAI4cOSIl5GvWrAFQ/ej/xIkTmx0fERHpBhNQ
olbg6aefhrW1tdp2pVKJr776Sq+x1P4gmJmZ2eD+tQc2qX2stuppKm19OG6uHj16SOuNHfSFqCky
MzOxZ88eAMDYsWMRFRVV71L78dTt27cjPz+/2eeuqKiQviDq3r17i66jZooUQPXvpilqWniFEPjh
hx8QHx+P48ePS2UcfIiIqPVhAkrUClhYWNQ5d+W6detw7949vcXi5eUlrdf+gFiXmjkIHRwcYGNj
o/V6mkKbH46bq3byHB8fX+++tVtLiRrr+++/lwYoW7hwIYKCgupdnnjiCWkk5rKyMmzevLnZ5963
b5/UjzQ0NLRF11HTx10ulyMkJKRZdcycOVNKMn/44Qf85z//AQDIZDKVQcmIiKj1YAJK1EosXLhQ
Ggm2tsLCQumRMn1wcXGBg4MDAOD8+fP1tl4ePnwYRUVFAAA/Pz+d1NMU2vxw3Fxubm7o1q0bACAh
IaHOPnc///wzXnrpJX2GRm2AEEJ6jNbd3R1jx45t1HG1H/Nv6DHc2i2m95/766+/BlCdNC5ZsqTe
es6cOVPnl08nT55EdHQ0AOCZZ55p9hdGjo6OGD9+PIDqgYxqEtDRo0dz8CEiolaKCShRK9GzZ09M
mDBBY9mKFSvUphnQpWXLlgGoblH88ssvNe4jhMCnn34q/f7OO+/orJ7atPXhWFeMjIxUruGZZ57B
uXPnpN+vXLmCpUuXYurUqbC3t5e281FBaozDhw8jKSkJQPUgPEZGjftvfNq0aVKf6OjoaJw/f77O
fefOnYvHH39cZY7b4uJizJo1S5pb85lnnkHPnj3rPeeFCxfg6+uLjRs3ori4WNp+/PhxPPbYYwCq
/1Yb+ptvSO3BiGpahl988cUW1UlERDokhCgURNQqnDx5UgDQuHz++edNqis4OFg6dtOmTeL06dP1
Ljdu3JCOVSgUom/fvgKAkMlkYtmyZaKsrEwqz83NFY8//rhU/+TJkzXGoK16xo0bp/JaPPbYYyIh
IUEqLyoqEs8995xUPnPmTI31nDt3TtonIiKiwXPl5OTU+fra29sLAMLDw0OtrLKyUvTr108lZkdH
R+Hi4iL93qVLF/Gf//xH+n316tV1nouoxpQpUwQAIZfLRUpKSpOOnTVrlnS/zZ07V6Ws9n3/zDPP
SOvOzs7C399fyOVyadvo0aNFfn6+xnPU/hsbOnSocHNzEwCEsbGxCAwMFA4ODlJ5hw4dxM8//9xg
PXX9rdZQKBTC1dVVJeaKioomvTZERKQ/TECJWplhw4ZpTEDt7e1FQUFBo+upnYA2ZnnhhRdUjo+P
jxd+fn5SuYmJiQgICBAeHh4qx4WHh4usrKw649BGPbr4cKzLBFSI6qR46tSpGl/r3r17i+vXr4st
W7ZI29avX1/nuYiEECI7O1uYmpoKAGL8+PFNPv7UqVPS/dapUydRXFwsld1/32/evFk4Ozur3Lc2
Njbi5ZdfFpWVlXWe4/6/sZycHDFhwgRhbGwsbTcyMhL+/v4iMjKy0fU0ZOnSpdL+b775ZtNeGCIi
0itjjc2iRGQwy5cvx4gRI9S25+XlYfny5VixYoVe4vD29kZkZCTefPNNbNiwAXfu3JH6bAHVfR2X
Ll2KefPm6aWeGl988QXGjRuHV199FZmZmVLfUhsbGzz//PP47LPPYGxs+H/aLC0tsWXLFrzyyiuI
jIxEbGwsbG1tMXDgQEycOBFyuRz79u2T9q/pL0tUFwcHB5SXlzf7+LCwMKmPdEOmT5+O6dOn4/bt
24iJiYGnpye8vb019lOvT+fOnbF7926UlZXh4sWLKC4uRkhIiMZRv2sLCQlpdKwApNdFJpPVOa0V
ERG1DjIhRCGAhifpIyK9GTt2LPbv36+2XS6X4+zZs9KIlvqUmpqKmJgYWFtbw9fXt8EPkNqs59FH
H5WStZycHHTu3BkAWvzh2NBefvllrFy5EgAQFxeHvn37Gjgiaq/q+htrqsjISAwYMAAAEBERoZdp
pO7du4euXbvi7t27GDNmjMZ/O4mIqPUwfDMBEan59NNPcejQIVRVValsr6qqwrPPPovz589LA4ro
S9euXdG1a9dWUw9QPQqou7u7VurSt/LycuzatQtA9WtSe9oaImq8devW4e7duwCqB1AiIqLWjaPg
ErVC/v7+mD9/vsay+Ph4zJw5E0qlUs9RUVPcuHGjzjKlUom3334bN2/eBAAsWbKEo+ASNUNVVZX0
FIGzszMmTpxo4IiIiKghbAElaqU++OAD7Ny5E6mpqWpl27dvx9NPP421a9fC1tbWANFRQ4KDg+Hi
4oIpU6bAx8cH3bp1Q1lZGa5du4b169fjzJkzAABXV1e88MILBo72wSGEgEKhQFVVlbTU/v3+ssYs
SqVSbb32z5ql5nchhMr22ttE9eB+Gn+vWWquo/bP2uuFhYWIi4tDZWUl7Ozs4Ovr2+jpVpqr9hcm
q1atgqWlZbPqSUlJkdajoqJUpljShZiYGOmLHB8fH3z++efNqsfDwwNPPvmkzl9nIiJiH1CiVu3Q
oUMYM2ZMvYNxyGQyGBsbt4qBd3SlvLxcavE1Nzdv9X09hRAoKytrcD8jIyOYmJg0+KFXqVSisrIS
5ubm8PT0RLdu3SCTydQWADA2NoZcLldZjIyMVH6amJhI94xMJlNLoupaNCVo9683ZakrkdSUUNb8
bMrANERN8fjjj2PHjh2GDoOIqM1jAkrUyv3jH//Ae++9Z+gwiIjavHPnziEkJMTQYRC1SOSdX9HT
ahBsTV0MHQqRRnzWhKiVe/fddzFlyhRDh0FE1ObdP/Ab0YPoWtEprLj+BA5kfYUKZamhwyFSwwSU
qJWTyWT48ccfMXnyZEOHQkTUZo0cORIDBw40dBhEWqEQFTiasw7/vvYYLhb8xu4L1Kq03U5jRG2I
iYkJtm7dCn9/f/zjH//gfyTUrtX0X63p43p/v1dN/WDrW2r6xmrqL2tkZCQtNb/LZDKV7bW31e6T
e//vtfvq3v+z9vqdO3cQHx8PhUIBa2tr+Pn5QS6X6/+FbidkMhk8PDzw/PPPt/r+5URNdU+Rg59T
38aZvK0Y32Ux3Cx8DR0SEfuAEj1oTp48ienTp6uMNkntg1wuh7OzM7p06aJxdFUhhDQoUM2gPbXX
awbzqaioQGVlJSoqKh7ILzMcHR3Ro0cPeHp6olevXujZs6f0097e3tDhEelcWFgYoqOjAQAXLlyA
t7e3gSOi1mTz7Vdx+e4RjWVBNuMR7rQQnUwc9RwV0f+wBZToATN48GDcvn0bVVVVKC0tZctIOyGT
yWBubq71esvLy1FUVITi4mIUFxejqKgIhYWFKCgokJb7f79z5w5yc3ORk5ODgoICvSex2dnZyM7O
xtmzZ9XKbG1t0atXL/Tu3VtavL290bNnT528fkSGUFpaipKSEgB4IL9EIsO5WLAXl+8exrDOszGk
80wYG5kaOiRqh5iAEj2g5HI5rKysDB0GPeDMzMxgZmbW7JZDhUKBO3fuICcnB7m5ucjNzUV2djYy
MjKQkZGBzMxMaT07OxsKhULLV6AqPz8f586dw7lzVVSyJQAAIABJREFU51S2GxkZoVu3bujTp4/K
4uPjg44dO+o0JiJ9S0lJQUJCAjIyMjBu3Dh07tzZ0CFpTVu+Nn2pUJbiYPbXOJ+/A484/x2+1g8b
OiRqZ5iAEhFRsxkbG8PR0RGOjg0/zqVUKpGbm4v09HSkpqYiJSVFWm7fvo2UlBSkpaWhoqJC63Eq
lUokJycjOTkZv/32m0qZm5sbfH190bdvX/j6+sLPzw99+vRhiyk9sD744AOsXbsWABAVFdWmkrS2
fG36ll+Zjv+mvAaPO8F4tMvr6GLuZeiQqJ1gAkpERHphZGQkJauBgYEa9xFCICsrCzdv3pQSxqSk
JGk9JSVF662oNUnw77//Lm2Ty+Xo1asX/Pz8EBAQAH9/fwQEBMDd3V2r5yYiMrSk4vP4KnEaQmyf
xGin/4Olsa2hQ6I2jgkoERG1GjKZDM7OznB2dsagQYPUyhUKBVJSUpCUlITExERcv35d+pmUlISy
sjKtxFFVVYWEhAQkJCTg559/lrbb2trC398fgYGB0tKnTx+YmrIfFRleVFQUYmJicPXqVWnb7t27
pQGLAGD8+PEaWw2FEDh+/DjOnj2LCxcuwM7ODv3798cjjzwCV1fXOs956NAhpKamAgCmTZsGMzMz
pKSkYN26dYiPj0ePHj3w8ccfqxyjUChw9OhRnDlzBqmpqcjKyoKTkxM8PT0xc+ZMODk5afXaAODy
5cuIjIxETEwMUlJS4OXlBT8/P4SFhdX7xVJubi727t0LAPD29sagQYOgVCqxY8cOHDx4EBkZGXj3
3XfVvlQrLi7Gpk2bEB8fj9u3b8PGxgZubm5wc3PD2LFj4ebmVuc5DUFAiXP5vyCm8A887DgPg+yn
Qi5jmkC6wVFwiYioTVAqlUhNTcXVq1dVloSEBKSmpupssBYTExP06dMHQUFBCAoKQr9+/RAQEMC+
paQzQUFBuHTpEgDgypUr8PHxAQC89dZb+PDDD+s99uzZsxgwYIDKtsLCQjz33HPYtWuX2v729vbY
tm0bRo4cqbG+Rx99FPv27QMA5OTk4I8//sDf/vY36VH6AQMGqAwY9v777+Pzzz9Hfn6+xvqsrKzw
3XffYerUqSrbm3ttpaWlWLJkCVatWqXx3wBzc3N89NFHeOmllzROwxMZGSnVGRERgffeew8TJkzA
qVOnpH327duHRx55RPr9t99+w+zZs5Gdna0xzrVr1+LFF1+s91paor5RcBvLwbQ7Hu3yGrw6PqSl
qIj+h19tEBFRm2BkZAR3d3e4u7tj9OjRKmUlJSVISEjAlStXVJakpCRUVVW16LyVlZWIjo5GdHQ0
fvjhBwDVLbk9e/ZEv3790K9fPykx5TQxpEu9evXC2LFjcfnyZWmqrrCwMHTq9L92Bmtra5VjsrOz
MXjwYFy/fh3m5uaYNWsWfH19kZKSgh9++AGZmZkIDw/HiRMnND6VUNvhw4cxc+ZMCCFgYmKCfv36
qbVm/vXXX8jPz0efPn0QFhaGXr16obCwENu3b8fVq1dRVFSEefPmYfjw4SrHNufaCgoKEBYWhvj4
eABAYGAgRo4cie7duyM+Ph5//PEHkpOT8corr+DgwYPYu3dvvXPBCiHwxBNPSMmnu7s77OzsYGJi
Iu2TmJiIadOm4d69e7C2tsaYMWMQFhaGiooKXL9+HcePH38g5pvNqbiJH24tQG+rwXi0y2vobNbN
0CFRG8IWUCIiarfKy8uRkJCAuLg4xMXFITY2FrGxsbh9+7ZOzufu7o7+/ftLiWn//v01Pm5IVJ+6
WkBrzJs3T2WgnqCgoDrrmj9/PtasWQMzMzOcPn0a/fr1k8rS0tLQr18/ZGdn49FHH5UeRa2tdguo
g4MDFAoFvvjiC0ycOBE2NjZq+3/99dfw9/fHkCFD1MrCw8Nx4MABAMAPP/yA5557Tm2fplzbSy+9
hC+//BIAsHDhQqxYsUJl6rJ79+5h+vTp0nWtW7cOs2fPVqmjdguog4MDcnJyMHXqVLz22msIDg5W
O+dHH32EpUuXAgDWr1+PWbNmqe2jVCphZGRUZ9wtpY0W0NpsTVww1+N7zh1KWsMWUCIiarfMzMwQ
EBCAgIAAle2FhYWIjY1FTEwMoqOjERMTg9jYWBQXF7fofLdv38bt27exY8cOaZurq6uUjNYsXbp0
adF5iBojPj4e3377LYDqxK528glU35vz5s3DP//5T/z222+Ij49XS3ZrKygowP79+zFixIg694mI
iKiz7Omnn5YS0OvXrzflUtRcuXIFq1evBgD07t0bK1euVGt57NixIzZu3Ag3NzcUFxdj6dKlmDRp
kkqram05OTkIDw/H5s2b65yD+/Lly9J6XY8t6zL51CZjmRmGdJ6JYQ6zYGrUwdDhUBvCBJSIiOg+
1tbWGDx4MAYPHixtUyqVSExMRHR0NC5duoRLly7h4sWLyMjIaNG50tLSkJaWhj179kjbnJ2dERwc
LCWmwcHBcHFxadF5iO73448/So+gjx8/XuM+tftUXrp0qd4EdPXq1fUmnw2pPZBPTk5Os+sBgC1b
tkgjZkdERNT52KutrS1mzJiBtWvXIisrCwcPHsRTTz2lcV8fHx9s27atzuQTgMqATcuWLcPatWth
ZmbWgisxDN9Oo/GI88uwNeW/O6R9TECJiIgawcjICF5eXvDy8sLkyZOl7dnZ2bh48aLKkpiY2KJB
jzIzM7F3716VRx6dnJxUWkn79++Prl27tuiaqH27du2aynpubq7aPjdu3JDWG3o0/fHHH292LOXl
5bhz506zj79f7Wur7zFdQDXxrX3c/UaOHFln62iN2bNnY8WKFaisrMSGDRvw119/Yfny5Zg0aZJK
X9HWqou5F8Z3WYwelv0NHQq1YUxAiYiIWsDR0RHh4eEIDw+Xtt27dw+XLl1CVFQUoqKicPHiRVy5
cqVFAx5lZWVh3759Un+7mnPX9Cmt+dmtGwcLocapnWzV92hsDW31ja6qqsLvv/+OH374AfHx8cjI
yKhzVNzmqn1t9U0jc395fQloY/Tu3RsbNmzA888/j4qKCly7dg3Tp0/H4sWL8dZbb2H27Nmtctom
S7ktRjstQLDt4zCSPRiPCNODiwkoERGRlnXs2BFDhgxRGWiltLQUMTExUlJ64cIFxMXFobKystnn
yc7Oxu+//47ff/9d2mZvby8NclSzeHp6PhAjb5J+FRYWAgDkcrnK4+Z1qW++zMaKjIzEk08+Kc0d
6unpiVGjRsHFxQUFBQXYsGFDi88BQKU1t6FWy9rleXl5LT73tGnT4Ovri7feekt6tD41NRXz58/H
2rVrsWvXLq28ltpgBGOE2U/DSMc5MJdz6ijSDyagREREetChQwcMHDgQAwcOlLZVVFQgNjYWFy5c
kJbY2FhpDsXmyMvLw8GDB3Hw4EFpW6dOnRAYGChNCRMUFAQfHx8YG/NjQHvm7e2NW7duoaqqClu2
bIGzs7NOzxcdHY3w8HDk5+fD1dUVP/zwAx5++GHpy5FLly5pLQH18PCQpmvJzMysdwqk2v24PT09
tXJ+Pz8/7N69G5cvX8bnn3+O77//HkIIXLp0CaNHj0ZsbKzBW0I5xQoZCv/nISIiMhBTU1OpP2eN
yspKjUlpeXl5s89z9+5dHD9+HMePH5e2mZubw9fXF4GBgQgKCkJgYCD8/f1hZWXVomuiB0efPn2w
f/9+AMDJkycxadIknZ7v448/Rn5+PmQyGf7880/06tVLZ+fy8vLCsWPHAADp6eno27dvnfvWtMYC
0HpMffv2xbp16/DCCy9g8uTJSEtLw7Vr17B9+3ZMmzZNq+dqLAfT7ni0y2vw6viQQc5PxASUiIio
FTExMZEenZ0zZw6A6qQ0Li5OLSktKytr9nnKyspw/vx5nD9/Xtomk8ng6emJwMBAaXoaf39/9it9
wNR+3Lq+0WRDQ0OxYsUKAMD333+v8wT0xIkTAKpHk21uotfYa6s9tdLevXsxevToOvfdtWuXtO7n
59esuBoSGhqKxYsX46WXXgJQPQWOvpkbWeFhx3kYZD8VchlTADIc9jImIiJq5UxMTBAUFIQXXngB
//nPf3Du3DlpoKP169cjIiICoaGhsLCwaNF5hBBITEzEL7/8gnfeeQcTJ05E9+7dYWNjgyFDhiAi
IgJr1qzBqVOnpP6D1PrUHh25poVTk0mTJuGhh6pbwfbt24ctW7boLCYhhDTQ0LVr15CWlqa2T2xs
rLRe1/RGjb222bNnw83NDUB1cl1X387Tp0/j5MmTAIDhw4er9NtujvoGGrt37560rs8+oDIYYYDt
JLzqtRsPdX6GyScZHBNQIiKiB5CxsTECAgIwa9YsfPXVVzh9+jTu3r2LuLg4bNy4ES+//DKGDh3a
4AAsjVFYWIiTJ09i9erVmD9/PgYPHgwbGxu4ubnhkUcewauvvop169bhr7/+QkFBgRaujlrC399f
Wv/ll19UHr2uTSaTYc2aNdL0IDNmzMDixYvVRqTNysrC+vXr8dNPPzU7JplMJrVKKhQKzJ07Fxcu
XEBFRQXOnTuH6dOnY+bMmdL+kZGRGvtCN/baOnTogE8//RRAdeIXFhamkuAqlUrs2rUL48aNA1A9
ENPKlSubfX01Hn30UcyfPx9RUVHSVExKpRInT56UWptNTEwwfPjwFp+rMTwsg7Gg50943PUtWBrb
6uWcRA0SQhQKIiIiapOUSqW4fv262Lp1q1iyZIkIDw8Xjo6OAoDOFhcXFzFq1CixYMECsWrVKnHg
wAFx69YtoVQqDf1ytAmBgYHSa33lyhW18qqqKhESEqLynnh4eAgfHx+RlJSktv++ffuEs7Oz2nsY
FBQkHBwcpG0vv/yy2rHjxo2TynNycuqN++jRo8LIyEjlPMbGxgKAkMlk4u9//7tYuHChVNajRw+x
du3aFl3bu+++K+RyubSvk5OTCA4OFpaWltK2Tp06iU2bNmmM+dy5c9J+ERER9V6fEEKEhoZK+3fo
0EEEBASovbZr1qxpsJ6W+PHW38WnCeNEbMEhnZ6HqLmYgBIREbVDaWlpYu/eveL9998XkyZNEj17
9hQymUyniamFhYUICAgQkydPFm+++aZYv369OH78uMjIyDD0y/FAaSgBFUKI27dvi7Fjx6q9B9ev
X9e4f25urnjmmWeEtbW12jGmpqZi8ODBYvv27WrHNSUBFUKI7du3qyVkvr6+4tCh6mQpJydHuLq6
SmWjRo1q8bWdPn1aBAUFqSSiNQniuHHjxM2bN+uMt6kJ6IoVK0T//v3VEm0Aws/PT+zZs6fBOloq
8d5ZUVlVrvPzEDWXTAhRCKDlz+cQERHRA62oqAgxMTG4dOkSYmJiEB0djbi4OBQVFen83FZWVvDw
8ICHhwd69OghLR4eHujevXuL+7e2Vzdv3kR8fDzMzMzg7e0NFxeXBo+5desWYmNjYWxsjC5dusDL
ywsdOnTQWkxlZWW4fPkyMjMzERISAkdHR5XyqqoqnDhxAnZ2dujbty/kcrnGepp6bWVlZYiLi0NG
Rga8vb3h6ekJIyPd9EbLz89HYmIi0tLS0LFjR/Tq1Qtubm6cj5cIABNQIiIiqpMQAklJSYiNjUVM
TAxiY2MRFxeH69ev1zvgirY5OTmhR48ecHNzg7u7O9zc3FQWJycnfrgnInoAMAElIiKiJisvL0dC
QgKuXLmisiQmJkKhUOg9HlNTU7i6usLFxQVdunSRFmdnZ5XfO3furLNWLyIiahgTUCIiItKaiooK
XL9+HQkJCbh69SquXr0qrbeGqVuMjIxgZ2eHzp07w8HBAZ07d1ZZt7e3h62tLWxsbGBtbQ0bGxvY
2NigY8eObGElItICJqBERESkF1lZWbh27RquX7+OxMRE6WdiYqJe+pm2hJGRETp16iQlo5aWlrCy
soKlpaXGxdTUFGZmZjAzM1NZr/nd2NgYRkZGMDIyglwul9arqqqQmpoKmUwGd3d3mJmZGfrSyQDk
cjm6du2KvLw8lJaWQqFQQKlUQgiBoqIipKSkwMrKSmVeVEOysbGBp6enocOgBwQTUCIiIjK4rKws
JCUlITk5WfpZs6SkpOi1vylRayCTyaS5RB8E06dPx+bNmw0dBj0AmIASERFRq6ZQKHD79m3cunUL
KSkpGpeCggJDh0nU7l29ehVeXl6GDoNaOSagRERE9MArKipCamoqMjIyVJbMzEyV9fz8fEOHStQm
dejQAampqbCzszN0KNTKMQElIiKidkOhUCA3Nxe5ubnIyclRW79z5w4KCgpUlsLCwlbfR5XaF7lc
DgsLCzg5OcHa2trQ4cDGxgavvvoqHnnkEUOHQg8AJqBEREREDVAoFCgsLJSS0aKiIhQXF6ssNdtK
S0tRXl6O8vJyVFRUaFyvqqqCUqmEUqmU1isrK5GWloa7d+8CACwsLODs7Ay5XG7gqyd9UigUKCsr
Q+/evTFjxgxYWFhIg1QZGxujY8eOCAwMhKWlpaFDJWoWJqBERERERESkF5yJmYiIiIiIiPSCCSgR
ERERERHpBRNQIiIiIiIi0gsmoERERERERKQXTECJiIiIiIhIL5iAEhERERERkV4wASUiIiIiIiK9
YAJKRETUximVSkOHQEREBIAJKBERUZv066+/YvDgwbCzs4OFhQX8/PwwZcoU/OMf/0B2drahwyMi
onZKJoQoBNDJ0IEQERGRdsyfPx9r1qwBAFhZWcHX1xeJiYnIzc0FAJw7dw4hISGGDJGIiNopY0MH
QERERNqzc+dOKfncuHEjJk+eDHNzcwBATEwMtm7dCmtra0OGSERE7RgTUCIiojZkz549AIDw8HA8
++yzKmX+/v7w9/c3RFhEREQAmIASERG1KTdv3gSAJrVy5uTkICUlBZaWlujdu7daeXJyMvLz8+Hk
5ARXV1eVsqtXr6K4uBhubm5wcHAAAFy5cgWnT5/GgAED1BLe/Px8HDp0CIWFhQgLC0OfPn2aeIVE
RPQg4yBEREREbYi3tzeA6kdxo6OjG3XM1q1b0b9/f7UW0xpLlixB//79sWLFCrWymTNnon///ti6
dSsSExPRs2dP9O3bF3PmzEFAQAAGDBiAiooKAMDLL78MBwcHTJkyBXPmzIG/vz9WrlzZzCslIqIH
ERNQIiKiNuSVV16BqakpKioqMHjwYKxevVov07DcunULDz/8MEpLS/HKK68gIiIClpaWiIyMxLvv
voulS5di1apVGDZsGN5//30EBgaiqqoKb7zxBtLT03UeHxERtQ58BJeIiKgN6dmzJ3bv3o0nn3wS
RUVFiIiIwPr167Fy5Uo89NBDOjvvv//9b4wePRq7du2SBj2Sy+X48ssv8dFHH8HMzAy//fYbxo4d
CwCYM2cOnJycUF5ejgsXLsDFxUVnsRERUevBFlAiIqI2Jjw8HFFRUVLCeeHCBQwZMgQLFixAcXGx
Ts758MMPqySfAKTzy+Vy7Nq1S0o+AcDR0RE9e/YEAGRlZekkJiIian2YgBIREbVBvXv3xokTJ/DN
N9/AwcEBQgh8/fXXGDFiBO7cuaP18z322GMqyScA6XdbW1uMGTNG7RgzMzMAgBBC6/EQEVHrxASU
iIiojZLJZJgzZw7i4+MxZcoUAEBkZCQiIiIMHBkREbVXTECJiIjaOHt7e2zZsgWPPPIIgOpRb3XR
CkpERNQQJqBERETtgEwmw3PPPQeg+pHXmvlCG6OkpERHURERUXvDBJSIiKidsLOzA1CdjHp4eEjb
jY2rB8VPSkpSO+bbb7/F3r179RMgERG1eUxAiYiI2pCvvvoKycnJatuVSiW+/PJLAEBQUBBsbGyk
sh49egAA8vLyEBcXBwCoqKjAt99+i3nz5sHS0lIPkRMRUXvAeUCJiIjakH/9619YtGgRhg4dipCQ
EPTq1QtRUVHYsWMHsrOzYWVlhR9//FHlmIceegguLi5IT09H//79MXz4cJw7dw4FBQVYvHgxbt68
iW3bthnoioiIqC1hAkpERNSGBAYGIiMjA8eOHcOxY8dUyh599FF89NFH8PHxUdluZWWFbdu2Ydq0
aUhJScGBAwfg7u6ON954A0uWLMHUqVP1eQlERNSGyYQQhQA6GToQIiIi0o7y8nJcunQJKSkpuHfv
Htzd3dGrVy+4u7vXe1xFRQUSEhJgamoKb29vPUVLRETtCRNQIiIiIiIi0gsOQkRERERERER6wT6g
RERED5iqSgUq8vKhrKqCiaWFocPROZmxHCZWHImXiKgtYAJKRETUCgghUJaVi+Lb6ShJSUdZzh1U
5OWj/E4ByvMKUJFfiKrSMlSVlQNCGDpcvbNwd0HfN+bD1p99U4mIHmTsA0pERKRnlfeKcfdqEu5e
vYG7V5NQfDsNJSmZUFZUGDq0Vs3YygJDtn4Fk04dDR0KERE1E1tAiYiIdKwoOQV3Ll5GQWwC7ibc
QElqpqFDeiApikqQey4aXUYNNnQoRETUTExAiYiItKw4JQN3LsTizsXLyL94GRX5hYYOqc2Qm5oa
OgQiImoBJqBEREQtpFQokB8dj9zTF5Bz+gJbOHXE3Kkz7AcEGDoMIiJqASagREREzaAoKUXOqfPI
Pn4OueeiUVVSqv8gZDLI5HLIO5hBZtR2Z1aTGcth08cLXgtmQm5uZuhwiIioBZiAEhERNZKitAy5
py8g88hp5J65CGVFpVbrl1t0gKW7Cyy7uaKDixPM7G1gZm8rLcZWFjAyNYWRsVyr5yUiItIXJqBE
RET1UCqqkHv2IjL2H0fO6QtQlmtnpNoOLk6w9umJTt4e6OTlAUt3V5h1ttVK3URERK0VE1AiIiIN
7t24hfTfjyJj/3FUFNxtUV0yuRydfDxh188XtgF9YO3jCZOOVlqKlIiI6MHBBJSIiOj/q7xXjIwD
x5G270/cu5bcoro69uoO+wGBsOvnCxu/3jDuYK6lKJtGqVTCSAf9QyMjI7F06VJ06tQJ27dv13r9
RETUNjEBJSKidq/wynWk7DqIzEOnoKxo3iO2RqamsAv2hUNYfziE9Ye5g72Wo2y8X3/9FZ9//jmu
XLmCkpIS9OrVCz4+PvD29saCBQvg6OjY4nPk5ubi0KFDsLc33HUSEdGDhwkoERG1S1Vl5cg4cAIp
uw40u7VT3sEcjkNC4DQyDPbBfpCbGX6E1vnz52PNmjUAACsrKwQFBSExMRFxcXEAgAkTJmglASUi
ImoOJqBERNSulGXl4vaOP5C6+xAU94qbfLzc3AwODwXDeWQY7AcGQm5mqoMom2fnzp1S8rlx40ZM
njwZ5ubVj/7GxMRg69atsLa2NmSIAIDdu3fjzJkzGDRoECZOnGjocOqUk5OD7777DhkZGfjiiy90
8igzEVF7wwSUiIjahYK4q7i17TdkHz8LUaVs2sEyGez6+8F13HA4Dh3QKlo6NdmzZw8AIDw8HM8+
+6xKmb+/P/z9/Q0RlprvvvsOe/bswdtvv92qE9CUlBQsXboUALBixQoDR0NE1DYwASUiojZLCIGc
E5FI3rwThVeuN/l4i67OcHlkBFzCh8LcqbMOItSumzdvAkCTWjlzcnKQkpICS0tL9O7dW608OTkZ
+fn5cHJygqura7113blzB0eOHEFpaSlCQkLg7e2tUl5cXIyrV6+isLAQAJCRkYGoqCgpZk9PTwDA
3bt3kZiYCGNjYylpTktLw/79+xEUFISgoCCpzsrKSpw9e1aKs2vXrnjooYfg5ORUb6wKhQLXrl1D
fHw80tPT4eLigu7du6Nnz56wtrZGYmIiEhISpP2joqIgl1fPv+rt7Q0LC4t66yciIs2YgBIRUZuj
rKxE+v7juPnf3ShJSW/SsUamJnAaEYquE0fD1t+74QNaEW9vbxw5cgQ7d+5EdHQ0AgICGjxm69at
WLhwIUJCQnDu3Dm18iVLlmDbtm149dVX8a9//UtjHUIIzJ49Gxs3boRS+b/W5WeffRbffPONymPA
YWFhUvm6deuwbt06AMCjjz6KvXv3AgBOnTqFcePGwd7eHllZWZg0aRJ27twJAPjXv/4lJaBvvPEG
1q5dKyW0NSwtLbF69WrMnDlTY7ynT5/GCy+8gPj4eLWy1157DZ999hkiIiJw4MABafuAAQOk9cjI
SAQHB2usm4iI6scElIiI2gxFaRlSdx7Ara17UZ6X36RjO7g6w+3x0XB5ZARMrTvqKELdeuWVV/Dd
d9+hoqICgwcPxieffIJ58+bpvO/i66+/js2bN2PIkCEIDQ1FfHw8du3ahU2bNkEIgU2bNgEAunXr
ho8//hgbNmxAfHw8Ro4ciTFjxgAAevbsqbHul19+Gbt27UJYWBiGDRsGPz8/qezYsWPo168fnnrq
KXh5eeH/sXfnYVGW6wPHv8Owi+wuoKEiuKThlvpzx8zdzC2XXMtMS61THZfUypaT1jHLrLTEfV+w
NFNzOW5piQruCigiKAgoKvsyzPz+QF4ZGWBAcEDuz3VxMfM+y9yDmN3zPO/9xMbG4ufnx8GDB5k4
cSK9evXC1VV/5frXX39l0KBBaLVavL29mThxIg0aNCAsLIyzZ89Sr149AMaOHUv9+vVZuHAhAF9+
+aXyc6xZs2bJ/gCFEKICkQRUCCFEuadJTiHCfzfXN/5OZkJSkca6tm1OrUG9cH7eB5VKVUoRPhle
Xl5s376dAQMGkJSUxMSJE1m2bBkLFiygXbt2pfKa8fHxbNy4kYCAAJo2bapcnzdvHlOmTGHdunXM
mjWL+vXr4+7uzrRp0zh69CiXLl2ibdu2TJs2rcC5ly1bxj///KO3Aplj27ZtebbadurUCQ8PD5KS
kggKCqJr165KW3JyMu+88w5arZYWLVqwb98+HB0dDb724MGD8fLyUhLQqVOnKltwhRBCFJ+UcxNC
CFFuZSYmcWXZJg4PeosrS9YbnXyqbax5ZkAP2q37nuZffYhLyyblPvnM0b17dwIDA5WE89SpU3To
0IFJkyaRnFz0qr+FsbGxyZN8AkyePBlnZ2fPfGc7AAAgAElEQVS0Wi2//vprsedfvXq1weQTMHif
Z82aNZV7WW/cuKHXtmHDBuXavHnz8k0+hRBClB5ZARVCCFHuZCYlc33TH1zfuIOslFSjx1lVcabW
4N7U6NMFC7tKpRihadWvX58jR47g5+fHzJkziYuL48cffyQgIIDdu3fj7OxcYq9lY2ODm5tbnutW
Vlb4+Phw8OBBrl0r3jmrzs7ODBgwwKi+WVlZxMbGEhMTQ2ZmJoDe/aiAcs+ns7Mzvr6+xYpJCCHE
45EEVAghRLmhSUklYssuwjdsL9IZnpVq16T2qy/j1rU9ZuYV458+lUrFuHHjGDBgAG+//TabNm3i
xIkTTJw4kfXr1z+RGHJWKKOjo0tl/tTUVFavXo2fnx+nTp3Kk3A+KiQkBABPT89SiUcIIUThKsa/
wkIIIcq1rPR0In/9k2trt5F5L8HocY7PNaDO8H64tm3+1GyxLSoXFxc2bNhAYmIiu3btYuPGjfz4
448lugqan5SUFACqV69e4nOnpqbSu3dvDhw4gI+PD9OmTaN9+/Y0b96czp076x2hkqNy5eziUmlp
aSUejxBCCONIAiqEEKLM0mVlcXPXQa4u3UT67Xijxzk//xyeowfh3PTZUoyu/FCpVIwePZpdu3ah
0+kIDw83OgHNSSKLI2flszRWHP/73/9y4MABOnTowN69e7GyslLaLCwsDI5p2LAhAFevXkWj0WBe
QVbDhRCiLJH/8gohhCiTYg8HEPrLOpKv3zR6jGvrpni+9gqOjeqVYmTlU07CqVKp9BLCnCQsLCws
z5glS5YoZ3MWVUxMDGfOnAHQO/sTUKrJxsbGFmtuyD6CBeDll1/WSz4L0rFjRyB79XTp0qWMHz++
wP65q97GxsYavNdVCCFE0UgVXCGEEGXK3TOXOD5hJqdn/tfo5NO1bXP+z28uzefNrNDJ5w8//GCw
4I9Wq+X7778HoFmzZnrVX+vUqQPAnTt3OH/+PAAZGRksWbKECRMmUKlSwcWa7t69y0cffaQU/snx
6aefkpmZSceOHZXEL0etWrUA2L17dxHf4UM5W6q3b9+ud93f35/w8HAgb1LdsWNH+vXrB8DMmTM5
cuSIXntGRobemJw4HzdWIYQQD6l0Ot19wN7UgQghhKjYkiOjCV20htgjAUaPcX7eB683huLYyLsU
Iys/ateuTUREBB07dqRly5Z4e3sTGBjIr7/+SmxsLHZ2dgQEBChbUQGSkpKoX78+UVFRWFpa4uvr
S0BAAPfu3WPq1KmEh4ezadMmPvjgA+bNm6eM27VrF7169cLW1hYrKyuqVatGnz59qFq1Knv37mXv
3r04OjqyZ88eWrZsqRfnwYMH6dy5MwAtWrRgyJAheHt7K8lhztwuLi7cvn3b4HtdvHgxb731FpBd
9bdTp06cOHGCixcv0r59e/bv34+Hhwdz585l2LBhyrjr16/TpUsXrl69irm5OV26dKFhw4acPXuW
v//+mx49erB161alf+fOnTl48CCVK1dmyJAhNGrUiJEjR+Li4vKYf1pCCFExSQIqhBDCpDITErm6
fAuRv/6JLivLqDFOTRriNW4YTk0aFt65AunXrx+7du0iIyMjT1vv3r2ZM2cOzz33XJ62o0ePMmzY
MCIjIwHw8PDgrbfeYvr06QwZMqTABLRdu3asXr2aESNGcOzYMSB7dbJp06asW7eOBg0aGIz1m2++
YdasWUpBoFdffZW1a9fqzV1QAqrT6Zg+fTrffPMNWQ9+b1q1asWSJUuoW7cujRo14vr166hUKuLi
4vQSxoSEBN5++238/f2V1zc3N8fb25tRo0Yxffp0pe+1a9cYOnQoAQEPPxgJCQnB21s+9BBCiOKQ
BFQIIYRJaDMzifDfTdgqf6OPVKlcrw7e44fj2qpJKUdXfqWnp3P69GkiIyNJTEzEw8MDb29vPDw8
ChyXkZHB5cuXsbS0zDdpzC01NZXo6Gjs7OyoWrUqkL0d99KlSzRo0MCoIkcJCQlcunQJGxsb6tWr
h7W1tXFvMpc7d+4QHByMt7c3VapUUa5rNBqCgoLw9vbW23Kcm0aj4cKFC+h0Oho2bJjvvaQ6nY6w
sDCio6Px9PTE3d29yHEKIYTIJgmoEEKIJy7u2CmCF64g5cYto/rbuFfDa9xQqndpV2GPUxFCCCGe
BlIFVwghxBOTHHGTy9+v4M7x00b1t3RywHPMIGr2fREzOTJDCCGEKPfkX3MhhBClLjMpmbAVW4jY
ssuo+zzNLC2pPfQlag9/GXNbmycQ4ZOl0+nIuJdAelw8GfcSyLyfQMa9xOzv9xPRJKeSlZpKVkoa
mtQ0slLT0GZq0CSnoElMRqfVAmBmbo7axgpkVbjMMLO0wKVlE+pPHImFfWVThyOEEGWObMEVQghR
qqJ2HyLkp9Vk3L1vVH+37p3wfnMY1lXLb5VRbUYmqbdiSY2KJTX6wdetONJi75B+O57023eNLrgk
yidHnwa0+vFzU4chhBBljqyACiGEKBVJ1yK59M0S7p65ZFR/p6bPUn/SaOzre5ZyZCVDp9ORFnub
5OtRpETcJDkiiuTIKJIjokiPvWPq8ISJ3Tt7maTwG9jVrmnqUIQQokyRBFQIYZSUyBiSLl4n4859
0OlMHY4ow7SZmdw+dZa75y6CVodaZbiyaA7zynZUbfM8let4kHDyCgknrzyhSI2nSU0jI/4u6fH3
SL97j4z4e6TfvYs2QwPo0Oqy0CErmkKfNiPT1CEIIUSZI1twhRAFCl/0GzE7j6FNzXuuoBDiIa0u
i8ysFDKyEgH5kKais33GnXar56NSq00dihBClCmyAiqEMCgt5i7n3p6H5n72+YxmVhbY1K6OuZ2t
FDwRIhdteibp0bfJuH0fK/PKWKptSc2MJ0snH9pUVA6N6tF45iRJPp+QrKwsfv75Zw4fPkx0dDS1
atWiXr16fPjhh6jlz0CIMkdWQIUQeWiSUjg1dDbatAzMHezwGNsb1y4tUFtZmjo0IcqspMsRXPf7
nYTToejQkZpxu8AkVG1rg3UVZyydHbF0tMfCoTKWDpWxdLTH3K4S5rY2qG2tUdvYYG5rjZmF+YOE
RkVWejpmVpaY21g/uTcojGJmaVFqlZv3799PXFxcgX2srKzo379/qbx+fv766y9u3LiBp6cnrVq1
eqKvrdPpeOGFFzh48CAA5ubmaDQaANLS0rCyKvgWACHEkycJqBAijzNvfk1KWBRWbi40mjcJq2pO
pg5JiHJBp9Vy7YetxGz/C60uC7WnHZU83LBxq4qNezWsq7liXcUZK1fnp/J4GVG6OnbsyJEjRwrs
4+zszJ07T7YIVr9+/di2bRuvv/46S5cufaKvvWHDBoYNG4ajoyOrV6+mW7duREdHExQURN++fTEz
M3ui8QghCidbcIUQehLOh5ESFgVmKup/OlaSTyGKQGVmRp1JA0i5epPEC9eo7FCTRh9NNHVY4ilT
r149hg8fbrDN2vrJr4pbWlpiY2ODhYVFic4bExNDdHQ0devWpXJlw2eq5qx8du/enT59+gBQq1Yt
atWqVaKxCCFKjiSgQgg9N9fvA8ClUzMqebqbOBohyh+VmRnPjOnJxSk/kXg+zNThiKdQ/fr1+fjj
j00dhmLTpk0lPuetW7dwc3MDICAggJYtWxrsFx4eDkDVqlVLPAYhROmQfQlCCD3JoTcAcG7b2MSR
CFF+2ft4oba1QqfJIvVmwffsCSGKLzU1FUCKDQlRjkgCKoTQk5WaBoBVNWcTRyJE+aVSm2FZJXv7
emp4tImjERXZ7Nmz6datG/Pnzwdg27ZtjBw5Ejc3N2rVqsWgQYM4f/68UWPXrl1Lv379sLe3x9/f
P99+Bc0RFBTEO++8Q4MGDXB2dqZnz54EBwfnGTN06FDl+eTJk+nWrRvdunXDz88PgMWLF9OtWzfO
nTsHwNatW5U+06ZNK+6PSwjxBMgWXCGEHl1W9vmFZhbynwchHofKIntFRpuWaeJIREV2+vRp9u7d
yzPPPMPatWsZOXIkOt3Dc2ojIiL4888/2bx5Mz169Mh37M8//8yECROUtpxKs4/2K+j1Dx06RO/e
vUlOTlbad+/eTdu2bQkODsbV1VUZc+jQIaXP8ePHlcfNmjUDIDg4mL179+q9j4iICAC0Wm3RfkhC
iCdKVkCFEEIIIZ5yx48f5/XXX2f8+PEcOHCA+Ph4du3ahZubG0lJSUyYMIHMTMMflvzzzz9MmjSJ
119/nf379xMfH58nWS3MyZMn6dWrFz4+PqxevZq4uDhWrFiBlZUV8fHxLF68WOn766+/cvPmTb3X
12q1aLVa5s6dC8D8+fPRarV06NABgHfffVfpkzsxFUKUPbLEIYQQQghRjgQEBPDyyy/nud6wYUMl
QXvUlStXWLp0KSNGjFCu9ejRg3Xr1tG5c2euX7/O2rVrGTNmTJ6xFy9e5L333jO4xdZYZ8+epWPH
jvz5559Kpd7Ro0ezceNGdu3apbcNWKVS6R2fYmZmhkql0psv53nu74/2EUKUTZKACiGEEEKUIzEx
MWzfvj3P9YLO/xw2bJhe8pnD19cXDw8PIiIiOHHihMEEtH379sybN++xYm7UqBG///57nmNi3N2z
q60nJCQ81vxCiPJDElAhhBBCiHKkS5cuLF26NM91KyurfMfkXlF8lKenJxEREcqRJo+qV69egeON
0bp1a+zt7fNcL+mzQ4UQZZ8koEIIIYQQ5YitrS21atUqsfmcnLIrNssqpBDiSZAiREIIIYQQFVh8
fDxAiSa1QgiRH0lAhRBCCCEqsJyKs56eniaORAhREUgCKoQoFXcOBhH+069oklJMHYoQQlR4uc/+
zO3cuXNcuXIFgO7duz/JkAqU+97Qa9eumTASIURJkwRUCFEqdJosbm09xOlR/yFmx1F0cjA4AKtX
r+bbb7/l22+/JTg42NThCCEqiA0bNrBw4UK9RDQtLY2pU6cC2YWN2rVrZ6rw8nBxccHBwQGAP/74
w8TRCCFKkhQhEkKUKk1CMte+20zM9qPUers/Dk29TR2SSX399dfKeXfVq1enfv36Jo5ICFERuLi4
8N577/Hzzz/z4osvYmFhwa5du7hw4QJVq1Z9rDM+S8uwYcNYvHgxq1atIjQ0lB49etCmTRu6du1q
6tCEEI9BVkCFEE9ESlgUl/79IyGfLiPtVv5n1RXHP//8Q/369alfvz4NGjRQ7mcqqokTJyrzHD16
tERjLAlZWVm0adNGiXHkyJGmDkkIUU5069aNffv2kZyczIIFC5g3bx6XLl2ibdu2BAQE4OPjY+oQ
85g7dy4DBgwA4O+//+aTTz4hICDAxFEJIR6XrIAKIZ6o+CNnufvPRdxf6Yz7sBdR2+R/bp2xWrZs
SVJSElFRUQCsWrWKDz/8sEhz3L9/n2XLlpGWloarqyutWrV67LhK2s6dO/nnn3+U51euXOE///kP
Hh4eJoxKCPGkHD58+LHG+/r6cu3aNW7evMm1a9fw8fExeDZnjt9++82oeQvqV9gcixYtYtGiRQbb
HBwc8Pf358aNG1y5cgU3Nzfq1q2r1+fQoUNGxSiEKDtkBVQI8cTpMjXcXLeX02P+Q9zeE/kWxzCW
Wq3WWw1csWJFkefYvHkzaWlpAAwZMqRMHo7+yy+/6D3XarUsW7bMRNEIIcqrGjVq0L59+wKTz7Kk
Zs2a+Pr6Ur9+fczNZe1EiPJOElAhhMlk3kng6ldruTD5OxIvhT/WXGPGjFEeh4SEcOzYsSKNX716
tfK4LG5tvXHjBrt27cpzffny5WilwJMQQgghygn5GEkIYXJJl69zYfJ3uHZticfYPli6OhR5jgYN
GvB///d/yhbV5cuX07ZtW6PGhoeHc+TIEQDq1atH69ati/z6pW3ZsmVkZWUB4OjoyL179wCIiIhg
z5499OjRw5ThCaHQZWWhy9Ki0z740nucBfm0ofdcl/38kX7KNZ0uex6dLtf1B491ufrrdLmuZz9G
p9W7pvTRaUFH9lw6HWh16HjwPactZw4ejNORPd+DNh7s5tDlPFY2d+geXEPpo/R7ICs9nZSIKDSp
aajMzLByccLGrepj/3kkhGQfYXL3zCXOz/npsecr78wszHF53odqvv9n6lCEqLAkARVClBm3954g
/sgZarzaFbdBnTGzLNp/ol577TUlAd20aRMLFizA1ta20HFr1qxR/kdwxIgRRQ+8lGm1WpYuXao8
X7ZsGcOGDSM9PR0APz8/SUDLME1qKul37qLL0qLVaLKTo5zvWRq0muzvOde1eu1Z6LKy0GqylMc6
5XF2uzbX4+z2XPMpY3O1Z2U9TOqy9OfS+/4gYVS+a3I91+bur59EipKREhHF3aALjz3PMJvq9HnO
GSesiNp5oAQiK/9ubNuLx6BeNHj3NVOHIkSFJAmoEKJM0aZlELnsD2J3/o3H+Jdx6dDE6LFDhgzh
X//6F6mpqSQkJLB161ajEsqc7bcqlarA/sHBwfz222+cP3+eyMhIoqKicHFxoU6dOnTu3JnXX38d
tVptdLzG+vPPP4mIiACgfv369O/fn4EDB7Ju3ToAtm/fTmxsLFWrFr5asmjRImJjYwEYOHAgjRs3
RqPRsHHjRjZs2MDVq1fx9PRkx44dyphLly6xadMmIPsoh0mTJgFw9epVFixYwKlTp4iJieHHH3/M
c5B9amoqf/75J/v37+f69etERkaSlpZG7dq18fb2ZvLkyXh75z2aJz4+noULFyrPhw8fjpeXV6Hv
b8+ePfz9999AdtXPNm3a6LUnJyezePFijh8/zrVr10hMTKRGjRo888wz1KxZk0GDBtG0adNCX6co
zn/9E1pdZonOKYSxatmWj/s8n7SILTupNbQPNtWqmDoUISocSUCFEGVS+q14Qj9dTkwTL2pNHEAl
T/dCxzg4ONC/f38lMVu+fHmhCWhAQAAhISEAtGvXjjp16uTpc/LkSUaOHMnly5fztIWGhvLPP/+w
fv16vvvuO/bu3Yu7e+GxFsWSJUuUx+PGjVO+57zPzMxMVq1axb///e9C5/rpp5+Uc0jr1auHu7s7
vXv31quu+2hRqIsXLzJ79mxlzKRJk1i1ahVjx45Fo9Eo/XK2Bed4++23WblyJSkpKXniuHz5Mrt3
72bx4sX85z//YcqUKXrtzs7OrF27ltDQUCA7IV2wYEGB702n0zF58mTlz3PYsGF67Tt37mTMmDHE
xcXpXQ8ODlYe29nZlXgCKoQom9Ju3ZYEVAgTkCJEQogyLeHMFc5N+C9h320i835Sof1fe+3hlqoD
Bw4QHh5eYP9Vq1Ypj/MrPnT9+nUl+axWrRpdunThrbfeYtSoUTg5OSn9Ll68yLvvvltojEURHR3N
77//DoClpSWjR48GoFOnTnorh7m36BorKyuLnj17KsmnmZmZ3vvJz/bt2xkzZoySfFauXNlg1eAj
R46QkpKCubk5TZs2ZfDgwbz//vu0bNkSlUoFZCfPM2bM4MyZM3nGv/7668rjtWvXkpGRUWBcBw4c
UJJPX19f6tWrp7SFhoYybNgwJfl0dXWlf//+TJ06lZEjR9KiRQvMzOSfRCEqCjMrS+w85QgrIUxB
/rUVQpR9Wh2xO45xetR/iN56KLuQST5eeOEF5VxMnU7HypUr8+2bmZnJhg0bALCysuKVV14x2E+t
VtO7d2927NhBVFQU+/bt46effmLlypXExMTord5t2bKFmzdvFuddGrRixQol0evfvz+urq5A9nbh
N954Q+l3+fJl/vrrryLN/d133xEQEICXlxcbN24kOTmZ+Pj4AisIJyUlMWHCBAAmTJjA1atXSUhI
ICkpiT59+uj1rVGjBrNnz+b69esEBQWxceNGvvnmGwICAggPD8fBIbvYlEaj4YcffsjzWqNHj1aO
XLhz5w7bt28v8P0sXrxYeTx+/Hi9toULF5KQkABkJ++xsbFs3bqVr776ilWrVnHy5Eni4+PLZAVk
IUTJUpmb8+yU8VhUrmTqUISokGQLrhCi3MhKTuX6T78S8/tR6k59lcoNa+fpY2ZmxujRo/n888+B
7BXOjz/+WFlxy23Xrl3cuXMHgN69e+e7+tevXz/69etnsM3CwoK33nqL//73v8q1kJAQatSoUdS3
l4dOp8PPz095nrP9NseYMWOYNWsWmZnZ9xf6+fnRvn17o+c/deoUrVu3ZufOnTg7OyvXC1oFjYqK
Qq1Ws2LFCkaNGqVct7S0xNLSUq/v7t27853Hw8ODfv36KR8Q5Kxc5ubm5kbPnj2VFeDly5czaNAg
g/PdunVLOfDe1dWVAQMG6LUHBgYqjydPnmzw98HBwUFJisVjMDNDpTZDZfbgK9dj1Gao1GrDbXrP
VdnPH+mnXFOpsudSqVCp1aBSoTJTZfdRPeivUqFSmz1oM1P6oHowf047D8aqzED1IH7Vg3aVCnLm
hYdzkNNO9nyq7DYe/F7ljEfFw+c8eJ7rdy/376FOpyMlIoqM+4mozNVUesZdEqRSYGZpiVOThlhX
dTF1KEJUWJKACiHKFTMbK6p0b0Ulr5r59smdgIaFhXHo0CF8fX3z9DNm+60x6tSpg4+PD2fPngXg
2rVrdO7cudjz5di/fz9hYWEA1K1blxdeeEGvvWrVqvTt2xd/f38ANm/ezPfff2/04fKurq5s27ZN
L/k0xowZM/SSz+J6+eWXlQT02rVrBvuMHTtWSUD//PNPoqKiDN5ju2zZMiURHzNmTJ5kOKdiMGTf
0ztw4MDHjt9YahtrzK0roVKbYWZunp0cPfiuPFc/vG6Wk6Sp1ajM1Q8fGxivUqsxe9D2sP/D8Wbm
D8cqiZ/6kWt6j3P3y/XY/JE2s1z9cyeOpVCESwghxNNFElAhRLlRpXsrnhnbB0vnghOsunXr0rFj
Rw4fPgxkr5w9moDevXtXqfTq7OxMr169Hiu2ypUrK49zEqHH9csvvyiP33jjDYOrduPGjVMS0JSU
FNavX59n+2l+PvnkE6pVq1akmNzc3Pjoo4+KNCY/xvzMevfuTfXq1bl16xZZWVmsWrWK6dOn6/XR
arV6P6tHV4oBWrduzcmTJwH49ttvsbGxYfr06XkS1dLw3NSJuHZpUeqvI4QQQpQHcg+oEKLMs3u2
No1/fJ+6U14tNPnMkbsYkb+/P4mJiXrtmzdvVlbFhgwZUuREJCEhgeDgYA4ePMjmzZvzVFZ9XLGx
scqWUgsLC733k1vXrl2pVauW8jz3lt3CuLgUfQtafgWHjKHRaIiKiuLUqVPs2LGDAwcKP5PQ3Nxc
b7V1+fLlefrs3r2b69evA9C5c2e94kM5ZsyYoSS86enpfPLJJzRs2JBvv/1WuTdUCCGEEKVPElAh
RJll6eqA14cjafz9v7CrX7RqhYMGDaJSpez7p5KTk9m8ebNee3G2354/f55//etfuLq64uDgQIMG
DejcuTODBw82eA/j41i5cqWyKtixY0fS09OJiIjI83Xjxg369u2rjDt58qTBirKmkpqayqpVq+jQ
oQNWVlbUqFGD559/npdeeokvv/zSqDnGjh2rPA4JCeHo0aN67bmLD7355psG53B3d2f//v16Z6WG
hYXx/vvvU6dOHebMmUNycnJR3poQQgghikG24AohyhyVpQXug1/AfWgX1NbF2yJpZ2fHK6+8wooV
K4DslbOcYz3CwsKUJMbLy4s2bdoUOFdmZibDhg1TtrpC9jbf5s2bU6NGDezt7Vm2bBk3btwoVqyG
5F7J3L9/v94qpzFjFy5cWGKxFNf//vc/Bg4cqJwPamlpSceOHfHw8MDNzY1r164pZ5kWpF69erRv
316p8rt8+XLatWsHQGRkJDt37gQMFx/KrWXLlly4cIEvv/ySRYsWkZaWBmSfMTpjxgxWr17N9u3b
8fLyeqz3LYQQQoj8yQqoEKJMce7UlKbLZ/DMmJ7FTj5z5N62+tdff3HlyhUA1qxZo1wfMWJEgXNo
NBqGDh2qJJ+NGjVi//79hIaGsmnTJr799ls+/fTTIiWIhTl48OBjraiuXbtWSa5M5a+//qJv377c
u3cPlUrFzJkziYyMZO/evSxdupQvvvgi323FhuReBd20aZOyWunn50fWg2N5DBUfepSrqyvz588n
IiKCL774QjnWBuDSpUt06tQpz3ZtUXwnTpyga9euT7ToU2EmT55M165d2bZtm6lDEUKICklWQIUQ
ZYKtVw1qTxyA/XN1S2zODh064OnpqVSSXbFiBV988QWrV69W+hSWgPr7+7N161YgeyXu0KFDxbp3
siiWLFmiPB42bFie6reGhIaG8vXXXwPZBZb8/f0ZPnx4qcVYmDfffFNJEhcsWMDkyZMfa77Bgwfz
zjvvkJiYSGJiIlu2bGH48OHKSrFKpcp3+60hVapUYebMmUyYMIH3339f2ZIdFRXF999/z8yZMx8r
XlP7559/+Pnnn4Hsc2x/+umnQpPz6dOnExMTA8Dnn39OzZr5V5o21u3bt9m3b1+x/858/vnnhIWF
MWLECLp06fLY8QAEBAQQEBDAyy+/XCLzCSGEKBpJQIUQJmXuaIfH672p0qP1w7P2SohKpWLMmDF8
/PHHQPZ9nz179lRWQtu0aUPdugUnvEeOHFEeDx8+vNSTzzt37iirrWq1mq+++opnnnmm0HEajYZV
q1Zx69YtIHtl0FQJaFxcHJcuXQLAxsbGYFXaorK1tWXo0KFKcr58+XLs7e2JiooCwNfXF29v7yLP
6+LiwsqVKwkNDeXvv/8GslftyruwsDBl+zlAnz598j3LFuDy5ct89dVXyvP333+/RBLQx7Vjxw4C
AgJo0aJFiSWgQgghTEu24AohTEJlrsZtkC9NV86iaq82JZ585hg9erRyfElkZCQTJkxQ2owpPpRz
dAegt12zILnPnCyq1atXK+N79OhhVPIJ2dVic29pPXTokJJoP2mnTp1SHtvZ2WFtbV3oGGN+Zrm3
4R4+fJhPPvlEeW7s0TP5yX3vaEkdo5jVprkAACAASURBVFOW5N52bkjuolxPSlxcHHPmzOGdd95B
q9Ua7DNgwAAmTJhA48aNn3B0T7f79++zdOlSJk+ejK+vLwMHDuSzzz7j0KFDpg5NCFEBSAIqhHji
HP/vWXz8plNrQj/MKxWenDwODw8PvS2s58+fB7IL4gwZMqTQ8bkTwDVr1ij3G+bIyMjg888/10tU
H6cKbe7tt0XZUgrZCVpOsq3T6Vi6dGmx43gcuX9mcXFx7Nq1K0+foKAgPvzwQ+X53bt3iYyMLHDe
1q1bK4mITqfj3LlzQPZ22v79+xc41t/fn4yMjHzbcx8J06pVqwLnKk/s7bOPLdqxYwf379832Eer
1bJmzRq9c1mfhMjISGbMmMHChQvR6XQG+0ybNo1FixblOcdXFN+xY8do2rQpb7zxBn5+fqSmphIU
FMQnn3yCr68v48aNIyUlxdRhCiGeYpKACiGeGBuPajSYM54GX7yJTc0qT+x1DRW76dWrF87OzoWO
zf0/vn///Tc+Pj4sWLCAP//8k88++4wmTZrw8ccf652N+b///Y+rV68WOc6jR49y8eJFIPvYkN69
exdpfN26dencubPyfOXKlWg0miLH8bgaNGhA9erVlecDBgxg1KhR7N69m2XLljF69GhatmzJqVOn
lKNyAJYuXZonwX9UTiXj3IwpPjR8+HBq1qzJlClT2L17N+Hh4SQlJeHv70///v2VSrp2dnYMHTq0
KG+3TPP19cXJyYn09HS2bNlisM+BAweIjIwssFBQXFwcgYGBBAcHG2y/du0agYGB3Lx506i4rly5
wuXLl5XngYGBylfu5Cc4OJjAwMA85+wmJCQQGBjI2bNnlWvx8fFs2bKF1atX681dmJy5AgMDC1z9
Dg0NJTAwkLt37xo9d1mzZ88eOnbsyI0bN/jxxx9JTEzk+PHjhIWFcePGDdq3b4+fnx+dOnUq9O+i
EEIUm06nu68TQogH/u75b92xLu/qkkIiH2ueuL0ndH93eVf3d5d3dQEvT9dF+R/UaTWaEoqyaFJS
UnT29vY6QPny9/c3aqxGo9G1bdtWb+yjX6+99pouNjZW5+7urlyzsLDQjR49Os98jRs3VvqsW7dO
r23UqFFK26xZs4r1XtetW6cX22+//Wb06+dny5Ytyph69eoZNWbnzp0F/szc3d11e/bs0X3//fd6
12vUqKE7fvx4vvPGxcXpLC0tlf4qlUoXEhJSaDxWVlYFxgPozMzMdFu3bjXq/Rnj9Pivdce6vKuL
23eyxOY01tq1a3WA7pVXXtG9+eabOkDn6+trsG/O792BAweUn8XZs2f1+ixcuFAH6Fq2bGlwjsGD
B+sA3QcffKB3Pef3wMXFRe96t27d8v1zOHHihNKvVatWOkC3cOHCfOfVarW6MWPG6MzMzPTmGTly
pC41NTVPrI/Oefv2beV3auPGjQbfX1JSks7e3l6nVqt1ERERBvuUdZmZmboGDRroAN3atWsN9klP
T9e1bt1aB+gWLVr0hCMUQlQUsgIqhCg9ZiqqvdSOpitn4TagEyq12iRh2NjY6G23dXJyMnp1Ua1W
s2PHDr3trTkaNGiAv78/y5Yto0qVKnz55ZdYWVkB2fcRBgQEGB3jvXv32Lx5MwBmZma88cYbRo/N
bcCAAXoru7nPE32SevbsyY4dO/Dw8NC7bmdnx4gRIzh79ixdu3blzTffpEmTJkr7zZs3CQ8Pz3de
V1dX+vbtqzzv3LmzUcWHpk+fTps2bTA3N1x7r1evXgQFBRW6lbc8yqn0fPjw4Txn1SYnJ+Pv74+X
lxdt27Z9YjGNHTtWrzLyl19+ydy5c5k7d26Rix9NmTKFtWvX0qFDB6ZPn65Ut129erVRBbBcXFyU
McuXLzfYZ926dSQkJNCzZ0+j78sua/z8/Lh8+TLPPvssw4YNM9jH0tJSKdr20UcfkZqaqrStX7+e
cePGceLECSIjI5k9ezbt2rXj2LFjTyR+IcTTQ6rgCiFKhU2tavgsnoKtp7upQwHgl19+4ZdffinW
WCcnJ/z8/Pjss884e/YsKSkptG/fnqpVq+r1Gz16NP369WPfvn14enry3HPP5Zkr577FRzk6OpbI
fVdWVlbcuXMn3/b8Xr8gAwcOzPcevYL07t2bkJAQLly4QHBwMF5eXjRr1kwvCbSysuL06dOcOHGC
W7du0bp16zw/10flLlhk7H2ys2fPZvbs2SQkJHD58mVu3rxJcnIyderUwdvbu9DXLM/at29PrVq1
uH79OuvWrWPq1KlKm7+/P8nJyYwaNeqJxjR48GC8vLxYuHAhAFOnTkVdjA+o4uPj2bhxIwEBATRt
2lS5Pm/ePKZMmcK6deuYNWsW9evXL3CesWPHsnnzZvbs2cPNmzepUaOGXvvixYuBot+XXZYcPnwY
yC6+9uiHabn16tULV1dXbt++zaVLl2jevDmQfe+on58fzZs3Z8GCBQQHB+Pm5ibn5gohikwSUCFE
qajkXT5XCQri7u6Ou3vBCbWDg0OB99JVNFZWVjRv3lz5n9j8tGzZ0qj5QkJC2LFjB2Bc8aFH2dvb
P1VFhoyhUql49dVXmTNnDmvXrtVLQFetWoVKpTKqInRZZGNjQ0BAAG5ubnrXJ0+ezJw5c4iPj+fX
X39l+vTpBc7TtWtXPDw8iIiIYOXKlcyYMUNpO3HiBIGBgdSsWZNevXqVyvt4EkJCQgCoU6dOoX1r
167N7du3CQkJyfN3d8aMGXTv3p2dO3fi6elZKrEKIZ5usgVXCCFEufHdd98pq7HGFB8S2XLOhD17
9qyyCh4ZGcmBAwfo2LEjtWvXNmF0xWdjY5Mn+YTsDz58fHyA7AJJhTEzM2PMmDEAeuenwsPVz7Fj
xxZrlbasyCmMZswW55xtxoaOcvLx8WHVqlWSfAohik0SUCGEEOVCfHw8K1euBLJX9crzdsgnrVGj
RsoW1ZwzQdesWYNWq33i22+flGrVqgEQHR1tVP/XXnsNlUpFaGgof/31F5B9XuaGDRtQq9V659CW
Rw4ODgBGbZlNSEgAsm8/eNRbb70lH/wIIR6LJKBCCCHKhcWLFyv3yXbu3BkvLy8TR1S+5KyCrl+/
Hq1Wy6pVq7C1teWVV14xcWSlI+d3JfeRQAWpXbs2Xbp0AWDZsmVAdiGjlJSUcl18KEe9evUAiIiI
KLRvTh9jCnwJIURRSQIqhBCizMvIyOCHH35Qno8fP96E0ZRPw4YNw8zMjMjISObNm8fly5fp168f
lStXfuy5S6KAVknLWfksylbRnFXOzZs3k5SUpGy/fRp+33IKMZ04caLAfrdv3+b69et6Y4QQoiRJ
AiqEEKLMS01NZfXq1ezbt499+/YxYMAAU4dU7tSoUQNfX18AZs2aBWRXbjZGTuXisLCwPG1LlixR
CkMVRe77KWNjY4s8viAxMTGcOXMGoEjHy/Tv3x9nZ2eSkpJ49913uXDhAjVr1qRnz54lGp8pjB8/
HrVazerVq7l161a+/RYsWEBGRgbdu3enVq1aTzBCIURFIQmoEEKIMs/BwYEuXbooX/md5ykKlrMN
NzMzE3d3d1588UWjxuVUTr1z5w7nz58HslellyxZwoQJE6hUqVKRY8md3OzevbvI4wHu3r3LRx99
RGZmpt71Tz/9lMzMTDp27EjHjh2Nns/Kykr5GeVsw33jjTfKdfGhHI0bN+aNN94gPT2dsWPHkpyc
nKfP//73PxYsWIC5uTnffvutCaIUQlQE8i+4EEIIUUEMHDiQL774gszMTMaNG4eZmXGfQ7dr1w53
d3eioqJo0aIFvr6+BAQEcO/ePaZOnUp4eDibNm0qUiyOjo74+vpy8OBB3n33XY4dO0ajRo0YOXIk
Li4uRs1hbm7Ojz/+yJYtW+jTpw9Vq1Zl79697N27F0dHR+bNm1ekmCB7G27O+aRPQ/Gh3L788kuC
g4PZuXMnbdu2ZezYsTRv3pxbt27x119/8eOPP6JWq/nhhx9o2LChqcMVQjylJAEVQuhRqUAH6NCZ
OhQhyrecv0JmKpOGkZuDg4PBbbSFsbOzY9OmTQwbNozIyEj27NmDh4cH06ZNY/r06QwZMqRY8Sxb
toyhQ4cSEBCAn58fAL179zY6Aa1cuTInTpxgxIgRSrKpUqlo1qwZ69ato0GDBkWOqUmTJrRo0YJT
p07Rq1cvo44tKS+cnZ3Zv38/X3zxBfPnz+fdd99V2szMzHj++efx8/PjueeeM2GUQoinnUqn090H
7E0diBCibDjRfwaaxBQazp2A4/NF/583IUS2U8NmkxF3j8YL/0XlhrVNHU6JyMjI4PLly1haWhYr
uTNEp9MRFhZGdHQ0np6euLu7Fzpm165d9OrVCxcXF27fvg1kb8e9dOkSDRo0wNnZ+bFi8vHx4dy5
c/z+++/06dPnseYqy8LCwjh//jzVq1encePG2NramjokIUQFICugQgg9Fi4OaBJTSLwULgmoEMWU
fvseGXH30KEjPeEe6qgYrKu6YFbO7121tLTEx8enROdUqVTUrVuXunXrPtY8Tk5ORSo4lJ+9e/dy
7tw5nnnmmaei+FBBPD09i1QlWAghSkL5/pdQCFHiXDs3I3J5NLG7jlNjyIuYWcp/JoQoqpjtRwHQ
ZKUR+O//ZF9UqbByccK6qgtWrk5YuThh6eKIlYsTVs6OWDjYY2Fvh6WDHeZ2lVAZeX+mKFnz588H
su8FfRqKDwkhRFkj/2cphNDjPuxFbqzdS0bsXa4v2U6diXLchRBFkXj5OlGbD6BDR0ZW4sMGnY70
2/Gk344vfBKVCnM7W9Q21pjbWKO2tkJtY43ayhKVWk363ftk3EsAnQ61tRW2Nd1Q21iX3psqY66F
XgRAk5LK2c++L7F5r8beYvfu3ZipVLRNUBV5buuqLjzzclds3KqWWEzG0Gm13P4niLBVW0mNjkGX
pcXC0R7rKi6oTHQLssrcHNf/a8Yz/brJhylCCD1yD6gQIo+Y3ccJm7cegGovtaPW+JdRW1uaOCoh
yr74v89zZe4aspLTyMhKIl1z39QhPZXSsjTEpadiplJRw8auxOZNyMzgfmY6FmZmVLcu+tEyAOZ2
trT++UsqedQosbgKEnPoOCE/rSI1qmTPUi0pdV8fTN3XXjF1GEKIMkQSUCGEQeG/bCN60wEALJwq
49qlBXb1nsG8shSpECI3bYaGtKjbxP91lsQL1wDIzEohTXPXxJEJU3Hv0YnGMyeV6mvotFoufbuU
G7/tKdXXeVw27tXosPEHU4chhChDZAuuEMKg2m++TKW6NQj7bjOZdxOJ3nLQ1CEJUebpdFrSsxLI
zEo2dSjChFJvxZX6a1yY8xNRuw+V+us8LisXJ1OHIIQoYyQBFULkq0qX56nS5Xlidhwjbu8J0uPu
oU3LMHVYohgykhLQajINtKiwrOxAZnICOq3W4FiV2hxLO3tURbiZTKfToklLJSs9zcgRKsytrVFb
2RTpdcoCldoMc/tK2Df1wuWFpmQmJ5NyI5rUqBjSYm6TeiuOtFtx2fdsigrBsXH9Up0/fMP2cpF8
Wjra0+DdMaYOQwhRxsgWXCGEqADuXQghYMJMg221hr6Ee49OBLw1i6xUwwlj9Rfb4/PJuwbbCpJ0
LZLL3y8n/uQ5o/pbOtrj+dor1Oz7Yrk/suRRWekZpMXcJv3OXdJv383+fucuGfH3yLh7n8yEJDIT
ksi4n0hWSqqpwxXF5PhcfZrPm4m5rU2pzJ98/SbHxvwbnUaTp62S5zM4N22EdRVnbD3cUVubrjCV
mbka+/qemFeS2zaEEPokARVCiAoiaNpc4o6dynPdzNKS9hsXknDpKqdnfJ3veK83h+E5snhVkWMO
Hyfkh1WkRhtXKMXGvRpe44ZSvUu7crciWhK0miw0ySlkpaY9/EpLJysjE51GQ2ZCEklhEWRlZGJR
uRKVPGqYrNqpeEClwqqKC05NGpbq7+yp9z/nzomzea7XHt4P7/GvVsi/L0KI8kUSUCGEqCASr4Tz
92tTDLbV7NeNZz8YR9iqrVxZst7wBCoVTb+cQtX2LYv1+tqMTK5v2cm1VVvRJKcYNaZyvTp4jx+O
a6smxXpNIZ4m8acvcnLyJ3mu1+jThUbTJpggIiGEKDr17NmzPwSsTB2IEEKI0mXl7EjS9ZskX4vM
05YYGo5btw5Ubd+S5MgoksLy9gGIO3aKKu2ex8rJocivr1KrcXquATX6dCErPYPEkDDQ6Qock3Hn
HtF7DhMfeB7bGtWxqV6lyK8rxNPi0rd+pERG612zqupC8/9++NRtWRdCPL0kARVCiAqkct1aRP62
J2/ip9ORmZhMtY6tcG3TjDvHT5N+J+8xIjqNhtv/BFG9a3vMbYp3f5na2ooqbZpT/YW2pMXcJiUy
qtAxaTG3idp5gHsXQqjk4Y51FedivbYQ5VXqrTguf7s0z/Vn338D+/p1TRCREEIUj5mpAxBCCPHk
VPJwx71HJ4Nt0XsOkxR+A7WVFU3nTsPSxdFgv7RbcQRNm0tWevpjxlKDZnOn0fKHz3BoVM+oMXcC
znD8zQ8J+vArEkKuPdbri/KlT58+dO3alaCgIFOHYhJRuw/l+eDIuqor1V5oZ6KIhBCieOQeUCGE
qGBSY+L4a+g7BqtoVvP9P5p8/gEA9y+GcmLyJ2gzDB3fAlU7tqLJ5x+gMiuZzzJjDh8n9Od1pEQU
viKao0q756n72iBZAcrHP//8w88//5znuqWlJQ4ODlSvXp02bdrQsmVLzPPZwnnu3Dnmz5+PnZ0d
CxcufKx4Pv/8c8LCwhgxYgRdunQp0thKlSqRkpLCvn37ijz2aXB05Hskh9/Qu+Y9/lXqjOhvooiE
EKJ45IYBIYSoYGyqVaHmy12J9N+Vpy3m4D8kBIdhX98Th2e9aTRtAuc+N5x0xB4OIOSnNdSfNKpE
4qrWsTVV2z3PzZ0HuLpsM+m34wsdE3f0JHFHT+Lapjl1xwzC4VnvEonlaREWFsaKFSsK7desWTPW
rl1Lw4YN87TduHGDFStW4OLi8tgJ6I4dOwgICKBFixYVMoksrpQb0XmST8g+Hqk82Lp1K9HR0bz6
6qs4OTmZOhwhhInJFlwhhKiAPEf2x8zK0mBb7iq4bt064jlqYL7zXN/4O5G//llicanUamq+9CLt
Nyyk3sRRWDgat0Hn9t+BHB8/g5PvfU584PkSi+dpEhISQmhoKBcuXCAgIICtW7fy/vvvY2lpSVBQ
EC1atOCXX37JM87Dw4MJEybw2muvPXYMAwYMYMKECTRu3Pix56pI4v4OzHPN4VnvIhflio2NZd68
ecyfP5+srKySCq9Q8+fPZ9KkSdy6deuJvaYQouySFVAhhKiArFyc8BjUk/C12/K03T5+mrtnL+Hk
k70a5jVuKClRMdza95fBuS59twzr6lWo0qZ5icWntrKk9tCXqNn3RSI27yR8w3Y0SYUf3RJ/8izx
J89i39ALzxH9qdKhpZyL+IC3t/7qcMuWLenfvz9jxoxh1KhRnD59mgkTJtCqVSuaNm2q9GvUqBGL
Fi0qkRimTZtWIvNUNHdO5j3307UYf9+WLFnCrFmzgOzfh5deeumxYxNCiKKSFVAhhKig6gzvh3kl
W4NtIT+t0Xve+MO3cfRpYHgirZazn3xLQmjJFwUyt7XBc/RAOmz6Cc9RA1EbWXk34dIVTs/8L8dG
vsfNnQfQZhq+j1XAc889x86dO7G1tUWn0zF16lS99oSEBAIDAzl79mESlJiYSGBgIGfOnClw7kuX
LhEYGEhycjIAwcHBBAYGEhcXl++YpKQk/ve//7Fo0SIOHz5MSopxZ8YChIaGsnbtWvz8/AgKCkKr
1Ro9tqzSabXcO3M5z3WXlkU7G1en07F06cMqun5+fo8dmxBCFIckoEIIUUFZVLaj1lDDKyD3L4QQ
c+i48tzM0oJmc6Zi+4ybwf5ZqWkETZ1LWtydUoq1El7jhtJxy4NE1NbGqHHJ129yYc5PHB70NmEr
/cm4n1gq8ZV3bm5u/Otf/wJg7969hISEKG1Hjx6lRYsWvPDCC8o1jUZD27Ztadq0KefOnTM4Z0xM
DE2aNMHX11e5NmrUKFq0aMHGjRsNjtm2bRvVq1enS5cuvP3223Tq1AkvLy+OHDlSYPyJiYkMHDiQ
evXqMWLECMaNG0fz5s3p27cv9+/fN/bHUCYlXYtEk6yfhJtXssWhYdEKb+3du5dr167Rpk0bAHbu
3El0dHQho4QQouRJAiqEEBVYrcG9scznPsvQn9eh1Ty8T8zCvjLN/zsDC4fKBvun344ncMocNCmp
pRJrTgzZiegiPF97BXM7wyu4j8qIv8cVvw0cHjCBi/N+ITniZqnFWF7l3o4ZHBxcYF8nJyf69u0L
wMqVKw32WbFiBZmZmQwbNoxKlSoV+vqbN29mwIABpKamMn36dPbu3cvKlSt5/vnneeGFF0hNNfx7
pdFo6NChA1u3bmX48OHs3buXP/74gxdeeIE//viD0aNHF/raZdm983n/LBwaeRe5+vSSJUsAmDdv
Hm3atEGj0eRboCo5OZlx48bx0UcfARAYGMiUKVNo06YNr7zyit5qeG4ZGRl8/fXX9OnTh06dOjF1
6lTu3CmdD6WEEOWXJKBCCFGBmdva4PnaKwbbUiKjuLljv9412xrVaTZnGmaWFgbHJF29ztmP5+sl
rqXBonIlvF4fTIfNP1F37JB8k+JHaTMyuLFtL0eH/4tTH3xB7NGT6J6CbZoloW7dhytqoaGhhfbP
SezWrFmD5pEjfXQ6nbLFc9y4cYXOpdFo+PDDD9FqtSxYsIA5c+bw4osvMmrUKLZv387q1asxyyfh
Wrx4MWfOnKFnz56sWbOGF198kV69evHHH39QtWpVtm/fzvnz5bcwVcLlsDzXHBvXL9IcsbGxbNu2
jUaNGtG2bVvlz2TZsmXoHjlbFCAtLQ0/Pz82b97M7t27adeuHQsWLODy5cts2bKFdu3aERWlf1zS
vXv36NKlC9OmTePGjRtUq1aNzZs307x5cyIjI4sUrxDi6SYJqBBCVHA1+76ITY3qBtuuLt+MJjVN
75rjc/VpPHNSvvPdPn6ai18vLtEY82NhV4m6YwbRccsi6r8zBquqLkaPvRNwhtPTv+LIkElcW7et
wm/PrVKlChYW2R8sxMcXfgRO9+7dqVatGjExMezevVuv7dChQ1y5coWmTZvy/PPPFzrX1q1buXr1
Ko6OjowdOzZP+9ChQ7GysjI49uuvvwbgzTff1LtubW1N9+7d0el0/PHHH4XGUFYlhORNQO0bFG37
bc5qdE7iOWTIEOzt7bly5QoHDx7Md9zNmzfp378/n376KTExMURFRdGrVy+SkpJYu3atXt+5c+fy
119/MWXKFE6fPs2mTZsICwvj3//+t3LPr6FkVwhR8UgCKoQQFZyZuTne41812JYRf4/rG37Pc736
C23zHQMQtesgIYvX5Nte0tTWVtR6pTcdNv5AoxkTqVSrhtFj027FEbpoDYcHjOfc598TH3ShFCMt
u+Lj48l8UKwp92pofszNzRkxYgSQdxtuznZPY1Y/AaWYUZMmTbCxMe7+XsgukJSzuhYUFMSiRYv0
vnLucYyIiDB6zrJEq8kiKSzv6qF9vTpGz5GzGm1tbc3IkSMBsLW15dVXs//+FlSMKCkpiTlz5jB1
6lScnJywsbGhe/fuAISHhyv9EhIS+OGHH7Czs+Pjjz9WrqtUKiZPnkzz5s2V50IIIcewCCGEoHrn
NoQ39CLh0pU8beHrt1OzXzesnBz0rtcZ0Z+UmzF5tukq49Zuw8rZkVqD+5RKzIaYmZtTo6cv7j06
EXfsFNc3/M7d0xeNGqvNyCR6zxGi9xzB9hk3avTpgntP3zzv+2l17drDKsb16tUzasyoUaP45ptv
+P3334mPj8fZ2Zn4+Hj8/f2xtbVl+PDhRXrt6tUNr8Tn58qVh7+vn332Wb79Ht0uWl6kRt1C98j2
ZktHe6xcnIye4+DBg4SGhjJ8+HCcnZ2V6+PGjWPx4sVs3bqVu3fv4uSUd04vLy+lOFWOGjWyP9zJ
fY7opUuXSE5OpkOHDtjZ2RkdmxCiYpIEVAghBAD13hrByXdm57melZpG2PLNNHz/jTxtDT8YR1pM
HHdOGC5KErxwJZZOjrh1bV/S4RZIpVJRtd3zVG33PAkh17i+8Xdu7T+GLsu4e1NTIqMJXbSGK7+s
x/X/muHWvSNV2rZAbWVZypGbTkBAgPLY2ATUx8eHZs2aERQUxPr165k4cSKrV68mPT2dMWPG4OBg
XPJ+9+5dANRqdZFirlz54b2/W7duNZhEAbi6uhZp3rIiKfxGnmuVatcs0hy//PILkF0p+MMPP9Sf
q1IlkpOTWbNmDZMnT84z1tg/j5wPEKpVq1ak2IQQFZMkoEIIIQBwbtYI1zbNuf13YJ62G9v3UWtw
b2xr6h/DYmaupskX/+bkO7NJCM57rxrA+f/8gIVDZVxbFe3cwpJiX68Oz330Dt4ThhO59U9u7NhP
5r0Eo8bqsrKIO3qSuKMnMa9kS7XObXDr1gGnps8+VdsJMzMzlXspX3rpJapUqWL02NGjRxMUFMTK
lSuZOHFikbffAnh4eABw69atIkQNnp6eWFlZkZ6ejoWFhd6RL0+D5Ot5qzUXJQG9c+cOv/76KwDb
t29n+/btBvstXbrUYAJqrJzV0PT09GLPIYSoOOQeUCGEEArvCcPBQGKly8oi9Jf1BseY29rQ/L8z
sK1pePukLiuLM7Pmcf/y1RKNtaisq7jgPf5VOvkvpvHMSdg39CrSeE1yCjd37OfkO7M5Muhtgn9Y
yb1zwU9FYZUvvviC8PBwrK2t+e6774o09tVXX8XCwoITJ06wdOlSLly4wLPPPkvbtm2NniPnntPj
x4+TmJi3GNSRI0cMJjdqtVp5nfyOFCnPUm7kTcgrebgbPX7lypWkp6fz1VdfodPp8nzdv38fW1tb
zpw5w8mTJ4sdZ5062fekXr1qIevk/wAAIABJREFU+O94RkZGsecWQjx9JAEVQgihqOzpgXtPX4Nt
MQf+5v5Fw8dzWDo50PybWVg6Oxpsz0pNI3DKlyRHmv7gezNLC9x7dOL/fplD6yVzce/pi1kRt9am
xd7m+sYdBLw9i8P9x3Pp26XEB10weotvWaDRaLh48SJ9+vRR7p+cPXs2np6eRZqnSpUq9OzZE4BJ
k7KrIxdl9RNg+PDhWFlZkZyczLRp05SkXqPRsHTpUnr37p1vov/dd99hbm6Ov78/ixYtMtgnKSmp
SPGUFalRMXmu2eZTsdqQJUuWYGFhwZgxYwy229vbM3jwYKDgYkSF8fHxwcnJiYsXL+pV1c3KymLy
5MmcOHECkCq4QohskoAKIYTQ4zV2CGaWhhOykEX5V7a1da9Gi29mYl7J1mB75r0ETr3/Oem375ZI
nCXBoUFdGs+YSKfffqHBe2Op7F27yHOk37lL5NbdnHxnNgf7vsHZTxcQvecwGUZu831SOnTooHw9
++yz2Nra0qhRI/744w88PDzYuXMn06ZNK9bcOQlOWloaVlZWjBo1qkjja9SowbvvvgvAokWLqFu3
Lt27d8fV1VUplmNtbW1wrI+PD3PnzkWtVvP222/Tvn17ZsyYwdy5cxk0aBA1a9bMc0RLeZEaFZvn
mo27cfdZHjlyhMuXL9OvXz+qVq2ab7833si+t3v9+vUkJycXK047Ozs++OADAPr27cs777zDe++9
x7PPPktQUJBSBVcIIUDuARVCCPEI66oueLzSk/C12/K03T19kbhjp6jStoXBsZW9atN0zlROffAF
ukxNnva0W3Gc+vcXtPzhMyzsKpV47MVlYVcJjwE98BjQg4Tgq9z4fT+39h9Fk/T/7N13WNXl+8Dx
9znsvRwoLkBwm1sUZ+VITbOkoeUqNFeWiZm5LUfilswyt2GiYfp1m1qK5tYMRRRwIgrI3uP8/vAH
heccBTlwBO/XdXFd9bmfz/PckF+/3OdZqUXqJysxmaiDx4g6eAwUCqzrulLBoykOzRthU682SmOj
EvoOnu7YsWP5/2xlZUWTJk2oV68ejRs3ZtiwYQUO9Cmqnj174uDgQGxsLG+++WaB01YLa968edjZ
2TFz5kwiIiKIiIjA2dmZ2bNn079//yfOqn7++ee0adOGUaNGceLECYKCggAwMTGhXr16tG7d+pm/
N33Jzc4hPUb9PlYzx8Ltz83bi/u04tvT05N69epx5coVAgICtM6WPs2kSZPIzMxk7ty5LFu2DCMj
Izp27MjmzZvp06cPINewCCEeUahUqgTAWt+JCCGEeH5kJadw9O3RZCepL120dK5Om7W+KJTaF9Hc
P/IXF6cuBC1L7mwb1aX5wskYmJroLGddy83MIvrEOSL3/UHMifNq12EUldLYCJv6bti9VA+7JvWx
qe+GoXnh77x8UeQtDbawsCjUfaSPS0lJITg4GEtLS9zd3TE0LJuftafdj+Zov5EFnhnZWtN55096
yqhwMjMzCQkJwcXFRa5kEUJoJAWoEEIIjW5s3kmo33qNsQYTR+DU8+Unvn97+36uLPhRa9yhZWOa
zpuI0kh/s4KFlZWYRNShE9zb/yfxl67qplOFAosaVbGu44KVuwvWdVywdquldQmzeLHE/R3C6VFT
CjyzcnemzU/f6ikjIYTQDSlAhRBCaJSbmcWxAWNJj4pWixnb29LOf+lTZ/Cur95C+JoArfFK7Vvx
0qxxKIp4/6M+pT+I5f4fJ3nwx1/E/R2idZb3WRnb22JRvQrm1apgXr0K5k6OmDjYYWxvg7G9LYZm
mvdCivIl6tBx/p62qMCziu1a0HROwX26qZH3SQy5Tk56BmaOlVEal80ZX4WhIZbO1cv1XbtCiEek
ABVCCKHVvf1/cmnWMo0x5w/64jas/1P7uDz/B+7sOKA1XqVrexpOHlMm94dlPIznwdFT3D9ykrgL
l4u9TLcwDMxMMbSyQGlsRE5qGjkZmSgUCpQmxphWqiC/wBeRQqnErGplar3Xu0hXnJS0G7/8j9Dl
6wo8q963G/XGfUTyjTvc/nUv9/88SWZsvJ4y1D2TSg40mz8JK5ca+k5FCFGCpAAVQgihlUql4q+P
viApNEItpjQ2wnPTkqceiqLKzeXvGUu4f+i41jbV3uhK/c+LdnXH8yY7NY2HZ/8h5q/zxPx1nvQH
MfpOSRSBoaU5Hj99i3khT5ktaVf91nNz884Cz1wGvUVaVAz39v2hp6xKnl3TBrRcOl3faQghSpDB
9OnTvwSe31MghBBC6I1CocCiphORe46oxVQ5uWTExuHYuc1T+6jUviWJoRGk3tF8D2hiSBg56Rk4
tHxJF2nrhdLICIuaTlT0bE7Nd3pRuXMbzJwcURoZkRmfSG5mpr5TFE+Qm5mFwkBJhVZN9J0KAJF7
/yA5/FaBZ8k37pAQHKqnjEqHQqmgpldPfachhChBZXOjgBBCiFJj36Q+lTq25sEfJ9Vi9w8dJ75f
D2wb1XliH0pDQ16a9TnnfGYTdz5YY5sb/jtQGBni5v2eTvLWN0vn6lg6V6fWO71QqVQkh98i7uIV
4i5cJj44lIwHsfpOUTwmMy5B3ynky4xVvy83KyFJD5mULseXPfWdghCihMkSXCGEEE+VGnmfoPc/
1Xi3p3W92rReObtQezizU9M4+9lMEi5f19rGdYgXrkPfLla+ZUFmXAKJoREkhoaTFBpBYmgEaVHR
kJur79ReWA0mjcLptU76TgOAoA8+I+XGnac3VChQGhuhMFBiZGWJiYMdlMH91EpDAyq0aUbNd15H
aVh2DiUTQhSdFKBCCCEKJXTFRm78/JvGWMPJY6jarUOh+slKSub0mOkkh93U2qb2R+/iMuitZ8qz
LMvNyiL17n1S79x79HU7ivSYWDJj48mISyDzYUKpHHT0IqrWpwv1Pvd+bg7DOtRjiMZ7ePMYO9ji
Nqw/jq+0xcBEdlIJIcoOKUCFEEIUSnZKKsfeHUNmfKJazKSiPe1+XoqBaeF+Ec6IS+D0qKmk3o7U
2sbt4wE4D3jjmfMtr7KSkslOTSM3I4usxGSSwm+Rm5GJib0txvY2+k6vTDKvWhnTyhX0nUa+3Oxs
DnbWvhTdolY1Wiye+mi2UwghyhgpQIUQQhTanR0HuDz/B42xoi6dTY+O5fSY6aTdjdLaxn3UQGq9
+3qR8xSiLEuPjuXPNz/WGFOaGNN2rS/m1aqUclZCCKEbSn0nIIQQouxw6vkyllru6Iv4+TfSowt/
sI5pRQdaLpmGWZVKWtuE+q3nxmNXUQhR3mU+1H4YknP/PlJ8CiHKNClAhRBCFJrCwIA6YwZrjOVm
ZHJt5c9F6s+0cgVaLJ3+xOWPoX7ridgYWKR+hSjLtJ3GqzQxpka/10o5GyGE0C0pQIUQQhSJQ4tG
VGzbXGPs3r4/Sbii/YRbTcwcK9Ji6XRMKjlobXNt5c+ErQkoUr9C6NKvv/6Kn58fcXHq16PoWoaW
ArRS+1YYWVuV+PhCCFGSpAAVQghRZO6jBqIw0HxVQsjSNUXuz7xqZVounY5JBXutbcJWb+Haj/5F
7vtFc/v2bXx9fdm4caPWNjt27MDX15ekpNK5V/LQoUP4+voSEhJSKuOVhIULFzJ69GiiorTvWdaV
LA0HfQFU7uRR4mMLIURJkwJUCCFEkVnUqEr1N7trjCX8E0rU70FF7tPcyZEWS6Y9sQiNWP8roSu0
F1YCwsLC8PHxYfHixVrbrFu3Dh8fn1KZzQMIDAzEx8eHCxculMp4ZV3KrbvqDxUK7Js3LP1khBBC
x6QAFUII8Uxch/TDyNpSYyz0u43kZGQUuU+LGlVpuXzGE5fj3vj5N0KWrEalUhW5f6EfvXv3Zs6c
Obz00kv6TqVMSLmpXoCaVHLAyNJCD9kIIYRuSQEqhBDimRhZWWq9diX9QQwRG57t4CBzJ0daLZ+J
qWNFrW1ubd1D8Gw/VDk5zzSGKF1dunRh4sSJ1KtXT9+plAnpD9RPk7as6aSHTIQQQvekABVCCPHM
qvXpioWWX4xv+O8gNfL+M/VrVqUSrZbPxMzJUWubyL1/cGHKAnIzs55pDFFQSkoK3t7eTJkyBYBz
587h4+NDmzZt8PLy4u+//9b4XnBwMPPmzaNTp0506NCBAQMGcPbs2QJt/P398fb25vTp02rvZ2Zm
8u233/L666/Tvn17JkyYQGxsLPPmzcPb25t79+4VO8fs7GwWLFhA79698fDwYMSIEdy4cUNj27x8
evXqRceOHfPzKU1Ziclqz6zcnIvV56lTp/D19WX58uXk5uZqbBMVFYWvry9bt24t1lhCCPEkUoAK
IYR4ZkrDJ1zLkpnF1eXrnrlv08oVaLl8BubVq2ptE330NOcmzCY7Ne2ZxxGPpKens2rVKgICAti7
dy+enp4sWbKEkJAQtm7diqenJ5GRkQXe8ff3p2HDhsyfPx87OzuMjY3Zt28fV65cKdDu+PHjrFq1
irCwsALPY2Njad++PV988QXXr1+natWq7Nixg2bNmvHdd9+xatUq4uPji5VjfHw8nTt3Zvz48Vy9
ehWlUsn3339Py5YtuXz5slrbV155hS+++II7d+5QuXJlAgICaNasGbdv39bFj7lQctLVl69b13Ep
Vp/Ozs7MnTuXMWPGsGLFCo1thg0bxoQJE6hYUfvqAyGEKC4pQIUQQhRLhdZNqNiuhcZY9NHTxJy6
+Mx9m1awp+Wy6VjUqqa1zcOz/3D2s5lkJanPGomiu3v3Ln379mXGjBncv3+fyMhIevToQXJyMps2
bSrQdsmSJSgUCo4ePUpgYCAHDx4kJiaGd999t1BjTZ06lVOnTjF06FCCg4P55ZdfCAkJYfr06URH
RwNo3OtblBxnzJjBsWPH8gvV48ePs337dmJiYpgxY0aBtnPnzuXYsWP5ByZt2bKF8PBwxo8f/8R8
dCk7NQ00jGHTwK1Y/VasWJEFCxYA8OWXX3Lnzp0C8fXr17Nz505GjBhBx44dizWWEEI8iRSgQggh
iq3OmMEojY00xkKWrCY3O/uZ+zZxsKPl8plY13XV2ibh8nVOj5qqce+cKJrk5GTmzJnDhAkTsLOz
w8zMjG7dugGoLVs1MDBApVIVmKUEMDQ0fOo4Dx484IcffgDgs88+Q6n891eSIUOG0KxZMwAUCsUz
5xgTE4Ofnx+WlpZ4e3vn9/X6669jY2PD1q1byfj/w7ISExNZvnw5lpaWTJ06Nb8PhULBmDFjnpiP
LiVdv6nxuVmlCsXue9CgQbzyyiskJSUxcuTI/OeRkZGMHTuWWrVqMW/evGKPI4QQTyIFqBBCiGIz
r1qZWu/11hhLvRXJrYDdxerf2MaKFkumYde0gdY2yRG3OfnxJJLCbxVrrBdd7dq1+fTTTws8c3J6
tM8357FDnwYOHAhA586dmThxInfvarg+RIvLly+TnZ1NpUqVaNBA+3/X4uR4+fJlsrKyqFq1KitW
rGDhwoUsXLiQxYsX4+DgQG5ubv5M4JUrV0hJSaFp06ZYWmo+3bk0aPrzqzB6ekFfWCtXrsTMzIyd
O3cSEBAAPFp6Gx8fz6pVqzR+7yqVijVr1jBw4EBatWpF3759mTVrFomJ6veVPr5Pd9u2bQwYMIAP
PvhAZ9+DEKJskwJUCCGETji/3xdTLbM0YWsCyIgp3p2ThuZmNJs/iYqempf7AmREP+T0qCk8PB9c
rLHKsryZxCctFc2LaZrNMzAwKPRYw4cP56effsLExIR58+bh6urK+PHjyczMfOq7eTOVbdq0KfKs
YmFzjIiIACA0NJTPP/+8wFd4eDjw6OCd/7atXLlykXLRtbTb99SeGZqZ6qx/V1fX/BneTz75hEWL
FrFr1y6GDRvGK6+8otY+MTGRrl27MnToUE6ePImLiwsPHjxg2rRpNG7cmPPnzxdo/999ut9//z39
+vVj586d3L//bAeSCSHKHylAhRBC6ISBqQnuowdqjOWkpXPV79kPJMofw8SYl74eT5Wu7bW2yU5O
5eznXxN1+ESxxyuLqlZ9dGjTgwcPtLaJi4tDoVBQqVKlYo83dOhQrl69yldffYVSqWTBggWMHTv2
qe9VqPDow4q0tJI7QKpKlSoAeHl5oVKpNH55enoC/86cZjzD/bW6lBYVrfbMUMf3f44fP57GjRsT
FRXFuHHjqFGjBr6+vhrbzpw5k4MHDzJixAiuXLnC5s2bCQoKYvv27dy6dYtBgwapzYwD3Llzh0mT
JhEYGEhMTAz79+/X6fcghCi7pAAVQgihM46d22DfrKHGWNTBIB6e+6fYYygNDWg4eQzV3+yutY0q
K5u/py7k5pb/FXu8sqZGjRoolUqioqJITtZ8MNOtW7eoXLkyJiYmOhnT0dGRr7/+mvPnz2NkZMTm
zZufWsi5uT06VOfcuXNqbSMiIvJnKIujfv36ABw9epTsp+xDdnZ+dM3J4yf15inMrK4uZMSqrxQw
trPR6RiGhoYsXbo0/98nTJiAlZWVWrvY2FiWLl2KlZUVc+fOLbBPt3fv3vTo0YNLly5pvLYlPT2d
jRs38sYbb2BsbKzT/IUQZZsUoEIIIXSq7qdDURho/r+XKwtXFetAojwKhYJ6n31I7WHvPbHd1WXr
uLLoJ1QaZmjKK2NjY9q3b092drbG6zaCgoIIDw+nbdu2xR7r8aLMxcWFChUqkJCQQGpq6hPfrVOn
Dp07dyYmJoaxY8eSlJREUlISW7dupV27dvl9F2VJ8OOqVavGW2+9RVRU1FMP12ncuDF2dnZcvnyZ
I0eO5D/PyclhzJgx+XeYlvQpuJnx6vsqTSrY6XycnTt35v/z8uXLNX5gkLeHtkmTJlhbW6vFO3To
AMDFi+onXdeuXZsePXroMGMhRHkhBagQQgidsnSuTg2vnhpjKTfvcvMX3c1KunzwJg2/GoXiCUXK
7V/3cm7CHLJTnlwQlSd5xdbEiRP57LPP2LdvH8ePH8fPz48+ffqgUCiYPn16scdxdXVl3LhxbNu2
jT179jBo0CDu3btH9+7dsbN7etG0ZMkSqlSpwsqVK7G1tcXe3h4vLy8mT55M3bp1AYo9S7tkyRIc
HR2ZPHky/fv355dffmHPnj3MnDmTHj165N8Famlpyeeffw48mt375JNP+Oyzz6hfvz7nz5/PPwW3
pGUnp6g9M3PU7b2cf/31F4sWLaJDhw44OTkREhLC7Nmz1drlzUI7Ojpq7CfvuS5mq4UQLw7dHasm
hBBC/D/XIV5EHQwiI+ahWix87VaqvNoO08rFv1YCoGr3Thjb23Fxsi85aeka28SeusjJj7+i6byJ
mFfV7yEzpaF169YcPHiQ4cOHs3jxYhYvXpwfc3Z25ueff6ZRo0bFHqdp06Zs2rSJRYsWAY9mpvv3
78/y5csL9X6jRo04d+4cK1as4MKFC9SuXZvu3bvTpUsXVq5cCaBx5q0onJycuHTpEqNGjeLXX3/F
398feFRwNmjQAFPTfw/4mTRpEpmZmcydO5dly5ZhZGREx44d2bx5M3369Mn/HktSTpr6TKS5k+YC
8FlkZGQwZMgQzM3NWbduHRcvXuSNN95g7ty5vPPOO/nLluHffbpJSUka+0pISCjQTgghCkOhUqkS
gOL97S6EEEI8JurQcf6etkhjrFLH1jT5erxOx0sMjeCcz2wyH8ZrbWNka02Tb3ywa1xXp2M/r3Jz
c7lx4wahoaHk5ubi5uaGs7Nzoe7pLIrIyEiioqJwdXXFxqb4+xWzs7Oxt7fHwMCAuLjinZ78eL9X
r17FzMwMZ2dnrcVkZmYmISEhuLi4lPqVLPs7vA2PLfNtvngaDs01760uqi+//JK5c+eyfPlyRo0a
BTw6pGnr1q14enpy9OjR/J/LtWvXcHd3x9XVlevXr6v1NXr0aPz8/FiyZAmffPIJ8GjfaIUKFahT
pw4hISE6yVkIUb7IElwhhBAlwvHltti30DzL9uCPk8T8dV5j7FlZuzvTasXXWNR00tomKz6RM5/O
4O6uQzod+3mlVCpxcXGhe/fu9OjRAzc3N50Xn/Do5N1mzZoVufhMT08nNzdX7fmyZctISkpiyJAh
ukoReHT4ToMGDXBxcXniTKaxsTGNGzcu9eIzNytLrfgEnvhnuijOnDnD/Pnz6dixIyNHjsx/vmzZ
MmxtbQkKCsqfeYZHB0V5enoSFhbGvn37CvQVFxfHpk2bsLCw4M0339RJfkKIF4MUoEIIIUpMvc8+
RKGl4LmyaBU5Or7ywrxqZVp9/w0OLRtrbaPKyiZ47gou+/6gkwORxLNbv3499vb29OzZk7lz57J0
6VK8vLwYN24cdnZ2TJgwQd8plqq0e5qvzjFxsC1235mZmQwZMgQTExNWr15doAB3dHRk/vz5wKN9
w/fu/XsX6ZIlSzA1NaVfv34sXLiQI0eOsG7dOjw8PIiPj2fatGlUq1at2PkJIV4cUoAKIYQoMRY1
nKj17usaY2mRDwhbo359Q3EZWVrQ9NtJVO/b7Ynt7vx2gNNjppERo7slnqJoqlevTqdOnbh+/TpT
pkzhs88+4/Tp0wwePJgrV65oPfymvEqOuKP2TGFooJN9p7NmzeKff/5hzpw5uLi4qMU//PBDOnXq
REJCAmPGjMl/3rx5c86cOUP9+vUZP348nTt3ZvDgwaSmphIQEICPj0+xcxNCvFhkD6gQQogSlZOe
QdD7n5J+P0YtpjAwwGP1t1i51CiRsW9t3U3IsnWgYZlnHmMHW5rMGo9tozolkoMonMzMTFQqlc7u
Ji2Lwjf8yvUf/As8M7Qw5+W96/SUUUFJSUlcu3aN6tWrU7Gibk/mFUK8OGQGVAghRIkyMDWh3riP
NMZUOTlc8f2hxO5WrNGvB83mTcTA3Exrm8zYeE6PmcbNgF0lkoMoHGNj4xe6+ARIvX1P7Zmhpbke
MtHMysqKZs2aSfEphCgWKUCFEEKUuIptm1O5k4fGWPylq9zdebDExq7g0RSPH+dgXqOq1jaqnByu
Ll3L+S/nkZWUXGK5CPEkqRr2gBrbyiI1IUT5IktwhRBClIr0mIcEDfiUnNQ0tZihlQWem5ZgYlf8
Kzy0yU5N49LXy4g+evqJ7UwrVaDxjE+xbShLcrU5evQof//9N127dsXNzU3f6ZQbR98ZTVrk/QLP
KrZvRdPZ2vdZZiWlkBAcSnLEbVLu3if+QjCZCUmgUmFka41pRQdK+OrSYlEYGlLBoynV3+iKQinz
IkK8CKQAFUIIUWpubdtDyOLVGmOOr7aj8bSxJTq+SqUifP02wn7aovG6izwKAyW1vd+jVv8+OjkA
prQcPnyYs2fP0q5dOzw8NM8451m5ciW5ubmMGDGiyOOMGTOG5cuX4+/vz7vvvquxzYMHD1i/fj1K
pZKxY8diYGBQ5HFeNL93+4Cc1PQCz2q+15s6Iz8o8CwnPYPIPUeI3P8nCcHXnvhnuaxwHfo2rkO8
9J2GEKIUyEdNQgghSk31vt2wruuqMRZ18Bixpy+W6PgKhQLXQf1o+u2XT9xbp8rJ5dr3mzg7bhbp
0bElmpMupaen4+Pj89STSUNCQvj4448JCgoqsVx+/PFHfHx8+Pzzz9m9e3eJjVNe5GZmqRWfAFa1
a+X/s0ql4vb2/fzpNZIrC1eR8E9ouSg+ASL3/qHvFIQQpUQKUCGEEKVGoVRS32c4aFlqd9n3R53f
DapJRY+mePz0Ldb1aj+x3cMzlzg+6HOiDh0v8Zx0oWvXrlStWpVjx45x/fp1re02bNgAwAcffKC1
TXGoVCp++umn/H9ftWpViYxTniTfVL+CBcDcqTIAWUnJnPOZzZUFP5IVn1iaqZUKEwc7facghCgl
UoAKIYQoVdbuztT06qExlhZ5/9Hy2FJgXrUyrb6bRc13ej2xXXZSCn9PW8TFaYvIfM5/8TcwMMgv
KteuXauxjUqlYuPGjTg6OvLqq6+WSB4HDhwgIiKCNm3aALB7927u3VM/4VX8K/FquMbnphUdyIxP
5PSoqcSevFDKWZUOY1tr6o4drO80hBClxFDfCQghhHjxuH74DlGHT5DxQH15641f/ofjK55Y13Ep
8TyUhobUGT0Iu6YN+OcbP7KfcALu/UPHiTv3D/U+99Z6ou/zYPDgwcybN4/169czc+ZMlI/NNv/x
xx/cunWLcePG5e/LVKlUBAcH89dff3Hy5EkuXryIg4MDvXr1Yvjw4RgaFu3XhR9//BEAX19fxo8f
z4kTJ1i7di1ffvmlWtuUlBQ+/fRTHB0dmTVrFtu2bePXX39FqVSyYcOGp8YLm/vixYsJDg7G29ub
Vq1aqeWxfv16jh49yldffUWtWrUACA4O5n//+x979uwhNzeX6tWrM27cOJo3b16kn0dhxF+8ov5Q
ocDIxoozn84gOeK21nfNa1TFrlFdLGo5oTQ2ISsxGaWRAebVq2BgaqrzXHVJaWiAdR0XDC2en+tm
hBAlSwpQIYQQpc7QzJR64z7iwsR56sHcXILnraD1D3NRGpbOwTWVPFvQds18/p6xmPhLV7W2y4xP
5OKUBVRs35J6n32IaUWHUsmvKOrWrYuHhwd//fUXBw8epGvXrgXimpbfPnz4kEaNGlGlShWaNGlC
xYoV+f3339m7dy+RkZF88803hR7/wYMH/PbbbzRo0IC2bdvi7e3NiRMnWL16NRMnTlQ71Ck9PZ1V
q1ZRp04dnJycGDFiBFZWVvmHKD0tXtjcjY2NWbVqFUlJSWzevLlADllZWfj4+GBqasrKlSsB8Pf3
p3///jg4ONC+fXuSkpLYt28fr732WskUoJevqT0ztrUmYmPgo72eGjh2aY/z+29g5VJD5/kIIURJ
kSW4Qggh9KKSZwsqd26jMZZ07QY3f9lZqvmYVq5Ay2UzqP3RuyiecmJr9NHTBL3/Gbe27UGVk1NK
GRbekCFDAPVluGlpaWzdupWGDRvSpEmT/OdmZmb89ttv3L59m927d7Nr1y6OHDmisY+nWbt2LVlZ
WXh7ewPwzjvvYG1tzfWzaQmlAAAgAElEQVTr1/P71OTOnTtMmjSJwMBAYmJi2L9/f6Hihc29f//+
mJqasn37duLi4gr0HRgYyIMHD/joo4/yZ4yXLFmCQqHg6NGjBAYGcvDgQWJiYrSe+lscOekZpN5W
X6JsUrkCERsC1Z4bmJnSZPYEGk/9RIpPIUSZIwWoEEIIvan76VAMrSw0xsJWbyHl1t1SzUdhYIDL
oLdo9f03mFev+sS2OalphCxezV8fTXzirKk+vPPOO5iZmREYGEh8fHz+899++43ExETef//9Au3N
zc3p3bt3gatSPDw8cHBwIDIykqysrEKNq1KpWLVqFaampvkzrObm5vTv3x948mFE6enpbNy4kTfe
eANjY+NCxwubu62tLW+99RYZGRn4+/sX6Pv777/H0NCQDz/8MP+ZgYEBKpWqwM8PKPJy5MKI13Ka
bU5qmvoHHEolTedNpFL7ljrPQwghSoMUoEIIIfTGxN6WOqMGaozlZmYRPHcFKj1cM2FT15U2a759
dEDRU+4BTbp+g1MjJ3Np1lLSNexp1QcbGxv69u1Lenp6geWmGzZsQKlUMmDAAK3vJiYmEhISwh9/
/JG/XDankLO8R44c4dq1a7z11lvY29vnP8+bDf3111/VZh/z1K5dmx49NB9OVZh4YXLPKzBXr/73
LtqrV69y+PBhevbsSdWq/37oMHDgoz+XnTt3ZuLEidy9W3Ifhmi7fkjTrKjzgD7YN21QYrkIIURJ
kwJUCCGEXjn1fBn75g01xuIvXeX2tj2lnNEjBiYm1Bk9iFZ+szCvXuWp7e/tP8qx9z7h+o+byU5N
K4UMn+zxZbj3799n//79dOrUiWrVqqm13717Ny+//DK2trbUr1+fwYMHay0Wtfnhhx8ASEpK4ssv
v8z/CggIwMLCIn8WU9cKm3unTp1wcXHh7NmzXLp0CSB/z+fw4cMLtB0+fDg//fQTJiYmzJs3D1dX
V8aPH09mZqbO84/RdrrtYx++GNta4zLwLZ2PL4QQpUkKUCGEEHpXf8LHGJiaaIxdW/kzafcelHJG
/7JtVIc2a3xxHvjmU/eG5mZmEr5+G0e9RnLDf0ep3Gmqzcsvv0yNGjU4efIkV65cwd/fn+zsbI13
f27ZsoXXX3+d1NRUtm/fTnR0NBEREVSp8vTCO09sbCyBgY/2K+7YsYO5c+cW+EpJSQEocD+oLhQl
d4VCwdChQwFYs2YN6enprFu3jpo1a9KtWze19kOHDuXq1at89dVXKJVKFixYwNixY3Waf2rkfZLD
bhaqbc13emn934kQQpQVUoAKIYTQO/Oqlak97D2NsZz0DP6Z851eluLmMTAxxs37PTxWf4tNQ/en
ts9KTCb0uw0cfWc0NzbvJDstvRSyLEipVDJo0CDgUbG1YcMGzMzMeOst9Rm0+fPno1Kp2LFjB717
98bBoein+65bt46MjAzmzZuHSqVS+0pISMDc3JyLFy9y5syZYn9/z5r74MGDMTAwYOPGjWzatImH
Dx8WOHzocY6Ojnz99decP38eIyMjNm/eTIYOP1i4f+h4odopTYyp1qeLzsYVQgh9kQJUCCHEc6HG
W69pLe7izgdzO3BfKWekzsqlBq2++5oGX47E2Nb6qe0zY+MJ9VvPUa+RhK3eQmZcQilk+a+8AnTl
ypWcO3eON954AysrK7V21649ugIkKSkp/1l0dDSpqanAo72VT/Pjjz9iZGTE4MGDNcatra15++23
gScfRlRURc3dycmJbt26ER0dzbhx4zA0NMyfFf2vx5fauri4UKFCBRISEvL7Li6VSsXd3UcK1bZq
t44YWVnqZFwhhNAnKUCFEEI8FxRKJQ0njkRhpPmU0WvfbyI18n4pZ6VOoVDg1KMznv5LqeHV86nL
cgGyEpIIWxPAn/1G8M+c70gICSuFTMHV1ZUOHTrkF2Galt8CtGvXDpVKRb9+/fDz82PSpEnUq1cP
C4tHJxT/8MMPJCcnax3n6NGjhISE8MYbb1CpUiWt7T766CPg0R2beUtyi+tZcs87jCgxMZFevXoV
OHwoj6urK+PGjWPbtm3s2bOHQYMGce/ePbp3746dnZ1Oco/56zyptyML1bZGv9d0MqYQQuibFKBC
CCGeGxY1naj94TsaYzlp6Xo7FVcTI0sL6n4ymLYbFlGpfatCvZObmUXk7sOc9J7IiaE+3Nq2p8Rn
RfMOI6pcuTJdumhewvndd9/RvHlzLly4wOjRo/H392fjxo3s2rULU1NTpkyZwqJFi7SO8eOPPwIw
bNiwJ+bi6elJvXr1SExMJCAg4Bm/o+Ln/vrrr1OxYsUn5ty0aVM2bdpEv3796NGjB5s3b6Z///5s
2rRJJ3mrVCrCVm8pVNsKHk2xdK6uk3GFEELfFCqVKgF4+joiIYQQohSocnI4NXIyCZeva4zXHTuE
Gv2efB2HPsT9HcL1H/2Ju3C5SO8pDJTYt2hM5Q6tqNi2BSYVdDO7VlS5ubmEhYVhYGCAi4tL/vPE
xEQiIyOpU6dO/tUmz5ui5p6amkqNGjWwtLQkPDxc6/5PgMjISKKionB1dcXGxkZnOd/ZcYDL838o
VNtW33+DbYOn7z0ujISEBH788UcMDAwYPXo0RkZGGtutXr2ajIwMRowYoZNxhRAijxSgQgghnjvJ
N+5wYqgPqqxstZjS2Jg2a+ZjUUN92eTzIPb0Ra7/tIWE4NBnet+qdi3smzfErkl9bOrVxsRBPwVp
ebZixQpGjhzJrFmzmDx5cqmPn3D5GqdGT9X45/txlTu34aWZ43Q2dnh4OK6urgBMnz6dadOmaWxX
t25d4uPjiYqK0tnYQggBUoAKIYR4TkVs2s617zUvd7Sp70ar72YVav+lvjw8H0z4+m08PHOpWP2Y
VLDHolY1LGpUxcyxIsb2tigMDchKTEZpZIhZlUoYmBjrKOvyT6VS0fL117hx5zb/HDiMY0Xte1Z1
SWFoiHm1KkT9HkTIktWFKj6N7W1pu9YXYzvdzbz+twA1Njbm7NmzNGyofg+vrgrQMWPGkJKSwurV
q4vVjxCi/JACVAghxHNJlZPDqVFTtc4k1h72Hi4fvFnKWRVd4rUIbgXs5t7BY4UqOkTJikhJYNPt
K9S2sOXd6nX1nY5WCiNDmi+YjH3TBjrtN68AVSqV5Obm0qpVK44fP47BYx/m6KoAVSgUODg4EBMT
U6x+hBDlhxxCJIQQ4rmkMDCg4VejUWqZ3Qv7aQuJoRGlnFXRWbs503DSKDps+x63jwdgXr2KvlN6
oTlb2DC5rsdzXXwamJnSdPYEnRef//XGG29QrVo1Tp069cQDpjQJDw/Hx8eHbt264enpyfDhwzlw
4ECBNufOncPb2xuA5ORkvL298fb2Zvny5Tr7HoQQZZMUoEIIIZ5bFtWr4D7ifY0xVU4Ol2YtJScj
U2P8eWNiZ4PzgDdo9/NSWi6fSbU+XTCyUb+TU7zYFAYGuH74NhU8mpboONbW1nz//fcATJ06levX
NR/69bgtW7bw0ksv4efnh0qlwtHRkR07dtC1a1c++eST/HYxMTEEBQUBkJ2dTVBQEEFBQVy+XLRD
uoQQ5Y8swRVCCPFcU6lUnP10Jg/P/aMxXsOrJ3U/GVy6SelIbnYOcReCiQ46Q/Txs6RFPtB3SuI5
4fiqJw2/HIXSWPMptc8qbwnu4MGDWbNmDR988AEbN26kY8eOHD58OP+0YE1LcO/du4e7uzsmJiYc
PnyYRo0aAZCUlETv3r05cuQIW7ZswcvLK/8dWYIrhHiczIAKIYR4rikUChpOGoWhhbnG+K2AXcSe
+buUs9INpaEBDi0aU3fsUNr/4ke7X5bTYOIIqr7W6dG9j0+4HkSUb1EHgzg7/huyU9NKdJzFixdT
qVIl/vjjD1auXPnEtr6+viQnJzN69Oj84hPAysqK+fPnA49mU4UQ4klkBlQIIUSZcG//n1yatUxj
zMTBjjbrFmBczpa05mRkkHIzktQ790i9G0VGbDypd6NIDrv5qDBRgaGZKSYV7Z/rE4FfdBnxiWQl
JmFiZ4N9i5cwsbchKzGZlIhbxP8TSk5autZ3K3q2oMlsHxQ6+jDi8RlQgICAAN5++22srKwIDg6m
evXqGmdAX3nlFQ4dOsTvv//Oyy+/rNa3ubk5GRkZpKSkYGpqCsgMqBBCnaG+ExBCCCEKo0rXDjw4
dob7h0+oxTJi4wiet4KmsyfoIbOSY2BigrW7M9buzvpORZSQ3OxsYv46T8SGQBIuX1OLRwed4fpP
v+Dm/V6J5eDl5UXfvn0JDAzk448/ZteuXRrbhYeHA+Do6Kgx7ujoSEREBDdu3KBu3ef3kCchhH7J
2h4hhBBlRn2fYZhUsNcYiz56mjs7DmiMCfG8UhoaUqldS1qvnE3Dr0ZpPPU5YkMg8f9cLdE8vvvu
O+zs7Ni9ezcbNmzQ2KZChQrAoz2fmiQkJBRoJ4QQmkgBKoQQoswwsrKk4VejtcZDlq4l+cadUsxI
CN2p2r0TTedORGH42AI1lYp/ZvuRk5FRYmM7OjqycOFCAD777DPi4+PV2ri7uwMQGqp+N29MTAwP
Hz7Ezs5OrQDNyckpgYyFEGWVFKBCCCHKFIcWjaj57usaY7kZmfw9fVGZuZpFiMc5tGiE+0j1q4dS
b98jbM3WEh178ODBdOvWjdjYWO7fv49KpVKLA6xcuZLc3NwCsWXLHu3P/uCDDwo8t7OzIz4+XmPR
KoR4MUkBKoQQosxxG/YeVm61NMaSw24R6re+dBMSQodq9OuBXZP6as9v+O8gPlh9n6gurVy5EktL
S42xLl264OXlRVBQEL169eLXX39l3759jB07llmzZuHk5MSMGTMKvNO+fXsARowYwY4dO7h48WKJ
5i+EeP5JASqEEKLMURoZ0Xjapxr3ywHcDtzHgz9PlXJWQuiGQqGgvs9wlMaP/fnOzeXi1AWkP4gt
sbFr1qzJ3Llztcb9/f2ZOXMmx44d46233qJ79+58//33eHl5ceHCBWxtbQu0X7x4MY0bN+bQoUP0
6dOHefPmlVjuQoiyQa5hEUIIUWbd+d/vXJ73vcaYoZUFbVbPx8yxYilnJYRu3Pjlf4QuX6f23KxK
JV6a9TnWdVz0kNUjKpWK8PBw0tPTcXd3x8jISGvb3NxcwsLCSEtLw93dPf+KlufFnj17CA4O1hrv
3LkzzZs3L8WMhCjfpAAVQghRpl2ctoj7h45rjNnUr01Lv1koHz/URYgyQJWby9nPZvHw3D/qQaWS
Kl3aU+u917FyrVn6yZUjAwcO1HryL8CiRYv49NNPSzEjIco3KUCFEEKUaVnJKfw1dAJp9x5ojNd8
uyd1xgwu3aSE0JHMhCRODptIWqTmP98AZlUrYduwDpbO1TGtXAGFgQGZickoDQ0wr+qI0rhsfACj
MDTE0rk6BlqW1peUvAJ03rx5DB06VC1uYWGBmZlZqeYkRHlWNv5GEkIIIbQwsrSg0bRPOT1qCioN
1z3c3LILu5fqU6lDKz1kJ0TxGNtY0Wz+JM58NosMLXs/0yIfPLFALUtMKjnQbP4krFxqlPrYlpaW
coepEKVADiESQghR5tk2cMNthPrVFXn+me1H6t2oUsxICN2xqOFE6+++xlIPRVlpy3gQS8ji1fpO
44nu3r3LpEmT6NOnD82bN6dXr16MHj2aBw8KfgigUqlYs2YNAwcOpFWrVvTt25dZs2aRmJio1qe/
vz/e3t6cPn2apKQklixZQo8ePejXrx/btm3Lb/fHH38wYsQIWrRowfvvv09ERMQT+3rw4AHz5s2j
S5cuvPbaa3z77bdkZ2er5fnPP/+watUqvL29adWqFa+99hp+fn5qbVNSUvD29mbKlCkAbNu2jQED
Bqhdv3Pu3Dk+/vhjWrduTZ8+fVi1alXRfsiiXJMZUCGEEOVCrXd6EXc+mOigM2qx7JRULnzlS+uV
32BgYqKH7IQoHtPKFfBYNZfw9b8SsWk7qqzsp79URqXfj9Z3CloFBATw0UcfkZiYiJubGw0aNODG
jRscOHCAESNGUKlSJQASExN56623OHjwIO7u7jRt2pTbt28zbdo0fvrpJwIDA2natGl+v8ePH2fV
qlV4eHjw+eefExQUhLOzM2FhYWzbto19+/aRnJzM22+/ja2tLdnZ2Zw9e5YbN25w7NixAjnm9dWy
ZUu8vb25ePEiVapUISoqir1797J3717279+P4f/vjX/48CGNGjWiSpUqNGnShIoVK/L777+zd+9e
IiMj+eabb/L7Tk9PZ9WqVdSpUwcnJydGjBiBlZUVHh4e+W02btzIRx99hEql4tVXX+XIkSPs2LGD
8+fP4+fnV5L/eUQZITOgQgghyo2GX43CtLLmJXTJYTe5svCnUs6obDh69Ch+fn5cu1ayd0yK4lEa
GVH7w3fouO17anu/h0WtavpOqUQ4vuypl3FTUlKIjY0t8JWWlpYfv3v3LkOHDiUxMZE5c+YQGhpK
YGAg58+fJyUlhTp16uS3nTlzJgcPHmTEiBFcuXKFzZs3ExQUxPbt27l16xaDBg0iR8OWgQkTJmBh
YcHNmze5fv063333HfBon+qQIUNYt24d9+7d4+7du7i4uHD8+HHu3r2r8fv54osvaN68Obdu3SIy
MpLw8HBcXV05fPgwGzduzG9nZmbGb7/9xu3bt9m9eze7du3iyJEjAKxdu1Zj33fu3GHSpEkEBgYS
ExPD/v37AYiMjGT48OE4Oztz8+ZNdu3axZ07d+jQoQMrVqx44mnD4sUhM6BCCCHKDSMrS16a9Tmn
Rk5Bla0+QxS5+zA29WpT/Y2uesiudBXlaoktW7awfPly/P39cXNzK60UtUpPT2f58uXY29trPBTm
RWdsZ4PLwDdxGfgmGXEJxP8dQsqNO6Q/iCU9OpaksJtkJ6cCYGRlgYmDHSgUes766ZSGBlRo04ya
77yul/EnTJjAhAkTCjybPXs2X375JQDz588nOTmZjh07MnHixALtDP9z0nZsbCxLly7FysqKuXPn
olT+O9/Tu3dvevTowa5du9i6dSvvvPNOgX5atWrF9u3bMfn/lRo9e/YEIC4uju3bt/Paa68BYGRk
RKdOnQgPD+fPP//kvffeU/t+hg4dyoIFC/L/vVatWkyZMoXBgwezZs0aBg8eDIC5uTm9e/cu8K6H
hwcODg5ERkaSlZWlds1Oeno6W7ZsoUePHgWe+/r6kpqaSv/+/XF0dATAysqK3r178+eff+Lv78/X
X3+tlqt4sUgBKoQQolyxqVebup8M5spCzXuOQpaswap2TWwb1tEYLy/8/f2ferXE83q3YUpKCj4+
PtSpU0cK0KcwsbOhcsfW0LG1vlMp8/r160e7du0KPGvbtm3+P//9998AakXj4y5fvkxWVhYeHh5Y
W6tfNNGhQwd27drFxYsX1foaNGhQfvEJjw5GAqhevXp+8fl47PF9mnlatmyp9izv+wkLC9P4TmJi
IpGRkdy/fx/F/39okZOTo1aA1q5dW634BLhw4QIA0dHRLFy4MP953ng3b97UOK54sUgBKoQQotyp
3rcbcZeuEnXgqFpMlZ3NxckL8Php3qOZoXLuSVdL6NP+/fv5+eef8fLyyp/lyWNubs6cOXOwt7fX
U3biRdS5c2dGjhypNZ534E/Nmk++dzU8PBwgfwbwcXnP89qVJgcHBwBiYmIKPN+9eze+vr75S29r
1qxJXFxckfvP+xktW7ZMYzwqSg6DE7IHVAghRDlV32cYls7VNcYyYuO4MNmX3KysUs6q9OVdLfH4
l77vNTxx4gTr1q3TeIqnmZkZEydOZNiwYXrITAjN8grH2FjN1+HkybvKJSkpSWM8ISGhQLvSFB8f
DzyaUc2zZcsWXn/9dVJTU9m+fTvR0dFERERQpUqVIvef905wcDAqlUrt68CBA7r5RkSZJgWoEEKI
csnQzJQms30wtDTXGE/4J5QrC+RqgKcJDw/Hx8eHbt264enpyfDhw7X+EhkfH8/evXuZMWMGr732
Gh4eHgwZMoSQkJAC7aZPn86OHTuAf6+M8Pb25tatW4D6VQ95Hn9+7tw5fHx8aNOmDV5eXvlLJB93
8uRJPv74Yzw8PHj33XcJDAzkypUreHt788MPPxTr5yNeHPXr1wceHdr1JO7u7gBaD/W6evVqgXal
KS+n2rVr5z+bP38+KpWKHTt20Lt37/xZ0mfRoEEDAA4dOlS8REW5JgWoEEKIcsu8WhUaTflEa/zu
rkPc2rq7FDMqW7Zs2cJLL72En58fKpUKR0dHduzYQdeuXfnkE/Wf65QpU+jVqxe7d+/GxsaGmJgY
1q5dS9u2bQvckXj+/Pn8YjMsLIygoCCCgoJITk4G/r3qISAgoED//32+d+9ePD09WbJkCSEhIWzd
uhVPT08iIyMLvLN69Wrat2/Phg0bcHBw4OHDhwwcOJBhw4axatUqfv/9d13/2EQ5NWbMGJRKJWvX
ruXMGfXrnvK4ubnh6elJWFgY+/btKxCLi4tj06ZNWFhY8Oabb5ZovmfPnkWlUhV4lncfp7e3d/6z
vKL0vzO20dHRpKY+OshK072l2owaNQoDAwO++eabp84UixeXFKBCCCHKtYptm+M69G2t8avL1xF7
+mIpZlS6nna1hDb37t3jww8/xMTEhJMnT7J//362bdtGaGgonTp1YtmyZWoFopeXFzdu3ODkyZNs
3ryZ69ev061bN+Li4vjtt9/y2/3222+MHj0agMmTJ3P58mUuX76cP8P0NHfv3qVv377MmDGD+/fv
ExkZSY8ePUhOTmbTpk357W7dusWoUaMwMzPjxIkT7Nq1i/3793Pt2rX8Q1Ue/wVdCG2aNGnCuHHj
yMrKokOHDvj4+LBhwwa++OILWrduXWBlwJIlSzA1NaVfv34sXLiQI0eOsG7dOjw8PIiPj2fatGlU
q1ay1+gsXbqUV199lQ0bNrBv3z4+/PDD/A9q+vbtm9+uXbt2qFQq+vXrh5+fH5MmTaJevXr5+8R/
+OGH/A+HnqZJkyZMmjSJqKgoGjVqxKJFizhw4ACrV69m2LBhjB8/vkS+V1G2SAEqhBCi3HMZ3I9K
HVppjKlycrk4ZSEpNzXfpVfWTZgwQW3/5+LFi5/6nq+vL8nJyYwePZpGjRrlP7eysmL+/PkATJ06
tcA7HTp0UPululevXoBuT79MTk5mzpw5TJgwATs7O8zMzOjWrRsAN27cyG+3YMEC0tPT6dKlC40b
N85/7ujoyKRJkwDyT/oUojDmz5/PypUrMTc3x9fXl4EDB7J48WIyMjIKHJrVvHlzzpw5Q/369Rk/
fjydO3dm8ODBpKamEhAQgI+PT4nnunTpUuzt7Rk8eDDdu3dn/fr1vPvuu+zfv7/An/vvvvuO5s2b
c+HCBUaPHo2/vz8bN25k165dmJqaMmXKFBYtWlTocWfOnElAQABGRkaMGzeOrl278tFHH3Hw4MH8
k3vFi01OwRVCCFHuKRQKGk4ew6mPvyI5/JZaPDsllXMT5tD6hzkY21jpIcOS87SrJbTJu06hQ4cO
arEWLVpgZmZGaGgo6enpmJqaFojn5ORw7949oqKi8g8Z0nZVxLOoXbs2n376aYFnTk5O+WPnuXjx
0cz2yy+/rLOxRfmzfv161q9fX+j2w4YNY9iwYURERJCWloa7u3uBe0DzNGjQgJMnT5KUlMS1a9eo
Xr06FStW1NjnsmXLNJ4ca29vr3WWfsmSJSxZskRrnjY2NgQEBJCcnMz169epU6eOxsPHatSowalT
pwgLC8PAwAAXF5f8WN4Kgzp1Hl1b5eDgUKhVA/369aNfv37ExMRw69Yt3NzcsLIqX3+3imcnBagQ
QogXgqGZKU3mTOCk90SyEtWXk6VF3ufCl9/SYvFUlMZGGnoom552tYQ2hblKIiIighs3blC3bl3g
0SFEX3/9NevXryc6Ohpra2u14lQXDAwMCtUubza0MAW3EEXl7OxcqHZWVlY0a9ashLPRztLSkiZN
mjyxjVKpxM3NTe25tbW1xrtMCytv1YUQ/yVLcIUQQrwwzKtW5qVvfFBomK0AiL8UwqVvlsu+QIp+
lURqairdunVj8eLFjB07lvPnzxMXF8fs2bNLJ2EN8nIrzJ5XIYQQpUNmQIUQQrxQ7JvUp/54b4Ln
rtAYv3/oONeqVMT94/dLObPni7u7O2fOnCE0NJTWrVsXiMXExPDw4UPs7Ozyi7zDhw9z6tQpRo0a
xVdffVXocf67ZFbX3NzcOHv2LMePH6dNmzYFYnL6bfmhUqnIik8kIzaerMQkspNTyU5NJTs5lZzM
LNLvx5AccRtVdjZGNtZY1qoG5Xjrr+Ht+7g6ViUp6BzXEnP1nU6hKRRKLGpVw/FVT9mbXc5JASqE
EOKF49TzZVJuRXLj5980xm9s+g3TShWo8Wb3Us7s+TF48GB+/vlnVq5cyYABA1Aq/100lbdX7YMP
Psh/pukqB/h3GezjVznY2dkBj+7oLCkjRoxg8+bNfPvtt7Rp04Y2bdpw+fJlfH192bNnD1D45bxC
v3Kzski5eZfkiNuk3r1P2t0oUu9GkRYVTebDBFRF+CAj+tjpEsxU/14DXqvdFi5EEHEhQt/pFFnM
yQs0mjxa32mIEiQFqBBCiBeS2/D+pN6N4sEfmgugkMWrMbazwbFzG43x8q5Lly54eXkREBBAr169
+Oijj7CwsGD37t0sW7YMJycnZsyYkd++bdu2KBQKNm/ejI2NDXXr1mXHjh0EBwejUCg4cOAAly5d
yj9R19Pz0SzHzp07mT17Nm3btqVFixY6PSWzQ4cOjB49muXLl+Pp6YmxsTGZmZnUqVOHZcuW8fbb
b2NiYqKz8YRu5GZmkXgtgoTgUBKuXCfp+k1Sb0eiyik7s3ni2d3b9wdu3u9iWln2jpZXUoAKIYR4
ISmUShpN+YQzMTNICA5Vb6BScWnWUoxtrbFv2qD0E3wO+Pv706hRI+bPn58/Y2hsbIyXlxd+fn7Y
2trmt23VqhW+vvsiliEAACAASURBVL5MmjSJZcuWYWRkxIABA9iyZQsjR45k06ZNNG/enLS0NAwM
DGjevDmzZ89m6tSp+Ut2r169iru7u06/h2XLltG5c2f27NlDfHw8nTp14q233uKvv/4CKNYBK0I3
ctIziL8UwsNzwTw89w+JoRGodHhqsiiDlLIEtzxTqFSqBED+9hVCCPFCyoxP5OTHX5F2N0pj3MDM
lBZLp2NT17WUM3t+qFQqwsPDSU9Px93dHSMj7acEJyQkEB4eTt26dQtc+XDlyhWqVq2KjY1Ngfbx
8fGEhYVRpUoVqlatWmLfw+O+/fZbvvjii/xDk0TpSo64Tcxf54k+fpb4S1eLtIRWlG/Venehvs8w
fachSpAUoEIIIV54qXejOPXxV2TGJ2qMG1lb0nL5TCydq5dyZqK4UlJSsLCwKPAsISGBRo0aERMT
Q0REBJUrV9ZTdi8OVU4OcX+H8ODPUzw4dpr0qGid9m9oYY6xgy0mdjYYWphjaGmOoYU5BqYmZKWk
knbvAajAxN4Gi5rVdDq20BEFWDpXp1K7lvrORJQwKUCFEEIIIPFqGKfHTCcnLV1j3MTBjpbfzcK8
qhQrZUm1atWwtbWlQ4cONGnShDt37rB69Wru3r3Ll19+qddrYso7VW4ucRevEHXoOPeP/EWWlg94
Csukgj2WrjWwrOmEmZMj5k6OmFWtjGlFewxMZS+vEGWFFKBCCCHE/4s9fZFzPnO0Lgc0rVyBlstn
YuZYsZQzE89CpVIxbNgwLl++TEhICA8fPsTKygp3d3cmTJjA22+/re8Uy6Wk8Fvc2/cn9/YfJSPm
4TP1YVLBHpv6tbGp74ZNfTesatfEyEp3B1QJIfRHClAhhBDiP6IOn+Dv6YshV/OJm2ZVKtFi2XTM
KksRWtYkJSVhZWWl7zTKpazkFKIOBnH3f7+TeDW8yO+bVHLAvmlD7Js1wL5ZQ/mQR4hyTApQIYQQ
4jF3dx0ieO4KrXGzqpVouWwmppUcSjErIZ4/CVeuc3v7fqJ+DyI3I7PQ7ykMlNg2qkuFNs2o2KaZ
7K8W4gUiBagQQgihwc0t/+PqsnVa42ZVKtF88VTZEypeODkZGUQdDOLWr3tJCo0o9HtKY2MqtG5C
pQ6tqOjZAiMri6e/JIQod6QAFUIIIbQIX7eN66s2a42bVLSnxeJpWNQovetDhNCXtKhobgfu487O
38lOSi7UOwoDAyp4NMXxlbZU9GyBobnZ018SQpRrUoAKIYQQTxC2JoCw1Vu0xo3tbGi+cApWtWuW
YlbPh0OHDnHu3Dl69epF3bp19Z2OKCEPL1zmVsAuHhw7o3Vv9OOs67pS9bVOOL7iibGN7LsVQvzL
UN8JCCGEEM8z1yFeqHJzCV+7VWM8My6B06On0mTuF9g3qV/K2elXYGAgy5cvp1q1alKAljO5WVlE
/X6cm1v+R9K1G4V6x9DKgqrdOuDU85Uy+YFMfHw8q1atwsLCghEjRug7HSHKLZkBFUIIIQohbPUW
wtYEaI0rjY1oNG0slTu0LsWs9OvAgQOcPXuWPn36UK9evWfuZ//+/fz88894eXnRs2dPHWYoiioz
IYk72/dzK3AvmbHxhXrHpn5tqr3RDceX22BgUnbv47x+/Tpubm44Ojpy7949facjRLklM6BCCCFE
IbgOfRulqQnXVmzUGM/NzOLi5AXUGTOIml4vRhHVpUsXunTpUux+Tpw4wbp162jRooUOshLPIuXW
XW7+sovIvX+Qm/n002yVxkY4vtqOGm92x7qOSylkKIQoL6QAFUIIIQrJuX8fDExNCFn0k+YGKhVX
l64l9fY96o4dgsLAoHQT/A9/f38OHTrEsGHDqFmzJmvWrOHgwYMYGhrSuXNnxo0bh6Gh+q8BKpWK
tWvXcvjwYUJCQnBycqJZs2aMHTsWa2trrWO0bNlS4/PGjRuzZs0a9u/fT3R0ND179mT8+PH5Y0+f
Pp2dO3fmv3fx4kUApkyZQo0aNUrqxyP+X+yZS9zc8j9iTpwrVHuTivZU79uNar27yN5OIcQzkQJU
CCGEKIIab3bH0NyM4LkrUOXkaGxzO3AfqXfu0XjGZ/wfe3ceV1XxPnD8cy8gm4AICrKIiCjuouWC
ZWqKWy5lpVbfXNps85dlZpZmbvnta6tmUpppmuaSuWtqabmvIAKC4MKOgIDs2z2/P4gTV0ABgYv6
vHvx4txzZuY8cyrlYc7MmFjVr+UIixw5coRly5bx4IMP8tJLLxEQEECTJk2Ij49n9+7d7N69m99/
/10vCb1x4wYjR45k3759tGzZEm9vb6Kiovjoo49Yvnw5mzdvxtvbu9Q9Hn30Ub0EtPi8j48PM2bM
YM+ePTRq1IjExEQOHTpEYmIin332GQBnz54lMjISgIiICFJSUgDIyKjYKqui8nR5+cTt/ZurG3aQ
ERFZoTo2bTxxG/UYjXt1Q2tsuF+sGEJmZiZvvfUWjo6OzJkzhzNnzrB27VoOHTqEi4sLM2bMoEOH
DgB8/fXXBAYGMn36dNzd3Uu19e2333L27Fn++9//YmtrC0BBQQFfffUVBw8e5Nq1a3h7e/Pee+/R
rFkzvbolf7Hj6OjI8uXL2bt3L//73//w8fFRY/3999/Zvn27+v+8t7c3s2fPLhXLmTNn+O677zh7
9iyOjo4MHTqUF198sZqfnhClaQ0dgBBCCHG3cRr4CN4L3sPIrPz5bsknz3HsxfdID79ai5GV9t57
79GlSxciIyOJjY3l0qVLeHh48Oeff7J6tf7rxLNnz2bfvn28+uqrhISEsG7dOg4fPsxvv/1GZGQk
Y8eOpbCcpLss7777LteuXePYsWMkJCRw4MABAPz8/FAUBYAtW7bwxhtvAPDhhx8SHBxMcHAwbdrc
Xws61Ybc5BTCl//CXyMnErTg29smnxojLQ59fei6dD7d/Obj2Nfnvks+AXJycli2bBkbNmxg9+7d
9OzZk6+++ooLFy6wceNGevbsSWxsLAAmJiYsW7aMH374oVQ7GRkZTJ06lTNnzqjJZ2pqKn369GHK
lCmEhoai1WpZunQpDz74IMHBwXr1i3+xc+rUKfr378/HH3/M5cuXSU9PV+Ps2bMnI0eOJCAgAA8P
Dy5fvsz69aVX8V69ejU+Pj6sWLECe3t7Dhw4wEsvvcTrr79e3Y9PiFIkARVCCCGqwL67Nw989REm
Dcpfxy879hrHJ04ndvfBWoxM34QJE1i+fDmurq4ANGvWjBkzZgCwYsUKtVxycjJff/01VlZWLFiw
AK323x8Rhg0bxuDBgwkMDGTjxrJXAy6LnZ0du3fvplu3bmg0Gh555BFsbW3JzMwkKSmpmnoobic1
6CLnZn/NXyNf5dKPG8lLvXHL8saWFriNHsrDv3xDx48n06CtZy1FWrfFxMTw+OOP8/HHH5OQkEBs
bCyDBw8mIyODNWvWADB69GhMTU1ZtWqV+kuWYuvWrSMjI4OXXnpJPffxxx9z6NAhNaE9cuQIv/32
G0lJSXz88cdlxjF9+nQ6depEREQEsbGxDBgwAIADBw4QEBDAqFGjOHXqFL/88gvnz5/n/PnzevVj
Y2N55ZVXcHd35+rVq+zYsYPo6Gh69erFt99+S1BQUHU+NiFKkQRUCCGEqCKbNp5085uPpZtzuWV0
uXmcn7eYwLmLKcjOqcXoipR8NbZY8et6ERER6rng4GDy8/Pp1KlTqbmeAL169QJQ52hWxMyZM2nc
uLHeOWfnomdVmZFUUXmFubnE7PyTYy++x4mJ04nf+3e5r4wXM3dqTKtJ4+n161Javf48Zg72tRTt
3SEjI4NPPvmEqVOnYmtri7m5uZr8XblyBQBbW1uGDh1KZGQkf/75p17977//HktLS5555hkAkpKS
+Oabb6hfvz4vvfQSGo0GgKFDh2JjY8PGjRvJzc0tFUeHDh1YtWoVzZvrL/5k9M+c8xs3bqArsV/r
zXO9Fy5cSFZWFs888wyOjo4AWFlZMWzYMBRFYe3atVV9REJUiMwBFUIIIe6AhZMDXZfOI2DG51w/
da7ccnF7DpIWHEa7D940+IiSnZ0dgN4o5KVLlwDUH0hvVny+uFxFGBlwEab7VebVGKK37iVm1wEK
0jMrVKdBB6+i+Z0PPYhGK2MT5WnRogVvvfWW3rmyfqEybtw4Nm7cyI8//kjfvn0BOHfuHCdOnOCF
F17Ayqpo8abiX/q4u7vz7bff6rVrZ2dHWloa0dHReHh46F179dVXqVevXqn4+vbti4uLCzt37qRb
t27MmDGDoUOHqoltMX9/fwASExP5/PPP1fPFv5C6etWw0wbEvU8SUCGEEOIOmdS3pPP/phP2zSoi
N+4st1xWVBwnXvuQZmOG0WLC02jrmdRilP9KTS3a37H4tVwAe/ui0a7i+WQ3S0tL0ysn6o6C7BwS
/jxKzPY/SA28UKE6GiMjHB/1we3pIVi38rh9BVHhX6gMGDAABwcHNm3axDfffIOVlRXff/89gN7r
t5cvXwYgLCyMd955p8y24uPjSyWgt4rv6NGjvPjii+zZs4fhw4fToUMHli5dSo8ePUrdd9GiReXe
U4iaJL/mEkIIIaqB1tgIr/8bT/uZk9Calh6dUOl0XFnzG0fGTSH5VGDtBVjCxYsXgaIRnWItW7bU
u3az0NBQvXI1QV7LrThFpyP51DkC5y7m4PCXCPpkSYWSz3oNrGk+diS9Nn5L+xmTJPmsAcbGxjz7
7LNkZWWxceNGcnJyWL16Ne3bt6dbt25quSZNmgDw1FNPoShKmV89e/as1L1dXFzYvXs327dvp3v3
7pw7d47evXurK02XvG9QUFCZ99y7d281PAUhyicJqBBCCFGNmvR/mG5+87FwbXLLcllRsZyePJtz
s74kOyGxxuI5ffp0qcVQli1bBuiPxnh6etKzZ08iIiLYs2ePXvmUlBTWrFmDpaUlTzzxRLXHWLwi
6PHjx6u97XuJotOREhBCyBfLOTjiZU5PnkPcnoMUVmBusbWXB+0+eINevy6lxYujMbW3rYWI719j
x44F4Mcff2Tjxo2kpqbq/f8GqCs9//333xQUFFTr/YcMGcLhw4cZN24ceXl5evM627ZtC8Aff/xR
rfcUoqIkARVCCCGqmZWHG92Xf4rT4D63LRu//zCHxkwidPEq8tLKfv31Tnz99df069ePn376iT17
9vDCCy+oW0c8/vjjemW/+uorzMzMePLJJ/n88885cOAAK1eupHv37qSmpvLRRx/h4uJS7TH27NkT
jUbDtm3bmD9/PgcOHJB9QP9RmJtL4pHTBP/Pj4PDX+LkGzOJ+nU3eSlpt62rrVcPp8F96PbdJ3T/
fgFOAx9Ba2KY177vNx06dKBTp078/fffzJs3DzMzM5577jm9Mi4uLowcOZL4+Hj++9//3vE98/Ly
9D5rtVoeeOABAOLi4tTzr7/+OkZGRsybN4/k5OQ7vq8QlSVzQIUQQogaYGxuRrv3X8O+a0eCP1tG
QXr5CZWSX8DVX7YRveV3XIb1w23UUMwa21VLHF9//TX79u1j3Lhx6HQ6jI2NGT16NMuXLy+1OEmX
Ll04deoUEyZMYMqUKerIqYuLCxs2bODJJ5+slphu1qVLF+bPn8/MmTP54IMPgKJXfmvydd+6LONK
NNdPB5J09AzXzwahy8uvVP36zZvi/NijOA18BBMryxqKUtzO2LFjmTx5MhcuXOC5555TR/pL+uqr
rzh8+DAffvghQUFBDB8+HGtra06ePMmxY8dYuHBhhffE/fLLL9m5cydPP/00rVu3JigoiE8++QRj
Y2OefvpptVynTp2YPn06c+bMoX379rz77ru0a9eOqKgojh07hrW1NQsXLqy25yDEzSQBFUIIIWqQ
46M9se3UhuDPvifx75O3LFuYk8vV9TuI3LSLRj4P4DysH/YPdkBzB6vJ2tjYsGHDBjIyMggPD6dV
q1aYm5uXW75t27YcP36c9PR0Ll68iKurK40aNSqz7KJFi8pcyKS88wCBgWXPe502bRoTJ04kIiKC
Jk2a4OTkVIHe3f10BYVkXIokLSiMlIAQrp8NIu96aqXbMa5vgWPfnjgP6YNNG9m3sy549tlneffd
dykoKCj1+m0xZ2dnAgMDef311/n111/VV2Xr169P27ZtMTMzq/D9WrZsyc8//8xbb71Ffn7RLy2a
Nm3KunXr1K2Xis2ePZsOHTrwzjvv8PbbbwOg0Who1qwZzz//fFW6K0SFaRRFSQPK30VbCCGEENUi
fv9hQhetJDc5pcJ1TBpY08inC416dsG2vRf1bG0qVO/NN99k8eLFrF27ltGjR1c1ZFGNCrKyybgc
Tcalq2RciuRG2GVuhF5Cl5t3+8pl0NYzwb6bN018H6aRTxeDraosqkdBQQGhoaGYm5vj7u5e6g2F
isrLyyMkJAQrKyvc3Nxuu3pvUlISkZGReHp6qlvECFGTJAEVQgghalFBVjYRKzYQuWEnShVWfTV3
dqS+mzOmjRqSn5aBAphYWWDZzAWjEvP7Znz/DSt3bWPx5GkMe7h39XVAUM/WBrtunTA2LxqdKszN
oyAzi4LMbPJvZJB3PZXc5BRyk66Tk5BEVkwCWTHxVRrZvJm2Xj3sunbA4ZHuNH74QYwtLe64TSGE
qE2SgAohhBAGkBkVR/iydST8caRG2j9xPY7Q9Os8bO9CM8uKjZqKOkqrxcjcFGNzM4zMzdRXsjUa
DfzzVXQMGq1WrVM0gKYBrUYtq1dHW+KcVovmn3poQKMp8V1bRj1uqn9T+8Vl1LpFAf97XqMpiq9U
XEUx/1vnn3oUX/unTonveuOEJUcNbxpBVBSFzMtR5KWlozU2wrKZCyZW9e/wX879x8i0Ho0f6YaF
k4OhQxF3KUlAhRBCCANKD79CxA8buHboJNy0XYoQQtRFWtN6PLh4NjZeso+sqDxJQIUQQog6ICs6
jiu/bCduz18V2tdRCCEMyaF3dzrOecfQYYi7kCSgQgghRB1SkJ3DtYPHiN11kOv+waDTGTokIYQo
pfEj3eg0d4qhwxB3IUlAhRBCiDoqPz2DpGP+JJ/wJzXoIllRsYYOSQgh0NYz4YGvP6ZBW9nyR1Se
JKBCCCHEXSI/PYPMqzFkxyaQEhhKethlCnNy0ZoYY+HqhHF9WRG1phXk5mFsWo/Gvbph4eKIxkiL
1vimbdVLzuXVO1T+vab8W7bo/L/1FLVMUXlFvaag6BT9cmqZ4jZ0RZd1/3xHAZ2iltWroyvRpk5X
FJJOR1GYJb7rblHv5jaVovvBv8dqf0rGpPar+D4ln02JOspNz6jk8y1+DuU+e/051YpOIeNyJPk3
MtAYG2HZ1IV6NrIIUWVpTevh8Eh3LJveH3v1iuonCagQQgghhBBCiFqhNXQAQgghhBBCCCHuD5KA
CiGEEEIIIYSoFZKACiGEEEIIIYSoFZKACiGEEEIIIYSoFZKACiGEEEIIIYSoFZKACiGEEEIIIYSo
FZKACiGEEEIIIYSoFZKACiGEEEIIIYSoFcaGDkAIIYQQoqR9+/aRlJSEi4sLDz30kKHDEUIIUY00
iqKkAdaGDkQIIYQQAqBnz54cOXKEESNGsHnzZkOHI4QQohrJK7hCCCGEuGtkZ2cTHh7OhQsXDB1K
pSQkJODv7096erqhQxFCCIOSBFQIIYQQd43Jkyfj6enJO++8Y+hQKiw+Ph5HR0e8vb3vusRZCCGq
mySgQgghhBBCCCFqhSSgQgghxD0oIiICX19ffH19SUxMpKCggEWLFjFkyBBsbGxo1aoVCxcuRKfT
ldvGlStXGD9+PG3atMHCwoKuXbsyd+5cvToBAQH4+voyZMgQ8vPzS7Wxfft2NY6kpKRS18+cOYOv
ry8zZsyoUH927NgBwIkTJ9R2fX19yc3NLVXHz8+P/v37Y2tri4uLCyNGjODcuXMVel5Xr17l3Xff
pW3btnTo0EEtV1BQwO+//86rr75Kx44dadiwIRYWFrRp04aPPvqIzMxMvXZnzZrF6NGj1c9vvvmm
ep9ly5aViiMlJYV33nmHhx9+mAYNGuDs7MygQYP48ssvKSwsLDP2WbNm4evry+effw7AmjVrGDFi
BNbW1mzatOmWz1UIIWqdoihpihBCCCHuKWfPnlUABVDCw8OVxx9/XP1c8mvmzJll1v/999+Vhg0b
KoDi6emp9OjRQ7GwsFAAZeDAgUpBQYGiKIqSmZmpmJmZKYBy4MCBUu2MHDlSvde6detKXX/77bcV
QPn666/Vcz4+PgqgjBgxosz+lPWVlZWlls3KylKefvppBVCsrKwUHx8fpXnz5gqgWFpaKnv27Lnl
8woICFC8vLzUz15eXmWWa9y4sdK9e3fF2tpaPffUU0/ptTt8+PByY546dape2QMHDijOzs4KoJia
miqdO3dWWrVqpWi1WgVQfHx8lMjIyFKxF99jwoQJytKlS/XuUdYzF0IIQ5IEVAghhLgHlUyUevTo
oZiZmSnTpk1Tzpw5o4SEhCiDBg1SAMXMzEzJy8vTq5ucnKw0aNBAAZTVq1er5yMjIxUPDw8FUNas
WaOeHzBggAIo7733nl47OTk5Sv369dU4XnzxxVJxNmvWTNFoNEp0dLR6rqwEVFEURafTKS+//LIC
KIMGDVJ0Op36VdLMmTPVficmJqrn582bpwBKq1atlMLCwnKfV8eOHZXmzZsrixYtUqKiovRiu3Dh
gjJp0iQlJCREPZebm6tMmTJFrX/lyhW9mGNiYtRrx44dKzPulJQUxd7eXgGUkSNHKunp6eq18PBw
pW3btgqg9O/fv9QzLE5A27RpoxgbGysTJkxQ9u/fr1y/fl1JTU0tVV4IIQxJElAhhBDiHlQyoTI2
Nla2bNmid/348ePq9ZLJlKIoyltvvaUAyvDhw0u16+fnpwBK586d1XNffvmlmriVtGvXLgVQunbt
qgBKs2bN9K6fOnVKTRRLKi8BVRRFeeWVVxRAGTx4cJn9jomJUUdqz549q3etoKBAcXV1VQBl69at
etdKPi97e3slPDy8zPbLc+XKFbX+zSOscXFx6rUTJ06UWb/4mTdp0kTJzc0tdf38+fNqGzf/uyw5
yjp58uRKxS2EELVN5oAKIYQQ9zg/Pz+GDRumd87JyUk9vnHjht61DRs2ADBw4MBSbXXu3BmAwMBA
dS7ooEGDgKL5oLGxsWrZrVu3AjB//nysrKy4cuUK4eHh6vXi+YkjR46sWsfKsHPnTrKysnBwcKBT
p05614yMjNT5nAEBAeW2sWbNGjw8PCp1Xzc3N8zMzABITU2tZNTw66+/AjBu3Djq1atX6nrbtm3x
8fHRK3uzhx56iIULF1b63kIIUZuMDR2AEEIIIWpW//79S50zMTEps2xmZiYxMTFAUeK6ceNGvevZ
2dkA5OfnEx8fj5OTEy1btsTDw4OIiAj27NnD+PHjgaIE1M7Ojt69e9OnTx+2bt3Kvn37aNGiBVAz
CWhYWJgaZ79+/UpdDwoKAiAyMrLcNlq3bl2he507d46wsDDi4uK4du1amYswVUR2djZRUVEAeHp6
llvO09OTI0eOqH28WcuWLdFqZWxBCFG3SQIqhBBCCFVxIgTg7+9/y7KJiYnqSOqgQYNYvHgxu3bt
Yvz48Zw+fZqYmBjGjh2LkZERvr6+bN26lb179zJx4kTOnz9PWFgYXbp0oVmzZtUWf3FieePGDfbv
33/L2Kvq559/5tNPP1VHUc3MzPDw8FBHhBVFqVR7V69eVes4ODiUW6742pUrV6oQtRBC1A3yazIh
hBBCqJydndXjPXv2oBStF1HmV8eOHdWyxa/h7tu3j8LCQvX12+HDhwPg6+sLwJ9//olOp1NHP598
8slqjd/FxQWAHj163DL2zZs3V6n9JUuW8OyzzxIeHs4nn3zCkSNHSEtL4/z585iamgKg0Wgq1Wbj
xo3V47S0tHLLpaSkALdOUoUQoq6TBFQIIYQQKisrK1xdXQE4dOhQhev16dMHMzMzUlJSOH78OFu3
bsXMzExNPD09PWnWrBkpKSmcOnWqRl6/BWjTpg0Ap0+fJicnp1rbzs/PZ8qUKQCsWrWKadOm0aNH
jzLnbFZGw4YNsbe3B/RHoG9WfK1ly5Z3dD8hhDAkSUCFEEIIoad4NPOHH34otUBReczNzenduzdQ
NHfU39+ffv36YWlpqZYpTkaXLFlCYGAg7du3v+Wcx7IUz129fPlymdf79OmDqakpeXl5LFmypFJt
387Zs2fVObDdunUrt1xhYaHe55LzbcuL+6GHHgIoNee22LVr1/jzzz8B1MWIhBDibiQJqBBCCCH0
zJ8/H3t7e2JiYhg3blyZq7rGxcWRm5urd644cf3pp58AGDFihN714gR01apVQNVevy1enTYkJKTM
ZM7d3Z33338fgJkzZ7Jz585SZfLz89WFlirDyspKPf7hhx/U46ysLN577z31eYSGhurVs7Ozw8bG
BoAdO3aU2fYnn3yCiYkJJ0+e5LvvvtO7lpuby6RJk8jNzcXDw4OJEydWOnYhhKgrJAEVQgghhB47
OztWrFiBtbU1mzdvxsvLi+eee46ZM2cyatQo3NzccHJyIjo6Wq9ecQKqKAparZbHHntM7/qjjz6K
kZGRuuBOVV6/HT58OObm5kDRljCvvfYaH374oV6ZadOmMXjwYDIzMxkyZAi9e/dm8uTJvP322/Ts
2RNra2umTZtW6Xu3atWKBx98EChKbjt37sywYcNo2rQpK1euVBPsZcuWsXTpUnVRIoAxY8YARcm3
j48Ps2fPZu/evep1Ly8v5s2bh1ar5ZVXXmHAgAHMnDmTSZMm4e3tzS+//IK1tTXfffedOtdUCCHu
SoqipNXy3qNCCCGEqGFnz55VAAVQIiMjS12Pj49Xrx8/frzMNq5evaoMGjRIMTU1VcsCStOmTZXH
HntMuXbtWqk6Hh4eCqD4+PiU2Wb37t0VQPHy8io3dh8fHwVQRowYUeb1X3/9VbG3t1fjMTY2LrPc
0qVLFWdnde2/MwAAIABJREFUZ73YLSwslAcffFBZsmSJXtnbPa9ily9fVnr27KmWNTExUUaOHKkk
JCQocXFxalwajUaJiYlR66WmpipPPPGEXixz584t1f4ff/yheHl56ZWrV6+eMnDgQOXq1atlxjR8
+HAFUCZMmFBu3EIIUVdoFEVJA6xrJ90VQgghxN2moKCA0NBQ0tLSaNu2rfo6qSHl5ORw4cIFMjMz
8fLyws7OrtyySUlJBAcH06RJEzw8PO54r0xFUYiIiCAhIQFvb28sLCzUa3l5eZw+fRovLy9sbW1L
1Y2OjiY8PFyNxdi47B3xilfWbdCgAS1btix331YhhLjbSAIqhBBCCCGEEKJWyBxQIYQQQgghhBC1
ouz3PoQQQghRJxTo8knLTiYtO4n03OvkFuSQX5hLTNolYtMiKCjMw9K0Ac42zdFq5PfKoqI0OFi7
0dmlN0Za+XFQCFF75E8cIYQQwsBSsxOJS7tC7I1LxKVdJu7GFZIz40jNTiQjt/QWKEJUlxaNOvJ+
/x8wNTY3dChCiPuEzAEVQgghaomiKCSkR3Ip+TyXkgK5nBxEZMoFsvMzDR2auI890+VdBrcdb+gw
hBD3CRkBFUIIIWpIQWEe4UnnCI4/Tui1M1xOOk9WfrqhwxJCz9WUUEOHIIS4j0gCKoQQQlSTQl0B
EUmBBMcfJyT+BGGJZ8kvzDV0WELckpONu6FDEELcRyQBFUIIIe5AZm4aATF/czb6AAGxh8jKu2Ho
kISoMJcGLejf6llDhyGEuI9IAiqEEEJUUlzaFU5H7eds9EHCEs+gKLoavZ+VqS0NzBvRwNweUxML
6hmZkZ6bSkZOChqNFktTG5xtmmOkNanROMS9Q6vR0NiqKT7uQ2QBIiFErZIEVAghhKiAa+nRHLuy
i2NXdhGZcqFa2zbR1sPB2g0nm+Y0sXbHycYdR2s3Gpg3poG5vWyTIYQQ4p4hf6MJIYQQ5UjOjOP4
ld0cu7KLS8nnq6VNE2093Oxa09yuPc3t29Hcrj2O1m6yh6cQQoj7giSgQgghRAm5BdmcjNzLX+Gb
CY4/fsftWZhY4eXwAK0du9Ha4QFcbVvKiKYQQoj7lvwNKIQQQgBh187yV/ivHL+6+4725TTR1qO1
Y1faOHajbZPuuDVsLaObQgghxD8kARVCCHHfupFznYPhv3IwfBPxN65WuR0bM3s6uTxCZ5fetG3S
AzMTi2qM8s7Ex8dz5MgRgoODCQoKIikpCQ8PD1q0aEGLFi3w9PTEw8MDMzOzWoln//79JCYm3rKM
qakpjz/+uPr50KFDREdH07x5c7p27VrTIQohhKhBGkVR0gBrQwcihBBC1JbQhNPsC1vHiau/U6jL
r1IbTayb0dVtIJ1d+9Dcrh0ajaaao7wziqKwdOlSpk6dSkZGxi3L9unThz/++KNW4urVqxd///33
Lcs0bNiQ5ORk9fOIESPYsmULEyZMYPny5TUdohBCiBokI6BCCCHuCzn5mRy6tJV9oeuITr1YpTYa
1Xehe7NBdG82CLeGXtUcYfVJS0vjiSeeUJPKvn37Mnr0aLy9vXFycuLq1atcvHiRffv2sXv3bhRF
qZb7ZmdnExMTQ0FBAV5et34+LVu25Nlny95/8ubR2Hr16mFubo6JSe1tM1OZvgghhKg4GQEVQghx
T0vKiGHPhTUcuLiR7PxbjwSWpYG5PT3cH6NHs8E0t29XAxFWv7fffpsvvvgCrVbLjBkzmDlzJlpt
2fNQFUXhypUruLu73/F9J06ciJ+fH4MHD2bHjh1llikeAR06dChbt26943vWlIr0RQghROXJCKgQ
Qoh7Uti1M+wOXsXJqH0oiq5SdY20JnR26U2vFk/Q0ekhtFqjGoqy+oWEhLBo0SIAxo4dy6xZs25Z
XqPRVEvyKYQQQlSELMsnhBDinqFTdBy/spuZO55m9u7nOBH5e6WST7eGrfnPg9NZ/ORB/q/3V3i7
PHJXJZ8AM2fOpKCgABMTE2bMmHHH7fn5+dG/f39sbW1xcXFhxIgRnDt3Tq9MREQEvr6+6kjhiRMn
8PX1Vb9yc3PvKIZZs2bh6+vL559/fttra9asYcSIEVhbW7Np0ya9svv372fAgAE4OTlhampKs2bN
ePjhh9m1a1et9UUIIe53MgIqhBDirpdfmMffEb+xI+gHEtIjK1W3npEZPu5DeLTVGNzt2tRQhLXn
9OnTAPj6+t7RyGZ2djbjxo1j/fr1WFlZ0b59e+Lj49myZQv79u3j119/xdfXF4D09HT27t2r1k1K
StL7rNNVbgT6Zv7+/uzduxdXV9dbXvPz82PixInqtYKCAvV43bp1jBkzBiha5Khz585cuHCBq1ev
EhYWxqBBg2qlL0IIcb+TEVAhhBB3ray8dLadX8Zbm/rxw7FZlUo+nWya858H32fxUwd50WfOPZF8
5uXlcfVq0XYyLVq0uKO2FixYwPr16+nRoweXLl3i8OHDREREMG/ePDIzM5k0aZKajHXq1AmdTsfL
L78MwKBBg9DpdOqXubn5nXWsAo4dO8Ybb7zBhAkT2L9/P9evX2fgwIHq9WnTpgHwzjvvkJSUxNGj
R0lJSeHy5cuMHDlSLVcX+iKEEPcyGQEVQghx18nITWVX8Cp+v7C6UgsLadDQ2bUvA1r/hzaO995+
khEREWpS2KxZsyq3Exsby8KFCwFYsmQJ9vb26rX33nuPpUuXEhoayo4dOxg6dChQNJe0eCuaksfl
OXHiBMOHDy91vnXr1ixYsKDSMQcHBzN58uQyX9PNyckhMrLolxODBw/Wi62s51TZvgghhKg4SUCF
EELcNdJzUtgZvIK9F34mpyCrwvXMjC14pMVIBrR+jsZWpV/jvFckJSWpxw0bNqxyOzt37iQrKwsH
Bwc6deqkd83IyIgOHToQFRVFQECAmoBWVkJCQpmr4Jbc/7MyHnroITVpvpmZmRm9evXi4MGDTJ8+
nTVr1uDh4VGl+wghhLgzkoAKIYSo89Kyk9gRtIL9YevILciucD17SycGtP4Pj7QYiUW9+jUYYd1Q
cjSv+FXcW9m4cSMhISG4uroybtw49XxYWBhQNA+0X79+peoFBQUBqKOKVfHoo4+yfPnyUudNTU2r
1F7Lli3L3WoG4M033+TQoUMcP36cdu3a8cwzzzB16lRatWpVpfsJIYSoGklAhRBC1FnpOansCFrO
7xfWkFeYU+F6rg1aMrTdi3RrNhAj7f3zV52LiwtmZmbk5ORw6dKl25Zfu3Ytv/76Kz179tRLQIsT
yxs3brB///5y6ycmJlY5VgsLC9zc3Kpcv7JGjhzJ0aNHGTt2LCEhIfzwww+sXLmSCRMm8NVXX8nc
TiGEqCX3z9/KQggh7hpZeRnsCv6R3SEryc7PrHC9Vo0fYFj7F+no3KsGo6u7NBoNHh4eBAUFcfLk
SRRFqdL8RRcXFwB69OjBkSNHqjtMg3nwwQc5e/Ysq1at4n//+x8XL17k+++/JyUlhQ0bNhg6PCGE
uC/IKrhCCCHqjJz8LLYGfs/kX/uz+dySCief3i69+WjQWmYMXHXfJp/FBgwYABS9JvvLL79UqY02
bYpWBD59+jQ5ORUfeb4bmJqa8tJLLxEYGMhrr70GwJYtW6o891QIIUTlSAIqhBDC4Ap1BewLXcvb
mwew/uwXZOalVajeA66PMnfIRt7puwTPRh1rOMq7w4wZM9RVa6dPn05KSkql2+jTpw+mpqbk5eWx
ZMmSCtczMTEB4PLly5W+Z20zNTVlwYIFGBsbk5+fz4EDB/Su3019EUKIu4kkoEIIIQzq+JXdTN0y
lB+Pz+FGTsVGobq6DWD+0M281WcRze6B/TurU4MGDZgzZw5QlDx17NiRv/76q1JtuLu78/777wMw
c+ZMdu7cWapMfn4+MTExeueKV5YNCQmpU4lbYmIi27Zto7CwUO/8vn37KCgoAMDLy0vvWl3tixBC
3O1kDqgQQgiDCI4/wbrTC7mUfL7Cdbq6DeCJjq/j0qBFDUZ293v55ZfJyMhg5syZREVF0adPH7p0
6UL79u1p3bo1165dIzg4mEOHDpXbxrRp0zhx4gQ7d+5kyJAhPPLII3h7e6PRaDh+/DhnzpzhySef
5KefflLrDB8+nOnTp5OdnU3nzp0ZM2YMDRs2ZO7cubXR7XIlJyczbNgwXFxc6N27N56engQEBLBr
1y4AnnnmGdq2batXp672RQgh7naSgAohhKhV0anhrD29kICYio/KdXJ5hKc6TcKtYesajOzeodVq
mTJlCsOHD+e1117jr7/+4uTJk5w8ebJUufbt2zN48OBSbZiamrJjxw78/PyYM2cOBw8e5ODBg0DR
Crbt27fHx8dHr467uztr1qzh5ZdfJikpiW+//RZjY2ODJ222trY8/vjjnD17ltWrV6vnLSwsmD59
OjNmzChVp672RQgh7nYaRVHSAGtDByKEEOLediPnOpv8F/PHxfUoiq5Cddo26cGTnSbJ/M47VFhY
yKVLlwgJCSEuLg57e3scHR1p164dNjY2FWojKSmJ4OBgmjRpgoeHxy333MzJyeHChQtkZmbi5eWF
nZ1ddXXljqWkpHD+/HlsbW3x8PC47fYrdbkvQghxN5IEVAghRI3KL8xjT8gqtgT6VXhVWw/7Dozq
/DZtHLvWcHRCCCGEqE3yCq4QQogac+zKLtad/oykzNgKlXe0duNp78l0dfOt4ciEEEIIYQiSgAoh
hKh2V69f4KeT87mQcKpC5W3M7Hmi42v09nwSI6381aRTdOTkZ5FTkEl2XgY5BVkU6vIp0BWQlXuD
6LSL5BXkYmVmS+P6LoYOVwBoNNhbNpF5ykIIcRvyt7wQQohqk56Tykb/rys8z9PU2IKh7V5gYOux
mJlY1EKEhpNfmEdKVgLXs+JJzownJSuBtJxkbuSkkJ5znRs510nPTSEjN5XcgmxDhyuqqJNzL/6v
99eYGNUzdChCCFEnyRxQIYQQd0ynK2R/2C9s9F9EZl7abctr0PBIiyd40nsSDcwb1UKENU9RFK5n
JXAtPYqE9Mii7xlRXEuPJDkzjhs51w0doqglT3u/xbD2Lxs6DCGEqJNkBFQIIcQdCU04zYrjs4lO
vVih8m2b9ODZB6bS1LZVDUdWMwp0+STciCQ27RIxaRHEpl0iNi2C2LTL5BXmGDo8UQdcSDglCagQ
QpRDElAhhBBVkp6TwtrTC/krYnOFyjexdueZB6bi7fJIDUdWfW7kXCcyJZTI66FEplwgMiWUmLRL
FOryDR2aqMNsLRwMHYIQQtRZkoAKIYSoFEVR+PPiBn4580WFXrc1N6nPEx3fwNfrmTq9wFBadjKX
k89zKTmIy8nnuZwcRGp2oqHDEncZcxNLhrQdb+gwhBCizqq7PwkIIYSoc64kB7Pi+Gwiks7dtmzx
PM+nO0/G2qxhLURXcTn5WVxKPk94YgCXks5xKTmI61nxhg5Lj6mxBeYmFpib1MfMxBJjbT20Gi3p
uSlk5t4AoJ6xGY3ru2B6jy/gdDfQoMHOsgm+Xs/iaO1m6HCEEKLOkgRUCCHEbWXlZbDR/yv2hq6t
0Oq2no068XzXD3C3a1sL0d3etfRowq6d5mJiAOFJAUSmhFaoH9XNxsweO0tHGlo40NCyCQ3MG2Ft
Zou1mR1WZg2xNrPFytQWMxNLtBptrccnhBBC1DRJQIUQQtzSkcs7WHPyv6TlJN22rLWZHc888C49
3Yei0WhqIbrSdIqOqJQwQq+dJvTaGUITTtXaq7RmxhY0tmqKg5Vrie+uOFg1xdaiMcZak1qJQwgh
hKirZBsWIUSlnTx5kv379xMTE0NhYaGhwxE1JE/JIkrxJ4OKJW92Gnea0BojTe0mWYqikM0Nck1S
MbbPQeucSqFJze6jWd+0Ac42LXC2aY5zAw+cbDxwsmmOnaVjjd5XCCGEuNtJAiqEqLCpU6fyzTff
kJWVZehQhCiX1kiDUwdLOjzRCNumZnfUlkajxcnanaa2rWja0Iumti1pauuFrUXjaopWCCGEuL9I
AiqEuK2kpCS8vb2Jjo4GwMrKim7dutGoUSO0WpmnJuqG/Px8IiMjOXnyJIWFhWg00HlMY7wG2FWo
vgYNTjYeNLdvi7tdO9zt2uHW0It6RqY1HLkQQghx/5AEVAhxSwUFBTg5OZGYmIiNjQ2ffvop48aN
o169eoYOTYgyJSUlMXfuXL766iugKAltPbB0EtrAvBGejTrRolFHPOw70KxhG8xkNVkhhBCiRkkC
KoS4pWHDhrFt2zbs7e05dOgQrVq1MnRIQlTIzz//zLPPPotGA4NnN6dTJ2+8HLrQolEnPBt1ws6y
iaFDFEIIIe47koAKIcqVlJRE48aNURSFXbt2MXDgQEOHJESlTJ48mS+//BLHJg7ExdatfT6FEEKI
+5EkoEKIck2fPp1PPvmEbt26cezYMUOHI0SlJSUl4ejoSGFhIVFRUbi4uBg6JINQFIUjR45w/vx5
goKCCA0NxdraGk9PT1q0aKF+b9KkdkaFExIS+PPPPwHo06cPDg4O5ZbNyspi69ataDQaRo0aVSvx
CSGEqDmyD6gQolwHDhwAYPDgwYYNRIgqsre3p2vXrhw9epTNmzfz5ptvGjqkWnflyhVeeOEF/vjj
j9uWPXjwIL169arxmIKCghgzZgwAjz32GNu2bSu3bHJyMmPGjEGr1UoCKoQQ9wBZvlIIUa7ExKL9
H11dXQ0ciRBVV/zfb3h4uIEjqX3r1q2jffv2/PHHH1haWjJjxgy2bt3K1atXCQ4OZseOHcyePZse
PXqg1WpRFKVa7puQkIC/vz/p6em3Lbt9+3Z+/vnnarlvbahM34QQQpQmI6BCiHIVFhYCYGJiYuBI
hKi64hWb8/LyDBxJ7YqNjeXFF18kMzOT1q1bs2nTJlq3bq1XpnXr1gwePJgZM2aQnJyMsfGd/1gQ
Hx+vvsp74sQJHnzwwdvW+b//+z/69+9Po0aN7vj+NakqfRNCCKFPRkCFEEKIe9DUqVPJzMzE2NiY
7du3l0o+b2ZnZ4eNjU0tRVfEwsICrVZLUlLSffl6tBBC3I8kARVCCCHuMefPn2fNmjUAjB07lubN
m99Re35+fvTv3x9bW1tcXFwYMWIE586dK1Vu1qxZjB49Wv385ptv4uvri6+vL8uWLStV3tXVlTfe
eAOAX375hS1btlQpvitXrjB+/HjatGmDhYUFXbt2Ze7cueh0Or1y169fZ/jw4fj6+jJr1qxy25sy
ZQq+vr7qM6xK34QQQpRNXsEVQggh7jFnzpxRjydOnFjldrKzsxk3bhzr16/HysqK9u3bEx8fz5Yt
W9i3bx+//vorvr6+anl/f38OHjyofj5+/Lh67O3tXeY95s+fz7Zt27h8+TKvvfYajzzyCA0aNKhw
jHv37mX06NFcv34dT09POnXqREBAACdPnuTw4cNs374dIyMjABo2bMjQoUN56aWX2Lt3L15eXnpJ
JcDatWv57LPP8PDwYMSIEXfUNyGEEKXJCKgQQghxj7l48aJ63KJFiyq3s2DBAtavX0+PHj24dOkS
hw8fJiIignnz5pGZmcmkSZP0Rhk3b95MTEyM+vnYsWPodDp0Oh0LFiwo8x6WlpZ89913QNG81SlT
plQ4vuvXr/P0009z/fp1Vq9eTVhYGEeOHOHChQt4eHiwe/dufvnlF706L774ImPHjgXgpZdeIjQ0
VL0WGxvL66+/jlarZeXKlVhaWt5R34QQQpQmCagQQghxjwkLCwPAxsamUqOJJcXGxrJw4UIAlixZ
gr29vXrtvffew9XVldDQUHbs2KGe12g0aLX//mih1WrRaDTqV3n69evHCy+8AMDy5cvZt29fhWKc
M2cOqampDB8+nGeffVY97+rqytSpUwH47LPPStVbsmQJ7dq1IyMjg6eeeors7GwAJkyYQEpKCu+8
8w49e/bUq1PVvgkhhNAnCagQQghxj0lKSgKKXjmtqp07d5KVlYWDgwOdOnXSu2ZkZESHDh0ACAgI
qHqgJXz22Wc4OTkB8PLLL5OZmXnbOhs2bABg4MCBpa517twZgMDAwFJzQS0sLNi0aRNWVlYEBgby
+uuvs3TpUvbs2UPbtm2ZM2fOnXZHCCFEOWQOqBBCCHGPadasGQDR0dEUFhaqcyDLcu3aNfz8/AB4
7rnncHd3B/4dRc3OzqZfv36l6gUFBQEQGRlZLTHb2Njw7bffMnz4cC5fvsz06dP56quvyi2fmZmp
vhLr5+fHxo0b9a4Xj2rm5+cTHx+vJrfFWrZsybJlyxg1ahQrVqxg9erVmJiYsGrVKkxNTaulT0II
IUqTBFQIUePOp/9OVE4gvRu+jLmRlaHDEeKe5+npCRQlX9HR0bi5uZVbNiEhgZkzZwLQo0cPNQEt
Tixv3LjB/v37y62fmJhYXWEzbNgwRo8ezbp161i8eDGjRo3C1dW1zLJRUVHqsb+//y3bTUxMLJWA
Ajz99NPMmzePc+fOkZ+fz5QpU9SRUyGEEDVDXsEVQtS4Qgo4lvYzX18dwcm0TegU3e0rCSGqrOTC
QydOnKhSGy4uLkBRUqooSrlfmzdvrpaYiy1atAh7e3t0Oh0vvPACOTk5ZZZzdnZWj/fs2XPLGDt2
7FhmG998843edjKbN28mLS2tWvsjhBBCnySgQohak6VLZXvifJZGPcPlrFOGDkeIe9ZDDz2kruA6
a9YsCgsLK91GmzZtADh9+nS5SWBNsLe3Z9GiRQBcuHCB2bNnl1nOyspKHR09dOhQpe8TEBDAO++8
g6mpKVu3bsXOzo6IiAjGjRtX5diFEELcniSgQohal5B3kR9jX2Fd3Luk5McaOhwh7jmOjo5MmzYN
gODgYBYvXlzpNvr06YOpqSl5eXksWbKkwvVMTEzU48uXL1f6vgCjR49m2LBhAKxevbrccoMGDQLg
hx9+4MaNGxVuPzMzk1GjRpGbm8vChQsZOnQoq1evRqPR8Ntvv6mr/96sOvomhBD3O0lAhRAGE5L5
B4sjR7I/+RvydNmGDkeIe8qUKVPUxYjeeustXn31VbKysipc393dnffffx+AmTNnsnPnzlJl8vPz
9fbGBLCzs8PGxgZAb4uWyvr222/VdgAURSlVZv78+djb2xMTE8O4ceNITU0tVSYuLo7c3Fy9c6+/
/jqhoaGMGDGCN954AyhaSfeDDz4A4P333y9zVLW6+iaEEPczSUCFEAZVoOTxV8oPfH11BP43dpT5
Q6YQovLMzMzYvXs3Pj4+ACxdupTmzZszdOhQpk+fzn//+1/Gjx/Pf/7zn3LbmDZtGoMHDyYzM5Mh
Q4bQu3dvJk+ezNtvv03Pnj2xtrZWR1pLGjNmDACrVq3Cx8eH2bNns3fv3krF7+TkVOYeniXZ2dmx
YsUKrK2t2bx5M15eXjz33HPMnDmTUaNG4ebmhpOTE9HR0Wqdn376iZUrV+Lq6sry5cv12ps1axZ9
+vShoKCAUaNGce3atRrpmxBC3M8kARVC1AnphUlsvjaT76PHEZ0TeMft7dixA0tLSywtLXn++eer
IUIh7j6tWrXi77//5osvvsDR0ZGEhAS2b9/OJ598wrRp0/jxxx8JCAjA1taWwYMH07RpU736pqam
7Nixg6VLl+Ls7MzBgwf58ssv+eKLL/D396d9+/ZqglvSggULeOKJJwA4evQoH330UZUWQ3rhhRfK
3AKmpMcee4zAwEAGDRpEamoqa9asYc6cOaxfv169bm1tDRRtLfPaa69hZGTE2rVrS+2TWny+SZMm
xMbG8swzz5TaQ7S6+iaEEPcr2YZFCFGnxOSe5/vocXS0GkI/uzexNm5UpXYKCgrU1w1vfv1OiPuJ
Vqvlrbfe4q233iIlJYWQkBBCQ0MxMjLCwcEBNzc3WrVqhUajKbeNV155hVdeeYWkpCSCg4Np0qQJ
Hh4eaLVl/x7bxsaGTZs2ER0dTXh4uFq+WN++fSv8tkNFRhebNm3Kzp07KSgoIDQ0lLS0NNq2bav3
Ci8U7f2Znp5+y7YcHByIjS1/bvrt+iaEEOLWJAEVQtRJAek7CMn4g4dtx+Nj+x+MNfWq/R5RUVFc
uHCBuLg4Bg8ejL29fbXfw1Du5b6JqrO1tcXHx6fMUcuKsLe3p1evXhUu7+Liom7nUhuMjY1p27Zt
rdyrtvsmhBD3CnkFVwhRZ+Up2ey/voRFV0cSnPFHtbc/b948fH19GTt2rN6m9veCe7lvQgghhLh7
yQioEKLOSy2I5Zf4d2lm/gCD7KfgaOpp6JDEXShZucK+0LUUvfmpFP2jKICC7p/vgHqu5HWlnPNF
5dUSevXVu6hvmirqa6cKinru3zolz5Tz6Z9yOflZxN64RG5BNkYaYxysm2JjZlf1hyNqjKmxOZ1d
++Ju18bQoQghRJ0gCagQ4q5xJfsUS6OeoYv14/S1exVLI9sqtXPmzBnOnTtHaGioem7r1q0EBASo
nx977LEyX1tVFIW//vqL48ePc/r0aRo2bEiXLl0YNGgQzs7O5d5z37596kqcY8aMwdTUlKioKJYv
X05ISAju7u4sWLBAr05BQQEHDhzg2LFjREdHk5CQgIODAx4eHjz//PM4ODhUa98yMzM5ePAggYGB
BAYGYmZmRvv27enQoQO9evXCyMio3P4lJSWxfft2ALy8vOjevTs6nY7Nmzezd+9e4uLi+Pjjj+nU
qVOpe/7000+EhIQQGRlJgwYNcHV1xdXVlYEDB+Lq6lruPSsrRjnHj8fnVFt7dUl4kr+hQxC38Nu5
b3nJZx69WowwdChCCGFwkoAKIe4qCjpO3djE+Yw99G74Cl1tnsZIU7k/yjZt2sT8+fP1zs2aNUvv
8/Hjx0slaWlpaYwdO5YtW7aUatPOzo7169fTt2/fMu/5xRdfqPsoPvbYY2zYsIEXXniBvLw8ALp2
7apXfu7cuXz++eekpKSU2d7s2bNZtmwZo0aNqpa+HT58mOeff55Lly6Veb8ePXrw008/lbvYyuXL
lxl4U0UOAAAgAElEQVQ/fjxQtMdiq1atGDp0KIcPH1bLTJw4US8B3bFjBxMmTChzqwsAPz8/Xn75
5TKvCXE3UVBYfWoBPs2HYKw1MXQ4QghhUJKACiHuSjm6DHYnfcaptE087jALF7P2Fa7r6enJwIED
CQoKUudH+vj4qFs1AKVWz7x27RoPPfQQFy9exMzMjPHjx9OuXTuioqL48ccfiY+PZ8CAAfz99990
7979lvffv38/zz//PIqiYGJiQufOnUuNZh49epSUlBTatGmDj48Pnp6epKWlsWnTJkJDQ8nIyGDi
xIn07t1br25V+rZkyRLefPNNdDodFhYWDB8+HG9vb3Jycjh16hTbtm3j6NGjdOrUid9++41HH330
lv1TFIXHH39cTT6bNm1Kw4YNMTH59wfv8PBwxowZQ3p6OjY2Nvj6+uLj40NeXh4XL17kr7/+uuWq
rELcbbLybnAj5zoNLUq/uSCEEPcTSUCFEHetehoLOlkPxdHUq1L1xo0bx7hx45g4cSJ+fn4ALF68
GG9v73LrfPTRR1y8eBFTU1MOHz5M586d1WtvvPEGnTt35tq1a8ydO1d9FbU8b775Jg0aNODLL79k
2LBhNGjQoFSZwYMHM23aNB5++GG98/PmzWPAgAH8/vvvpKamsnv3bsaOHVvlvkVHR/Puu++i0+lw
dnZm27Ztpcpu27aNMWPGqElvUFAQ9eqVvyrxhg0bSExMZNSoUUyZMoUHHnigzDLF22F88cUX6uhp
STfvvyjE3czazI4GZrIatRBCyCq4Qoi7krfVUCa5beZh23EYa2r2lbaQkBC+//57oOg10pLJJ4Cz
szMTJ04Eil4rDQkJuWV7qampbNq0ieeff77M5BOKXmO9OfksNnr0aPX44sWLFe5HWaZOnarul/rp
p5+WmagOHTqUSZMmAUUjl1988cUt20xMTGTAgAGsWbOmzOQTICgoSD0u77Xl8vaYFOJuY6w14YXu
s9Bqy59HLYQQ9wsZARVC3FVczTowyP5dnM1qb0XJ1atXU1hYCBTN3yxLyTmc/v7+tG7dutz2lixZ
Qp8+faocT8l5lImJiVVuJy8vj/Xr1wPg4ODAU089VW7ZN954gwULFqAoCqtXr+a9994rt2zr1q1Z
v379LRctKrlg00cffYSfnx+mpqZV6EXFNcSNR1sOpOjNXk3RPxpNieN/zuudKz6mzPMAGo1a4p/P
JY7Vdku2XVyem+qUPFPOp3/K5RfmEZ0aTk5+JsZaE5xs3LE01X+1WtQNZsYWdHR+GPv65S9SJoQQ
9xNJQIUQdwVro8b0t59EB6tBtX7vsLAwveOkpKRSZSIiItTjyMjIW7Y3YkTVV8LMzc3l+vXrVa5f
0qVLl9TEul27dnpzNG/m5ORE48aNSUhIIDw8HJ1OV+4IZd++ffXmnJZlwoQJfPHFF+Tn57Ny5UqO
Hj3KrFmzePLJJ28Zx51w0XZkfPeZNdK2EEIIISpGElAhRJ1mrDGlZ4Pnech2LPW05gaJoWQC+vrr
r9+2/O0S0IoqLCxk165d/Pjjj4SEhBAXF1fuqrhVUbJft9pCpmSZhIQEcnJyiIqKws3Nrcr3btWq
FStXrmTcuHHk5eURFhbGM888w9SpU/nggw+YMGHCLeeZCiGEEOLuJAmoEKLOalu/P752/0cDkyYG
jSMtLQ0AIyMjHnrooduWb9q06R3f8+TJkzzxxBPq3qEeHh7069cPJycnUlNTWbly5R3fo+RI7u1G
LG8uk5ycfEcJKBTth9quXTs++OADtm3bBhQtivTqq6/i5+fHli1bquVZCiGEEKLukARUCFHnONZr
xeBGU3Az73z7wrXAy8uLq1evUlhYyLp163B0dKzR+wUEBDBgwABSUlJwdnbmxx9/5NFHH1Xn//n7
+1dLAtq8eXP1OD4+/rbl4+Liyqx7J9q3b8/WrVsJCgri888/Z8WKFSiKgr+/P/379ycwMFBGQoUQ
Qoh7iCwxKISoMyyNbBnW6ENecV1dZ5JPgDZt/l3w6NChQzV+vwULFpCSkoJGo+HPP/+kX79+NbIn
ZsuWLdXj2NjY25aPiYkBoFGjRuWu3ltVbdu2Zfny5Rw+fFh9HTgsLIxNmzZV632EEEIIYViSgAoh
DM4IY3waPMckt9/oYvM4Wk3t/NFUMqm71WqyPXr0UI9XrFhRozEB/P3330DRarKenp5VaqMifXNy
cqJRo0YAnDp16pajoPv37ycjIwMoGrWsKT169GDq1Knq59ttaSOEEEKIu4skoEIIg2pp8TCvN93A
APvJmGnr1+q9XVxc1OM9e/aUW+7JJ5+kZ8+eAOzcuZN169bVWEyKoqgLDYWFhamjjiUFBgaqxyVf
iy2pon376KOPgKItWb7++utyY/r000/VzzNmzLhFDyqmePXdsqSnp6vHMgdUCCGEuLfIHFAhhEHY
mzRjkP07tLD0MVgMHTp0UI83btzI8OHD6dWrV6lyGo2GpUuX0rlzZ/Lz83nuuec4c+YM77//Pra2
tmq5hIQEduzYgbm5OWPGjKlSTBqNho4dO3L06FEKCgp45ZVX+Pjjj2nfvj3+/v58+eWXrF27Vi1/
8uRJ8vLySs2TrGjfJk6cyLfffktQ0P+3d+dxUZX7H8A/M6yyb8oiiIAgiIhSaJjmkpJrWppXU0sp
TbvpLTVTK/OWpe235aqUeiula65ZiBuSppJLCsiOIIuAbMKADtsMc35/8ONcJ7YBhsHl83695tUw
5/s853uO9IIvz3OeJxEbN26EoaEhVq9eLe7JefPmTbz44os4duwYAOCZZ57ByJEj23Vtd5o4cSLc
3NywYMECDBo0CBKJBCqVCtHR0fj8888BAAYGBlo5F6kTBAHR0dFISEhAYmIiUlNTYWFhAU9PT/Tp
00f8r6Nj1yz+VVhYiOjoaCQlJSEpKQmFhYVwc3NDnz594OHhgT59+qBPnz4wM9PtH6yIiEhLBEEo
F4iImuDm5iYAEHbs2NGhfmIrDglrrwYIa68GCB9kjBCiy8IEpUqhpSyb9vPPPwsABADCjBkzmoyp
q6sTAgMDxTgAgru7u+Dj4yNcu3atUXxERITg4OCgFu/k5CQMGjRI6N69u/jZq6++2qjthAkTxOPF
xcUt5n7y5ElBKpWqnUdfX18AIEgkEmHZsmXCkiVLxGNubm5CaGhou68tOTlZ8PPzE+MMDAwEf39/
wd3dXa39E088IRQWFjaZ84ULF8S4v//97y1enyAIQlBQkBjfrVs3wd/fv9G93bJlS6v9aGLOnDkC
AGHRokVa6e9elpmZKYwePVrtPjf3OnXqlE5zU6lUwubNmwVzc/NWcxs5cqROcyMiIu3hFFwi0gkJ
pAi0mI5/uP6MIKtnoSfp+gkYUqkU+/btw7hx48TPrl27huTk5CaniI4fPx4JCQmYPXs2LC0tAdQv
3hMTE4Pi4mIYGhpi2LBhGD58eIfyGjFiBPbs2aO22q5SqUT//v1x/PhxfPrpp1i7dq24WE9mZib2
7NnT7mvz9vbGxYsX8dprr8HGxgYKhQJxcXG4du0aAMDFxQWbN2/GkSNH0KNHjw5dW4MZM2bgoYce
glQqRVVVFeLi4sRnUP38/PDrr7/ipZde0sq5qN6uXbvg5+eHqKgomJqa4u2338Yvv/yC7OxsJCUl
4dChQ3j33XcRFBQEqVQKQRC0ct7CwkLExsaqTa3+q4qKCowZMwaLFy/GrVu3MHr0aHzzzTe4ePEi
cnNzcfbsWXz33XeYO3cu7OzstJLX/aKqqgrp6elISUnp6lSIiDQiEQShHEDrG8AR0QPH3d0dmZmZ
2LFjB+bMmdPufvKrk6En0Ye9UfsW1NGFrKwsJCcnw8jICN7e3nBycmq1TXZ2NuLj46Gvrw9HR0d4
eXmhW7duWsupuroaiYmJKCgoQGBgYKPir66uDqdPn4aNjQ18fX2hp6fXZD9tvbbc3FxcuXIFlpaW
6N+/v1hsd4aysjKkp6cjLy8P5ubm8PT0hIuLi1ZX/Z07dy527twpTjd+EOXn58PLywtyuRw+Pj7Y
t28ffHx8mo2/efMm9PX1O/xvX1BQIE7lvXDhAgIDA5uMW7ZsGT7//HNIpVK88847eOuttyCVNv03
cpVKhczMTHh4eHQot/vFokWLEBoaigkTJuDQoUNdnQ4RUau6fgiCiO57TsbN/6J7t+jduzd69+7d
pjaurq5wdXXtnIQAGBsb46GHHmr2uJ6enkbPSLb12pydndUWMepM1tbWCAwMbLYwIe1YuXIl5HI5
9PX1ER4e3uo+rra2tjrKrH6l46+++goAMH/+fKxdu7bFeKlUyuKTiOgexim4RERE97GEhASEhYUB
AJ5//vlWi8/WZGVlYf78+ejXrx9MTEwwePBgrF+/HiqVSi1u3bp1mDlzpvj1kiVLEBwcjODgYGzd
ulX8fO3atVAqlTAwMMCbb77ZrpwWLlyI4ODgZleoXrVqFYKDg7Fp06ZGx9atW4fg4GB89tlnAICw
sDBMnToVFhYWavvQahrXIDQ0FGPHjoW1tTWcnZ0xdepUXLlypcn8/tp3TEwMli5dCm9vb9jY2GD8
+PFITU1Va5ORkYHg4GBx1PPChQvi/Q0ODkZNTU1rt42IqEtwBJSIiOg+dvnyZfH9okWLOtTX8ePH
MXPmTJSWlsLT0xMDBw5EXFwcLl68iLNnzyI8PFycCh4bG4tTp06Jbc+fPy++HzRokPj+0qVLAIDg
4GC4ubm1K6/o6GgkJiZi1KhRTR6/dOkSIiMj4e3t3ehYbGwsjh8/DhcXF4SGhqrdI6VS2ea4qqoq
zJs3D7t374a5uTn8/PxQUFCAgwcPIjIyEvv370dwcHCzOZw6dQoTJ06EXC4Xjx85cgRDhw5Famqq
+AzsrVu3cPz4cTGmpKRE7eu//kGAiOhuwRFQIiKi+9jVq1fF93369Gl3P6WlpZgxYwZKS0uxc+dO
pKWlITo6GikpKfDw8MCRI0fw008/ifEHDhxQ28f23LlzUKlUUKlU2LhxI4D6/WdzcnI6nJs2nDt3
Dq+88gpCQkJw4sQJlJaWqi3ipWncxo0bsXv3bgQFBeHatWs4e/YsMjIy8P7770Mul2Pp0qXNFod/
/vknJkyYgAEDBmDHjh0oLi7Gd999ByMjI5SWlmLLli1i7MCBA6FSqbBw4UIA9YukNdxflUql1efR
iYi0iQUoERHRfSwtLQ0AYGlpCSsrq3b3895770Emk2HKlCmYPXu2+LmLiwtWrlwJAPj000/FzyUS
idpCQlKpFBKJRHwB9SszN6zK3NZnsLUtKSkJS5YswbZt2zB69GhYW1s3uQhTS3H5+fn45JNPAACb
Nm1SW7H3jTfegIuLC1JTU5tdLOjKlSt4+OGHERUVhTlz5sDOzg7PP/88Ro8eDaB+OvWd7ryXd95b
bS7iRUSkbSxAiYiI7mMlJSUAABsbmw7107DVT1OjggEBAQCA+Pj4Nk39LC4uFt93NL+OGjZsmFg8
tjcuIiIClZWVsLe3x8CBA9WO6enpYcCAAQCAuLi4Jtv7+vri119/hbGxsdrnDStXV1RUtJofEdHd
js+AEhER3ccaRhZzc3NRV1fX7HY9AFBUVITQ0FAAwJw5c8RnMuVyuTidNjQ0FHv37lVrV1VVBQBQ
KBQoKCjQaBujO3MD6rc16kpeXl7Nbv2iaVzDaHNVVRXGjBnT6HhiYiIAiNOO/2rIkCGwsGi8M56B
gUGreRER3StYgBIREd3HPD3r999VKBTIzc1tceugwsJCcRuUoKAgsQC9fv26GBMbG9vi+YqLizUu
QJ2dnWFsbIzq6mqkp6dr1OZu1lBYVlRU4MSJE83G3TnyS0T0oOEUXCJqFVdTpHtZw/evJqNb96M7
F/e5cOFCu/ro2bOn+P7o0aMQBKHZl7+/v8b9SiQScU/PhkWK7mUN++cGBQW1eI8OHDjQxZkSEXWd
B/OnMRFpxNraGgD/Wk/3tobvX3snu1Yi70/Dhg2DqakpgPr9JhsW/WkLc3NzuLi4AADOnDmj1fzG
jx8PoH766nfffdehvpoqYJVKJQoLCzvUr6b69esHoH7bl+rqap2ck4joXsMClIia1b9/fwDa/4WT
SFcUCoW4/2SMyY9YfmAc/v37ChxO+h6phZdQo6zq4gw7n4ODA1atWgWgfgXXr7/+ul39NBSK27dv
13gxnDufXczMzGwy5q233kL37t0BAGvXrkV+fn6bczM0NAQAlJWVqX0uCAJCQkIQHx/f5j7bY9So
UTAyMkJtbS02bdqkk3M23OPm7i8R0d2GBSgRNWv58uUAgPDwcGRkZHRxNkRt9/3336OiogLWvYxg
amuAwls5+CMrAmF/foj3js7Fi/8NxKpfpuDb6LdwInUXMm8mQllX29Vpa92KFSvEBX9effVVLF68
GJWVlW3q44MPPoCdnR3y8vIwb948yGSyRjE3btxATU2N+LWtra24RUlzW49YWlpi/fr1AIC8vDz4
+/s3G1tcXIyNGzeqbQMD/G+a8ZEjR3Dz5k0A9c+tLliwAGFhYeJsDkEQ2nLJbebm5obVq1cDqC+m
IyIiGsUoFAq1/VE7qmEKc3JyMotQIroncBEiImrWgAED0LdvX6SmpuK5555DVFQUjIyMujotIo2k
paXh9ddfBwD0n9z09FtBUCFXdhW5sqs4lb4fAKAn0YeTpTt62XjD1boveln3hauND8yNrXWWu7YZ
GxvjyJEjCAkJQXR0NLZs2YIDBw4gMDAQfn5+sLS0REpKCmJiYprtw9bWFv/5z38we/ZsHDhwANHR
0RgzZgzc3d2RmpqKc+fOIScnB+np6WJRBACzZs3Cli1b8MMPP+Dq1asYN24cgoKCMHbsWDFmwYIF
uH37Nt566y2UlJRg0qRJ8PDwwMCBA+Hp6Ync3FxcvXoVsbGxqKmpwdChQ9Vye/7557Fnzx4kJibC
xcUFPj4+iImJgUQiwfbt27Fz505ERkbqZH/MVatW4cKFC4iIiMDEiRMxYsQIDBo0CBKJBOfPn8fl
y5cxffp07NixQyvnmzJlCtasWYOqqioEBARg1qxZsLGxEYt6IqK7DQtQImrRwYMH0b9/f0RHR2P0
6NHYsWMH3N3duzotohYdO3YMc+bMgUwmg8vD5ug1uPHWFs2pE5S4LkvDdVkazt7xuVU3OzhbeaKn
ZR84W/VBTysP9LT0gKmRpfYvoBP07dsXp0+fxpdffokPP/wQBQUFCA8PR3h4uFqctbU1goKC0KtX
r0Z9TJo0CfHx8Vi0aBGioqIQFhYmHuvVqxcmTZrUaBuRjRs3oqioCPv378cff/yBP/74A+vXr1cr
QCUSCZYtW4ZJkyZh8eLFOHPmDDIyMhrNvLC1tcWLL76IF154Qe3ziRMnYsOGDVi7di2qqqpw+fJl
+Pn5Yc2aNZg5cyZ27tzZ7vvWVkZGRjh06BBCQ0Px3nvv4dSpUzh16hQAwMTEBH5+fo0K6I5wc3ND
WFgYFi5ciJKSEmzevBn6+vosQInoriURBKEcgOY/mYnogRMeHo6nnnoKSqUS+vr6mDx5MoYNG4Ye
PXroZESBSBMKhQLXr19HREQEzp07BwBw9DPFY0ucoW/UeU+cWHWzg6OFOxwsXOtf5q5wsOiNHuYu
MNAz7LTzdlRZWRmSk5ORmpoKPT092Nvbw9XVFX379tXo/2ulUonU1FSUl5fD19dXnGrbnNzcXKSn
p8PR0REeHh7Q12/+b+BKpRLp6elISkpCaWkpnJ2d4eLiAk9PT/F5z6bIZDIkJibCzc1N461gOltJ
SQmSkpLE6+6s1Zirq6uRkpICuVwOb29v2Nradsp5iIg6igUoEWkkNTUVTz75pLjROtHdTCKRYMyk
EViyfi5yypNxrSQBhbeydZsDJLAxdYCdaU90N3NCd7OesDPrCTtTJ9iaOsLapAeM9LvpNCciIqKu
xgKUiNokNjYWn332GRITE1FWVtbpi3qQFnWrAazkLcdUmABy4/99racCLOSAsUKzc9Tq1/eh0P0T
Hvr6+rCzs8Njjz2G119/HXZ26s99ymsrkFmSgGs3E5BREo9rJfEoqyrSeZ536mZgBmuTHrDq1h3W
3XrAopstzI2sYPb/L3Mja5gZWcLYwBTG+qYwNjC5q0dViYiIWsMClIjoAXIx+zi+Pr0CdarmC8pg
7zmYE7gKUsn/pgrG5f2OHy5s0GgUUQIJHuvzFKYP/AesTbprJe/OUlZZjGs343GtJAHXbsYjuzQZ
FdWlXZ1Wi6QSPRjrm8BAzwh6Uj0o6xSoVlZCJdRBIpGim4EpzIysIQGnx1PTjPS7IcBlJCb1fxH6
UoPWGxARaRELUCKiB0xCfjQ+P7kUNcrmt+EI7DUWi4d/BEO9/616rKyrxeHkH/DzlS0ttm1gpG+C
yf1fwIR+82Gob9xq/N2irLIYOWUpyClLRU5p/X/zKzIhCKquTo1Iq4Z7TMFLj27o6jSI6AHDApSI
6AGUXhyHj08sgry2vNmYvj0ewrJRXzda5bWssgj/vfQJojPDm2mpzsbEATMCXsWjbpPv2UWrautq
cKM8E3mydOSVZyBXlo688nQU3rrOwpTuaZtnRMPc2Kqr0yCiBwgLUCKiB1Su7Co2Hn8RsqriZmOc
LN2x8vFvYGfWeEXR1MJL+P7C+8gpS9HofO62/fHswyvhbf9wu3O+2yjqalFQkY2CW9korMhCQUU2
blRko/BWFmRVJV2dHlGrPn/6OLqb9ezqNIjoAcIClIjoAVZyOx8fn3gJeeUZzcZYdeuO1x8PhauN
d6NjKkGFqLSfsCfmyxZHU+8U4DwKfwtYhp5WHu3O+15QrahEiTwPJbfzUXw7X3xfIs9HWWUhZFUl
UAl1XZ0mPcCcrfpg45O/dHUaRPSAYQFKRPSAk9eU47PfXkFq0aVmY7oZmOIfI79Ef8egJo/frpFh
b+xXiErbrVFRJZFIMcLjKUwbuATWJj3anfu9TCWocKu6FLKqYpRVFkFWVYxbNTLc/v/XrRoZblWX
obK2AtXKSlQrKlGtrGxxASkiTfW07IN/jPwCTpZuXZ0KET1gWIASEREUdbXYfHolLuQcazZGT2qA
hUPX41H3yc3G5Mky8OOljxGX97tG5zXUM8Y4n+cwqf+LMDE0a3PeDyKlSoEaRSUUqlrUqeqgEupQ
UV0KWWUxDPQMYWNq39Up0l3OUK8bepg7d3UaRPSAYgFKREQA6kfkdl7ciGMpO1uM+1vAMkzu/2KL
MfH50Qj780Pkyq5qdG4zI0tM8n0Rwd6z76kVc4mIiKhtWIASEZGaQ4nb8d9Ln7QYM6LP05j/yDst
7iGoUtXhZPo+7I39ChXVNzU6t1U3O0zxW4xRXtO5PyEREdF9iAUoERE1Ep15CKFn17T4vKGPfSD+
MfILmBm1vIVDtUKOQ4nbEZH0HWqUVRqd387UCU/7v4Jh7pMhleq1KXciIiK6e7EAJSKiJiUVnMfn
vy1BleJ2szH25q54/fHNcLDo3Wp/sqpi7I/bhJNX92q8+qujhRueGrAYj7hNgFQi1TR1IiIiukux
ACUiomZdL0vDR5ELUVZV1GyMqaEl/jHyC/RzGKxRnzfKs/BTzGf4MydS4zwcLXpj6oDFCHKbyEKU
iIjoHsYClIiIWnRTXoBPoxYjpyy12Rg9iT7mP/IORnpO07jfq8Vx2H35cyQXXtC4jViI9p7Aqbnt
JAgCoqOjkZCQgMTERKSmpsLCwgKenp7o06eP+F9HR0ed5FNYWIjffvtN7TN9fX3Y29vD0dERrq6u
MDC4u58HlslkOHLkCADgySefhImJSRdnRER092IBSkRErapWyPHv068jJvdki3ETfV/AzIBlkEgk
GvedcOMP7In5AhklVzRuY2/uisn9X8Aw9yehr2eocbsHXVZWFl544QVERUW1Gnvq1Ck89thjnZ5T
VFQUHn/88WaPOzg44OWXX8aqVavu2kI0NjYWgwYNAgDk5OTAxcWlizMiIrp7sQAlIiKNqAQV/nvp
YxxO+r7FuIdcHsfLwz+CkX63NvV/6XoU9sR8ofHWLQBgY2KPCb7zMcrzmTaf70Gza9cuLFiwALdv
34apqSmWLVuGwMBA+Pv7Qy6XIzMzE5cuXcLhw4dx/vx5REVFYcSIER0+b2FhIW7cuAEPDw+Ym5s3
On5nAfryyy+je/fuKCsrQ05ODo4cOYLq6moAwIoVK/Dxxx93OJ/OEBcXh6CgIABAWloanJ25xyYR
UXNYgBIRUZtEpe3Gd+ffa3Ehod42Plg2ehNsTOzb1LcgCPgjKwIH4v6NGxVZGrczM7LCOJ+5GOs9
G6aG/JH2V/n5+fDy8oJcLoePjw/27dsHHx+fZuNv3rwJfX19WFpadui8BQUF4lTeCxcuIDAwsFHM
nQVofHw8+vfvLx4rLi7G0KFDkZ6eDolEgtLSUlhZtbzqMhER3d24kgMREbXJaK8ZWDnmG5gYNB7N
apBVmoy3w59BWlFMm/qWSCQY6jYRH04Jx8vDPoKjhZtG7W7XyLA39iss3TsaOy5sQNGt3Dad9363
cuVKyOVy6OvrIzw8vMXiEwBsbW07XHxqQ/fu3bFixQoA9X+cSEpK6uKMiIioo1iAEhFRm/V3DMK6
CbvQw6z5Z93Kq0vw/rF5+O3q3jb3L5VIMdR9Ej6c8iteHv4xnCzdNWpXo6zE0ZQdWP7zOHx56jWk
F8e1+dz3m4SEBISFhQEAnn/+ebi7a3YvmxMaGoqxY8fC2toazs7OmDp1Kq5cafz87rp16zBz5kzx
6yVLliA4OBjBwcHYunWrxue7czrrrVu31PoPDg7GZ599BgAICwvD1KlTYWFhgX379qn1kZWVhfnz
56Nfv34wMTHB4MGDsX79eqhUKrW4DRs2IDg4GB988EGz+VRXV2PixIl44okncOPGDQBARkaGeG3F
xcVNtisrK8Py5csxfPhwWFlZoWfPnhg/fjz+9a9/oa6u6dkECxcuRHBwMHbt2tXk8VWrViE4ONHm
JLIAACAASURBVBibNm1q8viJEyfwxBNPwMnJCUZGRujduzeGDx+Ow4cPN3t9RESdTb+rEyAionuT
k6Ub/jnhJ/zr5FKkFv3ZZEydSoFtf6xFdmkS5gaugZ60bT92pBIphrpNxCO9x+Nc1mH8Eh+KXFl6
q+0EQYUL2UdxIfsovHoEYJzPc3jY5fEHcuXcy5cvi+8XLVrU7n6qqqowb9487N69G+bm5vDz80NB
QQEOHjyIyMhI7N+/H8HBwWJ8bGwsTp06JX59/vx58X3Dgj2aSElJEd/7+/ur9X/8+HG4uLggNDRU
7dqUSqX4/vjx45g5cyZKS0vh6emJgQMHIi4uDhcvXsTZs2cRHh4OPb367wtPT0+sWbMG58+fx2uv
vYZu3Ro/V7xv3z5ERETg4YcfFqcX37p1C8ePHwcA8ZnVO506dQqzZ89GXl4ejIyM4OvrC7lcjmPH
juHIkSPYs2cPdu3a1WjxoujoaCQmJmLUqFFN3ptLly4hMjIS3t7ejY7t2rULs2bNAgDY2NggICAA
KSkpyM7ORlpaGsaPH99kn0REnY0joERE1G7mxlZYPXYrhntMaTEuMnUXNhwPQUV1abvO01CIbph8
EK+N+hp97AZo3Dat6DK+PPUqXt0/FgfjQ9udw73q6tX/LerUp0+fdvezceNG7N69G0FBQbh27RrO
nj2LjIwMvP/++5DL5Vi6dKnaiOKBAweQl5cnfn3u3DmoVCqoVCps3LhRo3Pevn0b33zzDQDA1dUV
Dg4OjWLOnTuHV155BSEhIThx4gRKS0sxbtw4AEBpaSlmzJiB0tJS7Ny5E2lpaYiOjkZKSgo8PDxw
5MgR/PTTT2JfkydPhrW1NSoqKnDgwIEmc/r2228BAAsWLNDoGmQyGaZPn468vDxMmzYNJSUluHTp
ElJSUpCWlgZfX19ER0fjhRde0Kg/Ta1atQoAsHz5cpSUlOCPP/5AWVkZMjMzMW2a5tslERFpGwtQ
IiLqEH09Q7z06Ab8LWAZJGh++5WUwj/x9qFnkHWz/c/xSSQSPOQyGusm7MKa4P+gv2OQxm1LKwuw
J+YLLN07CqFnV+NaSUK787iXpKWlAQAsLS3bvYBPfn4+PvnkEwDApk2bYGdnJx5744034OLigtTU
VBw6dEj8XCKRQCr9368ZUqkUEolEfLXm4sWLGD9+PNLS0iCVSrF9+/Ym45KSkrBkyRJs27YNo0eP
hrW1tfj86nvvvQeZTIYpU6Zg9uzZYhsXFxesXLkSAPDpp5+KnxsZGYnThr//vvFqz2lpaTh16hRM
TU3F0cXW/POf/0RJSQkcHR3x448/wszMTDzm4eEhFsDHjx/HL7/8olGframurkZOTg4AYMKECWr3
u3fv3lyll4i6FAtQIiLSisn9X8SKxzejm4FZszE35Tfwz8PP4vf0pkeX2qKfwxCsGrsN707YjSGu
4yCRaPYjTalS4HTGQayNmIG3wqcjKm03qhTyDudztyopKQFQPw2zvSIiIlBZWQl7e3sMHDhQ7Zie
nh4GDKgfkY6L69gzt/PmzcPDDz8MW1tbDB48GGfOnIGpqSm+/PJLjB49usk2w4YNE4vjv9qzZw8A
iCOidwoICABQv/LunSO3zz//PAAgMjISubnqi1k1PLs6c+bMJreUacr+/fvFazM0bLxnra+vL4YO
HaoW21HGxsbiHq5r1qxBRkaGVvolItIGPgNKRERa49/zMbw7YTc+++3vuFGR2WSMQlWLb6LfRHpx
HOYOXgMDvca/lLeFu11/LBnxGYpv5+FI0g84mb4PNcpKjdpmlSZh+7l1CPvzIwT1Ho9RXs/Aow3T
e+8FvXv3BgDk5uairq5OfN6xKUVFRQgNDQUAzJkzB25u9asQN4yiVlVVYcyYMY3aJSYmAoA46tZe
ly5dAgBYWFjA398fI0eOxOrVq2Fv3/x2Pl5eXmojrQ3kcrk4BTg0NBR796ovhlVVVQUAUCgUKCgo
gJOTEwBgyJAh8Pb2RkpKCnbs2IHVq1eLcQ2joppOv62qqsL169cB1D9f2hxPT09ER0eL91kblixZ
gjNnzuD8+fPo378/nn32WaxcuRJ9+/bV2jmIiNqDBSgREWmVo2Vv/HPCT9h05nXE5p5qNi7q6m5k
lSZh6Yh/wc7MqcPn7W7WE3MHr8bTA/+O39J242jyTpRVFWnUtkZZiZPp+3AyfR9crLww3GMKgtwm
wdqke4fz6moNhY9CoUBubi5cXV2bjS0sLMTatWsBAEFBQWIB2lBYVlRU4MSJE822b24FWE0dP34c
AQEBHRqtbdBQ+AH1Cxa1pLi4WCxAAeC5557DmjVr8P3334sF6MGDB1FUVAQ/Pz8MGTJEoxyys7Mh
CAIAtFhENxzLysrSqF9NTJs2DX/88Qeef/55JCcnY/v27fj+++8REhKCL774oskFloiIdIFTcImI
SOtMDM2wbNS/McXvpRbjrt1MwFuHpiMhP1pr5zY1tMCk/i/i82nH8ffhn8Czu+YrrgLAdVkafrz0
MZbuG4UPIxcg+lo4apRVWstP1+5ceOjChQvt6qPhmcGgoCAIgtDsq7mFezTl4OCgleITAHr27Cm+
P3r0aIt537m6LgDMnTsXUqkUqampOHfuHIC2Lz4EAD169BDfl5eXNxtXVlYGoOUitT0CAwMRExOD
b775Bp6enqirq8O3336L5557TqvnISJqCxagRETUKaQSKZ4Z9A8sGfE5jPRNmo27XSPDh5EL8POV
LeJokTboSw0Q5DYB74wPw/qJezGiz9MwkGo+3VcQVIjPP4tNZ1bi77uHI/TsGlzJOwOlSqG1HHVh
2LBhMDU1BVC/d2Zze062pF+/fgDqp8g2tc3I3cjc3Fzc1uTMmTNtauvs7IzHH38cAPDdd98hKysL
kZGRMDY2xpw5czTux8bGRlyw6c4R2b9qOObl5dXk8b/uVwrUbzVTWFjYag5GRkZYsGAB4uPj8fLL
LwOoH829efNmq22JiDoDC1AiIupUQ1yfwLsTfoKjhVuzMQIE7I39Eh+dWNgp26T0tu2HBUPX48vp
JzEzYBnszXu1qX21shKnM37GRycW4uX/L0Zjc09BWVer9Vy1zcHBQdySIykpCV9//XWb+xg1ahSM
jIxQW1uLTZs2adzOwMBAfJ+Z2fQzwZ2pYa/L7du3o6Kiok1tGxYj+umnn/Dvf/8bKpUKzzzzDKyt
rdvUz7BhwwCg0TOoDYqKivDbb78BgLgYUYOGRYsaRkgbCIKAkJAQxMfHa5yHkZERNm7cCH19fSgU
Cpw8eVLjtkRE2sQClIiIOl1PKw+8O3E3BvcKbjEuPv8s1vz6FFIKL3ZKHubGVpjU/0V8MvUwVo/d
jkd6j4ee1KD1hneorK3A6Yyf8UnUYizePQybz6zCxZxIVN/FK+muWLFCXIzo1VdfxeLFi1FZqdlC
TQDg5uYmPgu5du1aRERENIpRKBRq+34CgK2trbglyp1btOjKBx98ADs7O+Tl5WHevHmQyWSNYm7c
uIGamppGnz/11FMwNzeHTCbD559/DqBt028bbNiwAQYGBrh48aK4p2mDmpoaLF26FDU1NfDw8MCi
RYvUjjdMnz5y5Ig4Ynn9+nUsWLAAYWFhYjH815kDxcXF+PXXXxuNdkdGRkKpVAIAvL2923wtRETa
IBEEoRyARVcnQkRED4aIxP9g1+XPoBKanwoqkUgxzf8VTPF7SaM9IzviVnUZTmf8jJPp+5Bffq3d
/ehJDeDd4yH493wM/j2Ho6eVhxaz7LjU1FSEhIQgOrr+eVt7e3sEBgbCz88PlpaWSElJQUxMjLiV
yvHjx9VWvK2pqcHTTz8tFp8jRozAoEGDIJFIcP78eVy+fBnTp0/Hjh071M67ePFibNmyBUD9M6Tj
xo1DUFAQxo4dCwCIiooSp7vGx8ejf//+Gl3P1KlTcfDgQYSEhGDbtm3NxoWHh2P27NmoqKiAvb09
xowZA3d3d/H5zpycHKSnp8PDo/G/1wsvvCDuP9q3b1+kpKQ0eY7Y2FgMGlT/rHFOTo449bfBxx9/
jFWrVkGlUiE4OBhDhgyBTCZDZGQkkpOTYWFhgQMHDjTaaubQoUOYNGkSAKBbt27w8fFBTEwMJBIJ
tm/fjp07dyIyMhJLlizBl19+KbZLSUmBj48PnJ2dMXLkSHh6eiIuLg6HDx9GVVUVnn32WYSFhWlw
l4mItI8FKBER6VxywUV89fsyVFS3/Byan+NQLB7+ESyMtbMwTWuulSTgzLWD+CMzArdqylpv0ILu
Zj0xwGk4fBwC4W3/MKy6df2KuiqVCl9++SU+/PBDFBQUNBljbW2NoKAgfP75500+kxgaGor33ntP
bbTTxMQEvr6+mD9/PhYvXqwWX15ejpCQELU9LtevX48333wTQOcXoEB9Ubho0SJERUWpjXb26tUL
AwYMwPbt29G9e+N/n9OnT4v7aX7yySdYvnx5k/23VoACwG+//YaXX35ZrYg1NDTE6NGjERoail69
mp4WvnHjRqxduxYKRf2zx35+flizZg1mzpyJsWPHNlmAFhYWYvHixYiJiVFbWdfExASvvvoq3n77
bRgbGzd3u4iIOhULUCIi6hJllUX4+vcVSC36s8U4q252eOnRjfBzGtpinDbVqZSIyzuNM9d+Qcz1
36BQdfxZT0eL3vC2D4SPfSC8egRoZeuZjigrK0NycjJSU1Ohp6cHe3t7uLq6om/fvhqNOpeUlCAp
KQmOjo7w8PBoci/OO+Xm5iI9PV2M19fX/U5wSqUSqampKC8vh6+vrzg9WJfKy8uRkJAAKysreHl5
qT0n2xyZTIbExES4ubmpbRejibKyMiQkJMDa2hoeHh7cfoWIuhwLUCIi6jIqVR32xn6FXxK+aTV2
fL95+NugV6Gvp/lKttogr63AnzmRuJB9DAk3/kCdllbBtTC2QW8bX7jZ+sLNth/cbH1ha+qolb6J
iIjuVixAiYioy13JP4vNp1e2Ou3V1cYHfx/+MZws3XWUmbrK2lu4fD0KF7KPIT7/rFZGRu9kYmAO
R0s3OFj0hqOFKxwsesPB3BU2pg4wM7KCVMK1A4mI6N7GApSIiO4KZZVF+PfpFUgpbHlKrqGeMeYE
rsJorxk6yqxpVQo5YnNPISb3JK7kn8HtmsYrrGqTVKIHC2MbWHWzg2W37jAxNIehnhEEQYUSeQHq
VAoY6hnD0bI3zIysOjUXuv8Z65siwGUUHCxcuzoVIrrPsAAlIqK7hkpVh31xX+OX+G8gQGgx9iGX
x/FC0D91tkBRS1SCCtdK4hGX9zti835H5s3Erk6JqMP0pAb4x4h/IcBlVFenQkT3ERagRER010m8
cQ5bzqxCWVVRi3EWxjYIeWQdHu41psU4XSuvuonEgnNIKbiI5MKLuFGR2dUpEbWLjYk9vpgW1enb
IRHRg4MFKBER3ZVu18iwNfpt/Hn9RKuxw9yfxHOD34SJobkOMmu78qqbSCn6EykFF5FWHIPcsquo
E5RdnRaRRkJnnoOpIX9VJCLtYAFKRER3tai03dh5cSNq66pbjLMxsceCoe/rdLuW9lLU1eJ6WRoy
SxORdTMJmTcTkSu7CqWWVtgl0haOgBKRtrEAJSKiu15++TX8+/TryC5NbjX2ca+ZmPnQcnQzMNVB
ZtqjUtWhRJ6PGxVZKKjIRkFFFgoqslAsz0N51U1UKW53dYr0gNGTGmDpiM/xkMvork6FiO4jLECJ
iOieoKyrxZ7YrxCRuL3VBYpsTBwQ8sg7GOg8QkfZdb7auhqUV5VAVlWCiuqbqFFUorauGhXVZbhW
cgXy2lvQk+rD0YKr4FLHdTNoWAW3d1enQkT3GRagRER0T0krikHo2dUovJXTauxQt0mYG7ga5sbW
OsiMiIiIWsMClIiI7jnVikrsuvwJIlN3tRprbmSNuYPXYKjbRB1kdu+qq6vDu+++CwCYPXs2vLy8
Otznf//7X6SkpCAgIABTpkzpcH9ERHTvYwFKRET3rPj8aHwb/SZKKwtbjfXv+RieH/wWepg76yCz
e49CoYChoSEAIDw8HBMndrxgnzp1Kg4ePIiQkBBs27atw/11loKCApw8eRIAMG7cOFhZcQozEVFn
kXZ1AkRERO3l5zQUG5/8BY95PNVqbFze73jjl8n4+cpmKOtqdZAd3Svi4+Mxa9YszJo1C9nZ2V2d
DhHRfY0FKBER3dNMDM2x8NH38caYrehu1rPFWEVdDfbGfoVVv05BQn60jjIkbamqqkJ6ejpSUlJ0
et7CwkLExsbi1q1bOj1vR3TVvSIiag0LUCIiui/4OQ3FhskHMc5nLiRoec/CgopsbIx8EV/9vlyj
6bt0d3jttdfg6emJ5cuX6+ycBQUFcHBwwKBBg+6pYq4r7hURkSZYgBIR0X3D2MAEcwJX453xP6Kn
ZZ9W489nHcbrP0/AgbjNqFVW6yBDIiKiBxsLUCIiuu/06e6P9yftxTT/JTCQGrYYW6Oswr64r7Di
5wmIvhYOQWh5j9F7XVpaGubNm4e+ffvCysoKjz/+OLZu3arRdWdlZWH+/Pno168fTExMMHjwYKxf
vx4qlard+YSGhmLs2LGwtraGs7Mzpk6diitXrqjFZGRkIDg4GIcOHQIAXLhwAcHBweKrpqamXf22
Zt26dZg5c6b49ZIlS8Rzbt26tVF8W+/PunXrEBwcjM8++wwAEBYWhqlTp8LCwgL79u0DACiVShw7
dgyLFy+Gv78/bGxsYGJign79+uGdd96BXC7v8L365ZdfMH36dHh5ecHU1BQBAQGYN28ekpKSmsy7
4RzBwcEoLi5GdnY2Xn/9dfj6+mLAgAEa3FkieqAJglAuEBER3acKK3KEjyJfEmZ/76PR651DfxOu
FsV2ddqdIjIyUrC2thYACGZmZsKQIUMES0tLAYDwt7/9TQAgABDCw8MbtT127JhgY2MjABA8PT2F
oKAgwcTERAAgjBs3TlAqlY3aTJkyRQAghISENDpWWVkpzJgxQwAgmJubC0OHDhXc3d0FAIKpqalw
9OhRMTYmJkbMralXZWVlu/q989oa+oqN/d+/fUP+Tb1Wrlyp1fuzZcsWtf537drV6Np79OghPPLI
I4KFhYX42TPPPKPWZ1vuVXV1tRASEiIec3JyEh555BHxe8LY2Fj4+uuvG+V95zni4uIEb29v8Wtv
b+9G8UREd2IBSkRED4QLWceEJXtGaVyIfnnyNeFGeVZXp6015eXlgpWVlVjwKBQKQRAEoa6uTti/
f79gb28vFhG//vqrWtubN2+KbXfu3Cl+npOTI3h4eAgAhLCwsEbnbKkAXbt2rQBACAoKEoqLi8XP
33//fQGA0LdvX6Gurk78XKVSCQsXLhQACOPHjxdUKpX46ki/gtB8AapSqYS8vDzx2Llz55o8b0fv
T79+/QR9fX0hJCREOHHihFBaWirIZDJBEAQhJSVFWLp0qZCcnCy2q6mpEVasWCHmlZWl/n2q6b1a
v369AECwtLQUIiIi1Np/8MEHglQqFQAIZ86cUWt3ZwHq7+8vuLu7C1999ZVw/fp1ITc3t9F1EhHd
iVNwiYjogRDoOhYfTQnHRN8XoCfRbzX+fPYRrDw4Cf859y5kVcU6yLBzffHFF5DJZOjVqxe+/fZb
6OvX3wOpVIqnnnoKcXFxzbZ97733IJPJMGXKFMyePVv83MXFBStXrgQAfPrppxrnkp+fj08++QQA
sGnTJtjZ2YnH3njjDbi4uCA1NVWcRgoAEokEEolE7f2dn7W335ZIJBJIpf/7VUkqlTZ53o7en6Sk
JCxZsgTbtm3D6NGjYW1tDUtLSwBA37598cUXX8Db21uMNzQ0xCuvvCJ+nZqa2ijv1u5VXl4eNmzY
AABYv349xo8fr9Z+9erVmDZtGgBg6dKlzU7RzsvLw7Fjx/DKK6/A2dkZPXu2vBI1ERELUCIiemAY
G5hg1kPLseHJgxjY87FW41VCHU6k7cJr+4MR9udHqKgu1UGWneO7774DAMyePVutqGpgY2Mjvr+z
UAGAPXv2AADGjRvXqF1AQACA+r00NX0WNCIiApWVlbC3t8fAgQPVjunp6YnPEbZUFOuy39Z09P4M
GzZMLJw15erqCmNjYwCATCZrU1sAOHbsGORyOQwMDDBv3rwmYxYsWAAAuHz5crP7o4aFhcHDw6PN
5yeiB1frfwImIiK6zzhZumHF41twJf8swi5+iLzy9BbjFXU1OJz0HaLSdiPY+1mM7zcPFsY2Lba5
myiVSuTk5AAA+vRpfXXgO8nlcuTl5QGoX9hn7969aserqqoAAAqFAgUFBXBycmq1z7S0NLHtmDFj
Gh1PTEwEADFnTXVWvy3Rxv3x8vJq8o8Cf3XlyhWkpaXhxo0bKCoqgkKhaHfeDffK0dERZmZmTcZ4
enqqxffu3btRjI+PT7tzIKIHEwtQIiJ6YA1wehT9Jx/AibTd2Bf3FW7XtDySVKOsxK8JW3E0eSdG
e83ARN8XYG3SXUfZtt/169ehVCoBAPb29m1u2yA2NrbF2OLiYo0K0IYCsKKiAidOnGixv7borH5b
0hn3569+/PFHfPTRR+LIrbGxMTw8PMQR1eamx7YkMzMTQMvfD3cey8rKavM5iIiawim4RET0QJNK
9TDWexY+feoIJvq+AAM9o1bb1NZV40jyD3ht/xhsjX4b+eXXdJBp+9059bO6um37nd75TN/Ro0ch
1C9g2OTL399foz6dnZ0BAEFBQS32d+DAgTbl2ln9tqQz7s+dNm3ahNmzZyM9PR0bNmxAdHQ0ysvL
kZCQACOj+u/Vv06Z1kSPHj0AAOXl5c3GlJWVie/b+ocLIqLmsAAlIiICYGpogVkPLcenTx3BiD7T
IJG0/iNSqVLgZPo+rDw4CZ9F/R1JBed1kGnbubi4iFM8G6aLasrc3BwuLi4AgDNnzmgln379+gEA
Ll261OaCuCv6bUln3J8GCoUCK1asAAD88MMPWLVqFYKCgmBo2PLetpro27cvgPrvh+ZGUO8c3fXy
8urwOYmIABagREREamxM7LFg6Hv48MlfMKT3+NYb/L/Lub/hg2PzseqXKfgtbQ9qlFWdmGXbGBoa
ws3NDQDw888/NxmzefPmZts3rJC6fft2VFRUdDifUaNGwcjICLW1tdi0aZPG7QwMDAD8b/qotvrV
5JwtnVfb96dBTEyM+AzpkCFDmo2rq6tr9Flr9+rRRx+FRCKBXC7H4cOHm4zZtWsXgPrRUi40RETa
wgKUiIioCU6W7ljy2KfYMPlnPNyr8YI2zcmVXcW2c+/glT0j8N35d5FTltp6Ix1o2Lbj5MmT+Oab
b8TPCwsL8fLLL2PdunXiZ38dEfvggw9gZ2eHvLw8zJs3r8lVV2/cuIGamhqNcnFzc8Pq1asBAGvX
rkVERESjGIVC0Wi0tqEISk5ObrKwam+/LbG1tRW3RGlu+xZt358G5ubm4vvt27eL7ysrK/HGG2+I
/f11Gxag9Xs1cOBAccuYN998E0VFRWrHz5w5g61bt4rXp41RVyIiAJAIglAOwKKrEyEiIrqbXS9L
w8/xobiQdQQC2rboS2+bfhjuMRVD3SbC3Ni6kzJsWVVVFQYOHCiufurs7AwrKyskJibCyMgIhw8f
xqhRowAA4eHhmDhxolr78PBwzJ49GxUVFbC3t8eYMWPg7u6O1NRUnDt3Djk5OUhPT1cbKZs6dSoO
HjyIkJAQbNu2Ta2/mpoaPP3002KROGLECAwaNAgSiQTnz5/H5cuXMX36dOzYsUNsk5mZCV9fX1RV
VcHKygqzZs2CjY0N1q9f36F+jx8/juDgYAD1Cwn99VnNxYsXY8uWLQDqny8dN24cgoKCMHbs2E67
P0D9s7uPPPIILl68CAAYNGgQnJ2dER0dDX19fQwcOBBHjx5Fz5498dZbb2HhwoXiVGtN7lV+fj5G
jx6N1NRUODk5YeLEiXB2dkZ8fDwOHjwIhUKBJ598EgcOHFBbpTc2NhaDBg0CUL/wU8MUZCIijQiC
UC4QERGRRvJk14TQM2uE53YMEGZ/79Om13M/+AkfRb4k/J7+syCvqdB57mVlZcLkyZMFqVQqABAk
Eong7+8vHDx4UKitrRUACACE8PDwJttnZ2cL48ePF4yMjMRYAEKvXr2ESZMmCUVFRWrxU6ZMEQAI
ISEhzea0ZcsWoWfPnmr9mZiYCIGBgcKmTZsaxe/fv1+ws7MTY/X19Tvc77Fjx8SY2NjYRn3JZDLh
6aefVutr/fr1Ork/mZmZwqOPPir2ZWBgIEybNk0oLCwUbty4Id4LiUQi5OXltfleyeVy4aWXXhJM
TU3VcnZwcBC2bNnSZE4xMTFiXE5OTrO5ExE1hSOgRERE7VBWWYyjyT/gRNpPqFLcbnN7fakB+jk8
godcRmGQyyjYmOhuldHbt2/jypUr8PDwaNfqpkqlEqmpqSgvL4evr684RbUjSkpKkJSUBEdHR3h4
eLS4L2Z1dTVSUlIgl8vh7e0NW1tbrfTbmtzcXKSnp4t96es3vZudtu+PIAjIyMhAYWEhBg0aBBMT
E/FYbW0tLl26BG9vb1hbNx5d1/ReqVQqZGRkoKCgAN7e3uje/e7fXoiI7k0sQImIiDqgWiHH6YyD
OJYShhsVTS/4oglnqz7o7zgUfk5D4dk9ACaGZlrMkoiI6O7AApSIiEgLBEFA/I1oRKXuwuXck1AJ
jVcm1ZQEErhY94VXj4HobeMLN9t+6GnVB/pSg9YbExER3cVYgBIREWlZWWUxfs/Yj9/TD6DwVo5W
+pRK9NDD3BlOFu7obuYMW1MH2JjYw8zYGmaGljA2MEWNsgpSiR7MjCwh1WAfUyJdkkikMDOy4vcm
0QOOBSgREVEnSiuKwZmMgziXfQSVtdrbI5LoXmRmZImZAcsx0nN6V6dCRF2EBSgREZEOKFUKJORH
43z2UVzKOYFKxa2uTomoy7z9xA70tX+oq9Mgoi7AApSIiEjH6lRKpBZdwuXrvyEm9xQKsqQimQAA
AlxJREFUb2V3dUpEOvWE91zMHby6q9Mgoi7AApSIiKiLldzOQ8KNP5B44xxSiy6jtLKgq1Mi6lST
+7+IvwUs6+o0iKgLsAAlIiK6y9yU38DV4lhk3UxCVmkScspSUVFd2tVpEWmFgdQQ70/eDydL965O
hYi6AAtQIiKie4C8phz5FVkovJWNUnkBbsoLUF5VDHltBWRVJSitLISirhqCIEAq1YOxvgn0uG0L
3UWkEgkcLdzwzKB/wKtHQFenQ0RdhAUoERERERER6QQ3YiIiIiIiIiKdYAFKREREREREOsEClIiI
iIiIiHSCBSgRERERERHpBAtQIiIiIiIi0gkWoERERERERKQTLECJiIiIiIhIJ1iAEhERERERkU6w
ACUiIiIiIiKdYAFKREREREREOsEClIiIiIiIiHSCBSgRERERERHpBAtQIiIiIiIi0gkWoERERERE
RKQTLECJiIiIiIhIJ1iAEhERERERkU6wACUiIiIiIiKdYAFKREREREREOsEClIiIiIiIiHSCBSgR
ERERERHpBAtQIiIiIiIi0gkWoERERERERKQTLECJiIiIiIhIJ1iAEhERERERkU6wACUiIiIiIiKd
YAFKREREREREOsEClIiIiIiIiHSCBSgRERERERHpBAtQIiIiIiIi0gkWoERERERERKQTLECJiIiI
iIhIJ1iAEhERERERkU6wACUiIiIiIiKdYAFKREREREREOsEClIiIiIiIiHSCBSgRERERERHpBAtQ
IiIiIiIi0gkWoERERERERKQT+gCKAFR1dSJERERERER0f/s/OsJE9PxNNyMAAAAASUVORK5CYII=

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Basic.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
veZsFDYqLKo2apbtz65gT0WzosuiJzkunIOcl1xHbiF3IsYupiDmeaxdbEHseJxd3P64iXiH+KL4
VzwXXgnvTYJnwtGE6UT/xKrEuaSwpIZkQnJU8nm+BD+R37lWce36tX0CXUGOYDjFJuVAyqTQW1iZ
CqWuSm1Jo6OmpjtdK/2H9JEM+4zSjI/rQtedXS++nr++e4POhl0bnme6Z/68EbORs7EjSzlrW9bI
JqdN5ZuhzdGbO7aobsneMrbVY2v1NtK2xG2/bTfaXrD9/Y6wHa3ZCtlbs0d/8PihLkckR5gztNN2
59EfMT/yfuzZZbrr0K6vudzcm3lGeUV5s7s5u2/+ZPxT8U9ze2L39ORb5B/Zi9vL3zu4z2FfdYF4
QWbB6H7f/U2FzMLcwvcH1hy4UWRWdPQg6WD6weFin+KWQ2qH9h6aLYkvGSh1Lm0oky/bVTZ9mHu4
/4jjkfqjCkfzjn4+xjt2r9yjvKlCo6LoOO54xvFnJ0JPdP1s9XNNpWxlXuWXKn7VcHVgdWeNZU1N
rXxtfh1cl143cTLyZO8p11Mt9fr15Q2MhrzT4HT66Re/RP0yeMb7TMdZq7P159TPlTXSGnOboKYN
TZPN8c3DLeEtfee9zne02rY2/mrwa1WbclvpBckL+RdJF7Mvzl3KvDTVLmh/dTnu8mjHmo6HV1Zc
udu5vLPnqvfV69fcr13pcuq6dN3uetsNmxvnb1rdbL5lcaup27y78Tfz3xp7LHqablvebum17m3t
W9Z3sd+h//Id1zvX7rLu3hrwG+gbDBm8NxQ5NHyPe2/8ftL9Nw8yHsw83PoI+yj3sdjjoifyTyp+
1/69Ydhi+MKI60j306CnD0c5oy//SP1jdiz7GfVZ0XOl5zXjJuNtE+4TvS9Wvhh7KXg58yrnT/E/
y15rvT73l+Nf3ZMrJsfeCN/Mvd39TuZd1Xuz9x1TAVNPPiR/mJnO/SjzsfqT1aeuz2Gfn8+sm8XP
Fn/R/tL61fvro7nkuTkBW8he8AII2sKxsQC8rQKAGg4ADfXFJJFFL7wQAS36d5TnffyCl/9PXvTL
C/EWAJzaClADAYBpOwCnUdZAmYrWAEcAgh0BbGr6raLqfEmNNTVZAIiMehVs0dzcO9Qb4rUB+DI0
NzfTPDf3pRL17A8AaP+w6MHno8VOAnAsxMgyzOe6/rPyhfHfNX8DuEroj/qxrFIAACAASURBVHgB
7Z0J/E3F///fRXYlRNosiSwRsiRlK0shlVK0IMqWNi3ShgghLdosUVRalKJUZEskSaISki2iVEQJ
nf+85vub+7/LnPu5n8/nLuee+3o/Hp/PvWdmzpyZ59x737O85z1HOUqEQgIkQAIkQAIk4HsCR/u+
hqwgCZAACZAACZCAJkClzw8CCZAACZAACWQIASr9DGloVpMESIAESIAEqPT5GSABEiABEiCBDCFA
pZ8hDc1qkgAJkAAJkACVPj8DJEACJEACJJAhBKj0M6ShWU0SIAESIAESoNLnZ4AESIAESIAEMoQA
lX6GNDSrSQIkQAIkQAJU+vwMkAAJkAAJkECGEKDSz5CGZjVJgARIgARIgEqfnwESIAESIAESyBAC
VPoZ0tCsJgmQAAmQAAlQ6fMzQAIkQAIkQAIZQoBKP0MamtUkARIgARIgASp9fgZIgARIgARIIEMI
UOlnSEOzmiRAAiRAAiRApc/PAAmQAAmQAAlkCAEq/QxpaFaTBEiABEiABKj0+RkgARIgARIggQwh
QKWfIQ3NapIACZAACZAAlT4/AyRAAiRAAiSQIQSo9DOkoVlNEiABEiABEqDS52eABEiABEiABDKE
AJV+hjQ0q0kCJEACJEACVPr8DJAACZAACZBAhhCg0s+QhmY1SYAESIAESIBKn58BEiABEiABEsgQ
AlT6GdLQrCYJkAAJkAAJUOnzM0ACJEACJEACGUKASj9DGprVJAESIAESIAEqfX4GSIAESIAESCBD
CFDpZ0hDs5okQAIkQAIkQKXPzwAJkAAJkAAJZAgBKv0MaWhWkwRIgARIgASo9PkZIAESIAESIIEM
IUClnyENzWqSAAmQAAmQAJU+PwMkQAIkQAIkkCEEqPQzpKFZTRIgARIgARKg0udngARIgARIgAQy
hACVfoY0NKtJAiRAAiRAAlT6/AyQAAmQAAmQQIYQoNLPkIZmNUmABEiABEiASp+fARIgARIgARLI
EAJU+hnS0LFWs1KlSnLSSSfpv3fffTfqbX/88YeULVtWpz377LOjpmUkCZAACZBA6gnkTX0RWAIv
Edi5c6fs27dPF2nKlCnSrl071+K9/vrrsmXLFh3/33//uaZjBAmQAAmQgDcIcKTvjXbwZClmz54t
GM27yUsvveQWxXASIAESIAEPEqDS92CjpLpIefLkkcqVK8vBgwfljTfesBZnw4YNsmTJEqlSpYo1
noEkQAIkQALeI0Cl77028USJOnfurMsxbdo0a3lefvllHX799ddb400gZguuuuoqOf3006Vu3bpy
++23B5YPTBrz2rt3b5123bp1sn//fhk9erS0aNFCatasKQMHDpRffvlFJz18+LCMGzdO2rRpo20K
Lr74Yvn6669NNhGvy5cvl+7du0v9+vWlQoUK0rZtW3n00Ud1pyYisQoILgeWL/DsWrVqycMPPywj
RozQZZwwYYLtVh32wAMPBOrhmogRJEACJJAKAg6FBIIIFC1a1FEjfUeN5B31eXSOOuooZ/PmzUEp
HEet3zvly5d3Tj75ZEcpVJ2udOnSIWlwcd999+n7S5Uq5SjF7FStWlWnxeuvv/4akf7UU0/V8R9/
/LHTtGlT/f7444/XryhL69atnSNHjjjXXXedDkNZjz766EC63bt3R+T5yCOPOHnz5tV1Up0HR3Ui
HJQH+VWvXt35/vvvI+4x5Zg1a5ajZjx02nz58jm33Xab8+KLL+pr1B1lCRewQpmQh+qchEfzmgRI
gARSSkBS+nQ+3HMEjNJHwc4991yt4NSoOKScCxcu1OH33HOP8+WXX+r34Ur/gw8+0OENGjRw/vzz
z8D9ahStw9VoOBBm3hhlq0bjuoOwYMEC3cFYtmyZvgeKGvmdcMIJzltvveX8888/zsaNG50SJUro
+Oeee85kpV/RecA9iFdLEYG4f//91+nRo4eOQx3RiQkWUw68NmzY0JkzZ46De/C8v/76ywEj5Is6
hsv999+v49SsQHgUr0mABEgg5QSo9FPeBN4qQLDSf/rpp7UCw4g4WG688UYdvnbtWlelX6NGDZ1m
3rx5wbc6O3bs0OFQ3OFilG21atUcNZUfEo0yQNFilL5mzZqQuA4dOug4dEKC5ayzztLhako+OFi/
hwJHRwV5Tp8+PSTelENtX3T27NkTEocL02FQyxYhcYcOHXLKlCmjZxW2bt0aEscLEiABEvACAa7p
q199ip1Ax44dRU2Ni1KygTXzv//+Wxv3nXPOOaKm6a03/v7777J69WpRSwOilgH0WjzW4/GHsEKF
ComainfdGYD1eqXcQ/JWylRfY11ddQpC4k488UR9rZRuIFzNLsg333yjr6+88spAuHmTP3/+wHbE
xYsXm+CQV9XpEbW8EBKGC9Xp0WEzZ84U1SkIxMOvgerUCGwMTjnllEA435AACZCAVwhQ6XulJTxY
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
5f3334+MUCEY/eMAHQoJRCPA6f1odBhHAiQQNwI4Xa9ChQrW/H766ScpW7asNY6B/yOAJZIzzzxT
fvvttwgk2I+/bNkyqV27dkQcA0ggmABH+sE0+J4ESCBhBMqXLy9VqlSx5g+PcZToBO666y6rwsdd
9913HxV+dHyM/T8CVPr8KJAACSSNQMuWLa3PmjdvnjWcgf8jsHDhQpk8ebIVB6b1ofQpJBALASr9
WCgxDQmQQFwIuCl9WPDjOF5KJAF4LezVq1dkhAqB06OJEydKvnz5rPEMJIFwAlT64UR4TQIkkDAC
F1xwgVVBYb169erVCXtuOmf81FNPyXfffWetQu/evaV+/frWOAaSgI0Alb6NCsNIgAQSQqBQoULS
oEEDa94LFiywhmdy4C+//CKDBg2yIihTpowMHTrUGsdAEnAjQKXvRobhJEACCSHQrFkza744750S
SuDee+913ZP/+OOPy7HHHht6A69IIAsC3LKXBSBGkwAJxJcARvRNmzaNyBTuY3ft2hURnqkBX375
pdStW9dq6wAPhrCDoJBAdglQ6WeXGNOTAAnkisDff/8txYoVk3///TciH6xdYy86RQT2D4sXL45A
kSdPHlm1apVUr149Io4BJJAVAU7vZ0WI8SRAAnElULBgQTnnnHOseS5ZssQanmmBb731llXhgwOM
96jwM+0TEb/6UunHjyVzIgESiJHAeeedZ0352WefWcMzKfDw4cMyYMAAa5WPP/54efjhh61xDCSB
WAhQ6cdCiWlIgATiSsBN6S9dujSuz0nHzJ5//nlZv369tegPPfSQFC9e3BrHQBKIhQDX9GOhxDQk
QAJxJQCDvdKlS0fkiaNhf//9dznuuOMi4jIh4K+//pLTTz/datB4xhlnyNq1awV+9ikkkFMCHOnn
lBzvIwESyDGBUqVKCXzxhwu88i1fvjw8OGOux4wZY1X4AIAT9KjwM+ajkLCKUuknDC0zJgESiEbA
zUlPpip9nJ43evRoK7Jzzz1XrrjiCmscA0kgOwSo9LNDi2lJgATiRqBevXrWvL744gtruN8DMZLf
u3evtZojR460hjOQBLJLIG92b2B6EiABEogHATiescmKFStswb4O27FjhzzzzDPWOl588cXSqFEj
a5yXA9G+27dvl5kzZ2onQ6aslSpVEtguuAnsOdzOGnC7h+GxE6DScRaBQAAAIABJREFUj50VU5IA
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
BLxC4P8BYBwBl48WlKcAAAAASUVORK5CYII=

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Pool.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
eAHtnQe4FcXZx0cTo2JXEsGGotGoKLFjBRu2KIgglkg0dmxYoqISsSsComLHgiKKNWKvYBejYhcj
SqzRGI1YiKn7vb/xm8M555527yl3d8//fZ69W2ZnduY/e98z+9Z5IiMnEgJCQAgIgboiMG9dW1fj
QkAICAEh4BEQs9WLIASEgBBoAAJitg0AWY8QAkJACIjZ6h0QAkJACDQAATHbBoCsRwgBISAExGz1
DggBISAEGoCAmG0DQNYjhIAQEAJitnoHhIAQEAINQEDMtgEg6xFCQAgIATFbvQNCQAgIgQYgIGbb
AJD1CCEgBISAmK3eASEgBIRAAxAQs20AyHqEEBACQkDMVu+AEBACQqABCIjZNgBkPUIICAEhIGar
d0AICAEh0AAExGwbALIeIQSEgBAQs9U7IASEgBBoAAJitg0AWY8QAkJACIjZ6h0QAkJACDQAATHb
BoCsRwgBISAExGz1DggBISAEGoCAmG0DQNYjhIAQEAJitnoHhIAQEAINQEDMtgEg6xFCQAgIATFb
vQNCQAgIgQYgIGbbAJD1CCEgBISAmK3eASEgBIRAAxAQs20AyHqEEBACQkDMVu+AEBACQqABCIjZ
NgBkPUIICAEhIGard0AICAEh0AAExGwbALIeIQSEgBAQs9U7IASEgBBoAAJitg0AWY8QAkJACIjZ
6h0QAkJACDQAATHbBoCsRwgBISAExGz1DggBISAEGoCAmG0DQNYjhIAQEAJitnoHhIAQEAINQEDM
tgEg6xFCQAgIATFbvQNCQAgIgQYgIGbbAJD1CCEgBISAmK3eASEQAwT+97//xaAX6kI9EfhxPRtX
20JACBRG4IUXXnA33nije/PNN90bb7zh/vKXv7jlllvOrbLKKn5beeWVXa9evdyGG25YuAFdTRwC
80RGieu1OiwEEorAP//5Tzd8+HB3/vnnu//+979+FDDZLl26uI8++sh9+OGHLqxy999/fzdu3LiE
jlTdzkdAK9t8RHQuBOqEAMy1Z8+ebtq0aW6eeeZxQ4cOdcccc4zr2LFj5onff/+9mzJlirv33nvd
T3/608z1OB18/vnn/keA1fiYMWPcvPNKGlnJ/GhlWwlKukcI1ACByy67zA0ePNgz2jvvvNP16dOn
Bq02vomXXnrJrbfeev7B//nPf9yPfvSjxncigU/UyjaBk6YuJw+BL7/80g0bNsx3fNddd201o/36
66/dzJkz3Y9//GO39tpr+3Y+/vhj9+CDD7p11lnHb9mofPvttw658Ouvv+5WWmklt9FGG+WsoLPv
5fjf//63X3HPmjXL/f3vf/fy40033dQtvfTSObfShxkzZmSuwXgDs/3FL37hOnTokCnjoLX9yKmc
thNktiIhIATqi8D111+PbsRvL7/8cqsfdt999/m6Sy21VGSryahv376Z9kaOHJnT3j333BMtvvji
mXKeu/DCC0e2ms65L5wcf/zx0WKLLZZzP3UWWmihaPz48eE2v+/du3eL+8K4/vjHP+bc29p+5FRO
4YmELfamiIRAvRF45513/COM6bnu3btX9bghQ4a4u+66y22yySZe7rvWWmtl2ps0aZLbeeed3fzz
z+/lqk899ZQbNWqUV8b169fPsRLNp8cff9ytu+66buzYse6hhx5yEyZM8JYQ3333nTvssMPc3/72
t0wVlHZHHHFE5vzss8925557rt9Q9AVqSz9C3dTuU/gDoiEJgdghMHDgQL8i7NatW5v6Fla2pliL
7FM9MiVbi3bmzJkTLb/88v45zz33XE756NGj/fX+/fvnXOfk008/bXHNrCIinmWMLzIGnFP+4osv
+uuUscrOp7b2I7+dtJ1rZZvan1ENLE4IvPfee747K6ywQtXduuGGGwra3950003edIyVMzLabArK
OKwc8ilfLks5q9TVVlvN34pJWmuorf1ozTOSeK8UZEmcNfU5cQiYrNX3GUVZNbTkkks6xAGFCOcI
CIUVlg/ZhH0v9I9//MNhulXMrAzztL/+9a/us88+80oz6gS7X44roVr0o5LnJO0eMdukzZj6m0gE
8AyD0ObXi4JcGLksJmbF6JNPPslhtjBgVss4UJiIoNXMNf85be1HfjtpOxezTduMajyxRODnP/+5
7xfKJpwBOnfuXPN+LrLIIr7NXXbZxR199NFF28cVOBCMdqeddvKOFJiUnXDCCW6zzTbzCrMtt9wy
x8wr1Cm3b0s/yrWZhnIx2zTMosYQewR69OiR6eNZZ53lNf+ZCzU6WGONNXxL2N8SV6ESwm0Yj7XN
N9/cPfzww96KIdSbb775wmGr9m3pR6sekNCbpSBL6MSp28lCgIAyAwYM8J2+8sorvbNBrUcAw4TM
jtdvlbSP2ReEAg1zsUooODFwL/LdfGpLP/LbSOO5mG0aZ1VjiiUCrCIXWGABr3jCOwutfSHCvvWK
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
jMD/AYHsQzYFD/FCAAAAAElFTkSuQmCC

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Iterator.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
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
qV27drRq1Qqg3BuKW3ezbIjnJ0RD0SjmWN/qmWee4fvvv+e3337jnXfe4bHHHquwbum86FOnTvHK
K69UWC8+Ph5HR0csLCzo27cve/fuZceOHbzyyisEBARQXFzM8OHD8fb2xtnZmbCwMBISEmjatCmb
Nm0C0FtiHRUVpX7/73//u9KYayInJ4cNGzawcuVKTp48We1E+nalT+DfvrbqrUrLSusKIe4/8+bN
46effiItLY01a9YQEhLCt99+q45AV9XgwYN5+umn+fHHH1mwYAEWFha8/vrr6opFUDJocPjwYbp2
7aozn9vT05OLFy9y9uxZzp49e08+y/HDDz+Qm5vLU089pTNYsXXrVv7880/g78GKW5V+6giwceNG
nnjiCbTaRpcCCFHvGuX/qqVLlxIYGEhaWhpTpkxh4cKF5dYrvYN/4okneP311yvs79Zl7oYMGcLe
vXvZuXMnr7zyClu3bsXQ0JDHH38cjUbDwIED+eabb9i7dy8jR45k586dtGjRgm7duunl3G4dddi8
eTO2trbl1qvJNrU5OTk89thj7N+/H29vb95991169+5Nly5deOSRRyrcXrcypUtZlY54l6d0dOXW
jQ6EEPcXJycngoODmTRpEoGBgYSGhtKxY0eaN2+Ol5cXbdq0ISYmhvDwcKKjoyvt64svviApKYn9
+/fz9ttvs3jxYnXgIzY2lpCQEG7evMnVq1d1EuupU6eqn1b6+Pjwj3/8AxcXF/7zn//obDRTn86f
P8+///1vpk+fjq+vL23btiU0NFRdmtXX15dXX321TDtfX191adoff/yRgwcPMmTIELy9vZkxY0Zd
n4YQjVajTKxdXV1ZtGgR/v7+bNu2jU6dOpVbr3QkJC4ujn79+lWp7yFDhvDmm2/y+++/k5aWxp49
e+jduzf29vYADBo0SE2sTU1NycnJ0es0htatW2NiYkJeXh5GRkZVjrsqPv74Y/bv30+fPn3Ys2eP
zvquNd3RsnSUJC4ursI6pWXlbeYghLh/tG3blgMHDvDVV1+xcOFCrl69SkxMTLlT2zw9PXnooYfK
fW9ydHRk3759LFmyhI8//pi4uDj1fcbQ0BB3d3cGDBigs3oTlLx/f/HFF7z33ntkZWWp0/rupY3H
evTowdChQzl16hSBgYEEBgYCoNVqefHFF/noo4/KnXan0Wj49ttvef755wkMDCQxMZE1a9ZUuma2
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
TEwst9zZ2Zm0tDSSk5PV1yIiItT5T9U1YsQI3N3dCQgI0FnGqDpK746DgoLUr9KNHETdy8vL44MP
PgBg3LhxOkk1QPv27Rk6dCgA//vf/yrty8DAgICAAHr27FnuHOSuXbuWSapLlc77Lyoq4vLly9U9
DaDkXP6fvfsOj6pYHzj+3WRTSQ9hEwgJJKETEmrovSoIigUBkSIKXsQOXgQE8YpXsSCooPgTBBTw
ShFUunQwtAApBALpyZLe6+6e3x8xa9bsJptCGvN5njxsdubMmRNS5syZed9FixYBJb/g33333XL9
aNmypXa9YHx8PB9++KHB9rKyspg3bx7vvfderQ6qBUFo2NLizhMTZDgEY2M2d+5cvvnmG+3v4h49
evDNN9/wxBNP4OPjQ+vWrcvNQpcyNTXlzTffZNKkSfj6+tKjRw8iIiL46KOP9La9atUqTE1Nadu2
LW3atKGoqKjC37mCfmJgXYemTZtGy5YteeaZZ3TS4F64cIHw8HB69OiBu7s7W7duRZIkwsPDOX/+
vFF3jC1atMDS0lIbSqeyO1VjTZkyhbNnz3LkyBGg5LFRddoRakdISAhxcXEADBkyRG+dTp06ASWP
8SqyadMmOnbsWK1+tG7dWvu6uumnw8LCtNcyY8YMg3sPxo0bp103WPp9qI+/vz/r1q2rVl8EQWjc
Mu9dr+8u1Iq+ffsiSZL2CfLYsWOJi4vj4MGD2jqzZs0iPT2d06dPExMTo903s2rVKrZt26bT3rJl
y4iPj+fu3bssXLiQ+Ph4Xn75Zb1tOzk58fvvv3P37l0iIyM5cuSIdlOtr6+vNvSeUDExsK5DZmZm
HD16FLVajZubG35+frRr144lS5ZQVFSEhYUFP/74I2vXrsXb25vu3bvz0ksv8fDDD1fadrNmzXjx
xRcZMWIEy5cvr/RO1VhVuTsW7r+yGwm/+eYbJkyYUO6jdM1zWlpahfFfvby8jD5vWloa58+fZ/fu
3Xz55Ze1EgO97LV4e3sbrCeTybTLowxtpISSpVYVrSkXBKHpsnFuV99duG/MzMzKPYWTyWS4ublp
B+AVsbOz0/5utLW11Vnuqa9te3t7vUtLBOOIv0J1rE2bNhw/fpycnBxiYmJo166dzsaAgQMHEh0d
jVKpxNnZWads1apVOm2VPkYv9fHHH7Ns2TJtzNRly5bx8ssvY21tjVwuZ9asWdqwZWXXelfW7qxZ
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
i9MmGftnOwMHDiQ6Oppz586RmZnJu+++qy1btWoV27Zt036+aNEi9u7dC4CDgwOxsbH8+eefhIWF
lbuZfRCIgXU9E3eigiA8qMoOrGu6Z+PgwYMcOXIEuVzO999/r43DDjB79mztBqoPPvhA+76JiQkK
hUK7fANKspsqFAoUCoXRv9+Ki4tZv3497733HlCSIGn+/Pl66546dYpff/2VtWvXMnjwYPz9/bG0
tNSWv/HGGwBMmzaNuXPnat9XKBR8/vnnQMnyieDgYG3ZlClTMDc3R61W6wx4yir9+zB79mxMTU2N
uq6DBw9ql5esW7eO6dOna4+Vy+U8++yzfPbZZwD8/PPP/PHHH0a1a6wrV65oXy9YsEDn69SqVSv6
9+9fq+dryKytrcstzawKhUKBmZmZzntmZmY4OztXeJyrq2u544zh7Oxs9PdZUyOigtSxvLw8nc+n
T5+ujd5hbm6u3ZkOhu9ES5Xeid67dw8nJyftN3/pnWhWVpbedkrvRJVKJc7Ozjo/NKtWrdLpX9kM
e6V3oqmpqTg4ODywPzTCgyc7ahe3Tl/Duc1gHFv2wsS0+n/ghL+VXYJh7KSCIevXrwdKnua1b9++
XPnw4cM5dOhQrSWWWbNmDWq1msjISC5cuKCNmGBnZ8dPP/1Es2bN9B73f//3fwYHhJcuXeLChQtA
yWD5n/r27YuVlRX5+fmcOXOGrl27AiWDmPHjx7N79262bNnCm2++qXPchQsXCA4OxsTEhDlz5hh9
jV988QVQsvF++vTpeuvMmDGDJUuWkJaWxhdffMGwYcOMbr8y9vb22tcbNmxgxYoVtda2INwvYmDd
AFhbW9foeH3ro429E62Oytptako3cmo0mnruiVDXSv/P1blx3D73C7fPfYSJ3Aqn1n1p7jmE5p6D
sVP4IpOJh3/VUfZ3V1JSUqX11Wq1dqmDra2tzsDr5s2bQMnvvu+++67csaUhR5OSkigsLKwwNrox
/vOf/+h8bmFhwfz587URlwypKLRd6TUABAcHl9uoCCV/L/Lz83U2nEPJMpjdu3cTEhLCpUuX6NWr
l7asdLZ69OjReHh4VHxhZZSuMff19TX49bKysqJLly6cPn26ymvSKzNq1Cg8PDyIiYlh5cqVnDhx
gqVLlzaKMIbCg0sMrAWhElZWVgBGbywVmo7SsGKm/P1/r1HlkxL5BymRJY+9zSwdcPYYiLPnYJp7
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
86NDhw7k5+fAzZWwAAAgAElEQVQTERHB9evXmTNnjnb99D9NmDBBm9jF2dmZ+Ph4g2vXK+tbUFAQ
EydOJCYmBmtrawICAvDy8uLmzZtcunSJwsJC2rRpw759+7TLUMp69913eeedd7SfOzg4kJGRAZRk
U/T29mb27NlASVxzT09Pbd133nmHd999Fzs7O/z9/fHx8SEoKEibOMbf35+zZ8/WOGRtbUuIOsmJ
n54CJOyc2uE36N+09Bop9lYYoSAvlciQnQSf/5TiwizkZs2YNC8Ic0u7yg9uIMTAugr2HY/m7bVX
MDczYcvqwfi2c6zvLjUJ67aHsnFXOHK5jAs/jsfSvHE8SImOjiYuLo7c3NxGMchWa2DPBVuK1OVn
Pbu2LqRbm/uzkz1LeYK81KtVPk5u4YJT28cxMS3JtlaYfoN85WkkTeUzxKaWCqxbjkBuVT7Gu976
pqbY2tri5eWlk166qlRFOaTHB5IW9ydpsefJSLyMRnX/IgTITOTYOHfATuGLnUsXbJt3xKZ5B6zs
Kg6P1lDdvXuXBQsWcOLECfLz8/XWsbW1JSAggJdffpnx48eXK5ckibVr1/LRRx/pLD8wNTWlXbt2
dOvWja+//rpcZJCoqCieffZZTp06pX1v6tSpOmnN62pgDSVRUubPn8/p06d1ljs4OTnh6+vL7Nmz
mTFjht5j//e//2k39FUWOcOYvmVkZPDSSy+xe/dunSRntra2TJkyhY8//lhnOU1ZhYWFvP7663z5
5Zfa9jt27Mjzzz/Pq6++yubNm5k1axZQfmD9+++/s379eq5cuYJSqdS+L5fLee6551i5cmWNfl7v
p4S7xzi151k0mpInYKZyS6xtW2JqZlXPPWugJImiwizysxOQ/pqcsLJxY9yMI1g2MxwXviESA+sq
euzlY9yKysLOxoz/vtaLQT2rl2RFgOJiDet/DOPbn0s2vrwxqyszJ4kYwPfL/nP5rN6eU+59Exn8
710nXJ3uTyZNtbqI49vGka4MqvKx9i6dGPLUHu0v1sLcZEKPLSEhzJgNSzI8/GfQYfAyzK3q5yZY
oy4mUxlEWtwF0uIukB53geKCjPt+Xrm5LTbNO5QMtJ070MzJm2ZO3ljbezaKGW6NRkNUVBRhYWFE
RERgY2ODQqHAw8ODLl26GL1EJCUlhRs3buDg4ECnTp10UmLrI0kSkZGRRERE4OrqSvv27Ss95n5T
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

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/ListVocabulary.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nOzdd1hUx/s28HuXJiCooKgIKiIoGjso
gj3WGDWJijExaAoqMRpNJJr409gSG7bYUbEkwd57b4GANVgARUVAQaSDVGHn/cN398u6SxWW4v25
rnMJc+bMPOcsLjw758xIhBD3AdiCiIiIiIiISEOk5R0AERERERERvXuYjBIREREREZHGMRklIiIi
IiIijWMySkRERERERBrHZJSIiIiIiIg0jskoERERERERaRyTUSIiIiIiItI4JqNERERERESkcUxG
iYiIiIiISOOYjBIREREREZHGMRklIiIiIiIijWMySkRERERERBrHZJSIiIiIiIg0jskoERERERER
aRyTUSIiIiIiItI4JqNERERERESkcUxGiYiIiIiISOOYjBIREREREZHGMRklIiIiIiIijWMySkRE
RERERBrHZJSIiIiIiIg0jskoERERERERaRyTUSIiIiIiItI4JqNERERERESkcUxGiYiIiIiISOOY
jBIREREREZHGMRklIiIiIiIijWMySkRERERERBrHZJSIiIiIiIg0jskoERERERERaRyTUSIiIiIi
ItI4JqNERERERESkcUxGiYiIiIiISOOYjBIREREREZHGMRklIiIiIiIijWMySkRERERERBrHZJSI
iIiIiIg0jskoERERERERaRyTUSIiIiIiItI4JqNERERERESkcUxGiYiIiIiISOOYjBIREREREZHG
MRklIiIiIiIijdMu7wCIiIiIqpqYmBhER0fDzMwM5ubm5dafpuMgIioOrdmzZ08EYFregRARERXm
5cuX+O+//3D69Gns27cPQUFBSEhIgBACxsbG0NLSKu8QNSoqKgrh4eEwMzPLt867eM3u3buHmJgY
mJiYqD0/+f5atWqp3R8aGorY2FjUrl0bAHD37l3ExMTAzMwMEomkSDH88ccfcHFxgZaWFvr06VPi
cwkNDUVUVBT09PRQrVq1YvdXWnEQEZUFjowSEVGFJ5PJ8Mcff2DGjBlIT09XW0dLSwv79u3DkCFD
NBxd+fn000+RkJCAu3fvqux7l6/ZF198gVu3buHMmTPo3bu30r6oqCi89957AIDjx49jwIABSvvT
09PRqlUrODk54fz58wCA9u3b49WrV0hLS4OBgYFmTgLA8+fP0aJFC+Tk5GD8+PFYt26dxvomItIE
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
ymG49FhxcTHy8vLkz2VVSkpKkJubCyMjI/nCSvVBIpHA3d0dn332mXyhJao/TEZJI9q0aYPo6OgK
569du4bWrVsjJycHZmZmFa4bGhq+MMu6ExER0bO5desWTp06JT+uXbtW7Z6mRKro2LEjzp0799yv
1tzQcZguaURlfyhkP/CPHj1Sep2fUBEREZGMs7MznJ2d8cYbbwAACgsLcfXqVVy6dEl+XL16lR9k
U41FRkbi6tWr8m11qH4wGSWNqC4ZrWy+qJUVt8QlIiIi5QwMDNClSxf5YogAIIRAUlISbty4oXAk
JCQgJSUFpaWlGoyYnldaWlqVrupLdYfJKGkEe0aJiIhIHSQSiXyBokGDBilcKysrQ0pKCm7fvo3b
t28jOTkZqampCkdaWhqysrKQl5enoUdA6qalpYVFixbVeGsdqjkmo6QR7BklIiIiTdPW1oaDgwMc
HBzQq1evKsuWl5cjJydHfuTn56OkpASlpaXIy8tDVFQUCgsLYWdnBzs7OzU9AqprEokELVu2hKur
q6ZDeSkwGSWNqGxIDJNRIiIieh5paWnB3Nwc5ubmSq8/3etKRNXT0nQA9HKqbp9RDtMlIiIiInqx
MRkljeCcUSIiIiKilxuTUdIIJqNERERERC83JqOkEUxGiYiIiIhebkxGSSOYjBIRERERvdyYjJJG
VLeaLpNRIiIiIqIXG5NR0giupktERERE9HJjMkoawWG6REREREQvNyajpBHl5eVKz2tpaSEnJwcl
JSUVrhkYGMDQ0LC+QyMiIiIiIjVgMkpqV1UiCgAZGRlKr1tZWdVbTEREREREpF5MRkntqhuiW1ky
amlpWW8xERERERGRejEZJbWrLBmV9YxWNl+UySgRERER0YuDySipXWXDdKvrGeXiRURERERELw4m
o6R2HKZLRERERERMRkntOEyXiIiIiIiYjJLa1XaYLpNRIiIiIqIXB5NRUrvaDtPlnFEiIiIiohcH
k1FSu+qSUQ7TJSIiIiJ68TEZJbWrbJiubM4oh+kSEREREb34mIyS2nGYLhERERERMRklteMwXSIi
IiIiYjJKasdhukRERERExGSU1K6qnlEhBLKyspReZzJKRERERPTiYDJKaldVMpqdna2059TExAQ6
Ojr1HRoREREREakJk1FSu6qG6XKILhERERHRy4HJKKldaWmp0vM6OjqVJqMWFhb1GRIREREREakZ
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
CDs7OxEZGSmLk3e0S2ljV8Y9CiHEwoULRZMmTQQAoa+vL1atWiWePn0q6tevLwCIpUuXKp3P8ePH
RbNmzWS5qKuri759+4q4uLgicaXlRERERFVPIoR4CKBylg+IiKqYVCrFypUrsWDBgiKPcJakSZMm
+PTTT+Hh4VHhjY4yMzMRGxsLa2tr2aY5pXnz5g2io6Nhbm4OQ0PDMs+pbP/ExETk5OSgWbNmcjcs
evLkCXJycvDhhx8qnbuyY1f0HgsKChAVFQVLS0tZbllZWYiPj4elpWWxHZNLyyclJQXJycmwtLQs
8f1TIiIiqj4sRomoVoqNjcWMGTNw7NixMvVr3749BgwYgL59+8LBwQG6urpVlCERERERlYTFKBHV
av7+/pg7dy7u3btX5r7q6upo3bo1WrVqBT09Pbx48QIaGhowMTFB69at5a640ftJIpGgefPm6Nev
X5lXlYmIiEg+FqNEVOsVFBRgy5YtWLRoERISEqo7HXqHOTo64syZM7KNkIiIiKj8+Gt/Iqr11NXV
8cUXX+DRo0fw8vJCs2bNqjslekcFBwdj9erV1Z0GERHRO4HFKBG9M7S1tfHll1/i0aNHOHDgAHr0
6FHdKdE76MaNG9WdAhER0TuBxSgRvXPU1dUxYsQIBAYGIjIyEp6enpV25igR/1siIiKqHHxnlIje
G5GRkTh58iTOnj2LkJAQJCYmVndKVMtYWFggODgYDRs2rO5UiIiIaj0Wo0T03kpKSsLDhw/x5MkT
BAYG4sGDB8jJyYGenh5sbGygra1d3SlSDaGmpobmzZvjs88+g4GBQXWnQ0RE9E5gMUpEREREREQq
x3dGiYiIiIiISOVYjBIREREREZHKsRglIiIiIiIilWMxSkRERERERCrHYpSIiIiIiIhUjsUoERER
ERERqRyLUSIiIiIiIlI5FqNERERERESkcixGiYiIiIiISOVYjBIREREREZHKsRglIiIiIiIilWMx
SkRERERERCrHYpSIiIiIiIhUjsUoERERERERqRyLUSIiIiIiIlI5FqNERERERESkcixGiYiIiLj9
gsEAAADvSURBVIiISOVYjBIREREREZHKsRglIiIiIiIilWMxSkRERERERCrHYpSIiIiIiIhUjsUo
ERERERERqRyLUSIiIiIiIlI5FqNERERERESkcixGiYiIiIiISOVYjBIREREREZHKsRglIiIiIiIi
lWMxSkRERERERCrHYpSIiIiIiIhUjsUoERERERERqRyLUSIiIiIiIlI5FqNERERERESkcixGiYiI
iIiISOVYjBIREREREZHKsRglIiIiIiIilWMxSkRERERERCrHYpSIiIiIiIhUjsUoERERERERqZwG
gN0AGlZ3IkRERERERPT++H/Rcd4PFKdx7AAAAABJRU5ErkJggg==

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/ListContainerSpecializations.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
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

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/DListVocabulary.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAqAAAAMECAYAAABgxpeJAAAKmGlDQ1BJQ0MgUHJvZmlsZQAASImV
lgdQU+kWx7970xstEDqE3nsH6TX03kQlJKETYiA0sSGLK7CiqIigIuiiCIKrUmQtiCi2RbGABd0g
i4q6LhZEReVd4BHee/N23rx/5uT+5syZf875cr+ZAwD5EJPHS4clAMjgZvNDvd3o0TGxdNwIgIE0
IAJLYMlkZfFcg4P9wd/q4xCA5p53jOa8/r7uv0qSzcliAQAFI5zAzmJlIHwKiXIWj58NAMoFyWvm
ZvPmmI2wNB9pEOG8OU5a4PI5TljgA/M14aHuCCM+eDKTyU8CgNSD5Ok5rCTEhyRE2JTLTuECQEYm
B06sZCbiTZ7rwTAjI3OOCxHWTfgXn6R/80wQeTKZSSJemGVeeI+ULF46M///PI7/rYx0weJvqCBB
zkoL85ubGTmzPBbTM2yRkzkM/0XmZbuFLnJKNiNcVCPwiVhkQVqE6yKnZfqJ6rkJgUEi/yz32EUu
SA6PWmQ2x8NzkfmZoaL6rJwwz6V698BFTmX6Bi8ykz8/yzxz0r1Dl3oOFvXJTQ8UzZLI9xLVcLKW
5s1ODvcRMfICiOpTvBiiefk+S/7pwSJPviBUdA4cboTIk830EJ0t8ACewB/50EEEMAc2wAyYZXPy
suead8/k5fNTkpKz6a7IDeAY0hlclrEh3dzUzBzM3aeFv+v9/fl7AtHwS7laTQC8CpDkH0s5m0oA
Wm4CQGtdymkiT3InAN21LAE/ZyGHnvvCILdUHOlQHnkbNIAuMEJ6swYOwAXp1hcEgXAQA1YCFkgG
GYAPckEh2AhKQBnYBnaBGlAHDoIj4Bg4ATrBGXABXAbXwS1wDzwCQjAOXoFJ8BHMQBCEgygQFZKH
VCEtyAAyh2whJ8gT8odCoRgoHkqCuJAAKoQ2QWVQJVQD1UNN0C/QaegCdBUahB5Ao9AE9A76AqNg
MiwNK8PasAlsC7vCfnA4vAJOglfDBXAxvBWuhhvgFrgDvgBfh+/BQvgVPIUCKBKKhlJDGaFsUe6o
IFQsKhHFR61DlaKqUA2oVlQ3qh91ByVEvUZ9RmPRVDQdbYR2QPugI9As9Gr0OnQ5ugZ9BN2B7kPf
QY+iJ9HfMRSMEsYAY49hYKIxSZhcTAmmCtOIacdcwtzDjGM+YrFYGlYHa4P1wcZgU7FrsOXYfdg2
bA92EDuGncLhcPI4A5wjLgjHxGXjSnB7cC2487jbuHHcJzwJr4o3x3vhY/FcfBG+Cn8Ufw5/G/8c
P0OQIGgR7AlBBDYhn1BBOEToJtwkjBNmiJJEHaIjMZyYStxIrCa2Ei8RR4jvSSSSOsmOFEJKIW0g
VZOOk66QRkmfyVJkfbI7OY4sIG8lHyb3kB+Q31MoFG2KCyWWkk3ZSmmiXKQ8oXwSo4oZizHE2GLr
xWrFOsRui70RJ4hribuKrxQvEK8SPyl+U/y1BEFCW8JdgimxTqJW4rTEsMSUJFXSTDJIMkOyXPKo
5FXJF1I4KW0pTym2VLHUQamLUmNUFFWD6k5lUTdRD1EvUcelsdI60gzpVOky6WPSA9KTMlIyljKR
MnkytTJnZYQ0FE2bxqCl0ypoJ2hDtC+yyrKushzZLbKtsrdlp+UU5VzkOHKlcm1y9+S+yNPlPeXT
5LfLd8o/VkAr6CuEKOQq7Fe4pPBaUVrRQZGlWKp4QvGhEqykrxSqtEbpoNINpSllFWVvZZ7yHuWL
yq9VaCouKqkqO1XOqUyoUlWdVFNUd6qeV31Jl6G70tPp1fQ++qSakpqPmkCtXm1AbUZdRz1CvUi9
Tf2xBlHDViNRY6dGr8akpqpmgGahZrPmQy2Clq1WstZurX6taW0d7Sjtzdqd2i905HQYOgU6zToj
uhRdZ93Vug26d/WwerZ6aXr79G7pw/pW+sn6tfo3DWADa4MUg30Gg4YYQztDrmGD4bAR2cjVKMeo
2WjUmGbsb1xk3Gn8xkTTJNZku0m/yXdTK9N000Omj8ykzHzNisy6zd6Z65uzzGvN71pQLLws1lt0
Wby1NLDkWO63vG9FtQqw2mzVa/XN2saab91qPWGjaRNvs9dm2FbaNti23PaKHcbOzW693Rm7z/bW
9tn2J+z/cjBySHM46vBimc4yzrJDy8Yc1R2ZjvWOQie6U7zTASehs5oz07nB+amLhgvbpdHluaue
a6pri+sbN1M3vlu727S7vfta9x4PlIe3R6nHgKeUZ4RnjecTL3WvJK9mr0lvK+813j0+GB8/n+0+
wwxlBovRxJj0tfFd69vnR/YL86vxe+qv78/37w6AA3wDdgSMBGoFcgM7g0AQI2hH0ONgneDVwb+G
YEOCQ2pDnoWahRaG9odRw1aFHQ37GO4WXhH+KEI3QhDRGykeGRfZFDkd5RFVGSWMNoleG309RiEm
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
cebMGbHx6OhoODo6wsrKCpMnT8bbb78Na2trbNq0qaOn0aXk5+f/H3tnHtfEtf7/TxLCFlkCCCg7
BGQT2WQVVKy71Vqr1oprtbUbVe+V2mrvVau13tJqbbXV1g2XUvVqW7W016q1KovsIKsoEZB9FQgQ
IPP7g1/my5CFIGvCvF+veRHOnDnnmUkyeeY5z0IJNKbpZEQroAAoaZNOnDiBwsJCUqF55ZVX5JZf
7KqAFhUVyZ1HIBCQSy36+vqUZXYrKyvK8kpSUpLC8j9+/JjMTfniiy/ik08+GfDE1l3PVZxqRhay
lsNFIpFEdY/eMhTnLqZrMNKJEyfQ2tpKBrPRwUc0qk5tbS0yMzMVCuyjkU5JSQmlAAeLxZJYjjc0
NJRYZRIIBIiPj0ddXR2lnc1mw8vLq8d4hL7wwQcf4I033oCuri6io6NJX/vLly9DIBDAx8cHGRkZ
vRqzpKQEK1eulKiaFxERgc2bNyM4OBi//PILqqqqEB0djVmzZuHDDz8kU90pA7t27cLFixeHWoxh
x4hXQF9++WXo6uoCAK5fv459+/aRVqyefPh8fX3J11FRUXL7njt3jhy3a7AT0PnU+sILL5D/79q1
S2H5xQn1AcDPz6/H/t2jI3tLe3s7Ll++DKDzhjdlyhSJPl0jfaUlzQc6I/0TExP7JMtgn3tXgoKC
yAeQ1NRUbNu2jfzxoK2fNKrOjz/+CFdXV2RlZZFtsqxYA4myWpYIgpAI4NTW1qYopNLqvT979gz3
79+XKC2sra0NX19fuVHyfSUuLg6ff/45QkND8eeff+KFF16AiYkJTE1N8dJLLyEhIQEaGhr4/PPP
+zzXxYsXsWXLFrz++us4duwY5s+fD0NDQ8yaNQvnzp2Di4sL3njjDbqsrZIz4hVQbW1tLFmyBEDn
ksjhw4cBAJaWlggODpZ77Ny5cxEUFASgUwn57bffpPZramoi66czGAzs2bNHos8XX3xBLpnExsYq
/CXu6o956dIlqfu71qFXJGr9+++/l3i6FnPu3Dly2WfVqlWUiHgxXZflpSmZ//rXv/plCWUgzr03
rF27lnwtfn+1tLToykc0Iw5ZVqyBRlktS2VlZWScAdD5u9A9b6eNjQ04HA75f3V1NRISEij3PQDg
crnw9fUd8KpFly5dAovFwoEDB6TmIjUwMMDBgwcxY8YMSnt0dDQmTZoEPT092Nvbk/7zAJCdnY1Z
s2YBAHbu3Im5c+cCAH7++WcYGxvj4MGDEvOw2WxERkbi3//+N3ktLl68CC8vL4nfrfXr11Nyas+e
PRunTp3CsmXLYGxsjA8++ACXL19GcHAwbty4ASsrK3h7e5NWXHmyA8CVK1cQGBiIx48fY+7cuTA0
NIS9vT127NhBpujbtGkTLl++jLKyMnh5eeHXX3/t3YVXYUa8AgpQl+HFLF++XG7CXzEHDhwgA4cW
LVqE48ePkx9QkUiElJQU+Pv7k1GNq1atgo+Pj8Q44g+3mPDwcLz22mu4c+cOGhsb0dTUhMzMTHz5
5Zek3yoATJw4kXydlJSE9957D9nZ2SgsLMSPP/4Id3d3fPvtt2Sf+Ph4NDU1yT2nCxcuYPz48bh4
8SL5hNnS0oLjx49j3bp1ADpvArLylXaVacuWLdi1axfS0tJw/vx5BAQE4JNPPgGPx0NISIhcOXpi
IM69N6xatYoSQAZ0Bh/RDvI0NDSyIAhCoihGd9chLS0tintTaWkpkpOTJfIOm5qawsvLa1Dyy8bG
xsLR0ZFMHyiNVatWUfJmnzp1CnPmzAGHw8GRI0cQHh6OqKgoTJs2DQRBwMTEBOvXrwcAzJgxg/x9
iYuLg7u7u0yl2tPTE+vWrYORkRGAzjRUycnJEmmocnNzKflU09PTsX37dqSnp2P27NkwMTFBVVUV
4uPjsXr1agQGBoLL5cLa2rpH2QGQx4aEhIDL5WL//v3w8PDAzp07cejQIQCdhV1cXV2ho6ODzZs3
w8XFpbeXXnUhlISDBw8SBw8eHLDxHRwcCADklpWVpfCxP/30E6Gvr08ey2KxCB6PR3A4HMqYr776
KlFXVydznLa2NiI8PJxgMBiU47r/z+VyKcetWrWKsr/rxuFwiO+//55Yvnw52WZqakpERERQxli7
di25f+PGjYSWlhYBgGAymQSPxyPYbDa5X1dXl4iOjpZ5Hi0tLYSdnZ1MmSwsLIjs7Gxi8eLFZFtc
XJzEOIWFheT+gIAAqXP197n/73//k3le0pg/fz5lznv37vXqeEUZ6M8/DU1vOHToEAGASEpKIrKy
sojx48cTAAgrKytizpw5ZL/ffvuNCAwMJHR1dQkej0ds3LiRaGpqIvdfunSJCAoKIv7880/C0tKS
8PLyItLT0wmCIIicnBxi4cKFhI2NDaGtrU04OzsTH330EdHc3EwQBEFs3LiRMDIyItTV1QlPT0/i
l19+IQiCIIqLi4lVq1YR5ubmhJ6eHhEUFERcv36dIv+sWbOIkydPEq+++ioxevRoIjw8nCAIgti3
bx/h4OBAaGlpEU5OThLy9gdPnz4l/vjjD7lbVVUV2b+goEBqn9zcXEIkEvWrbLIQCoWEpqYmERoa
KrEvJSWFSE5OJpKTk4mkpCQiKSmJaGlpIZqamghjY2PCz8+P0v/mzZsEAOLMmTMEQXReDwDE8ePH
CYIgiKqqKgIA8f777yss3+HDhwkARGVlJaU9KCiIeOGFF8j/x44dSxgZGVF+h48ePUoAIHbv3k22
KSr78ePHCQDEvn37yD4dHR2ElZUVMWvWLLJt/fr1hKWlpcLnM1KgLaD/n66Vkby8vCiR6T2xZMkS
pKWlYfbs2dDS0kJHRwfy8/PR1NQEBoMBHo+HqKgo/Pjjj9DT05M5jpqaGvbt24erV6/C2dmZtKwS
XXwXbW1tJRLjHz58GBs3bqQ8RbPZbLzwwgtITU3FunXrsGPHDvLJtaysjIz47w6DwcDu3bsRFxcH
Dw8PEASB/Px8tLW1gcViwcfHB7GxseSyiTQ0NDTwxx9/SATisNlsLF++HElJSRK+Tc9Lf57789A1
GMnV1RUBAQH9NjYNjTIgy4rVGwtSd+tTYWEh3N3dUVlZie3bt+OHH36As7MzPv30U3z55ZcApFuW
GhoaEBgYiFu3bmHnzp2IjIyEsbExZsyYQZZWBqRbwr777jts3boVr776Ki5evIgVK1bgu+++69dy
uuJSmfIYO3YsDA0NQRAEcnNzKfmmxYwbNw4ODg4KrdL1BwwGA0wmU6rPpaenJ7l5eXnBy8sLjx8/
RmZmJioqKhAQEIDbt2+TGwBwOBzcvXtX6lza2tpgsVgD5t/p6ekp9Xe464pcb2XvGsPBZDLB4/FQ
X18/IPKrEiM6D2hXPvzwQ3z44YfPfbylpSV+++03dHR0IC8vDzk5OTAzM4OLiwvFj0cR5syZgzlz
5qChoQEpKSmorKyEqakpbGxsyDrsXdHW1sb+/fvx4Ycfkr4rfn5+lHl5PB5KS0tx69YtmJiYwNXV
lTLGrl27sGnTJrBYLHA4HLi5uSE5ORl1dXVITEwEm82Gt7e3wudiZ2eHO3fuID8/H1lZWeSYXZMi
nz9/Xu4YFhYWPQYO9ce5Hzt2jCyf2Vu6RgHTwUc0IxEDAwMsWrQIYWFh8Pf3x8KFCyEQCBAeHg4/
Pz8yUwUA0vXm3LlzWL58OYBOX+0NGzZQXHp+/vln2NjYICoqiswvuXTpUjK3LwBMmTIF586dw+PH
j8mxwsPDUVJSgpycHNIXff78+XB1dcWmTZuwaNEi0te+paUFDx48IJWRpUuXwtnZGTt37gTQeR/m
crlS82w+L0VFRRTfz+5oaGhg3LhxMnN8MhgMjB8/Hqampv0mkyKoqanB19dXqk9/12DQS5cukQ8I
4iwnBw8exNdffy1xXPcUVGK0tLTg5OSEzMxMmfK0tbWhqKjoudIAWlpa9tjeW9m7F4/R0NBAY2Nj
r2UbadAKaD/DYrHg5OTUKwuqLHR0dHoMhOqKsbExpk2bJnM/m82WcBAXY2ZmJjWRsL6+PuXprjcw
GAzY29tTcp4OFH05974gvtnSlY9oaP4PsQUpNDRUohyu2IIkVhoBSPiDr1ixgvw+1dfXIy8vD6mp
qWCz2XL9uOPi4hAUFCShmMyfPx979+5FXl4e+QDa3RIWFBSE8+fPY8qUKVi8eDFmz56NDRs2PN8F
kIJQKOzR+uns7Ayg06e9ez5QFosFd3d3uT6YA4nYspyVlUXKKW4Xk5aWRr4WK2UnT56kvNeK4OXl
hYsXL6KmpkZqZP+RI0fw3nvv4dChQ3j77bdJS3BrayulX2VlpcTvmqxiL13b+yI7jeLQS/A0NM9J
TEwM4uPjAXS6YdDBRzQ0nXS1IE2fPp3cZs6cCaFQKGFB6m6VEolE2LVrF6ysrKCvrw9/f3989913
aG9vl7sq8ujRI5ibm0u0iwM3uxYD6T7nu+++i4iICDx+/Bjvvvsu7Ozs4ObmRlY36yv5+flSa7WL
MTc3B4fDQXx8vITyqa6ujokTJw6Z8gl0BhiZmJhg5syZUhVpoVBIyWHt4uICNpuNU6dOUfo9efIE
gYGBZOpCsfLYNcDqnXfeQUdHB5YuXSoRePXs2TPs2rULGhoaZAYbHR0dAEB5eTnZr76+Ho8fP36u
c1VUdkVhMBgS50FDK6A0NM+N2PoJ0MvvNDRd6WpBEgqFElv3fKHdrVI7duzAzp07ERoairi4ODQ2
NiIpKQkmJiZyFVATExOpleTE/njjxo2TOScA/OMf/0BhYSEyMjLwn//8Bw0NDZg5cyZFsXke6urq
UFxcLHP/qFGjMHr0aMTFxcnM8SnOVz1U8Hg83Lx5E21tbQgICMCbb76JyMhInD9/Hlu3boWTkxOO
Hz+O+fPnw8zMDMbGxggLC8ONGzfwzjvvICMjA/fu3cPy5cvB5/Mxe/ZsACDP6+rVq6S7xsSJE3Hk
yBH8+eefmDZtGr7++mv89ddf2Lp1KyZMmIDKykp8//33ZBS8n58fGAwGNm/ejISEBPz111948cUX
n7salKKyK4qenh7Ky8tx9uzZPhdgUSVoBZSG5jkoKCjAzz//DIAOPqKh6W7F6qsF6erVq/Dw8MCe
PXvg6+sLTU1N1NXVIS8vj2JJ6m5Zcnd3R0xMjIQF8erVq9DX15dbJejdd98lA45cXV2xZcsWRERE
oKOjo9fVfboiEonk+jOyWCwYGRkhJSVFwkIqzvHZtVLeUOLs7Iy//voLixYtQkxMDFavXo2lS5fi
8OHDsLCwwP/+9z/88ssvpFK5d+9ebN++HSdPnoSbmxumT58OLpeLqKgo0v2Bw+Fgw4YNuHbtGubO
nUsuo69cuRLffvst+Hw+wsLCMHXqVOzbtw8cDge//PILxeXJzs4Ohw8fRmJiInx8fDBnzhwEBQVh
2bJlzx2opYjsirJixQqMHj0aoaGhzx1voIowiJ6iPIYJYkfg9957b4gloaEBbty4QSa5nzlzJlmQ
YKCgP/80w4nDhw/jnXfeQVJSEjw9PdHU1IRRo0ZhwYIFeOuttzBz5kz885//xP79+7FhwwZs2LAB
z549wwcffICCggJkZWVBT08P33//Pd544w2UlJRgzJgx5Phbt27FF198gV9++QVTpkxBeno6Nm7c
iPv378PV1ZWsOR4eHo79+/fj5MmT5EOgs7Mz/P39ceDAAYwePRqRkZH46KOP8Nlnn2HLli0AOn3e
582bhyNHjpBznj59GitXrsSXX36JhQsXorS0FB9//DHu37+PsrKy5070npubiydPnsjcr6urKzXi
e8yYMXBxcZHpszgcqK2tRW1tLWxsbOQqeiKRCHw+H2PGjJGpTDc3N6O9vZ1cThdDEAQqKytRUVEB
MzMzcLlcmfN0dHSgoKAAlpaWz239fB7ZFaW6uhr6+vqDVjJ6uEMHIdHQPAfTpk2TG/REQzOSEFux
fvjhB1y9ehVNTU3Yu3cvOBwOIiIicPjwYWhpaWHatGnYu3dvjxaksLAw5OXlYfHixRAIBNDT08O2
bdvw4osvYufOnaiuroahoSFWrFiBM2fOIDQ0FNu2bcPu3btx69YtrFu3DhMmTADQWVEoIiKCUuhD
GqGhobh58ya2bNmCzZs3A+i05P7999/PrXxWVFTIVT5lpTayt7enJKIfrnC5XLkKoRgmk9ljxLos
5Y7BYMDY2JiSQUUWLBYLPB6vx369QRHZFWUofXiHI7QFlIZGCaA//zTKgDQrVl8sSAKBAOXl5bC2
tpZrYZNmWaquroZAIICFhUWv5mxqakJRURFMTU37FFjY0NCAhIQEuYFH3VFTU4Obmxvp20hDo8oo
nQWUIIhBS75LQzMcUJJnRBoaqQpmXyxI2traClkCpVmWDA0Nn8vixOFw+lwoQyAQICkpqVfKp56e
Htzc3IaNvycNzUCjdApoc3Pzcy+H0NAoI/ISV9PQ0Awv6uvrkZKSAqFQqFB/BoMBOzs7WFtbD7m/
J0EQtJFnCBlp111pFFB1dXUIhUKUlpbCzs5uqMWhoRk0SktLAaDfnOppaGj6H5FIhMePH6OgoEDh
VQtdXV24uLhIBN50HbOjowPt7e1ob2+X+rrr366b+Fjxa/FGEAT5V7zRDA80NDTg7OwsUVlJVVEa
BXTs2LHg8/lIS0ujFVCaEYW4uoi0Mqw0NP1FY2Mj6uvr0dDQgLq6OjQ1NUEkEoHBYIDNZtORu1Lo
nrNTUZhMJnR0dKClpYX8/HyK4thVqaSVw5FFa2srsrKyMHny5KEWZVBQGgV06tSpOHHiBJ4+fYq0
tDQywpGGRpVJS0sjq7eIq7nQ0PQX9fX1KCkpQUVFhUQZQzEEQcjcR/N8iEQi1NfXkwnyaWhGIkqj
gI4aNQru7u5ITU3F33//jZaWFnh7e9NP5TQqSUdHBxITE3H//n0AnQm2R40aNcRS0agCBEGgrKwM
BQUFaGxsHGpxaGho/j+amppwdnYeajEGDaVJwyTmt99+I+vQjho1CjweDwYGBmCz2UMsGQ1N32lr
a0NNTQ3y8/NJ5cDOzg5z5swZYsloVIGKigrk5eU999IxzeDCYDDAYrGgpqYGNTU18rW0v91fM5lM
yl/xWAwGA0wmEwwGg9zEc9HQDCZKp4ACQEpKCmJjYykl2GhoVA0WiwV/f394eHgMtSg0So5AIEB2
djaqq6uHWhSa/4+GhgaMjY1hYGBAURy7K5I0NKqKUiqgQKcPTXZ2NnJzc9HU1NSrfGs00p92h8tH
QZEn8YGUdSjnV1NTA4fDwbhx4+Dk5DTkaVlolJ+ioiLk5uZCJBLJ7cdms2FgYABdXV0y1R1BEFBX
V6czMMiBzWZDQ0MDbW1tKCkpAZ/P75XPrI6ODhwcHOgqOTQjDqVVQGmen9jYWDQ0NEi0jxo1iqyn
PJQkJyejqqqqx37a2trw8/ODmlr/uTK3tLQgJycHFRUVCvXncrlwdHSUmUaFhmaoEAqFyMzMRGVl
pdx+JiYmMDc3h4GBAb0M20+UlJQgJyenV4aR0aNHY9y4cUqT57qpqQnx8fFobW2Fm5sbzMzM+m3s
oqIiiRKl2traMDAw6LGMa3/z8OFDcDgcOgvJAEAroCOQGzduSHVfMDMzg4uLyxBIRKW1tRUxMTFo
a2vrsa+JicmAZESoqqpCdna2wkngzczMwOPxoKGh0e+y0ND0lvr6eqSmpsq1xJmamoLH4ymNwqNs
tLa2Ii0tDXV1dQofw2QywePxYGVlNWwfBr7//nscPXoUqampFAXb1dUVZ8+ehZubW6/HPH36NAwM
DDB37lwAwEsvvYRffvlFat+AgAD85z//QWBg4POdQC+xtbXF5MmTceLEiUGZbyRBr++NMMS55qRh
YmIyyNJIR0NDQ2FFuLy8HIWFhf0ug5GREQICAmBra6vQD8HTp09x9+5dPHr0iHYHoRlSSktLkZCQ
IFP51NbWxsSJE+Hm5kYrnwOIhoYGvL29MWbMGIWPEYlEyMvLw/3799HU1DSA0j0fH3zwAd544w3o
6uoiOjoaZWVlKC0txeXLlyEQCODj44OMjIxejVlSUoKVK1dKrDrp6uri+vXr5HblyhXs378fWVlZ
mD9/PoqKivrz1GSybt06zJo1a1DmGmnQFtARRklJCR48eCB13/Tp04fVU3dmZiaZA1MeDAYDPj4+
A7Y0IxAIkJub2+NSphh1dXXweDyYmZkNq+tJo/o8fvwY+fn5MvdbWlrC3t6eDm4ZRAiCQGZmJkpK
Snp1HJPJhL29PSwtLYfFfSQuLg4BAQFYvnw5IiMjJWSqqamBjY0NFixYgMjISIXHLSkpgZmZGY4f
P441a9YA6LSA3rt3T+o998KFC1iyZAm+/fZbbNiwoW8nRTOk0BbQEYYsJYrNZg+Lm1xXxo0bBy0t
rR77EQSBtLQ0hZbsnwdtbW14eHjA09MTHA6nx/5CoRBZWVmIiYlBeXn5gMhEQ9MVgiCQnZ0tU/lU
U1ODu7s7HB0daeVzkGEwGHBxcelxhan7/VevpZjxAAAgAElEQVQkEiE3NxfJycnDohDApUuXwGKx
cODAAam/FQYGBjh48CBmzJhBaY+OjsakSZOgp6cHe3t7bNq0iUwDlp2dTVoXd+7cSS7By0O8xC/+
rF++fBnBwcG4ceMGrKys4O3tTVph5c399OlTeHt748cff5SYY968edi2bRsAYP78+di5cydl/9mz
Z+Ht7Q0dHR3Y29sjLCyMEldx8eJFeHl5SbhfrF+/Hm+//Tb5f3Z2NubNmwdDQ0OMHj0aU6ZMwe3b
t3u8BqoCrYCOMLo7dotRRLEabNTU1DB+/HiF+ra0tCAjI2NAo+ONjIzg7++PcePGKRT41NTUhLS0
NMTFxdHpb2gGDJFIhIyMDJlLkhwOB35+fjA2Nh5kyWjEMBgMuLq6yl2lIQhC6gN3dXU1YmJiFA6M
HChiY2Ph6OgoN1p/1apVCA0NJf8/deoU5syZAw6HgyNHjiA8PBxRUVGYNm0aCIKAiYkJ1q9fDwCY
MWMG1q1b16McUVFRADoNFECnv358fDxWr16NwMBAcLlcWFtb9zi3mZkZWCwWvv32W8r4CQkJuHbt
Gnx9fQEADx48AJ/PJ/cfPHgQoaGh8PT0RFRUFN5//32cO3cOgYGBpBGksrISycnJEu5Yubm5ePjw
IQCgvb0dM2bMQFVVFfbv349Dhw6BxWIhJCQEeXl5PV4HVUBpKiHR9A8tLS1S2w0MDAZZEsXQ19eH
ra0tHj9+3GPfqqoq8Pl82NjYDJg8TCYTVlZWGDNmDB49eoTi4uIeld5nz54hKSkJBgYG4PF40NfX
HzD5hgt8Ph/t7e3g8XhDLQpJXV0dnj59CgcHB5UpXNHR0YG0tDSZWSMMDQ0xYcKEfs0U0RXxNR0z
ZsyA30Nyc3Ohq6vbK5/K4QSLxYKHhwdiY2NlWjSbm5thamqKyspKiq9+W1sbUlNTYWFhAQcHh0G3
Yre1tSExMRGvvPKKxL7U1FTyHij+6+Ligo6ODoSHh8PPzw9//PEH2Z/H4yEkJATnzp3D8uXLsWjR
IoSFhcHf3x8LFy4k+7W0tODUqVPk/42NjcjIyMCpU6dgbW2N5cuXk/uEQiE2bNhAWi0FAoFCc69Z
swZvv/02njx5AisrKwBAZGQkTExMpBb/qKqqwtatW7F27VocPXqUbDc1NcXixYtx+PBhvP/++wpd
04cPH6K4uBj79+8nr+uUKVOwfft21NbWKjSGskNbQEcQzc3NMpUlU1PTQZZGcWxtbaGrq6tQ3/z8
/EH58qqrq8PJyQkBAQEYPXq0QsfU1NTg/v37SEpK6lVkrDKyatWqYVe96ddff4Wrq2uvffGGK+3t
7XJTlpmbm8PT03PAlE8A+Oc//wlXV1fKsuJAERwcjD179gz4PAOJuro63Nzc5Lo7lZWVwdHRUeqD
alFREeLi4qSm0RtIxNWTpK2geXp6kpuXlxe8vLzw+PFjZGZmoqKiAgEBAbh9+za5AZ1W+bt378qd
s7GxEatXrya3999/H9HR0Vi2bBliYmIkAuhCQkLI14rOvWzZMmhqauLs2bMAOhXtqKgohIaGSv3e
pKeno7m5GatXr6a0z5w5E+rq6rhz504PV/L/sLe3Jy3AmzZtwh9//AFdXV0cPXqUtL6qOrQFdARR
Wloqc99wrjPOZDLh5uamUPUrsT+ov7//oKRE4nA48PDwQE1NDXJzcxX6YaiurkZ1dTUMDQ1hZ2c3
IiyiwwFnZ2f84x//UPhhZjjT1taG5ORk1NfXS91vZ2cHOzu7AZWhqakJ58+fx+TJk3Hp0iWUl5cP
m0wawxkulwsej0cuxUojNzcXEydORFVVFfLz8ymGg6amJsTFxcHe3n7Q0jWpqanB19cXiYmJEvu6
Kl2XLl3Cl19+CQAoKCgA0Llk/fXXX0sc11P2EgMDA8rKF4fDkfswZWlpSb5WdG49PT0sXLgQZ86c
wUcffYTff/8dVVVVZDBUd8RlwM3NzSntOjo68Pb2VihoVoyamhru3r2L9957D9988w0OHDgADoeD
FStW4IsvvhgRGSpoC+gIoqamRmq7MuSu1NbWhrOzs0J9hUIhUlNTe6z80p8YGBjAz88P48ePVyhw
CuhURO/fv4/ExETaR3QQ8Pb2RkREBLhc7lCL0ieEQiESExNlKp9OTk4DrnwCndHIjY2NpA/d8ePH
B3xOVcHa2lru57C9vR1paWmwsLCAj4+PxD2FIAjk5eUhMTFR4VzFfSUwMBAlJSXIysqSaBdvXT93
4pWhkydPQigUSmzXrl2TOx+TyYSenh659WTJ71o1rjdzr127FtnZ2UhNTcXp06cxceJEmWkAxQ9Y
0oJ56+vrSb9U8UNBd1eLyspKysMEj8dDdHQ0qqurcfnyZSxcuBDfffcdwsPD5Z6rqkAroCOIxsZG
qe3KYhEaM2aMwtU26uvrkZOTM8ASUWEwGBgzZgwCAwPh5OSkcPnCmpoaJCUlITY2FmVlZcOmJOpg
0FM0KdAZrbp69WpYWFhAX18fwcHB+PPPPyl95s2bh++//x4ffPABrK2tYWdnh/fee4/yQ3H16lV4
eXmRKwFXrlxBYGAgHj9+jLlz58LQ0BD29vbYsWOHhKX98OHDmDJlCrhcLl544QUkJCTAy8sLt27d
GqArI53W1lYkJCRItbQzGAy4ubnBwsJiUGQ5fvw4vLy84OTkhBkzZuDo0aMSD32KvC9XrlyBr68v
UlJSEBwcDC6Xi1mzZuHChQsy5/7888/h5+dHRjSLuXfvHry8vAb9u99bxJHx8nw5BQIBMjIyoKur
C39/f6mVeGpraxETE4Pi4uKBFBdAp1uNiYkJZs6cSVoCuyIUCpGUlET+7+LiAjabTfHjBIAnT54g
MDCQDCYSK2s9rW71BkXnBjqX7q2srBAZGYlr167JtH4CnRH4TCYTV69epbTn5+cjNzcXHh4eAEBW
xuuaBaW+vp5i0U1ISICfnx9SU1Ohq6uLl156CadPn4aLiwtSU1Of/+SVCFoBHSEQBAGhUCh1nzLV
IHZ0dFQ4Yr+4uLhXSyL9BZPJhIWFBYKCgmBvb6+wD15DQwPS09Nx9+5dFBUV9esNeTiiSDRpQ0MD
AgMDcevWLezcuRORkZEwNjbGjBkzKOlTMjIyEB4ejr///hs//PADPv/8c1y5cgVLliwhI1FramqQ
nJxMfg/E0bMhISHgcrnYv38/PDw8sHPnThw6dIgc+9tvv8V7770HPz8/stJLSEgIkpOTB9WXt7m5
WWaCciaTCXd390Hz5c7Ly8OdO3ewcuVKAMDKlSvB5/MRHR1N6afI+1JVVYWEhARMnz4d8+bNw7Vr
1+Dg4IBly5bhf//7n9T5AwICEB8fj59//pnS/sMPP+DZs2dwdHQcgLPuX7S1tWFvby+3T2VlJfh8
PtTU1ODq6go3NzeJ+0lHRweysrKQmJgooZD3JzweDzdv3kRbWxsCAgLw5ptvIjIyEufPn8fWrVvh
5OSE48ePY/78+TAzM4OxsTHCwsJw48YNvPPOO8jIyMC9e/ewfPly8Pl8zJ49G8D/GUCuXr1KCRjq
C4rODXQqwKtXr8bXX38NkUiEZcuWyRzX2toa69atQ0REBI4ePYqKigrEx8dj8eLFsLKywpIlSwAA
fn5+YDAY2Lx5MxISEvDXX3/hxRdfpBglPDw8UFdXh3fffRc3b95EcXExfvjhB2RnZ2PmzJn9ch2G
O7QP6AhBVvolAEqVnoXFYsHNzQ3x8fEKLbFnZWVh1KhRg14/GOiU1cbGBubm5igsLMSTJ08UqpLU
3NyM7OxsPHz4EGZmZrCwsFA5fyBFo0k/+eQTsq62ra0tgM68fK6urti0aRMWLVpE3tSZTCbpyA+A
zAl49uxZrFq1SqocHR0dePvtt8klr9DQUNy/fx/R0dEICwvDs2fP8P777+PVV1/FZ599BgCYM2cO
iouL5Vro+pumpiYkJiZKjZ5msVhwd3cf1AfJEydOQF1dHa+99hoAYMGCBeByufj2228lcjkq8r4Q
BIGNGzeS70NAQAAKCgrw5ptvkv58XQkMDISDgwPOnDlDyiAQCPDf//5XqZYvLSwsUFpaSnGnYDAY
lFWQhw8fQk9PDwYGBjA1NYW+vj4yMjIkgi1ramoQExMDW1tbWFtbU5ak+wtnZ2f89ddfOHjwIO7c
uYPvv/8eBEFAR0cHnp6e+O677zB9+nSy/969e8HhcBAREYHDhw9DS0sL06ZNw969e8l7MofDwYYN
G/DDDz/g6tWr/VYBSpG5xaxevRq7du3CK6+80qNP/ldffQUdHR2EhYXhzTffhKamJiZNmoRff/2V
zNBgZ2eHw4cP45///CfpQrFp0yY4OjqSn2c1NTUcOXIEa9aswbRp08hrsWnTJnz00Uf9cg2GO7QF
dIQgK4cck8mEpqbmIEvTN3R0dBS2cBAEgdTUVJnW38GAzWbDzs4OwcHB4PF4CltE29vb8eTJE9y9
excpKSkq5SeqaDRpXFwcgoKCSOVTzPz581FeXk7Jl7dgwQKKO4mXlxesra2lBk505YUXXiBfi2tx
ixWClJQUtLW1SUT0z5s3T/GT7SN1dXW4f/++TOXT09NzUJXPjo4OnDp1ikygDXT6kb/22muIjo7G
kydPKP0VfV/E1lQxr7zyCvh8vswo/9WrV+P69evkve3y5ctobGyUGGc4w2Aw4OTkRGkjCEJCeczI
yCDvYZqamvD29oaDg4NEP5FIhPz8fNy7d2/AimA4Ojri8OHDyMjIQHV1NR49eoT6+nr89ddfFOUT
6Lz37dy5Ew0NDXj06BGqq6tx5coVBAUFUfp9++23ePbsGWpra6GhoYGff/5Z4cpz69evB0EQEum5
FJ0b6LRsikQiqUnpHz9+TKkDr6mpiYiICDQ2NuLhw4eoq6vD9evXJVxfNmzYgPr6erLPnj17cPTo
UVy/fp3sM3nyZDKdX15eHp49e4aIiIgRUyyCVkBHCLICkJRN+RRjbm6ucMRta2sr0tLSBjUoSRpq
amqwtbUlFdHe5KKsrKxEUlIS7t27Bz6fPywqo/QFRaNJHz16JNEHAKZOnQoAFBcLab6PJiYmPSZ1
7p5GS0NDg/ysZGdnA+i0yHUlODhY7pj9RWVlJRITE6VW+VJTU4O3t/egB1X9/vvvZP1vFotFbocP
H4ZIJKJYtAHF3hcGgyHh3y3+fsuKFl+5ciVEIhHpzxcZGYmpU6dSoqGVAV1d3R79dltbWymFNhgM
BqytreHv7y91dae5uRlpaWmIj48f0AdXLpcLW1vbHiPxmUwmbG1t5QZoamlpkb6T/Ykicz8Pampq
4PF4coN4WSwWeDye3HgA8Wff3t5+QKzWw5mRdbYjGFnLGsoSgCQNZ2dnhW8qtbW1w6a6RFdF1NHR
sVc3xqamJuTl5eHvv/9GamqqRFSlsqBoNKmJiYnMPsD/VUMBIDX/a2VlZY9+dvIQ+1R2/xGX9UDX
nxQVFSElJUXqg5O6ujomTpw4JK4lx44dA5fLxcWLFynbf//7Xzg7O+PYsWMUhVmR94UgCImofvH7
Luv9MzMzI32BKyoq8Oeff0pY1JWF7isjIpFIQhmrrq6mVOQBOpdsfXx84OTkJHVlpb6+HklJSYiL
i0NxcbFCLkA0NIMFrYCOAEQikcwbj6JJ1IcjbDa7x6TOXSksLJSbC3WwYbFYsLS0xKRJkzB+/Phe
Pf0TBIGKigqkpKTg77//JpdvlAVFo0nd3d0RExMjocRcvXoV+vr6sLa2Jttu3rxJUcZzcnLA5/Ph
5eX13HL6+flBU1NTwt/z/Pnzzz1mT4jruoutr93R1NSEj4/PgFiLeqKiogJXr17F0qVL8fLLL2Ph
woWU7Y033kB5eTkuXbpEHqPo+3Ljxg3K/9HR0bC0tISRkZFMedasWYP4+HgcOXIEHA4HixYt6qcz
HVzEbjpdaWhokDAQ5OfnSyjqDAYDFhYWmDRpEszNzaXeD589e4asrCzcvn0bGRkZKC0tVfpVFBrl
hw5CGgHIs9YoswIKdCYStre3V9i6mZmZCQ6HM6wsv+L0TWPGjEF1dTUKCwsV9n8COpfn+Hw++Hw+
tLS0YGpqClNT0yFRULpSW1uLr776SqKdy+Vi5cqVZDSpubk5XnrpJRQUFGDDhg2UaNKPP/4YP/74
IxYtWoQDBw5g9OjRiIyMxOnTp8mgIDGZmZl477338OGHH6K8vByvv/46PD098eqrrz73OZiammLz
5s3Yu3cvsrOzsWzZMkRFRZHR3v2dBFy81CrrO8vhcODl5TVkrjNnzpxBW1sbVqxYIXV/aGgowsPD
8d1332Hp0qUAFH9fNm3aBC6Xi/Hjx+P06dM4f/48zp07J1cecfDTp59+itdee02pg/UsLCxQVFRE
iWRns9lgs9mkRZkgCKSnp8Pf31/C4qmurg5nZ2dYWVkhPz9fqg9oR0cHSktLyQdxbW1taGtrg8Ph
QENDA62trejo6ICGhobC2UZoBhdNTU2VKV5CK6AjAHkBSANZpm+wsLKyQk1Njcxgha6IRCKkpqbC
399/WNYDNzQ0hKGhIQQCAYqKivD06dNeLZs1NzejoKAABQUF0NbWhrGxMYyMjKCvrz/o/kVVVVXY
uHGjRLuDgwNWrlypUDSpjY0Nbt26hXXr1mHChAlkW0REBDZt2kQZd86cOUhPT4e5uTnU1dUxefJk
REZG9tn3a8+ePTAwMMDJkyexYcMG+Pr64sSJEwgNDe1XhaempgYZGRkyLVP6+vrw8PAY0s/t8ePH
YWtrK+ETK8bQ0BAvvfQSzp8/T1pwFX1f1q5diwULFkAgEMDS0hJfffUV+SAiC3Hw0zfffKO0y+9i
xAFw6enpZFt1dTUcHBwoD9jNzc3IysqCm5ub1HE4HA4mTJiAxsZG8Pl8lJaWynTTEQgEEAgECt07
aYYPVlZWFPcjZYVBKKMDGU2viImJkZqEftSoUTJ/SJSNtrY2xMbGoqWlRaH+BgYG8PLyGpQydn1B
bLEoLCyUWUhAEdTU1GBoaAgjIyMYGhoOq+Cz9vZ28Pl8WFhYyHXor66uhkAgkBqwYWVlhRdeeAHH
jh1DWVkZOBxOv1iAW1pakJ+fDwcHB0ogwW+//Ya5c+ciKSkJnp6efZqjo6MD+fn5EtHjXTExMYGr
q6vSRccq8r6cOHECa9euRWFhIUxNTVFcXAwbGxuF59i4cSOuXbuGvLy8Yf99VoS4uDiKO42hoSE4
HI5E6UoXFxeFCnMIhUI8ffoUpaWlfbqH0AwfWCwWmbpJmVF+8xdNj8gq1TYUAQwDBZvNxoQJE3D/
/n2FgnJqamrw8OFDODg4DIJ0zw+LxYK5uTnMzc1RX1+Pp0+foqysrNfBBO3t7SgvLyeX5bS0tKCv
rw8ulwt9fX1wOJwh+/EWR5P2hNg63BP9nYzd3d0d69evJ0tOtrW1YdeuXRg9erRMK5SilJWVIS8v
T+6Dk52dnUKRxsMdRd4XNpvdK+XzyZMnOHXqFLZt26b010eMvb09paJQdXU1ucrTVYHMyckhv7vy
UFdXh42NDWxsbNDY2IiqqipUVVWhvr5e5YtdqCrDyYWsL9AKqIrT1tYm8yaj7P6f3dHT04Ojo6PM
4I3u8Pl86OrqDlr1mL4irok8btw4lJeX4+nTp1IjjBWhubkZzc3NpC+YmpoadHR0MGrUKMo2HN0U
BhNNTU18/PHH2LVrF65du4Zx48YhPj4eLBYLf/7553O5sIhEIpSXl4PP50stqSmGzWbD1dVV5b6n
/UFDQwNsbGxQV1cHV1dXvPXWW0MtUr9haGgILpdL+W4XFBRgwoQJiI2NJbMidHR0ICMjAz4+Pgq7
14i/19bW1iAIAgKBAI2NjWhuboZAIEBtbS06OjrAZDLB4XBGXFogZUBTU5MSfKnM0EvwKk5ZWRnF
p6grISEhKuED2p309HSUlZUp1JfFYg1ZRHF/0NzcjLKyMpSXlw9IFDyLxYKmpiY0NTWhoaEBDQ0N
sFgsMBgMtLa2giAIqKmpDfmP1ZUrV2BiYgIfH58BGb+mpgZ///03cnNzMX78ePj4+MiNzgY6FUix
721zczPq6+tRU1ODiooKqXk9u2JoaAhXV1e5LgnKwIULFzB27FgEBgbK7JOfn4+7d+9i8eLFvQp8
2bdvH9TV1bF8+XKlquamCOLiA13x8vIi/T+7oir+gDQjD1oBVXHEKTe6oyo+JNJob29HfHy8wiXd
tLS04OvrKzdZsDIgEAhIZVSeZY1meMNms6GmpjZkS8odHR1oa2sDQRBgMBhgs9lK53sqC/FytDJY
lZOSkij5Z/X19eHj44O0tDSJCHcPDw+lOCcamq7QCqiKc/fuXUpaDzE6Ojrw9/cfAokGh6amJsTF
xSns48TlcuHl5aUyS07iyNaqqirU1NQMeRUoGprhAoPBgJ+f37Bf9aivr0d8fDylzcvLC7q6uhIB
l2w2G/7+/kMSXCgUCpGVlYX8/HzY2trCxcVlQC33Dx8+BIfDwdixYwdsDprBQTV+bWlkIiu4QVXy
iMmCw+HA1dVV4f61tbXIyckZQIkGF21tbVhaWsLT0xNTp06Fp6cnLC0t6dx+NCMegiCUIu2Qnp6e
hJvHo0ePpBbgaGtrQ3p6+qA/aP70008wMDCAh4cHFi9eDC8vL+jo6CAiImLA5pw5cya2bds2YOPT
DB6q5wBIQ9LS0iLzhqRqPlPSMDExgY2NDQoKChTqX1xcjFGjRildLemeYLFYMDIyIn/M2traUFdX
R2719fW0hZRmRKEsCevt7OwoynJdXR2qq6thaGgIHo+Hhw8fUvaJU4YNBteuXcOrr76Kl156CatW
rYK3tzdSU1MRFRWFLVu2oLW1lVYUaeRCK6AqTPf61V1RpRRM8uDxeHj27Jnca9GV3NxccDgchdL9
KCtsNhujR48mfcZEIhEZDdt1a25uVso68zQ08jA3N4eJiclQi6EQYitoVyX00aNHMDQ0hLW1NWpr
ayn7+Hw+9PX1B8XAcPHiRXC5XERGRpLuDObm5pg1axZiYmJw+vRpWgGlkQutgKowspaZ1NTUVDL6
XRoMBgNubm6Ii4uTmQ+1KwRBIC0tDX5+fkpjJekrTCaTTM/SFYIgIBQK0draipaWFrS0tJBpvQQC
AZqamtDR0QEGgwFNTU2lD+LqT8R5Wo2MjMDlcpXOt1goFKK9vR1qamoq9b6y2WylyywgzQpaU1MD
AwMDuLq6IjY2llI9KyMjA35+fgPubkMQBJqbm9HS0kLxp1VTU8P58+dRVFSEjo4OMoAtOjoae/bs
QUZGBoyNjTFv3jzs2bOHcp999uwZPvjgA1y/fh1VVVVwc3PDJ598gsmTJ8uUIykpCW+//TYmT56M
ffv2qUw+2JEAHYSkwsgKQNLV1YWfn98QSDR0NDQ04P79+woHJXE4HPj6+o4YRZ2Ghmb4kpycTFFC
uVwuJk6cCKBTIU1ISKCsVmhra8PX13dA8/jevHkTs2bNgqmpKdauXYuZM2di4sSJUu+Zp06dwurV
qzFjxgysWbMGDQ0N+Ne//gVra2vExMSQad3c3d1RU1OD119/HQEBATh//jzOnj2LX3/9FXPnzgUA
2NraYvLkyThx4gRSUlIwbdo0+Pr64vLly8OqwhtNz9AKqApz/fp1qUuolpaWcHR0HAKJhhZ5OVGl
YWhoCE9PT/qJmoaGZkiRlhd04sSJ4HK5AIDCwkKJIEojIyN4eHgM6P3r5s2beOutt8ha9aNGjcLU
qVPx7rvvYsaMGQA6M3LY2NjA1tYWsbGx5LG3bt1CSEgIzpw5g+XLlyMiIgJbtmzB77//jpkzZ5L9
Jk+ejNLSUnIOsQK6ceNGhISEICgoCOfPn1cpS/1IQbnWhWgURiAQyPTf6ymBtqpiamraqzJ/1dXV
KhUZT0NDo5zo6+vDwMCA0vbo0SPytaWlJcaMGUPZX1VVpXBVuOclJCQEubm5yMjIwP79+zF16lTc
uHEDs2bNwr///W8AQGZmJioqKhAQEIDbt2+TG9C50nT37l0AnQqpoaEhNDQ0KP2cnZ3x8OFDSu7T
nJwcTJs2Derq6rTyqcTQFlAVpbi4WKJihpipU6eO2BKLBEEgNTUVlZWVCh/j6OiocpHxNDQ0ykVt
bS0SEhIobT4+PmRKPZFIhISEBNTX11P68Hg82NraDohM4mIFXamsrMSqVasQHR2N/Px8JCUlYenS
pTKLK0yfPh3Xrl2Ds7MzcnJyZLo93blzB76+vrC1tUVBQQF8fHxw//59HDp0CG+//faAnB/NwEJb
QFUUWVHfLBZrxCqfQGdQ0vjx4yUCbuSRk5OjFHkDaWhoVBcul0suuYvpagVlMplwd3eX8IPMz89H
YWFhv8pSXl4OLS0tfP755xL7Ro8ejd27dwPojEMQZ9s4efIkhEKhxHbt2jXyODs7O6l9hEIhfH19
yTmmTJmC2NhYLFq0COHh4Xj8+HG/nh/N4EAroCqKrLrgdCLyzihNDw+PXi3bpKWlobGxcQCloqGh
oZGPnZ0d5f/q6mqKxVNDQwOenp4SVsScnBwUFRX1mxwmJiZwcnLCsWPHJMqCAkBiYiKATj9VFxcX
sNlsnDp1itLnyZMnCAwMRFRUFADA3d0d+fn5iImJofT7+OOPsWDBAkpRFWtrazCZTHzzzTdQV1fH
2rVr6ZRxSghrx44dO4ZaCJr+hSAI0mG7OyYmJiPWB7QrbDYb+vr6KCkpUag/QRCorKzEmDFjVKYu
Ng0NjXKhpaWFmpoaijLW2tpK8f9UV1eHvr4+ysrKKEpZVVUVWCxWv1XBGzt2LI4dO4bIyEg0NDSg
vr4eaWlpOHLkCHbu3Il58+YhLCwMHA4H9fX1OHfuHCoqKmBpaYn8/Hy89dZb4PP5OHDgADQ1NeHu
7o6jR4/i9u3b4HA4MDAwwKlTp7Bt2za8/vrrZCqmr776CtbW1njppZcwatQoGBsb4+DBgzA0NKRY
SWmGP7QPqArS2Ngo8RQpxsPDg1wSoTOKbIIAACAASURBVAFKSkrw4MEDhfvr6elh4sSJSpfXkYaG
RjWorq5GUlISpc3X11eiuEhVVRVSUlIkLINWVlZwcHDol+j4pKQkhIWFIT09nVwhMjMzQ2hoKPbs
2UM+rLe1tWH37t2IiIiAQCCAlpYWpk2bhvDwcAQFBZHjpaSkYP369eT5OTg4YMGCBdi7dy85Vtc0
TGKmT5+OmJgYpKenS1iJaYYvtAKqgsgLQJo8ebLSJWIeaB4+fKhwuU6g04rcvRYzDQ0NzWBx//59
1NXVkf8bGRnB09NTol9VVRVSU1MlSu0aGRlh/Pjx/RYPQBAEnjx5Ak1NTZiamsrsJxKJwOfzMWbM
GGhpacnsV19fj7q6OlhZWfWLfDTDE9qMo4LICkBiMpm08ikFHo8n96bZnfLyckoNZhoaGprBpLuV
r6qqiqKQihErpt19QquqqhAbG4uampp+kYfBYMDa2rrH+yiTyYStra1c5RPoXGmilU/Vh1ZAVZDu
aTjE0AFI0mEwGHB1de2VbxSfz+9Xp34aGhoaRTE0NJS4X3WNiO+KgYEBJk6cKGF8aGlpQWJiIrKy
siAUCgdMVhoaWdAKqIohEokoDupd6e4jRPN/MJlMeHh49Kr+e3Z2dq/yiSobT548QWZmptwULg0N
DcjMzKQtwjQ0gwyPx6P8X11djdraWql9dXR04OfnJ/U3oLi4GHfu3EFeXp7M3w4amoGAVkBVDHmp
grpX0qChwmaz4enp2av0TOnp6TJTXik7r7/+OlxdXeHn5yfhQybms88+g6urK1l2j4aGZnAwMDCQ
yAuan58vs7+GhgYmTpwodWm7o6MDfD4ff//9NxISEsDn88lo+/b2dhAEodQbzfBEeskBGqVF1vI7
AOjq6g6iJMqJtrY23N3dkZiYKFPp6kpHRweSk5Ph6+vbo1+TMsJms1FaWoq7d+8iODhYYn9UVBQd
jEVDM0TweDxKdaTa2lpUV1fD0NBQan8mk4lx48bB2NgYmZmZEAgEEn1qa2tlWlKVFQ0NDTg7O9MZ
YIYZtAVUxZDlVM5gMFRSQRoI9PX1MWHCBIUVK6FQiOTkZLS1tQ2wZIOPk5MTzM3NceHCBYl9YkuJ
n5/fEEhGQ0PD5XIllE1F3GG4XC4CAgIwbty4EVEZr7W1VWZmGJqhg1ZAVQxZy8FaWlq0paoXjB49
Gs7Ozgr3b2pqkpruRNlhMBhYsmQJ/vvf/0qcW1RUFKZOnUpJgi0mOjoakyZNgp6eHuzt7bFp0yaK
teXKlSuYNGkScnJyMHv2bBgYGMDf3x+///47GhsbsWbNGowZMwZBQUGUfH8A8PTpU6xevRoWFhbQ
19dHcHAw/vzzT0qf2bNn49SpU1i2bBmMjY3x/vvvY+LEifjmm28kZF25ciU2bdrUl8tEQzNk2Nvb
U/5/9uwZysrKejyOyWTCysoKwcHBcHZ2ho6OzkCJSEMjFVoBVSFEIhGam5ul7qMDkHqPmZmZxM1d
HrW1tXjw4IHK+RwtXbqUXIYXQxAEfvrpJyxbtkyi/6lTpzBnzhxwOBwcOXIE4eHhiIqKwrRp08hr
U1VVhfj4eISEhMDd3R2ffvop6urqsHTpUkybNg3V1dXYu3cvuFwuXn/9dTx9+hRAZ9BTYGAgbt26
hZ07dyIyMhLGxsaYMWMGfvzxR1KG9PR0bN++Henp6Zg9ezasrKygr6+Pr7/+miIrn8/HmTNn4OXl
NRCXjoZmwNHV1YWJiQml7eHDhwo/DLNYLJibm8Pf3x+TJk2Co6Mjxo4dq1IrZpqamnBxcRlqMWi6
QfuAqhANDQ0y93V3VqdRDBsbGwiFQjx58kSh/mVlZdDU1ISDg8MASzZ4+Pj4wNraGufPnyf9QO/e
vYvKykq8/PLL+O2338i+AoEA4eHh8PPzwx9//EG283g8hISE4Ny5c1i+fDkAoL29HW+//Ta2b98O
oDO1zJIlS8BgMPDrr78CAJYsWQIOh4Off/4Z77zzDj755BOUlJQgJycHtra2AID58+fD1dUVmzZt
wqJFi8ggspaWFjx48IB8+DI1NcXy5ctx//59+Pj4AABOnz6NUaNG4eWXXx7IS0hDM6DweDxUVFSQ
D3jNzc0oKirqdS5NbW1tWFpaDoSINDQS0BZQFUJeNDa9vPL8ODg4YOzYsQr35/P5CiusykL3Zfio
qCjMnDlT4sEmMzMTFRUVCAgIwO3bt8kN6MxD29WKCgBTpkwhX0+YMAEAsGDBArJNW1sbXC6X9GuL
i4tDUFAQqXyKmT9/PsrLy5GXl0e2eXp6Uiz/CxcuhJ6eHs6cOUO2nT59GosXL+5V+i0amuEGh8OB
mZkZpe3Ro0eD7pfe1NSEzMxMmStx0qitrUVmZiY6OjoGUDLJ+eiUU0MPrYCqENIqYYgZNWrUIEqi
WjAYjF5HUObm5irkh6UsLF26FGVlZbhz5w46Ojpw4cIFqcvv4pKmBw8exPTp08lt5syZEAqFEjlF
zc3NyddMZuftqLvVRlwDGuj8Ue16jJipU6cCALlUD0DCkqOlpYVXX30VUVFRaG9vR2xsLB4+fIjV
q1crcgloaIY1PB6P8l1pb28f9Py88fHxcHV1RWpqqsLHREVFwdXVtdeR98XFxfjHP/7RWxHx448/
wtXVlRKU9Lxj9YWhmHO4QSugKoQsBVRdXZ1yY6LpPUwmExMmTJCZ3kQaGRkZ/Vbqbqjx9PSEvb09
Lly4gJs3b6KpqQnz58+X6CdW0k+ePAmhUCixXbt2jdK/t59LExMTqcn/xenHxo0bR7aJFdqurFmz
BpWVlbhx4wbOnTsHOzs7BAUF9UoGGprhiLq6usTKQHFxscrmKd61axcuXrw47MYaznMON2gFVEWQ
F4BE5//sH5hMJtzd3RX2pyUIAikpKSrzA7BkyRJcvnwZP/30E+bPny+1tKuLiwvYbDZOnTpFaX/y
5AkCAwMRFRXVJxnc3d0RExMjYS25evUq9PX1YW1tLfd4X19fODs749KlS/jll1+watWqPslDQzOc
sLKyknAnycrKUrnASBrVgFZAVQR5AUi9qXFOIx8WiwUPDw+FswqIE9VLS/isbCxduhQlJSWIjIyU
uvwOAMbGxggLC8ONGzfwzjvvICMjA/fu3cPy5cvB5/Mxe/bsPsnw8ccfo7W1FYsWLUJ6ejpKS0ux
b98+nD59Gh999JFCY6xevRqRkZEoLi7GypUr+yQPDc1wgslkwtHRkdL27NkzueV0+8KhQ4cQFBQE
Q0NDLFiwgOICI6anlGzSePbsGd566y3weDwy1ZrYlxwANm3ahMuXL6OsrAxeXl5k0GJPx0mjL2N1
T/f2wQcfAOh0wXr55Zdha2sLDocDFxcXbNu2jfQ7lTUnAJw9exbe3t7Q0dGBvb09wsLCKL/vly9f
RnBwMG7cuAErKyt4e3sjIyND7jkOV2gFVEWQZ2Wj/T/7FzU1NXh6eipsWRYKhUhKSkJra+sASzaw
jB8/Hk5OTuBwOJg1a5bMfnv37sX27dtx8uRJuLm5Yfr06eByuYiKiupzOjAbGxvcunULFRUVmDBh
AsaOHYsjR44gIiICW7ZsUWiMFStWoL29HVOnTu11lDANzXDHyMgIxsbGlLb8/Px+fwg+cuQIwsLC
MGnSJJw+fRoWFhZYv349pY8iKdm609raCl9fX1y6dAlLlizBmTNnYG1tjZCQENKFZ8GCBXB1dYWO
jg42b94MFxcXhY6TRl/G6p7uzcTEBIWFhXB3d0dlZSW2b9+OH374Ac7Ozvj000/x5ZdfypwT6PSd
Dw0NhaenJ6KiovD+++/j3LlzCAwMJAPKxCnsVq9ejcDAQHC53B5XfoYtBI1K8ODBA+KPP/6QugkE
gqEWTyURCoVETEyMzOvefbt37x4hFAqHWuxBo6Ojg3j06NGAff6qqqqIwsLCXh9XXl5OsNls4vTp
0wMgFQ3N0NPS0kLcuHGDcv+Jj48nRCJRv4zf1NREqKurE2FhYZT2lStXEgCImJgYoqmpiTA2Nib8
/PwofW7evEkAIM6cOUMQBEEcPnyYAEBUVlYSBEEQn3/+OQGA+P333ynHBQcHE/b29uT/69evJywt
Lcn/FT3u0KFDBAAiKSmpz2ONHTuWMDIyIurq6si2yMhIwsnJiSguLibbOjo6CBMTE2L27Nky56ys
rCS0tLSItWvXUua8cOECAYA4cOAAQRAEcfToUQIAsXv3bkLZoS2gKoKsACQmk6lSCYWHE2w2G97e
3gpbQhsbG5GSkjJo6UaGGiaTCVtb2wH7/BkaGsLCwqLXx3322WfQ09PDK6+8MgBS0dAMPRoaGhK5
iOvq6sgsFX0lIyMDQqFQ4jskzvEL9D4lm5hbt27B0NAQGhoalOOcnZ3x8OFDlJeX9+txfR2re7q3
FStWICsrC2ZmZqivr0dCQgKOHTsGNpuNpqYmmXOmp6ejublZIivHzJkzoa6ujjt37lDaQ0JCFD6f
4QqdiF4FEIlEMpdX6OX3gUWshCYlJZGR2PKoq6tDamoqPDw8pEZp0wwcH374Ib777jvU1dXh9OnT
0NTUHGqRaGgGDHNzc1RUVKCqqopsy8/PB5fL7XNhktzcXACdxR260jUXadeUbN0rkAGQ6ZdaUFCA
mpoazJgxQ2Ifm80Gn8+XqPzUl+P6KkP3dG8ikQi7d+/GsWPHUFhYCBaLhQkTJqC9vV1uMNijR48A
QCLNnI6ODry9vSX8a1WhYACtgKoAjY2NMj/YdAT8wKOmpgYvLy8kJyfLzcUqprq6GhkZGXBzcwOD
wRgECWkAYNGiRWCxWAgODpb6w0JDo2q4uLggJiaGkpA+PT0dfn5+0NDQeO5xxemeqqqqKOWKuz6E
d03J1tUy2hOjR49GW1tbr3OYPu9xfR2ruyFhx44d2LNnD7Zu3Yr58+djwoQJ0NTUhLu7u1wFVKzQ
VlZWwsbGhrKvvr4e3t7ecudVRpT/DGjoAKRhgDgwSVHLQnl5OSURMs3A4+3tjd27d9PKJ82IQUND
A+PHj6e0tba2IjU1tU+uQOIVnOjoaEr7rVu3yNfPm5LN3d0d+fn5iImJobR//PHHWLBgARlJzmAw
KOeg6HHS6M+xrl69Cg8PD+zZswe+vr7Q1NREXV0d8vLyKHN0n9PNzQ1MJhNXr16ljJefn4/c3Fx4
eHjInFNZoRVQFYBWQIcHYiVU0YpJT58+JZeyaGhoaAYCIyMjqRa1Bw8ePHd+UA6Hg23btuGLL75A
ZGQkioqKsGPHDuzbt4/s87wp2bZu3QodHR2sX78eJ0+eRGFhIQ4ePIg9e/Zg0qRJpOuMnp4eysvL
cfbsWRQUFCh8nDT6c6wZM2YgLS0Nv/32GwQCAeLi4jBr1iy0tLSgsbFR5pzW1tZYt24dIiIicPTo
UVRUVCA+Ph6LFy+GlZUVlixZ0tu3adhDK6AqAF0DfvjAYrHg7u6ucO34J0+eID8/f4CloqGhGcnw
eDyJKm7l5eV9UkJ37tyJDRs2YPPmzbC0tMShQ4fwn//8h9LneVKyjRkzBrdv34aWlhbWrFkDKysr
HDp0CP/85z+xefNmst+KFSswevRohIaG4tixYwofJ43+HCssLAwvvvgiFi9eTKasW7RoET755BPk
5OSgurpa6pwA8NVXX/0/9s48Lqp6///PGZhhGXaQVQQVEQRBBUVN03A3ymzT0utS1zLXSnPJvIaG
2uIXl9u1Mis1Ta2b/lJzKTNTcUVQhABFVjdANoFhmWF+f/CYcxnZBkEWPc/HYx4yZ/mc9xlnznmd
9+e9MGPGDObMmYODgwODBw/Gzs6OY8eO4eTkVO//SVtDonnQb59Iq0Cj0fD777/XeBGRy+UMHjy4
+Y0SASAxMZGUlBS9tu3SpUs1L4WIiIhIU6FSqTh37pyOFw4qE4l8fX0fOKZQrVaTmppKx44da41p
r6ioICUlBScnpwZVxcjPzycvL6/Oer13797FyspKp62vPvs97LGKi4u5c+cO7u7udcb613RMlUpF
SkoKrq6ujYrVbe2IArSNc+/ePU6fPl3jOltbWwICAprZIpGqpKSkkJiYqNe2Xl5ej0Rmo0jj2bZt
GzY2Njz99NMtbYrII0RJSQlnz56t1hTD0tKSHj16PNJiR6T1IU7Bt3HqasEpxn+2PO7u7vj6+uqV
7R4fH09GRkYzWCXSmrl58yaTJk0iMzOzpU0RecQwNjamd+/e1WIY8/PzOXXqFDdv3mwhy0QeR0QB
2sYRE5BaP87OzgQEBGBoWH/Vs7i4OPEmICIi8tAwNTWld+/emJqa6ixXqVRcuXKFiIgIbty4oVO6
SUTkYSBOwbdxzp8/T25ubo3rgoKCGt17W6TpKCoq4uLFiyiVynq39fX11TuR6WEREhLCyy+/THp6
Ot9//z35+fmMHDmSL774goMHD7Jy5UpSU1N54YUXmDdvnlAbsKKigvDwcHbt2kVCQgKmpqb4+PgI
ZUkA9u3bx+rVq9m2bRuzZ8/mzJkz2NjYMGHCBJYuXSrEQ+kzFsDVq1f5+OOPOXz4MEZGRkyZMgVj
Y2MiIyP54YcfgMqHtYULF/Lbb7+RnZ2Nn58fK1asYNCgQY0+54aM/9JLL5GVlcWWLVtIT08nICCA
tWvX0r17d/7++2/GjRtHTEwMbm5u+Pj41NnHurl444038Pb25p133qm2bsaMGXTs2JH33nuv0cfZ
tWsX27Ztq1aKpr51Ig2nvLycmJgYnUL19yOTyZBIJBgaGmJqaqoTpyjS+jE2Nsbd3b3VhlaIhejb
MBqNpk4PqEKhaEZrROpDoVDQt29fLl26RE5OTp3bXrlyhfLy8gYHvjclMTExXLx4EVdXV+bNm0dU
VBT/+c9/SE5OJjk5malTp2JjY8OSJUsoLy/nq6++AmD27Nls2rSJxYsXs3TpUqKiovj6668ZNWoU
aWlpmJmZkZ2dzdmzZwkODmbAgAGEh4ezf/9+QkNDsbGxYc6cOXqPlZ+fT0hICHK5nDVr1qBSqVi+
fDnp6el4eHgAlbUPg4KCyMnJ4fXXX6d///7s3r2b4OBgfvnlFyHW8kHPuSHjX7p0CXNzc6ZOnYpc
Luejjz5i2LBhpKWl4eDgwLRp05gzZw7Dhw+vtVRNc3PmzJlaw0jOnz+v10OVPqSkpPDnn3/WuC41
NVWnzqRI45DJZPTs2ZOUlBSSkpKoqKioto3WC1pWVlZrtz2R1k1+fj59+vRpaTNqRBSgbRilUllr
MWEjIyO9pnxFmheZTEavXr1ISEggPT29zm0TEhIoLCzEx8enmayrjkql4tChQ0KB/T///JM///yT
gwcPMnLkSAAyMjL47rvv+OKLL1Cr1cTExDBv3jxCQ0MBeOaZZ7Czs2PmzJnExcUJF0O1Ws2MGTNY
sGABABMnTuTcuXMcPHiQOXPmCB6a+sZatWoViYmJJCYmCl1ZevToofO5bdiwgfj4eA4dOsSIESOA
Sm9kamoq77zzjk6yT0PPWSqVNmj8srIyzp49K5RIMzc35/XXXycqKoqgoCBeeOEF5syZQ79+/Rg7
dmyT/V+KiNyPRCKhY8eOODg4kJiYKMYdP4LUlSfS0ogxoG0YMf6zbSKVSvH29tYrOenGjRtERETU
2XnjYeLn56fT3cnf3x9zc3OCg4OFZS4uLmRmZlJQUIBMJuOvv/5i1apVVFRUcP36dX799VcuXLgA
VIYhVGXo0KHC31KpFA8PD6Gdn75jnT17Fg8PD52WgN26ddMpa3Xs2DFsbW0xMjLi+PHjwqtbt25c
vXqVO3fuPPA5N3T8oKAgnfq8np6egG4bw7aKWq3mnXfewdnZGQsLC/r168fRo0eF9SUlJcybN4+O
HTtibW3N008//cB1cOsbS6VSERYWRvfu3VEoFHTq1InZs2cL3tpDhw4REhLCpk2b6NKlCx06dGDm
zJmPpafP1NSUHj16MGDAANzd3cX7xyPE/b3lWxOii6wNI2bAt22cnZ0xNzfn4sWL1cqiVKWwsJCT
J0/i6emJq6trs/aPv//iJZVKcXR0RC6XC8vujwu7ePEiixcv5sSJEyiVSmxtbenatStAtXq193eN
MjIy0qlTqM9Yf//9t+B1rMqTTz5JVFQUAMnJyeTk5NTYhlMmk5GSkiL0Yn6Qc27I+DWdM1DjFGhb
Y8OGDezcuZPvvvuO9u3bs2HDBkJCQrh16xZWVlZMnDiR6OhoQkNDcXNzY/Xq1fTv35+rV68K8eoq
lYpt27ZVG/vixYs67+sba8WKFWzYsIHNmzfj6enJ0aNHefvtt/Hw8GDu3Lnk5eVx+PBhkpKSCA8P
B2D+/PlMmzaN7du3P/wPqxViamqKp6cnnp6elJWVkZWVRVFRkRADKtK2MDY2xsrKqqXNqBVRgLZh
6hKgYvxn28Dc3Jz+/fsTHR1dazIZVIqT+Ph4bt26hbe3NxYWFs1iX0OTDrKzsxk2bBjt27dn69at
BAUF4erqyt69exk7dmyDuq7oO5ajo6PQXaQqVeNs27VrR3l5OVevXq33uA+SaNGQ8R9lkpOTcXR0
JCgoCCsrK8LDwxk9ejRSqZSYmBj++9//snv3bl566SUA+vfvj4ODA1988QULFy4EKkMU5s+fX23s
qp5Jfcbq0KEDmzdvFsIYfHx82LFjB3///bcwjkqlYvXq1YSEhACVs0oTJkxg1apVj31NXrlcjouL
S0ubIfIII07Bt2HEKfhHA5lMRu/evXF3d6932/z8fM6cOcPff/9NWVnZwzeugURERJCTk0NYWBgv
vvgirq6uQOU0OVBrzHJjxnrqqaf4888/ycrKEvbNzs7WSVjp0aMH165dIyIiQucYS5cuZcyYMY0O
cWjK8bUe7oZ8Vg8buVxea1kelUoleIdff/11MjIycHBwYPjw4Xz11VcEBQVhYWHB5cuXAfjhhx8Y
N24c48aNY+LEicjlcq5cuSKMZ2pqyp07d6q9li5dKmyjz1ivv/46nTt3Zv369bz11lsMGDCAixcv
6vxuZDIZQ4YMEd4PHToUiURCdHR0E31yIiIitSEK0DZKaWlpnQJE9IC2PTw9Penevbte26anp3Pi
xAmuX7/eqoTKgAEDMDEx4dtvvyUtLY1bt26xbt06PvvsM4BqbQCbYqyFCxdibGyMv78/H3/8MR9/
/DH+/v4olUpBzC1atAhzc3OmTZvGd999R1paGuvXrycsLIwBAwZUK8zdUJpyfK13e//+/Rw+fLhR
djUVnTt3rjVpTttuECrjZ+Pj41m/fj2mpqZ88MEH+Pj4cOXKFYqLi5FKpTzxxBM6r/fff1/wYuqL
PmN9+OGHBAYGcuDAAZydnVm+fDl9+/bV8cKbmprqtIa0s7PDwMDgkQiHEBFp7YgCtI1S1/S7XC5H
JpM1ozUiTYWTkxOBgYF6xXmq1WquXbvGX3/9RXJyMiqVqhksrBsbGxvCw8OJi4vDzc0NFxcX9uzZ
w4ULFzA3N+fUqVNNPpajoyPnzp2jV69efPrpp2zatIm5c+cybNgwIW7NycmJ48ePY2JiwtSpU3Fz
c+Pzzz9n/vz5vPvuu40+76YcX6FQMH36dA4cOMDTTz9dZ3xwc9G1a1diY2OrPUBcvXqV27dvC+Wu
9uzZw9mzZ3nzzTfZu3cv6enpSCQSfvzxRzw9PamoqMDT05M5c+YIL5lMVi0utj7qG0upVLJy5Uo+
/fRTDh8+zNKlSwkODubGjRs64jI/P5/z588L72NjY1GpVPTq1asRn5aIiIg+iIXo2yjJycm1xptZ
W1vTu3fvZrZIpCnJzc0lMjKyQZ4YQ0NDXFxc6NChg45Xp6VITU3F1ta2ScJB6horKSkJMzMzIclH
S58+fXB0dOSXX37RWZ6fn09eXt5Dq7HaVOMrlUpUKpVOxnxLER8fzxNPPEHPnj2ZN28eXbp0ITEx
kQ8++ACNRsPJkydRKBT8+9//ZsWKFRw6dAh/f38iIiIYMmQIW7du5aWXXiIwMBADAwPWrl1LQEAA
X3zxBYsWLSIqKgpvb28+/vhjVqxYUaOn/JNPPiE0NJSioiIqKirqHKtr16507tyZkSNHsn79esrL
ywkLC2PlypW8/PLL7Nq1i507d/LKK68wevRoNmzYQF5eHrNmzcLa2rpVFP8XEXnUET2gbRSxAP2j
jbW1tXCD1ReVSkVqaionTpwgMjKSW7dutahX1M3Nrclikesa69tvv8XNzY3U1FRh2b59+zh//rxO
mSctlpaWD7XAf1ONb2Ji0irEJ4CXlxf79++nuLiY559/ni5dujBp0iQ6dOjAvn37hGvOm2++yahR
oxg5ciSmpqaMGDGCefPm8dJLLyGVSvn5558xNzdn4MCBWFpasnXrVr766iu8vb0bZE99Y0mlUj75
5BOhPFa7du3Izs7mvffe08mml8lkODo64uXlRb9+/bCxsWHnzp1N+tmJiIjUjOgBbaOcPHmy1np1
Xbt2bdEOOiJNR35+PpGRkQ8sJKVSKba2ttjZ2WFjY/NIPpzcuHGD/v37c/v2bfr27Ut2djZxcXFM
njyZb775BqlUfM5uSsrLy7l58yYdOnSoNVREo9GQnp6Oi4tLjQ9RhYWFFBUVVfNaPwj1jZWRkYG9
vb1OGS2AnTt3MnnyZEpLS8nPz0cikTRbdYkHYf/+/axZs6bacplMhlwux9raGl9fX6ZOnYq9vX2z
2/fzzz+zYcMGAMaMGcPbb7+t134vv/yyTgKhFolEglwux9LSkl69ejF58mQcHR2b1GZ92LRpEzt2
7ADgtdde4x//+Eez2/CoIpZhaoOoVKo6iyU/iiLjccXS0pLAwEAuXLjwQCK0oqKCrKws4QJvaGiI
ubk5CoUCuVyOSqWioqICmUyGQqFok2LNwMCA06dPc/nyZY4fP46ZmRkBAQH4+fk9Np1dZDIZVlZW
zdKrWyaT1fuAK5FI6ixjZGZm1mTe8frG0qcQt7YGaWvm5s2btbYprUpYWBj79u1j0KBBD9+oKmRk
ZAj2NcSjffr0aTIyMurcZvfulvRebAAAIABJREFU3Sxbtoz9+/fXOKvxMLl+/bpwXlWbUYg0HlGA
tkHqyyQWCwY/WlhYWNC7d28iIyMbXXpJpVKRm5tbZ83RtopUKuWpp54S3lct7fM4IJFIMDY2fqBG
BWq1mvLycjQaDRKJBJlM1ixitiXJz88nODiYkydPNmg/uVxOx44dG5w41ZQYGhpibW2NRqOhvLyc
goICIbv/3r17jB07lpSUlFbt0a0JBwcHTExM0Gg0VFRUUFJSIjw8l5aWMnbsWJKTk7Gzs2thS0Wa
AlGAtkHqyoCXSCStIgFFpGkxNzend+/eXLhwoVVkRYu0PjQajdBmsrHjPA7fsY4dO/LOO+80uPVm
cXEx0dHR9O3bt8VidAMDAzl9+rTw/t69e6xcuZLVq1cDlUmMW7duZdasWS1i34PyzTffMHr0aJ1l
p06dIiQkhLy8PAoLCzl69Cjjxo1rIQtFmhJRgLZB6hKgpqamzdqqUaT5UCgUgie0KYSGiIjIg6HR
aMjOzm41SWLm5uasWrWKvXv3Eh8fD6DT8emrr74SKmpMmzZNx7t97NgxEhISABg8eDBeXl7COrVa
zc8//0x0dDQZGRmYmJjg7OzMs88+S48ePeq0SaPRcODAAU6ePElRURGBgYG8/PLLDXaQPPHEEwwf
Ppzdu3cDlXVn76egoIAffviB+Ph4srKyUCgUuLm58dxzz9GtW7cax42Pj+ePP/7gypUrqNVq3N3d
GTduHJ06ddLLrry8PJ2ENX9/f/r169egc3vcEQVoG0Rswfn4YmpqKnhC6/LcGBoaUlFRIRbUFhF5
SLTGUKcOHToIArRqPPeMGTOEhhVTpkzREaBbtmxhy5YtQGXCjVaA3rhxg6FDhwrjVWXZsmUsX75c
pztVVe7du8cLL7zAnj17dJaHh4fz66+/4uzsrPc5qVQqzp07J7wfOXKkzvqzZ88yYsQI8vPzq+0b
GhrKN998w4QJE4RlarWalStXsmLFimrdvZYuXcqyZctqPS8tZWVljB07VogN7d69O8ePH9f7nEQq
EQVoG0Oj0dQZA9oaL4oiTYuxsTF9+vQhMjKy1ocRlUqFiYkJnTt3prCwkNzcXJ04MRERkQenffv2
TZLB35T89ddfOiIoKCioUeP985//FMTnwIED6dmzJxkZGRw5coTCwkKWL1/OyJEja6w5/f333yOV
SgkICEChUBAREYFKpeLSpUt88sknrF27tsZj7ty5UyiTVVFRQUFBAT/++CNpaWlAZXtVT09PYfuy
sjKee+45QXx26dKFLl26cOHCBTIzMykrK2PSpEkMHz5ciNldt24d//rXv4QxnJ2dkcvlpKSkoFar
+de//kWXLl0YP358jTZqNBqmTJkiiM/OnTtz5MgRrK2tG/LxiiAK0DZHcXFxna0XRQH6eCCXy+nd
uzdRUVG1JhQplUoSExPp1auX0DmmuLiYwsJCSkpKyM/Pp7CwELVaLSSw3F+qRqT1U1FRgVQqpV27
do1KOikrK0OlUmFoaCh+D+pAJpNhZGTUojYkJSXx+uuvC3G/N27c4PTp00KlDFNT00ZlwatUKo4d
OwZU1uD966+/hHV79+7lk08+wd/fv8bySVp27NghxGp+/vnnQjzqgQMHahWg27Ztq3W88ePH8/XX
X+ssS0xMpFu3bqhUKvr06SM0ENBoNLi7u5OWlkZFRQWXL19myJAhZGVlERoaKuz/zTffMHHiRGQy
GStWrBCE6erVq2sVoIsXL+aHH34AwMXFhd9//71FykM9CogCtI1R1/Q7iAL0ccLQ0JBevXpx+fLl
Wm8EZWVlnD9/Hn9/f+zs7Jq0/I2IiEjLkJWVxTfffFPjOqlUyvbt23F1dX3g8Q0NDbG0tCQzM5PU
1FT8/f0ZO3YswcHBPP300zz33HN17u/v76+TKBQSEiII0Lt37z6QTbt27cLc3JxPP/1UKJvl6+vL
0aNHAXTK1MXGxuLk5CR4TrUe0pMnTwpNXIKDg5k6daqwz7x587CxscHPz4/u3bvXaMMPP/wgxNYa
Gxvz22+/4e7u/kDnIyJ2QmpziCWYRKpiYGCAv79/nTFVarWaqKgobty40YyWiYiINCf29va88MIL
RERE1CsQq1JbWM4bb7wh/H358mVCQ0MZNGgQdnZ2vPzyy5w5c6bWMTt27KjzvupDb12l5L7++muS
kpJISkoiPj6eyMhItm3bhqurKxqNhk2bNvHPf/6z2n7Xr19n48aNPP3009ja2tK9e3fOnj0rrNfG
wicmJgrL7q9VampqysyZMxk4cCBWVlY12lc1saukpES8pjYS0QPaxqjLAyqVSjE2Nm5Ga0RaA1Kp
FF9fXyGOqSY0Gg2xsbEolUo8PDya10AREZEmJTAwkN9//x2oDAkwNjbWu4nE/Q0taiu5tWLFCszM
zFi3bh23bt0SlmvjMn/88UfCw8Nr7Hh0/5S0oaF+UsPJyalaFro2hEgb0/rrr79SXFwsOFuWLl3K
Rx99JGxvYmJCcHAwt27dEgSj9rPJzs4WtnvQMBMDAwMhDO7tt98mOjpa7/MT0UX0gLYx6ivBJPL4
4unpSdeuXevc5vr168TExIjZ8SIibRjtFLmlpSWmpqb1is+qpfnu90DWdU9ZuHAhqampHDt2jKVL
l/LEE0/oHGvRokXVMsnvP15TUFWUFhcXExUVBcCPP/4oiE83NzeOHDlCbm4uR48exc/PT9hHa3Pn
zp2FZTV5L3/77TcSEhJqzbMwNDTkxx9/FOJrY2Nj+eKLLxp5do8vogBtQ6hUKkpKSmpdLxagF3Fz
c8PPz6/OG8CtW7e4cOFCo7sqiYiItA2qtiOtKryKioqIjo6utn1KSgpffvkl7777LqGhoQwePJjl
y5dz8uRJkpOThXJ/paWlOt7Rh4FGo+E///mP8F474wNw+PBhYfm7777LsGHDhASx5ORkYZ1WUFad
dj98+LCO+I6Ojmb48OF4eXlha2tLUVFRNVvmzp3L2LFjWbNmjXCNXbZsGTk5OU1xqo8dot+4DSEm
IInog6OjI3K5nOjo6Fr7x+fl5XH27Fl69eol1o4VEXnE8fb2FsJz5s+fz9q1aykoKGDFihXcvHmz
2vZlZWW89dZbQnxo+/btGTduHFKplFOnTgk1iG1tbRuV7HQ/H3/8sZAJr9FoKCsrIzExkdjYWGGb
wYMHC0lIVeuZ7t27l1dffRWpVMq6det0aofm5eUB8OSTT9K7d2/Onz9Pfn4+w4cPZ9GiRRQUFPB/
//d/wvYjRoyo8bqoPW5AQAATJ05k27Zt5OTksGzZMjZs2NBkn8PjgihA2xD1JSCJHlARLTY2NvTp
04eLFy/W6jVXKpWcPXsWf39/bG1tm9lCERGR5uKll17i4MGDABw5ckToDiSTyRgyZIiQSa7F09OT
JUuWCNPbb731FrNmzRJ6tGtZu3Ztk063Vy33VBOurq5s375deD9+/Hg2bdqERqPh2LFjuLi4oNFo
KC8vx9zcXHDaaL2+EomEzz//nODgYAoLCzlz5ky1hC0nJyfWrFlTr60rV67kp59+QqlUsnHjRqZP
n46Pj09DT/mxRpyCb0PU5wEVBahIVczMzAgKCqqzNqRKpSIyMpLU1NRmtExERKQ5mTp1Kh9//LFO
sXQvLy9+/fVXXnjhhRr3WbFiBd98843QGUmtVgvi09fXl7179zJx4sSHZrOhoSFGRkZYWVnRo0cP
Vq5cyenTp3USnJ566ik2bdokZK2XlZUhk8lYunQpp06dErb773//K/zdu3dvLl26xNChQ3U8qBKJ
hOeff54///xTJ2ShNtq3b8+8efOAys+mpmQskbqRaMTWKG2Gs2fP1thuTMsTTzwhTqeKVEOtVhMT
E0NmZmad2zk7O9OtWze9s2lFRETaFtpqGO3atWtQJ6fMzEzS09ORSqW4u7u3uq4/paWlXLt2DagU
1lWFZX37xcfHI5VK6dixo1gjuZkRBWgb4ujRo3V2QRoyZIjePzyRxwuNRsPVq1drLdOkxdLSEn9/
f7Gcl4iIiIjIQ0V0dbQRlEplneJTLpeL4lOkViQSCZ6ennTr1q3OmK38/HzOnDlTa3tPERERERGR
pkAUoG2E+hKQRI+ViD60b9+egIAAZDJZrduUlZVx4cIFoY2diIiIiIhIUyMK0DaCmIAk0lTY2NjQ
t2/fOuOdNBoN8fHxXL58udZSTiIiIiIiIg+KWIapjSB6QEWaEhMTE/r06cOVK1fqTE66ffs2BQUF
+Pv7Y25u3owWioi0fYqLi8nLy6OgoICioiKKioooLi5GqVRSWlpKWVkZpaWlqFQqiouLuXfvHhUV
FUgkEkxNTR+4XaRI60KhUDBo0KB6O9U9bohJSG2EiIiIOkVo165dcXNza0aLRB4FNBoNycnJQgZp
bUilUry9vXFxcWkmy0RE2gaFhYXcuXOHrKws7t69S3Z2Nnfv3iU/P1+cPRARkEqlzJw5U6eM1OOO
6AFtA1RUVNTYFqwqogdU5EGQSCR06tQJCwuLOqfbKyoqiI2NJScnB29vbwwNxUuHyONHbm4uGRkZ
ZGRkcOvWLW7fvl3vtVlEBCqvoQkJCaIArYJ4F2kDFBcXU5+jWhSgIo3Bzs6Ovn37cunSpTrjjW/d
ukVeXh5+fn5CWzoRkUcRtVrNzZs3SUlJISUlhbS0NKEFpYjIg2BnZ9fSJrQqRAHaBqgv/hNEASrS
eExNTenTpw8JCQlkZGTUup1SqeTcuXN4eHjg7u7epK34RERaCo1Gw61bt7h27RrXr18nJSWF8vLy
ljZL5BGhT58+YqvO+xAFaBtAHwEqBqu3LcrKyoiLi+PatWt06tQJHx8fjIyMWtosDAwM6NatG1ZW
Vvz999+11p7VFrbPysrC19cXU1PTZrZURKTxKJVKEhMTSUxM5OrVq00+nS6TybC0tMTS0hIzMzMU
CgUKhQJTU1OMjIyQy+UYGRkhk8mQSqWUlJRQVlaGiYmJ+Jt6hDA1NRW7LNWAKEDbAPUJUCMjI9EL
1YbYtWsXr7/+us7NTiaTsXLlSubPn9+Clv0PZ2dnLCwsuHTpUp035by8PE6fPk3Xrl316p8sItLS
5ObmEhcXx99//01qaqrQ3/xBMTAwwN7eHnt7e+zs7LCzs8PW1hYbGxuxPJ6ISB2IArQNoI8AFWkb
HDhwgPHjx/Pcc88xefJkAgMDiY6OZufOnbz33nuUlpayZMmSljYTADMzM/r27VvvlLxarSYuLo7M
zEy6desmhoOItDru3r1LTEwMsbGx3Lx584HHMTQ0xNnZGRcXF1xdXXF0dMTOzu6hdqGbOnUq6enp
wnuZTIa1tTVDhw7l1VdfbZLfW2hoKEZGRixatKjG9T///DP/+c9/alzn4eHBF1980WgbaiM9PR25
XN6g3vUibQNRgLZyKioq6g18F6ff2w4//fQT1tbWbN26Vair2b59e0aOHElERATbtm1rNQIU/jcl
b2trS2xsbJ1lZbKzszl16hRdu3bFxcXlkfDKt3SoxNWrV1EoFDg7OzfbMR8V8vLyuHz5MjExMQ8s
Ok1MTHB3dxdeTk5Ozd7y+MyZM5iamjJ8+HAAVCoVGRkZTJs2jX379vHzzz83+rd2+fLlOqf809PT
+eOPP1i4cGG1dQ/zu3n37l28vb05duyYKEAfQUQB2srRJyZJ9IC2HTQaDUqlkpKSEp3C7oaGhuze
vZv09HTUajUGBgZUVFQQHh7Orl27SEhIwNTUFB8fH8LCwggKCuLGjRuMGTOGefPm8corr+gcJyQk
BH9/f8LCwgA4ePAgYWFhxMTEYG9vT0hICGFhYXrHmTk4OGBpaUlMTEydfeK13tBbt27h4+PTpuPY
9A2VyMjIIDw8nDVr1jS5DSNGjGDQoEF8++23TT72o0hxcTExMTFcunSJ1NTUBu9vaGhIx44d8fDw
oHPnzjg6OraKB6n+/fuzatUqnWUDBw5k5syZxMfH4+3t/dBtkEql1Wx42JSWloplrh5hxFacrRwx
AenRYtKkSajVagICAvjwww85ffq04FUMDAxk7Nixgodl9uzZLF68mFGjRvH999/z1ltvkZiYyKhR
oygsLMTFxQUDAwM2btyoc4zz589z4MABgoKCANiyZQujR49GoVDw5ZdfsmDBAnbu3MmQIUPqLe9V
FWNjYwIDA/H09Kz3ppybm0tERARJSUmNjrFrCbShEsOGDWPPnj2kp6ezb98+Xn75Zd577z1B2AMs
X76cn376qQWtfbxRqVRcuXKF77//nlWrVvHLL780SHxaW1vTr18/Jk+ezAcffMCUKVMYMGAATk5O
rUJ81kZgYCAA165d45dffqFfv3466/fs2cOAAQOE9z/99JOQMOjt7U1YWJhOkmFpaSnvvPMOzs7O
uLu7s3DhwgZdHw4cOMDzzz/P6tWradeuHfPmzQPgyy+/xMfHBzMzM3r06MGOHTuEfQ4dOsSYMWP4
73//S48ePbC0tGTEiBEkJydTUFDAkCFDAHjllVdYu3Ztwz8kkVaN6AFt5YgC9NEiODiYQ4cO8dZb
bxEaGkpoaChmZmY89dRTzJo1S5hmKy8vJyYmhnnz5hEaGgrAM888g52dHTNnziQuLo4+ffowdepU
ZsyYQWpqqtAJa+vWrTg4ODB69GiKi4tZsGABffv25fDhw4IdHh4eBAcHs2PHDiZMmKC3/RKJBHd3
d+zs7IiJiamzZmhFRQVJSUncunULLy+vNlUDr62FSjxuaDQaUlNTiYqK4sqVK5SUlDRofycnJ3x8
fOjWrVubnNpVqVRs3rwZqVRK9+7dOX78OHFxcTrbaJOtAFJTU3nllVdYvXo1Tz/9NJGRkUyZMgVX
V1cmTZoEVH7np0yZwk8//URERATvvfceXl5eTJ06VRgzJiammi2+vr5IJBLy8vI4cuQIKSkpLFq0
CHd3dzZt2sQ777zDrFmzePHFF9m+fTtTpkxBpVIxadIkYZ8bN26wcOFC7OzsmD59Om+88QaHDh1i
zZo1PP300yxdulQQoyKPDqIAbeXoM/0gCtC2RXBwMAkJCVy5coXff/+dP/74g6NHj7J//36WLl1K
aGgoMpmMv/76C6gUcikpKcTHx3PhwgXgf9+LV155hXfffZft27fz/vvvU15ezs6dO5k8eTKGhoZE
RUWRmZnJxIkTOX78uI4dCoWCkydPNkiAajEzMyMoKIjr16+TnJxcp6ekuLiYixcvYm9vj6enZ5uY
ltc3VGL+/Pns2bOHgoICAgICWLZsGc8++2y94RNa8vLy+Ne//sWxY8fIzc3lmWeeYerUqfTp06dG
uyIjI5kxYwaDBg3i448/btUeuofB3bt3iY6OJioqqs5QkJpwdnbG19eX7t27Y2Nj85AsfDgcOnSI
cePGAVBQUMCpU6e4d+8eS5Yswd3dvdpv+34yMjJQq9UMHDgQLy8vvLy8cHZ2xtXVVdimS5cubN68
GYlEQv/+/dm6dStRUVGCAFWr1fj5+VUbu7S0VLgHFRUVsXnzZnr27AlUCv2xY8fyySefAJW1MJOT
k/nwww8F4VtSUsJ3332Hr68vAHPmzOHDDz/EwMCAHj16ANCtWzexysYjiChAWzn6eEBlMlkzWCLS
VGg0GiQSCb6+vvj6+vL222+TlZXF5MmTWb58OZMmTaJz585cvHiRxYsXc+LECZRKJba2tnTt2lUY
A8DS0pKxY8fy/fff8/7773Po0CGys7OFm0ZycjIA69evZ8OGDdVsSUtLe+DzkEqleHh44ODgQGxs
LAUFBXVun5mZSVZWFm5ubnTq1KlVt/OcNGkSO3bsICAggNdee40RI0bQu3dvDA0NCQwMFKY/x4wZ
Q3R0NDExMbz77rtCoenZs2ezadMmFi9ezNKlS4mKiuLrr79m1KhRpKWlYWZmRklJCc8++yzJycmE
hoZibm7Ov//9b5555hmuXr2KhYWFjk1RUVEMGzaMoKAgli9f/tiIT6VSSUxMDFFRUQ3+vrZr1w5/
f3/8/PywtbV9SBY+fORyufAgZGdnx+DBgxk0aBB9+/bVa/8+ffowePBggoKC8PX1ZfTo0bz88st4
eHgI22g9mVq8vb3JzMwU3hsYGNRYDaOqA0QqlQq/gbt373L79m1Gjx6ts31ISAj79u0T7m1SqRQv
Ly9hvYODg9hx6jGh9d4BRKioqECpVNa7nShA2wZ37tzB3d2d0NBQFixYoLOuXbt2fPTRRxw8eJCT
J09iaWnJsGHDaN++PVu3biUoKAhXV1f27t3L2LFjdTyOr732GkOHDiU6Oppt27bRu3dv4SbQrl07
AL777rsH8nTqg7m5OUFBQaSmpnLt2rU6Yz41Gg0pKSncvHmTTp060b59e6TS1heKrm+oxODBg9mx
YwfXr18XPl99wye+/vprTp48yaVLl+jevbswXvfu3dm+fTtvvfWWYM+lS5cYOnQoTz75JLt3737k
Zz3UajWJiYlERUURHx9fa0OEmrCwsMDPzw9/f/9HpnpAcHBwjQ+QVbn/d1daWir8LZPJOHLkCIcO
HWL//v3s3LmTTz/9lPDwcObOnQug18xEfX3MjY2Nhe+mNiyi6gwCVFYWMDAwEB5ADQ0NdR5GH5cH
KxFRgLZq9OkBD6IAbSs4ODjg7e3N5s2bmTx5crXYM+30eu/evYmIiCAnJ4ctW7YQEhIibHP27FkA
nRtycHAwbm5ubN26lQMHDvDZZ58J63x8fJDJZGzZskVHgKampvLqq68ye/Zsxo8f3+hz08aG2tvb
Ex8fT3Z2dp3bl5WVER8fT0pKCh4eHq0y4UOfUIma0Dd8IjIyEh8fH0F8QuUDw+3bt3XGi4+PZ8iQ
Icjl8kdefKalpREdHc3ly5f1evjWIpfL8fHxoWfPnnTs2LFVPtQ8TIyNjSkqKqKiokI496SkJGF9
bGwsv//+O3PnziUkJASNRsPEiRP58ssvBQHa1Dg7O6NQKPj111959tlnheUHDx7Ey8tLr/qlre2a
INK0iAK0FaPP9DvQqqcyRXQJDQ1l3Lhx9OrVi2nTptGzZ09KSko4efIkGzdu5JlnnqFbt244Ojpi
YmLCt99+i5+fHzKZjN27dwvisup3QyKRMGXKFMLCwjA0NNQpyWRvb8+cOXMIDw9n5syZTJ8+nYKC
AhYuXEhKSgqjRo1q0vMzNTWlV69e3Llzh4SEhHqTQ0pKSrhy5QrJycl06tSp1ZS9Af1DJWpCn/CJ
uLg4nJyc6rXjzJkz9OnTh3PnzvH1118zY8aMpjvJVkBmZiaXLl3i0qVLDYrrlEgkeHh40LNnT7y9
vR9pYV4fXl5eaDQaPvvsM2bNmsWpU6eEeE6o9EIuXLgQIyMjpkyZQnZ2NsnJyXTr1u2h2SSRSJg9
ezZff/01AwcOZOzYsezatYsDBw7UWE+0JrSdpE6fPo2bmxv29vYPzV6R5ufxekxsY+hb/0wUoG2H
Z555hhMnTuDu7s6aNWt47rnnGD9+PHv27BESWgBsbGwIDw8nLi4ONzc3XFxc2LNnDxcuXMDc3JxT
p07pjDtlyhTUajXPPfccVlZWOutWrVrFBx98wHfffYefnx/Dhg3D2tqanTt3Ymlp+VDO08HBgSee
eIKOHTvqJSiLioqIiYnh5MmTZGRktGjppjt37mBiYsKnn35abZ02VALg5MmTNe6fnZ3NsGHDuH37
Nlu3biUtLY3s7Gzee+894H8C1NbWlpycnGr7p6SkcPfuXeH94MGDOX36NC+88AILFizg+vXrjT7H
liY7O5tjx46xfv161q1bx59//qm3+HRwcGDkyJEsWLCAKVOm4O/v/1iLTwB/f38WLVrEkiVLMDMz
Y+bMmaxcuVJY36FDB9atW8fnn3+OlZUVbm5umJiY8O9///uh2rVs2TLGjx/P1KlTsbS0ZNGiRbz9
9tu8//77eu1vZWXF2LFjefvtt3n33Xcfqq0izY9E05BCXyLNyuXLl6tNx92PVCpl6NChzWSRSFOi
LSVjbGxcZ2xVamoqtra2mJmZNep42ulgJyenZu1RrVQqSUxM5M6dO3rvI5fLcXV1pX379i3SaKFX
r14UFRXx119/VQuV+Oqrr3jzzTeJjY2lW7duvPnmmxw4cEBI0Pjll18YM2YM+/bt0wmfWLx4MatX
r+bw4cMMHz6cRYsWsW7dOlJSUoRjKJVKOnTowIQJE1i7di2dOnUSCtHfvn2bbt264efnx7Fjx1qN
p1hfMjMzuXLlitCooCEoFAr8/f3p2bPnIxPX+TAoKSnh7t27uLi41LpNZmYmCoUChULRbHaVl5dz
69YtXF1dH+h7W1hYiJGRkRhu9oghus5aMfp4QJu7LZxI06GNm6wPbX3PxiKVSunUqVOTjNUQTExM
8Pf3Jy8vj4SEBPLz8+vdp6ysjKSkJK5fv46TkxPt27ev5tl9mOgbKgGVlQju3LnD9u3b6d+/PwMG
DNArfOLdd99l48aNvPrqq6xfvx6pVMpnn32GUqlk8eLF1WxydHRkzZo1vPbaa/z73/9m9uzZzfZ5
PAhqtZq0tDT+/vtv4uPjdby6+iCTyfD29qZHjx506dLlsYvrfBCMjY3rFJ9Ai0xjy2QyOnTo8MD7
N/bhW6R1InpAWykajYajR4/WOxVpZGTEoEGDmskqEZHGk5mZybVr1/SOcdaiUChwcXHBycmpWbyi
kZGRzJkzh8uXLwu2uri4MHHiRMLCwoSHv5iYGEaMGMGtW7dYsmQJH330EV9++SVr164lPj4eiUTC
k08+ybp16xg4cCDTpk0T2nZGRkYydepUocC3nZ0dGzZsEBLDqnpAtQwbNoyIiAguX75cawxqS5GT
k0NSUhJXr17l2rVrOpnY+iCRSOjUqRM9evTAx8enRbzfarUalUpV7d+KigrUanW1V0VFhc5Lo9Ho
/F3bCyqv8yqVivLyciHmWCaTiY6FBiCXy+nYsaNQ8UOk7SAK0FaKUqnkxIkT9W5namqq025NRKQt
oNFouH37NklJSQ9U88+OQ/yCAAAgAElEQVTGxgYHBwfs7e0fukjRN1Ti7t27WFlZ6YgHfcMn7t69
S25uLh07dmxT4iM3N5eUlBRSUlJISkpqcHF4La6urvj5+dG9e/dqZXsaikajoby8XOelFXlV/1ap
VNX+VqlUDWo/KdI6kEgk9O3bt9HfHZHmRRSgrZTs7GwuXrxY73ZmZmb079+/3u3KysqIi4vj2rVr
dOrUqcm9C1evXkWhUDQoPis3N5ebN2/i5eWFgYFBg8fIy8vjxo0beHp6tmhsUH5+Pnl5edy7d497
9+5RXFxMRUVFm/dmNIdnQStEk5OTG+wR1WJpaYmdnR22trZYWlq2udjItkJZWRk3b94kIyOD9PR0
0tLS6m0+UBcuLi5CZyJra+sat6kqHMvLyykrK6vzvVZMijx+dOnShY4dO7a0GSINQBSgrZS0tDTi
4+Pr3c7c3Jx+/frVuc2uXbt4/fXXdWJKZTIZK1euZP78+Y22FWqeKqyPjRs3MmPGDLKysrCzs2vw
GFu3bmXy5MmkpKQ0WZxkQ7h58yZJSUkNqlfY1mhOz0JWVhbJycnk5eU98BgGBgZYWlpiZWWFpaUl
ZmZmGBsbi6K0AZSXl5OTk0N2djZ37tzh9u3b3Llzh7t37zbaO+ji4oKHhwfu7u6YmJhUE4/3v8Tb
k4i++Pv7V0sYFGndiElIrRR9SzDVd2M9cOAA48eP57nnnmPy5MkEBgYSHR3Nzp07ee+99ygtLWXJ
kiWNtvef//xno+PRGjpGt27dmDdvXrWWhc1BXFxcjW3pHjU0Gg3Z2dnNIkDbtWtHu3btKCgoIC0t
jdu3bze4HJNarSYnJ0envJFUKkWhUGBsbIyRkRFGRkYYGBhQUlKCRqPB0NAQhULxyCS5yGSyaqEA
UOlNLC0tpbi4mKKiIoqKiigsLKSgoIC8vDzy8/PJycmhoKCgyYSfgYEB1tbW2NraYmtrK8xUpKSk
NMn4IiIA7du3F8VnG0T0gLZSLly4UGONwPuxsLCosx/w1KlT+X//7/+RmpqqIyJUKhWenp7I5XK9
PK0Pg/s9oG2FGzduEBsb29JmNBst5VnQTvneuHFD7weyx5nr16+TlpamI9q1D6jay7z2vUQieWhe
YXNzc6ytrbGxscHCwqLNeZ8lEonQHlLbMtLAwKDaSyqV6vytfUkkEp2/a3tpjwWV33WVSoWhoeFj
X9O0ochkshZJVhNpPKIHtJWib2JGfc8PGo0GpVJJSUmJjgA1NDRk9+7dpKeno1arBW/JwYMHCQsL
IyYmBnt7e0JCQggLCxP6BO/Zs4fw8HCWLVvGa6+9Rrt27fj2229ZsmQJAQEBLFu2DKisORkeHs6u
XbtISEjA1NQUHx8fwsLCCAoKqtHWZ599Vhjj999/r7VbhouLC7/88gv79+9n2bJl7N+/HycnJ/bt
28fq1avZtm0bs2fP5syZM9jY2DBhwgSWLl0qnOPVq1f5+OOPOXz4sNAZxNjYmMjISH744Yd6P/PH
yXvTkp4FuVyOu7s77u7u5Ofnc/PmTW7fvk15eXmL2NOayczMfKAC9bUJo4bsb25ujqWlpfBqDY0x
DA0NkclkyGQynb+rvq/6r/Ylk8keGU+4iEhrp+WvFCLVUKvV9bYw1FKfAJ00aRI7duwgICCA1157
jREjRtC7d28MDQ0JDAwkMDBQ2HbLli1MmTKF4cOH8+WXX3Lv3j3+9a9/cebMGSIiIpBIJGRnZ3P2
7FmmTJnCwIEDycrKwt3dnStXrmBrayuMNXv2bDZt2sTixYtZunQpUVFRfP3114waNYq0tLQas4Kr
jtGxY0emTZsmrJNKpURHR7Nx40bB45uTk8PFixcpKysDEGwLDg5mwIABhIeHs3//fkJDQ7GxsWHO
nDnk5+cTEhKCXC5nzZo1qFQqli9fTnp6Oh4eHvV+3qWlpTV642xsbLCzs0OhUCCRSFCr1chksjbt
zWhNngWtuPHy8iI3N5c7d+6QmZnZ4DI/jyo3b958oP2qlgSC+gWpsbEx5ubmmJubY2FhgZmZ2UNN
spNKpYJwlMvlOkKytmUymazNeV1FRB5HRAHaCmlIWRq1Wl3n+uDgYA4dOsRbb71FaGgooaGhmJmZ
8dRTTzFr1iyGDx8uHHPBggX07duXw4cPC/t7eHgQHBzMjh07mDBhAlA5XTR9+vRaY0fLy8uJiYlh
3rx5hIaGApUtKO3s7Jg5cyZxcXH06dOnTrs7d+6sEw+alJTEBx98wLBhw1i3bl2dn8eMGTNYsGAB
ABMnTuTcuXMcPHiQOXPmsGrVKhITE0lMTKRLly4AQs1BfajJ+yaXy3WEvMjDQyKRYGNjg42NDd7e
3ty7d4+7d+8KZYxasoVnS2JmZkZ2dnajx6kqSCUSCQqFAjs7O9q1a4dCoXhg72ZVD2NNXsnaXm21
goSIiEj9iAK0FdKUAhQqRWhCQgJXrlzh999/548//uDo0aPs37+fpUuXEhoaSmxsLJmZmUycOJHj
x4/r7K9QKDh58qQgQLVj1oZMJuOvv/4C/tf+MT4+ngsXLgD6J1hpuXv3LqNHj8be3p4ff/yx3ptg
1dakUqkUDw8PofvO2bNn8fDwEMQnVCYz6Vu+oyaPYFlZGUVFRc3a2k6kEq03zt3dnYqKCgoLC8nP
zyc/P5/CwkKKior0+o20dTw8PMjOzn7gUlY1odFoKCwspLCwkDt37uDo6IiLiwvGxsYNGkcikWBq
aqpTnUAb0iOiH1OnTiU9PV14L5PJsLa2ZujQobz66qsN/j+pjblz59Ya3/7666/zyiuvNMlx7qes
rIz4+Hj8/PweyvgirRNRgLZCGiJA9YmH03bY8PX1xdfXl7fffpusrCwmT57M8uXLmTRpEsnJyQCs
X7+eDRs2VBsjLS1N5319bdUuXrzI4sWLOXHiBEqlEltbW7p27SrYoy8lJSWMGTOGvLw8zp49i6Wl
Zb373F+30sjISLgx//3334wYMaLaPk8++SRRUVH1ji2TyTA3N+fevXs6yzMyMoTzE2kZpFIpFhYW
WFhY4OrqKiwvKSmhuLiY0tJSysrKdDLB1Wo1EokEY2PjNh0uATBmzBju3r1LYWEhCoUCuVyOWq2m
tLRU+Ay0me75+fkN+h0qlUqSk5NJTk7G3t4eV1fXWmt33o9Go6GgoICCggJBRMnlckGQWltbY2Fh
IcZe1sGZM2cwNTUVZqxUKhUZGRlMmzaNffv28fPPPzdJ2EFkZCS5ubk8++yz1dY5OTk1evzaePHF
F/Hy8uKTTz55aMcQaX2IArQVUpsAlUgk1W4a2lZuNXkF79y5g7u7O6GhocKUtJZ27drx0UcfcfDg
QU6ePCkIyu+++07H01kbdd0ssrOzGTZsGO3bt2fr1q0EBQXh6urK3r17GTt2rN43Po1Gw6RJk7h4
8SLHjh3Tq296fTg6OtbYk1qfigNanJycqgnQGzdu0Llz51aRgCGii7GxcZN5iB4VVCoVWVlZpKWl
kZycTEpKit6/gczMTDIzMzEzM8Pd3R0HB4cGi5+ysjKysrLIysoCKq8nlpaWWFtbY21t3WqSmVoT
/fv3Z9WqVTrLBg4cyMyZM4mPj8fb27tJjuPv71/tOA+bhlx/RR4dxEfOVkhtArS2C3JtCUsODg54
e3uzefNm7ty5U229dkq8d+/e+Pj4IJPJ2LJli842qampPPHEE+zcuVNv+yMiIsjJySEsLIwXX3xR
8EadPXsW0C9sAGDBggX89NNPbNmypdbM+Yby1FNP8eeffwo3PqgUzMeOHdN7DGdn52oCXOuREBFp
CxgaGuLk5ERQUBDjx49n0aJFvP/++4wdO5auXbvqJf4KCwu5cuUKFy5coKCgoFHdyCoqKsjNzeX6
9etERkZy7Ngxzp49S2JiIllZWWJ3o1rQxp5fu3YNqLymDx06FEtLS9zd3XnnnXeE+8mhQ4cICQlh
06ZNdOnShQ4dOjBz5swGzbgdOHCA559/ntWrV9OuXTvmzZun13HHjBnDf//7X3r06IGlpSUjRowQ
Zt2mTZtGVFQU3377LaNHj26yz0ak9SM+YrZCarsgGBsb1zjlrlQqa+01HRoayrhx4+jVqxfTpk2j
Z8+elJSUcPLkSTZu3MgzzzxDt27dAJgzZw7h4eHMnDmT6dOnU1BQwMKFC0lJSWHUqFF62z9gwABM
TEz49ttv8fPzQyaTsXv3bj777DMAveLUNm3axGeffcaECROwsbHh0KFDOp7TwYMH621PVRYuXMi2
bdvw9/dn7ty5QGXYgVKp1NuLI5fLcXZ2riY4U1NT6dChgziVKNImsbKyol+/fvTr14+ysjJiYmK4
ePEi165dq3PWIj8/n3PnzmFnZ0dwcDAdOnTg3r17FBQUkJ+fL1SpaAgajUaI5dWWPbOwsMDGxkbw
kj7uHlKVSsXmzZuRSqV0796dtLQ0hgwZwoABA9i7dy/x8fGsWrWKa9eusW/fPvLy8jh8+DBJSUmE
h4cDMH/+fKZNm8b27duFcfPy8oiJidE5loWFBW5ubuTl5XHkyBFSUlJYtGgR7u7ueh33yJEj3Lhx
g4ULF2JnZ8f06dN54403+O2335g/fz7nzp3Dz8+P9957r1k/Q5GW5fH+BbdCtDFbNWFmZlZt6hcq
BV1t/bqfeeYZTpw4wZw5c1izZo0g/lxcXJg/fz5hYWHCtqtWrUKhUPDZZ5/xn//8BxMTE4YMGcKq
Vav0ir3UYmNjQ3h4OGvXrsXNzQ2JRMKTTz7JhQsXGDhwIKdOneL555+vc4zffvsNgO3bt+tcHLUk
JSXpbU9VHB0dOXfuHHPmzOHTTz/FysqKuXPncuzYMSFRSR/c3NyqCdDS0lIyMzNxdHSsdb+UlBRU
KpVeJZ8eFkVFRaSkpNCpUydMTExazA6R1otcLicgIICAgADy8/O5cOECZ86cqfM3kp2dze7du3Fx
ceHpp5+mZ8+eQOUMjVZM5uXlUVBQ8EDVCrRxpI+rID106BDjxo0DKj+LU6dOce/ePZYsWYK7uztz
5sxBrVbz888/Y2RkxFNPPYWZmRmTJk0iMjISqBStq1evJiQkRBhnwoQJrFq1SgjDOnjwIAcPHtQ5
9pgxY9i7dy9Qef3YvHmz8P+rz3FLSkr47rvv8PX1Ffb58MMPAejatSvm5uY4OTmJSUiPGWInpFZG
YWEhERER1ZYbGRnh5uZGYmJitXUODg74+/vXO7ZGoyE1NRVjY+M6RZI2c93JyanRAiU1NRVbW9ta
PbTNTVJSEmZmZtWKq/fp0wdHR0d++eUXvceKiorSmcoHsLOzo1evXrXuM2jQIG7dulXj/2Nz8ccf
fzBkyBAiIiLo169fi9kh0rZQq9XExsZy4sQJUlNT693ex8eHkJAQnfrAUHl90bb/1L4exEt6PxYW
FoIYtba2blRIQGvD29sbqVQq/F6NjIzo0KEDgwYNEuoiDxkyBHNzc0EoQmUFEXt7ezZv3oyxsTGT
Jk0iJydHuB5rH5j37t3Ls88+y4ABA2jXrh0bN27UOb6xsTFWVlZs376dSZMmoVQqhaQ9fY47YcIE
SktLhYeEnTt3MnnyZMHZMmDAAPr37y8mIT1mPNqPjG2Q2qbfTU1Na+3HnZOTI2S614VEItErkUcq
ldKpU6d6t9MHNze3Jhmnqfj222/57LPPSEhIEGzbt28f58+fr7O+aE106NChmgDNycmhoqJCnIYX
eeQwMDDAz88PPz8/rl+/zu+//y7EHtZEbGws8fHxDB48mODgYEEQSqVSrKyssLKyErYtKioiNzdX
eOnbiKMqWg+pVhwrFApBjFpZWbV5b39wcHCNFUq0KJXKapnqcrkcAwMDQSyamprqfA52dnYYGBjo
eKRNTEzqdFDcXzFCn+Nq68BqERsFiIAoQFsdSqWyxuUmJiZYWVnVmAlfXl5OdnZ2rdPwIv/jrbfe
Ytu2bXh6etK3b1+ys7OJi4tj8uTJzJo1q0Fj2djYYGBgoJNUVVFRgVKpFGuCijzSdOrUiTfeeIPU
1FSOHDnC1atXa9xOrVZz9OhRoqKihASnmlAoFCgUCtq3bw9UXge1YjQnJ6fW62JdFBUVUVRUJITK
GBkZCXVIraysHrnST56enhw4cEDnAfjo0aOUl5fTo0cPLl++TH5+PufPnxe8prGxsahUqjpnbZri
uPogTsY+fogCtJVR24XW1NQUAwMDrK2tayxZERcXh7OzMwqF4pG6qDY1BgYGnD59msuXL3P8+HHM
zMwICAjAz8+PzMzMOveVyWRYWVlhYGCAUqkkOzu7xotmUzzdb9++nfDwcBISEnB0dGTUqFGEhYXp
eMETEhJYvHgx0dHRQsmt5557jqVLl+qUHfr888/ZuXMncXFxDBgwgBdffLHR9omIQOUMx7Rp07h6
9SoHDx6stRJETk4OmzdvplevXjz77LP1FqI3MTHBxMQEZ2dnoDKGMCcnp1GCtLS0lDt37ggVQar2
sdfWjzUzM2uz3rlZs2axdetWFi1axPz580lKSmLVqlUEBATQtWtXQQiuWLGCDRs2kJeXx6xZsxg9
enS9dZ2b4rh1YWpqSmxsLElJSTod8EQebUQB2sqobQpeO23i7OxcowAtLS0VylqI1I9UKuWpp54S
3l+5cqVJxjU0NGz0VN/69euZO3cu06ZNIzQ0lOTkZD788EP+/PNPIiMjkclkpKWl0aNHDwIDA/ng
gw8wMTHh559/ZuXKlSgUCt5//30AvvzyS+bMmcOCBQtYvHgxv/76K9OmTWuKUxUREejSpQseHh5E
RUXx66+/UlBQUON2Fy9eJDExkeeff15ISNEHY2NjnJ2dqwlSrSh9EEFatUC+FqlUKnTX0r4UCkWb
iCcNDAzkhx9+EKqZGBgYEBwczPfffy+0NJXJZDg6OuLl5YVEImHYsGH88MMPD/249TFhwgSmT5+O
r68vRUVFohPlMUFMQmplnDp1qsZWlX369MHKygq1Ws2JEyeaJGhfpOlxc3OrsyNSfUlI2dnZdOjQ
gVdeeYXNmzcLy3/66Sdeeukl1q5dy9y5c9m2bRurVq3it99+w8XFBaic/nd2dqZXr178+uuvFBcX
Y21tzfTp03XiWydPnszWrVvFJCSRh0JZWRl//PEHx48fr7Pmb69evRgzZkyTxGaWlJToxJA2tN1v
fRgZGWFmZibEUFb9tzX2q8/IyMDOzk5nJqRq4k9+fj4SiQQLC4uHflx9KS8vp7S0tNUkrIo8fEQP
aCujtuB77UXawMCALl261NqvV6RluT+7vqFcvnwZpVLJlClTdJaPGDECuVzOiRMnmDt3Lv/4xz/4
xz/+AVTWYUxMTCQ6OhqZTCbcfGNiYigrK6s25T5hwgS2bt3aKDtFRGpDLpczcuRIevXqxZ49e2ot
mXbx4kWSkpIYN25co8uSGRsb4+TkJCTDlJWVkZeXR25urlD6qTG+ltLSUkpLS2vsoiaXyzE2NsbI
yAi5XK7zr0wmExJwDAwMhH8fNtpY2tpoSFm9pjxuXchksjbhaRZpOkQB2oooKyur0WMglUoxMjIS
3ru4uJCTk8OtW7ea0zwRPbh27ZrQneRB0N6s77+Qm5ubExgYyI0bN4BKb+dHH33E5s2bSUtLw8DA
AH9/f1QqlXCjTUhIAKiW0ar1mIqIPEzs7e158803OXfuHPv376/x4To/P5+vvvqKJ598kpEjRzZZ
LU+5XI69vT329vZA5e9FW4f0/7d332FRXdvfwL8zMFQRkCYKUsRGURQUropRVCwR1Bh7QaMYTQyx
x66ohGuL0RhbhGvvV68Go2jAhoo1ClJEkKH3LmVg4Lx/8JvzMs4MRWEYdX2eZx7hnDPn7Dkgs2bv
tdcW1SSVVW+5sSoqKho9IqWsrAwOhwMulwsul4uqqir2/y6HwwGPx2vyQLWwsBCurq4IDQ1t0vPK
g4qKCiwsLGii7SeGAlAFUtcM+HfZ2Niws9+J4sjLy0NlZeV7f5IX9aBmZ2fDwsJCbF9hYSEb3G7Y
sAG+vr5YsWIFPDw80KNHD6ipqcHe3p4NQEWltHJyctCpUyex8xAiL3369EGXLl1w8eJFREVFST3m
zp07eP36NaZOncoGjU2Jy+WyJZlEahfILyoqQnFxsdSV5ppDXUuLMgzTZMFxbRYWFmJLZH5MSktL
8fz5czg7O8ssR0g+PhSAKpD6ht9r43K56NWrFzIyMpCYmMh+An+3RhtpGqI3jDZt2qBVq1YQCoXI
z8+XOuu3qqrqvQPQ7t27g8vlIjAwEH369GG3x8XF4dWrV+wEosDAQPTs2VNsJauCggLExsbC3t4e
ANCzZ09wuVxcvXpVLNezMeveE9IUtLW1MXPmTDx58gSXLl2SGmClp6dj165d8PDwgJOTU7O3SU1N
DWpqamJpM2VlZSguLmYfb9++/SgDtk8RwzDIycmhAPQTQgGoApHVA1pXQnfbtm3rLBpMmk9BQYHE
Nh6PJ5YuIU1+fr7Uove6urqYMWMG5syZg+3bt8PExARjxoxBQkIC5s2bBzMzM0yYMAEA4Obmhh07
duCvv/7CwIEDER4ejoULF6K8vJxdblVTUxOrV6/Gjh07YGVlhUGDBsHf3x+//PJLE7x6QhrP0dER
HTt2xNmzZ6XmhlZWVuK///0vXr9+jXHjxsm9eLyo/FPtXtjq6mq2pmhZWRlKS0vZf9+nYD55f/WV
7yIfF5oFr0BiYmKQlJQksd3KyqrJViYiTSM/Px+PHz+W2N6hQwd07dpV5vO++OIL3LlzR+q+zp07
49WrVygvL8eaNWuwZ88eCAQCqKmpoX///ggICICpqSkAIC0tDQsWLEBQUBBKS0uhra2N1atXo6Ki
Aj4+PkhPT4eenh4YhsHSpUtx5MgR5ObmQl9fH5s2bcL8+fNpFjxpMQzD4M6dO7h27ZrMmfK6urqY
OnXqB9WobG7V1dUoLy9nJymJ8kFF3wuFQgiFQjbHs3aONmkcExMTWFtbt3QzSBOiAFSBPH/+XGox
dFtbW7b+HWl51dXVuH//vsTQnJKSEvr3719vD2hDCYVC8Pl8mJqayjxnaWkpW4S+rgLaVVVVSExM
hIWFxUdbaJt8elJTU3Hy5EmJJW1FuFwuRowYgQEDBnwyv7fV1dWoqqpCdXU1GIZhl8EUBay1l7Ak
NRoyskQ+PhSAKpCwsDCpBZwdHR3Rpk2bFmgRkSYpKQkxMTES27t06cKuL08IaZiKigpcunRJ6oiC
SLdu3TBhwgRa4paQTwgtN6BAZOUTvU9RX9J8kpOTJbZpa2sr9FAhIYpKRUUF48ePx9SpU2X+rYuO
jsavv/4KPp8v38YRQpoNTUJSENXV1TJryVEAqjgqKyulrrJiYmKC6upqhVwVRZFUVFQgKioKcXFx
sLS0hI2NTZMNrVVUVOD169d1HqOjoyP3OqhpaWnIz8+XuV9XV1chUmwKCgqQmpqKzp07t0hB8B49
esDU1BQnTpyQ+iGvsLAQ+/fvx7BhwzBw4MBPZkiekM8VDcEriLKyMty9e1diO4/HE1uznLQsgUCA
27dvy9zP5XLZSQbNVVBaHpqj8POZM2cwe/ZssQCex+Ph559/xtKlSxt9vmPHjqFNmzb48ssvAdQU
3q9rAhhQswrU8ePHG32tDzF37lz88ccfMvd7eXnh4MGDcmxRjZSUFOzcuRM7duwAABw9ehSenp7g
8/ktmkpSVVWFq1evypysB9Sku0yaNImG5An5iFEPqIKQVXiYej8Vi6qqKtTV1WWWzBJNKACar6C0
PDR14ecrV65g0qRJGDNmDDw9PeHo6Ijnz5/j9OnTWLZsGQQCAVavXt3g86WlpWHGjBkICAiQ2Dd3
7lyMHz9e6vNESzW2hOvXr0vttWuplak2btyIoKAgNgC1trbGkiVLmnx98MZSUlLCqFGjYGlpibNn
z0qtw/nq1Svs3LkTU6ZMoQohhHykKABVELKG32nmn+KxsrJCRERESzej2TVl4efz589DV1cXR48e
Zc9nYmKC4cOH4/79+zh27FijAtC6dOrUCUOGDGmSczWlIUOGKPSwsaOj4wctI9vUrK2tsXDhQpw4
cQKJiYkS+4uKinDgwAEMHToUrq6u4HI/rSkNgYGB7IeD2ng8HlRUVKCrqwtbW1vMmjWrWVaPaqgJ
EyZIrWLA4XCgoqICbW1t9OrVC56ennKvWV1ZWQk3NzcANaNTwcHBcr0+qdun9T/2Iyarp4zKcSge
Y2NjWFtbf5RD643VVIWfGYZBWVmZxEQ7ZWVlnD17Fn5+fmL1IK9evYr+/ftDW1sbnTp1EltCMDo6
GsOHDwcA+Pj4sEPwjXHx4kUMGDAAwcHBMDMzg6OjIyIiImRuB4ATJ07A0dERWlpa6NSpE7y9vVFc
XFzvORvq/PnzcHBwkFjgwMvLC9999x37/ahRo3DkyBFs374ddnZ20NHRweDBgyWuVVBQAG9vb9jZ
2cHExATz58/Ho0ePAACLFi3CxYsXkZGRAQcHB1y+fBmBgYFwcHBAeno6e47U1FTMnDkTpqam0NHR
wYABA/D333+LXaeh7XkfOjo6mDdvHgYOHCh1P8MwuH79Ov744w+pFUQ+Zmlpabh165bE48aNG7hy
5QqOHz+OFStWwMrKqs60oOb24MEDqe28efMmgoKCcPbsWaxYsQLm5uYSvzvNrbq6WqxNRLFQAKog
ZAWg1AOqmExMTODi4oKuXbvCwMDgk0yVMDExEVum8EPMmDEDVVVVcHBwwIYNG/DgwQN2eVNHR0eM
HTuWDeiPHDmCkSNHQlNTEwcOHMDy5ctx+vRpDB48GAzDwMjIiF2S1M3NDXPmzGl0e3JycvDw4UPM
nDkT/fr1g66uLszNzWVu3717N6ZNm4ZevXrh9OnT+PHHH3Hy5En069ePXT9c1nMbKjs7G8+ePZNY
J/zVq1dik6siIiKwZs0aBAQEYMaMGfDx8UF4eDiGDh3KjqSUl5fDw8MDFy9exKJFi7Bz505ERUXB
3d0dRUVFGD16NPUPiqwAACAASURBVGxtbaGlpYXFixfDxsYGeXl5ePbsGXuO4uJi9OvXDzdv3oSP
jw+OHj0KQ0NDuLm54dSpU41qz4dQUlLCyJEj8c0338j8QBQfH4+dO3ciOjr6g6+niJSVlWFgYAB9
fX1oa2uL9aQXFxdj7NixChGAGxkZwdzcHGZmZjA1NRXLIRcIBBg7dixycnJasIVEoTBEIbx8+ZIJ
CgqSeCQmJrZ000gDVVdXMwKBgMnPz2eysrKY3Nxcpri4+KN8lJeXN/n9CQ4OZjp37swAYAAwrVq1
Ytzd3ZmgoCD2mJKSEsbQ0JBxdnYWe25ISAgDgDl+/DjDMAyTmprKAGACAgLYY2JiYthzczgcqY/n
z58zDMMwBw8eZAAwmzdvFruOtO3Z2dmMuro6880334gde+7cOQYA8+uvv9Z5Ti8vLwYAo6mpKfEY
O3Yse9zevXsZAEx2drbY811cXJghQ4aw33fo0IExNDRkioqK2G3+/v4MACYsLIxhGIb57bffGA6H
w4SHh7PHZGVlMUZGRszevXvZdnXo0IHdf+TIEQYAw+fzGYZhmGXLljE8Ho+Jj48Xa4+NjQ1jZGTE
CASCBrenqRQUFDB79+5lli1bJvNx6dIlprKyskmv2xIOHDjA/j6/+/+hqKiIWbFiBbsfAPPbb7+1
SDtNTEzYNly5ckVif2hoKKOjo8Mec/r0abm1rby8nL0ul8uV23VJw1AOqIKQ1VNAQ/AfD1HOE/3M
pHN1dcWrV6/w8uVL/P333wgJCUFwcDACAwOxdu1a+Pj4IDIyEllZWZg2bZrEsKKmpiZCQ0MxderU
Oq8zevRouLq6St337oQfWcfV3h4eHo6ysjLMnDlT7Jhhw4ZBRUUFd+/exY8//ljvOVeuXCmRA9qx
Y0eZr6MuTk5OYrm5nTt3BlBTqggAnj59ChsbG9jZ2bHHGBgYICMjo8HXCAsLg4uLi8QkHw8PD/j5
+SE2Nha2trYNak9T0dbWxrfffosbN24gJCRE6rKWoaGhiI+Px+TJk+WecygvWlpa8PPzw//+9z92
UQxpvb8VFRV49OgRbt++DT6fD2trazg5OaFv374Sxz558gRPnjwBAAwfPhyGhoa4fv06bt68CQ0N
DfTv3/+90l369esHNzc3nD17FgCQmZkpcczDhw/x119/ITU1FRUVFWjTpg2cnZ0xduxYmaOAMTEx
CAkJwcuXL1FVVQVzc3NMnDixwZPS/v77b8TFxQGo6WWfPn36JzmSpcgoAFUQFICSTx3DMOBwOLC1
tYWtrS0WLlyI7OxseHp6YuPGjZgxYwYSEhIAALt378Zvv/0mcY6kpKR6r9O/f394e3s3qE2yFg+o
vT0+Ph5ATUpCbVpaWnB0dERqamqDzrlq1aomm4T0bnks0Zu0qApDVFTUB8/4j4+PlzqZa9CgQfDz
80NqaiobgNbXnqbE5XIxbNgwdOzYEadOnRLLwxVJT0/H7t27MXLkSPTr10+hJ399iA4dOrAB6LuT
sEJDQzFy5Eip92fSpEnYs2cP9PT02G1//vknNm7cCADw9/fH3r178fTpU7HnjR8/HgEBAWjVqlWD
2ygUCtncYwBs/jZQ8/sxffp0nDx5UuJ5u3btgouLC/73v/+JrQRYVVWFn3/+GZs2bWLTX0TWrl2L
9evXY+3atXW26a+//oKHhwebd37w4EEKPlsA5YAqCApAyacqMzMT6urq2LZtm8Q+AwMDbN68GUDN
G6YokDl8+DAqKiokHleuXGnStsmaOV17uygPVtpM38LCQnTp0qVB56yPKEh6Nx88Oztbak9fXfT0
9JCXlyexnc/nIzc3t0HnMDIykvmaAUi8bnmzsrLCokWLZNZ+FQqFuHz5Mv744w+JiV2fgjt37oiN
Ejg5ObFfh4WFiQWfWlpasLKyYn/HTp8+jWHDhknkG4ssWLAAT58+hbW1Nbp3784+79y5c1i5cqXM
Np0+fRqbN2/G5s2bsXHjRixduhQdO3ZkV7CaPXs22zsOAL///jsbfGpoaGDIkCFwcHCAsnJN39jd
u3exYcMGsWvs2rUL69atY4PPdu3asbnWVVVVWLduHU6fPi2zjU+fPsWECRPY4HPbtm1sTjmRLwpA
FYSsALQlViQhpCkZGRmhW7du8Pf3lzr8Jhr26927N2xsbMDj8XDkyBGxYxITE9GvXz/2jUX0hlh7
5nxz6d69O7hcLgIDA8W2x8XF4dWrV+jZs2eTXEc0hF37HhUWFuLNmzeNPlf37t0RGRkpdq6ysjL0
7t0bmzZtAlBzD+u6f/b29rh//77EKk6BgYHQ0dFp1ASr5tKqVSvMmjUL7u7uMqtSxMXF4ZdffmF/
zz5G8fHxmD17Nr755htMnjwZAwYMwODBg9kPKxoaGvjiiy8A1PQquru7s8HnwoULkZeXh9evXyMi
IoJdZODp06dSyzwBNb8rhw8fRmRkJF68eCE26Wz//v3sqMC7jh07hrVr17I9kTt27GBHLSZNmoRD
hw6JHZ+RkcGuhhYcHIwbN27gyZMn2L9/P3vMP//8w36dnZ0NHx8f9vuAgADw+XwkJCSwvbcA8O9/
/1tq+/h8Pr788kt2MYxVq1a91yIYpGnQELwCqK6ulvlGQAEo+RT4+Phg4sSJ6NWrF7y8vNCzZ0+U
l5cjNDQU+/btg7u7O6ytrQEA3t7e2LlzJ77//nvMmzcPRUVF+Omnn8Dn8zFixAgAYIulBwYGwtTU
FMOGDWOvdffuXZn/b9TU1PDtt982qu3m5uaYM2cOtm/fDhMTE4wZMwYJCQmYN28ezMzMMGHChPe5
JRKcnZ3B4XCwePFibNu2DSUlJVi3bt17jYIsXrwY+/btw5QpU7B7925wuVxs374dZWVlbA+WtrY2
MjMzceLECak5gWvXrsWpU6cwbtw4/PrrrzAwMMDRo0dx7NgxmW/wLYHD4cDFxQUdO3bEyZMnkZWV
JXFMeXk5zp49i+fPn+Prr7+Gjo5OC7T0/WVnZ0tddAGo6XE/ceIETE1NAdQEbKKZ5tbW1ti+fTsb
nNvY2GDnzp346quvANSMNPz0008S5xwwYAA8PT3Z7ydOnIiDBw8iJCQEQqEQd+7caXT+8pkzZ6Cl
pYVt27ZBW1sbAODr6wtfX18IhUK217O4uFisZ7Z2HnFoaCg729/V1RWzZs1i9y1ZsgRt2rRB9+7d
xXKfRRiGwYgRI9gPZZ6envD19W3UayBNiwJQBfBuHouIkpLSJ1dcmXye3N3dcffuXXh7e2PHjh14
+/YtgJpJQUuXLhV7I/Dz84Ompia2b9+OvXv3Ql1dHYMHD4afnx/7xqWpqYl58+bh0KFDCAwMFFve
8/Lly7h8+bLUdujp6TU6AAVqhv20tLTg7e2Nb7/9Fmpqaujfvz8uX77cZKsrdezYEXv37sXSpUvR
p08fqKurs0PMotzYhjI0NERISAhmzZrF5mnq6+vj0KFDbErB9OnTcfz4cUybNg2rV68WGxoFAAsL
C9y8eRNz5sxBjx492G3bt2/HokWLmuAVN6127drhxx9/xJUrV3D//n2px8TGxmLHjh0YPnw4/vWv
f33Uf18NDQ3h4uKCZcuWiQ2/h4SEsF8PGjRIomd48ODB7NevX79GeXm5RP6jtAUJHB0d2XPL6gE9
dOgQu3R0ZWUlSkpKEBUVhVWrViE5ORl//PEH8vPzce7cOfY5AoEAt27dwpUrV3Dr1i1ERkaK5Q7X
/jo2Npb9ulu3bmLX1tDQwPfffy+1XUBNACrKlwXATkAiLYfWglcAJSUluHfvnsR2NTU1DBgwoAVa
REjzYRgGiYmJUFNTq3OWcnV1Nfh8PoyNjaGuri71mLKyMgiFwiZZrakhhEIh+Hw+TE1Nm61Gb1VV
FRISEtChQ4cmyQHPzc1Ffn4+LCwspA5T5+bmQkdHp86FFXJzc1FaWsr2sim62NhYnDt3rs5Z+O3b
t8dXX32lsK/p4MGD7IclR0dHtog7j8eDmpqazOB5xYoV2LJlCwBgzZo1bMqFSHV1NVRVVdlexrS0
NBgbG2P9+vXsMPbKlSvx888/iz3P19cXa9asAVCTIyqaJGhqaoqUlBQANUvujhw5UqJNjx49YoNk
DQ0NZGdnQ0NDA69fv8awYcPEPmBZWlrC3t4eFy5cAADY2dkhPDwcALBs2TJs374dQM1iCr/88kud
91AgEEgE10pKSuyI46lTpzBp0qQ6z0Gaz8f78e8TIqsHVDQkQcinhMPhwNzcvN4SOVwuF5aWljKD
TwBQV1eXW/AJ1PyftLKyatYFIpSUlGBlZdVkExD19PRgZWUlM8DU09Ord1UvPT09hQ3UpOncuTMW
L15cZ35uamoq9uzZg3PnzkmdKa5IlJWVoa2tDW1tbWhoaNTZc+vs7Mx+LS1/OCUlhQ0+dXR0pPbg
S1v6NC0tjf3awsKiUe2vXRqptLSUzesUpbMANQFlYmIi4uPjxUZEar/W2sP+71afAIAbN27g1atX
MlPaXFxccOnSJfb75cuXo6ysrFGvhTQdCkAVgKyZiBSAEkLI+1FXV8fkyZMxc+ZMNmf4XQzD4PHj
x9i6dSuCg4ObZOWmllY7AP3f//4nEajt2bOH/bp3795Sz3H58mWxagmVlZX4888/2e/fTdeoC8Mw
2Lt3L/s9l8uFra0tUlJSEBUVBaAmPWTbtm1sCbPaPaK1g8naw+5BQUFiHxyeP38ONzc3dO3aFXp6
emJpOUDNB98rV67gyy+/hIeHBwAgOTmZ7S0m8kcBqAKgAJQQQpqHtbU1lixZIpYn+S6BQICgoCBs
2bIFDx48kEt1hebStm1bNnWrtLQU/fv3x9GjRxEcHAxvb292CFtZWRlbt26Veo63b99i6NChuH79
Ou7fv4+vv/4aycnJAGqCz9q1PGvbsmULJk+ejMmTJ2PSpEn46quvYGdnh/Xr17PHDBw4ENra2mK9
7jk5Obh8+TIYhkFYWBgWLlzI7qtdQmvAgAFs0FxYWAg3NzdcunQJx44dE5uQNGzYMGhqaoq1jcPh
sKMlW7duZd9ft27dyr42Il+UA6oAUlNTERkZKbHd0NAQ9vb2LdAiQiRVV1ejpKQEb9++RXl5OQQC
AQQCASorKyEQCFBeXo7q6mpwOBzweLx6h3XJ501FRQUWFhYSReybU2JiIi5cuID09PQ6j9PR0cGg
QYPQu3fvFusIqJ0D6uzsjAcPHjT4ucXFxRg1ahTu3LkjdT+Xy8W2bduwePFidlvtHNB27dqJDbmL
KCkp4dKlS2IrItXOAa2PqakpHj16xKbfDBw4UKyWaatWrfD27Vv274doglRBQQGb9vL48WO4urqy
ExnfZWxsjEePHsHExEQsB5TL5Yp9sPjhhx/Y3uBJkyaJlZoi8kEBqAJISkoSm50nYmxsLLWcRG0V
FRWIiopCXFwcLC0t2Zpqza2goACpqakwNjYWW6WiKc/duXNn8Hg89vsuXbpQr7AcVVRUIC8vD3l5
eSgoKEBJSUmjC6ITUhcOhwNnZ2e55vFWV1fjwYMHuH79er35f61bt2Z73erKRW4OHxKAAjUT9Fas
WIEbN24gJiYGDMOAy+Wie/fu2LNnD/r16yd2fO0AdO3atbCwsMCPP/7IDnObm5vj8OHDbL1REVkB
qLKyMpSUlKCurg5zc3NMmDABM2bMEFsONy0tDd988w2CgoLYbb169cKhQ4ewdetWtu7vhQsXMHbs
WPaYN2/e4Ntvv8XNmzfZoJLD4WDs2LHw8/NjUwTqCkBzc3NhZWXF9rDevXsX/fv3b8wtJh+IAlAF
wOfzxcpLiLRv3x42NjYyn3fmzBnMnj1bLNeFx+Ph559/fq/iuseOHUObNm0atN7vnDlz4O/vj4kT
J8pcdeLd86WkpGDnzp0yix+LHD16FJ6enuDz+TAzM4O/vz/mzJmDlJQUibW8G6uhbfhclZaWIiMj
A5mZmQo/MYN8Gjp16tToSS1NobS0FNevX0dYWFi9S4byeDw4ODigX79+bBmrj0lubi74fD66desG
DQ0Nqce8G4Bu3LgRVVVViIqKgo6OTrNOQsvIyEBSUhI6duwotjxofQQCAWJiYsDlcmFhYdGoJUJJ
y6McUAUg649fXTMdr1y5gkmTJmHo0KG4ePEikpOT8eeff2LChAlYtmxZowvspqWlYcaMGVKLOL+r
pKQEZ8+exRdffIELFy5IXd1G2vk2btyI8+fP13t+Uc6WrIkDH6KhbficVFRUgM/nIywsDKGhoYiL
i6Pgk8iNrIBIHtcdM2YMli5dytY5laWyshJhYWHYsWMHfv/9dzx48AClpaVyaumH09PTg4ODQ6Pv
tZKSEuzs7Jq9AkLbtm3Rp0+fRgWfAKCqqooePXrAzs6Ogs+PEI1nKgBZndCi5QalOX/+PHR1dXH0
6FF2+MrExATDhw/H/fv3cezYMaxevbpZ2nvu3Dm8ffsW+/btQ48ePRAQEFDn+sCN5ejoKLUQMmla
eXl5SE5ORlZWVrMOrVdWViIpKQlpaWlo27YtzMzMmqzE0LuEQiFevXqFgoICtG/fXiGWi2wJubm5
dX6I0NLSavSbfXNo3bo1cnJy0KZNmxZb9U1fXx9Tp07FwIED8ffff0vNx68tMTERiYmJuHz5Mrp0
6YJu3bqhW7duzfKBmZBPGQWgCuB93vwZhkFZWRnKy8vF8qeUlZVx9uxZJCcno6qqip0IcvXqVfj6
+iIiIgKGhoYYNWoUfH19oaGhgejoaEycOBFAzZKJ58+fx5UrV2ReOyAgAA4ODujWrRvc3Nxw8OBB
/PTTT2yPrbTzde7cGRcvXkRRUREcHBywfv16eHh4YMSIEZg0aRKuXbuG4OBgzJo1Cy4uLli/fj0C
AwPFatS9ePECkyZNwosXL9C1a1csXbqUXQbx/Pnz8PPzQ3BwsNgye15eXuDxeNi7dy8WLVoktQ31
3R+RrVu3wt/fH8nJyTA3N8ewYcMkjlF0VVVVSE9PR1JSkswk/rqoqKigVatW0NTUhJqaGlRVVaGi
osIWd66qqgKPx2MDzP/+97/47rvvxHqLlJWVsWHDBvz444+Nvv6pU6egq6srMQs3OTkZCxYswIMH
D8Ty+nr37o2DBw/Cysqq0df6mP3www84fPiwzP0zZ85kC4nLk6j2pp+fH3g8Hs6cOSOWbtOS2rdv
D09PT6SnpyM4OBgRERF1/m0WDU+LSgmZmJigY8eOMDc3h7m5ucQsbEKIOApAP1IzZszAyZMn4eDg
gG+++QbDhg1jZ2y+24N45MgRzJw5E25ubjhw4ACKi4uxbt06hIWF4f79+zAyMoKXlxe8vb3h5ubG
rrctTWxsLO7evYvdu3ez7Zg4cSKuXr3K5npKO5+uri6eP3+OiIgILF68mM1tDQ8Px8uXL9G6dWuM
GDECRkZGyMvLw7NnzyRq8o0fPx7Lly/HqlWrcObMGUycOBECgQDTp09HdnY2nj17JlHS6tWrV+yk
rNGjR0ttQ333h8PhYP/+/VixYgXWrl0LJycnvHjxAhs3bkROTg6OHTv2gT/N5ldRUYHk5GQkJSXJ
XPhAGg0NDejp6aFNmzbQ0dFp1AS3K1euYObMmRgzZgw8PT3h6OiI58+f4/Tp0+yKKo3ppU9LS8Pc
uXMREBAgNtyWnp7OfpDYvHkzRowYAVVVVQQGBmLz5s347rvvEBoa+lEvu9hYot7E69evSx1Jad++
fYsMWe7YsQNBQUFs8Nuc6Tbvy9jYGNOmTUN2djbu37+PJ0+eQCAQ1Pu8lJQUpKSksLO627Rpg7Zt
28LIyAhGRkbQ0dFB69at0bp162YbAfgQ48ePZ/8mWltbt3BryOeAJiEpgPj4eKlr65qamkqsd1tb
SEgI5s+fz05gatWqFQYNGoQFCxbAzc0NQE2ivYWFBSwtLcVmUd68eROurq44fvw4pk6dirS0NLRv
3x4BAQFi9dTetXLlSvzyyy9IS0uDnp4eBAIBjI2N0bdvXwQGBrLHSTvf3LlzERQUJLbKRvv27VFR
UYG4uDh2nW9Zk5BqL/8GAEOHDsXr16+RkJCA/fv347vvvkN2djb09fXZYwYMGABVVVXcuHFDahsa
en8mTpyIyMhIvHz5kj1m//79yMjIwIYNG2Ter5ZWXl4OPp+PlJSUeidaiGhpabFvnB/Suztr1ixc
unQJiYmJYr30QqEQnTt3hoqKitTqD7LI+h3t3r073rx5g6dPn6JLly5izzl58iSmTp2KHTt2iJWc
+dTNnTsXf/zxB1sWS1FI+xug6MrLy/Hs2TOEhYUhIyOjSc7J4/HA5XIhFArBMAyUlJSgoaGhkIEp
ATQ1NeHq6oquXbu2dFM+KdQDqgBkvUHUFzC4urri1atXePnyJf7++2+EhIQgODgYgYGBWLt2LXx8
fBAZGYmsrCxMmzZNrN4aUPOfKjQ0FFOnTm1QO6uqqnDkyBGMGjWKzR9TVVXFlClTsG/fPiQmJr7X
MFqvXr3Y4LMu787OnzBhAubOndvgGnTSNPT+uLi44OzZsxg4cCDGjx+PESNGYN68ee993eZWWlqK
hIQEpKWlNSjFQ0VFBe3atUP79u2bbOhQHmkicXFxiIiIwLZt2ySCTwCYMmUK8vLyxMqZpaamYvXq
1QgODkZxcTG6d++OdevWYciQIewxo0aNwoQJE5CcnIzjx4+jsLAQw4cPx/79+3H16lX8/PPPSExM
xLhx47BkyRJ2qcFRo0Zh9OjRiIuLw5kzZ6CkpISRI0di3bp1YvUuX716hZUrV+L58+fIzMyEubk5
xowZg7Vr17JlY6Slp2zZsgVFRUX46aefcOPGDeTk5KB79+7YtGmTRHmchmhI6orodY0fPx7Z2dk4
cuQIkpOT4eDggF9//VXs3hYUFGDdunW4efMm8vPz4e7ujlmzZqFPnz5SU2C4XK5Euk1Dfz4NaU9T
UFNTQ9++fdG3b1+kpaXh2bNn+Oeffz5oot67oxDV1dV1rltPWlZ2djYOHz6MH3/8UerSpeT9UACq
AGTVtpS1QpIIwzDgcDiwtbWFra0tFi5ciOzsbHh6emLjxo2YMWMGu6TZ7t27peZ8JSUlNbid165d
Q3p6Oi5evChWZJxhGDAMg4MHDzZ69j0Advm1+gwcOFDs+9pvWO+rofdnwYIFEAgE2LVrFxYsWAAA
sLOzw86dOzF48OD3vn5TKykpwZs3b+ottC2iq6sLU1NTGBoaNvkQtTzSRMLCwgBAoqZhbaKfF1BT
oLtfv35gGAY+Pj7Q19fH0aNH4ebmhhMnTmDy5MkAgIiICDx79gympqZYsmQJ/vnnH+zduxcJCQlI
SEjArFmz0KZNG6xevRqVlZU4ePAg+7x79+6ha9euOHToEIqKirB48WK8fPkSN27cgLKyMpKSkmBv
bw9HR0esWbMG6urquHDhAn7++Wdoampi1apVAKSnpwgEAjg5OSEvLw+zZ89G3759cfbsWbi6uuLy
5csNKqFWW0NSV0Sv68WLF9DS0sKsWbOgoqKCzZs3Y+jQoUhKSoKKigrKy8vh4eGBhIQE+Pj4QEtL
C3v27IG7uztev34tNQXm3r17Yuk2jfn51Nee5tCuXTu0a9cOI0eORFJSEqKiohAdHS21Egj5tFRX
VyMmJoYC0CZEAagCkLVijKzl4EQ9Jj4+Pli+fLnYPgMDA2zevBlXr15FaGgoG9wdPny4wT2dsvj7
+0NXVxeHDh2S6LVds2YN/P39sWHDhkbPZm1o4FO7qDBQ8+YJ1CT/P3/+nD2mtuzs7Dprh4p6pRpy
f5YsWYIlS5bg5cuXuHr1Kvbu3Ythw4YhNTW1xWsDFhcX482bNw16I+RwOOxs9ObMvXN1dcW1a9cw
f/58+Pj4wMfHR2aayPLly+Hs7CxWkNrKygqurq7sMPq4cePg7e2Nf/3rX2xR6ocPHwJAnakqtW3a
tAlpaWmIiYlhey09PDxga2uLRYsWYdy4cWzwIhQKce3aNejq6gIAbt26hVu3buHq1avsJKiUlBQc
PnwY+/fvZ3+PuVwugoKC2HtrZmYGR0dHnDhxAp6enrh9+zYsLCxw+vRp9ndz4sSJaNeuHUJDQ8Xa
W15ejpcvX7IjBNu3b0dMTAyuXbuGYcOGAajpDUxMTMSiRYskAlBpBd7d3Nxw4cKFBt2v2ioqKvDw
4UP2nFpaWpg9ezb++ecfODk54dChQwgNDcWLFy/YXsiBAwfCzs4OJ06cwPz583Hy5Em8efOG/b92
7949sWs05udTX3uaE5fLZScbjRw5Evn5+UhISACfzwefz0dmZiYt2vAJkueqXZ8DCkAVgKyA7d1J
OCJGRkbo1q0b/P394enpKRH8PHnyBEDNDGB9fX3weDwcOXJELMBKTEzElClT8MMPP2DSpElsQCkr
6M3KykJgYCBmz56Nr776SmJ/UlISFi5ciAsXLmDixIlSz8fhcD5ojeVbt25h9OjR7Pd//fUXjIyM
0L59e/ZNKDMzk31TLywsxJs3b8QC0HfbYGNj06D7s2DBAlRWVuLAgQNsj7OlpSW+/vprREREtFgA
Knrjy8nJqfdYJSUlmJiYwMzMTCyQb07NnSYiCvKKiorEhpBlCQsLg4uLCxvciHh4eMDPzw+xsbGw
tbUFUJNbKgo+AaBHjx5ITk6Gq6sru619+/bIysoSu/7o0aPFAnsHBweYm5vjyZMn8PT0xPTp0zF9
+nQANb+jsbGxeP78OXg8ntiiEoBkesrNmzehp6cHVVVVsXtlbW2NO3fuIDMzU+x3ceXKlRIfFjt2
7FjvfZLGyclJLKAVrTYjGjp++vQpbGxsxIbADQwMGpU32ZifT33tkSddXV3o6uqiV69eAGo+CGdl
ZSEzMxOZmZnIyclBUVERiouLUVxc/FGvNf+5cnZ2Zn/3SNOgAFQByBouqmvmpY+PDyZOnIhevXrB
y8sLPXv2RHl5OUJDQ7Fv3z64u7uzMxm9vb2xc+dOfP/995g3bx6bQ8bn89mhTNEbZmBgIExNTdne
FZHjx4+jotJAIQAAF5dJREFUsrKSfeN817Rp07B8+XLs378fEydOlHo+bW1tZGZm4sSJE+jbt2+j
Vz+ZN28eNDQ0YGdnh//85z/473//iwMHDrDL+XE4HCxevBjbtm1DSUkJ1q1bJ3FvpbWhIffHyckJ
M2bMQNeuXTF27Fikp6dj37590NLSQt++fRv1Oj4UwzDIzs5GQkJCg95slZWVYWZmhg4dOsi91mJz
p4mI3vAjIyNlpnIkJSXBwMAA6urqiI+PF8slFBk0aBD8/PyQmprKvsmYmJiIHcPlctG2bVux3ylp
oxfSinYbGRmxkwWrq6uxefNm+Pv7IykpCUpKSujRowc7IaW2d19TQkIC8vLy2N7j2ng8Hvh8vlgA
umrVqiabhPRu749oiF6Uqx4VFfXBw5ON+fnU156WpKqqClNTU5kF3AUCAYRCIQoKCvD27VuoqKh8
VOXcPjeamppU6L4ZUACqAGT1RgkEArFJGrW5u7vj7t278Pb2xo4dO9iaju3bt8fSpUvFcjH9/Pyg
qamJ7du3Y+/evVBXV8fgwYPh5+fH9q5oampi3rx5OHToEAIDA1FSUiKWAxYQEABLS0uZwZaenh7G
jBmDs2fPIjo6Gt26dZM43/Tp03H8+HFMmzYNq1evxubNmxt1n7Zu3YoxY8agtLQUGhoa2LFjB7y8
vADU9Ors3bsXS5cuRZ8+faCuro5Fixaha9eubIADQGobGnJ/pk2bhpCQECxbtoydTW1jY4M7d+7I
7Y2jsrISaWlpSEpKqncNa6Dmg42ZmRlMTU1l5hk3F3mliTg4OACoWcdZWvmwsrIy9OvXD1VVVUhO
ToaRkRGbulGbKJCvPZFJVmpMffLz8yW2ZWdnszmvGzZsgK+vL1asWAEPDw/06NEDampqsLe3lwhA
301PMTAwQGVlJV6/fv1ebXuXKDhtbOqKNHp6elJXUuPz+Q0ufN+Yn8/HTFVVFaqqqlQrlHzWPp/C
eApMVVVVZh7ku0NytTk4OODevXsoKipCQkIC0tPTkZKSgn//+99ib548Hg8+Pj4oLi5GfHw8cnNz
8eeff8LFxUXsfPv27UNRURHy8/Ml6j2+fPlSaqmo2s6cOQOGYdh8vHfPZ2dnh7S0NOTk5MDHxwdA
zQSiAwcOiJ1nxowZYBiGnVE/e/ZsMAyD6dOno7CwEK9fv0ZhYSEWLVok9rx58+ax+wsKCuDr64uD
Bw+yJZgASG1DQ+4Ph8PBf/7zHxQWFiI6Ohr5+fl4+fIl7O3t67wnTaGwsBCRkZG4c+cOXr16VW/w
qaqqii5dusDFxQUWFhZyDz4B8TQRaXmptdNEaqdB1JaYmIh+/frh9OnTACA1rcPc3Bzjxo3D1q1b
ERwcLHGdX3/9FSkpKZg8eTKUlJRgb2+P+/fvSwSJgYGB0NHRaZKVk0JCQsQCyZiYGPD5fDZYDgwM
RM+ePeHr6wsnJyeoqamhoKAAsbGx9Q7N2tvbIy4uDvfv3xfbvnbtWowePRrl5eWNamvt1BURUepK
Y3Xv3h2RkZFi5yorK0Pv3r2xadMmAPWn4cjj50MIUQwUgCoADocjs3u/IUOsHA4H5ubmaNu2bZ3H
cblcWFpaQl1dXeYx6urqUicuvC9p59PT03vv3iVlZWVYWVnJDKqUlJRgZWVV7yxYaW1oyP3R1NRE
165dG5Rv+CFKSkoQHx+Pe/fu4eHDh0hNTa03OFFXV0e3bt3g4uICMzOz977HTcXHxwfJycno1asX
NmzYgEuXLuHMmTP44Ycf8N1337FpIoaGhvD29kZwcDC+//57dib51KlTZaaJ1J6sdOTIEVhbW+Pr
r7/GwoUL8ddff+H48eNwd3fH+vXrYW9vz9ZqXbt2LQQCAcaNG4fw8HCkp6djy5YtOHbsGDv7/ENF
Rkbihx9+QGpqKp49e4bJkyejV69emDRpEoCaSUAvXrzAX3/9hdLSUoSFhWH48OEoLy+vd3WqFStW
QEtLC15eXjh8+DCSkpKwe/du+Pr6on///o3O7a2duvL48WPcunUL7u7u7zWLfPHixVBRUcGUKVMQ
GRmJ6OhoLFiwAGVlZexSvbVTYGqPTIjI4+dDCFEMNASvIFq3bo2ioiKJ7dnZ2TLziMino6qqCgUF
BcjLy0NOTk6jagxqaWmxH0AUqei4vNJENDU1cfnyZSxduhR79uzBrl27ANT0BHt5ebElgQDAwsIC
N2/exJw5c9CjRw922/bt2yV61N/XyJEjER4eDhMTE6ioqOCLL77A0aNH2Q823t7eiI2Nxfjx41Fa
WgptbW2sXr0a7u7u8PHxQW5urszhamNjY9y+fRteXl5sMf7OnTtj6dKl71Vov6GpKw1haGiIkJAQ
zJo1i83T1NfXx6FDh9i81HdTYEQTh0Tk8fMhhCgGWglJQWRkZCA8PFzqvg4dOqB169af1VKCnwoe
jwcdHR22N1IoFEIgEEAgEKCkpISdFVtcXNzoyRP6+vowMzNrUG5dS2MYBomJiVBTU6uzp766uhp8
Ph/GxsYye6LLysogFAql9tSXl5ezCxOYm5vXmX6Qm5uL0tLSJv2AZ2ZmhiFDhsDf3x8ZGRnQ1NSU
OaJQWlrK5sq+zweHwsJCFBQUNMka6lVVVUhISECHDh2apIZmbm4u8vPzYWFhIbUnPjc3V+z/haxz
NPXPhxCiOCgAVRCVlZW4ffu2QszgJIpLSUkJ7dq1Q4cOHWgCgwKqHYASQgiRjYbgFQSPx4ORkVGD
V7Ahn6eqqiqkpqYiKysLKioq4PF4UFFRqfPREpOQCCGEkLrQO5MCsbS0REZGBq2gQepUXV3NDuM3
BJfLZQPV2v/WfigrK4s9lJSU2Ici5ZUquu3bt6Ndu3Yt3QxCCFF4NASvYPh8PluwmhBFwOFwoKSk
BC6XCw6Hwz6qq6tRWVnJFpvn8XgtPvOekLqoqKjAwsKCllQkRAFQAKqAwsPDG7V8HSGEkIYRrZzW
lOXmCCGNRwGogsrIyEBiYiK7HryamlqTzE4l8lNRUYHq6mq0bt0aqqqqqKysRFlZGUpLS+ut91ib
KI9TKBSyPY6EkPfXqVOnRi8FTAhpWpQDqqDatm1bb2F58vESCoXIy8tDRkYGsrOz6ywyL/oQ0rVr
V7Rt25YNRCsqKtjHu9/XflBlBULE0brrhLQ86gElpIVVVlYiPT0diYmJ9S6zaWRkBGtra/B4vAaf
/92AtbKyUuIhFArZR1VVFfsvBa/kU2NiYgJra+uWbgYhnz0KQAlRENXV1cjIyEBcXFyda3qrqqrC
zs4Obdq0kVu7RMEowzBij4qKCgiFQigpKVGKCFF4PB4PqqqqLd0MQggoACVE4VRXVyMxMRFv3ryp
c2jeysoKFhYWVCaJEELIR4cCUEIUVFlZGaKjo5GTkyPzGH19fdjZ2TVqSJ4QQghpaRSAEqLg0tPT
ER0dDaFQKHW/hoYGevbsSUtzEkII+WhQAErIR6C8vBwRERHIz8+Xul9JSQndu3enAtuEEEI+ChSA
EvKRYBgGcXFxSEhIkHlM586dYW5uLr9GNVBFRQWioqIQFxcHS0tL2NjYNNlkkPLycsTHx4tt09DQ
gIGBAVq1atUk1yCEENK0uC3dAEJIw3A4HHTq1An29vZQVpZewjc2NhaRkZEKVT7pzJkzaNOmDXr2
7Inx48fDwcEBWlpa2L59+3ud79ixY7hy5Qr7fUxMDGxtbcUelpaW0NLSgp2dHU6fPt1UL6XetjS3
lJQULFmyRG7XI4SQ5kIBKCEfGUNDQzg5Ockspp2amoqnT5+isrJSzi2TdOXKFUyaNAlDhw7FxYsX
kZycjD///BMTJkzAsmXL4Ovr26jzpaWlYcaMGcjKypLYt2DBAty4cQM3btzAuXPnsGPHDgiFQkye
PBkBAQFN9ZIa1JbmsnHjRpw/f15u1yOEkOZCKyER8hHS1NSEk5MTwsPDkZubK7E/Pz8fDx8+bPHJ
SefPn4euri6OHj3Krr1tYmKC4cOH4/79+zh27BhWr17dJNfq2rUrhgwZIrbN09MTI0eOxMKFC+Hq
6qqQ6QmEEPI5oh5QQj5SPB4PvXr1QocOHaTuLy0txcOHD6UGqPLCMAzKysokCusrKyvj7Nmz8PPz
E6t1evXqVfTv3x/a2tro1KkTFi1ahNLSUgBAdHQ0hg8fDgDw8fHBl19+We/19fT0cODAARQXF+PE
iRPs9qKiIsyfPx9WVlbQ0dHBgAEDcPv2bbHnRkdHY9SoUdDT04OBgQEGDhzIHiOrLSNGjMCRI0cw
efJkGBoa4qeffgIADB06FFu2bBE7/+PHj+Hg4IDnz5+z2woKCuDt7Q07OzuYmJhg/vz5ePToEQBg
0aJFuHjxIjIyMuDg4IDLly8DqOnxnjlzJkxNTdnX8vfff4tdS1a7CCGkpVAASshHjMPhoGvXrrC2
tpZakF4oFOLZs2dITk5ugdYBM2bMQFVVFRwcHLBhwwY8ePCALSfl6OiIsWPHQklJCQBw5MgRjBw5
Epqamjhw4ACWL1+O06dPY/DgwWAYBkZGRvDy8gIAuLm5Yc6cOQ1qg729PQwMDBAVFQUAEAgEcHJy
woULFzBhwgQcP34c5ubmcHV1ZfM5hUIh3NzckJOTg507d+L333+HkpISXF1dERsbK7Mt4eHhWLNm
DcLDwzFixAgYGRmx29/9GRQXF+PZs2coKSkBUDOZysPDAxcvXsSiRYuwc+dOREVFwd3dHUVFRRg9
ejRsbW2hpaWFxYsXw8bGBsXFxejXrx9u3rwJHx8fHD16FIaGhnBzc8OpU6fYa8lqFyGEtBiGEPJJ
yMnJYYKDg5mgoCCpj6ioKKaqqkru7QoODmY6d+7MAGAAMK1atWLc3d2ZoKAg9piSkhLG0NCQcXZ2
FntuSEgIA4A5fvw4wzAMk5qaygBgAgIC2GP++ecfBgCzZ88emW2ws7Nj7O3tGYZhmG3btjEAmGvX
rokdM2DAAKZTp04MwzBMVFQUA4A5d+4cuz8zM5Px8vJiwsLCZLalXbt2jL6+PlNQUCB2bkNDQ+b7
77+XuC8AmNDQUIZhGOa3335jOBwOEx4ezh6TlZXFGBkZMXv37mUYhmG8vLyYDh06sPuXLVvG8Hg8
Jj4+XuzcNjY2jJGRESMQCOpsFyGEtBTqASXkE6GnpwcnJyeoq6tL3Z+cnIynT59CIBDItV2urq54
9eoVIiIisHPnTgwaNAjBwcEYPnw41q9fDwCIjIxEVlYW+vbti9u3b7MPoCbfNTQ09IPaUFhYyK5V
f/PmTejp6UFVVVXsWtbW1nj9+jUyMzPRqVMntpdz0aJFCAoKQuvWrXHw4EE4OTnVea1evXpBW1u7
0W18+vQpbGxsYGdnx24zMDBARkYG5s+fL/U5YWFhcHFxgaWlpdh2Dw8PZGZmIjY29oPbRQghzYEC
UEI+IZqamnB2doaurq7U/fn5+QgLC0NBQYHc2sT8X6lhW1tbLFy4EJcvXwafz8fw4cOxceNGxMfH
s7VNd+/ejaFDh7KPYcOGoaKiAklJSe99/YqKCqSkpLBBWkJCAvLy8uDm5iZ2LX9/f/B4PPD5fCgr
KyM0NBTOzs7Ys2cPhg8fDn19fcyfP5/NSZVFVk5ufaKiomBsbNyo58THx8PExERi+6BBgwDU5Id+
aLsIIaQ5UABKyCeGx+PBwcFBamAC1ORAPn78GHw+v1nbkZmZCXV1dWzbtk1in4GBATZv3gwACA0N
ZVdwOnz4MCoqKiQeH1JrMygoCNXV1ejTpw977Y4dO0q9TkVFBdvDaWVlhatXryI3NxcXL17E2LFj
sX//fixfvrzO63G5kn9WORyORM9zdnY2gP8foOvp6SEvL0/iuXw+X+ZEMiMjI/Y8tRUWFgIAunTp
Ume7CCGkpdBfJEI+QVwuF9bW1ujatavUyUkMwyA2NhbPnj1rtiF5IyMjdOvWDf7+/sjMzJTY/+TJ
EwBA7969YWNjAx6PhyNHjogdk5iYiH79+rHF5EWvpfbM+brk5eVhyZIl0NHRYScK2dvbIy4uDvfv
3xc7du3atRg9ejTKy8vx+PFjODs74/nz52jdujXGjBmDY8eOwcbGhp213pi2aGlpSdyDZ8+eiX3f
vXt3REZGih1XVlaG3r17Y9OmTew1a1/P3t4e9+/fl1iiNTAwEDo6OlR2ihCisCgAJeQT1qFDBzg4
OIDH40ndn5OTg3v37okN1TYlHx8fJCcno1evXtiwYQMuXbqEM2fO4IcffsB3330Hd3d3WFtbw9DQ
EN7e3ggODsb333+PiIgI3Lt3D1OnTgWfz8eIESMAAK1btwZQE2AFBQWJXevmzZvYtWsXdu3ahU2b
NmHOnDno1KkT+Hw+/vOf/7B1SFesWAEtLS14eXnh8OHDSEpKwu7du+Hr64v+/ftDTU0NPXv2REFB
ARYsWICQkBCkpKTg0KFDiI6OxrBhw+pty7v69u2LK1eu4ODBg4iJicGuXbtw8OBBsWMWL14MFRUV
TJkyBZGRkYiOjsaCBQtQVlaGlStXAgC0tbWRmZmJEydOICEhAWvXroVAIMC4ceMQHh6O9PR0bNmy
BceOHcOqVas+8KdHCCHNqIUnQRFC5KCsrIwJCwuTOUM+KCiIefToEfP27dsmv/aTJ0+Yvn37Mq1a
tWJnwrdv35756aefGKFQyB5XUVHBrFu3jtHQ0GAAMOrq6syoUaOYO3fuiJ1v3rx5jLKyMqOkpMSU
l5ezs+BrP9TU1JiOHTsyU6ZMYR4/fizRpmfPnjEODg7s8Z07d2aWLVsm1p5bt24xFhYW7DGamprM
kiVLxI55ty3t2rVj5s6dK3G9lJQUxsXFhT2XtbU1O8NfNAtedK/s7OzY4/T19ZlTp06x+8PDwxlj
Y2MGALN69WqGYRjmwYMHjI2NDfscCwsL5pdffhG7vqx2EUJIS+EwzP8lIBFCPmnV1dV4/fo1EhMT
ZR7D4XBgYmICS0tLqKqqNun1GYZBYmIi1NTU0LZt2zrbyefzYWxsLHNGf1lZGYRCIdur+b4KCwtR
UFAAMzMzmW1OS0tDaWkpOnbsKDWPsjFtyc3NhUAgQLt27eo9Lj8/HxYWFmyd1Hf36+joiO3Lzc1F
aWkpTE1N620HIYS0NApACfnMZGdnIzIyEhUVFTKP4XK5MDExgZmZmcwgkBBCCHlfFIAS8hmqqKhA
TEwMMjIy6j3WwMAA7dq1g76+vtTeOEIIIaSxKAAl5DOWnZ2NmJgYlJWV1XuskpISdHV1oauri9at
W6NVq1ZQUVGROsueEEIIqQsFoIR85qqqqpCUlIQ3b940uLxRbaIAlMPhgMfjUS/pR0xFRQUWFhZs
XVZCCGkuFIASQgDUDMvz+XwkJye/VyBKPg0cDgfOzs4fPMGLEELqQgEoIURMZWUlkpOTkZKSgvLy
8pZuDmkBnTp1goWFRUs3gxDyCaMAlBAiFcMwyMvLQ0ZGBrKyslBZWdnSTSJy0qNHDxgZGbV0Mwgh
nzAKQAkh9WIYBsXFxcjLy0NxcTGKi4tRXl4OoVDY0k0jTczExATW1tYt3QxCyCeOAlBCyHsTCoUo
LS1FRUUFuFwuVFRUWrpJ5APweLwmX4CAEEKkoQCUEEIIIYTIleS6coQQQgghhDQjCkAJIYQQQohc
UQBKCCGEEELkigJQQgghhBAiVxSAEkIIIYQQuaIAlBBCCCGEyBUFoIQQQgghRK4oACWEEEIIIXJF
ASghhBBCCJErCkAJIYQQQohcUQBKCCGEEELkigJQQgghhBAiVxSAEkIIIYQQuaIAlBBCCCGEyBUF
oIQQQgghRK4oACWEEEIIIXJFASghhBBCCJErCkAJIYQQQohcUQBKCCGEEELkigJQQgghhBAiVxSA
EkIIIYQQuaIAlBBCCCGEyBUFoIQQQgghRK4oACWEEEIIIXJFASghhBBCCJErCkAJIYQQQohcUQBK
CCGEEELkigJQQgghhBAiVxSAEkIIIYQQuaIAlBBCCCGEyBUFoIQQQgghRK4oACWEEEIIIXJFASgh
hBBCCJErCkAJIYQQQohcUQBKCCGEEELkigJQQgghhBAiVxSAEkIIIYQQuaIAlBBCCCGEyJUygDMt
3QhCCCGEEPL5+H8OAmdVorLu+gAAAABJRU5ErkJggg==

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/VectorVocabulary.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
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
a1/sIO2Geu1HwcNsrn+9m7v7z9P4g35YNLZ/ofbZ2Nhw7do1Jk2axM6dO9m6dStQdHr5/vvvs2LF
Cq1N/KZMmUKtWrXw9fUlJ6coXdPJyYlff/2Vzp07a9xz69Ytbt0q6glUq1Yt3NzcGDhwIB999BFm
ZkWRIGdnZzZt2sSUKVM4efIkp06dokOHDly8eJG4uDh69+7NwoULgaKCXyjqW3D+/Hk+/vhjtm7d
qlQiMjExoVmzZhobKT6Om5sbf/zxBz179mT+/PnUrl1bTWL4VSU1IZeNX11TGatdz4R35jRXW/sg
OpNvJgbw8Anno/Nb9Rj7ubtwPgQCQaUiIiBVlK8uXCYlt+iLQya7g67eaZyleNyJJflmFnlp6ilV
SYE1SL9tSotB3vSdP4cE/xCuztum8foNRnSh0SThgAhePRSFckJ/+IN7B9Wb6D1O7Y5NqD+0E5Yt
n17AXd7k5+cTEhKiTIl4su9HMcURkFmzZrF06VIKCwu5efMmVlZWyg7r5UF2djYhISE0aNBAxYFI
Tk4mISGBJk2aaEzlLCwsJCQkBCMjoxJfh+DpKBQSyyYFEHo5RTmmqydj7sYOOLnVVFmrLfLRdZAD
7/o0r/Jpt7nZhSTfzyE9OY/M9AKy0gvISssnL0dOXm4hkTfTyXqYj76BDnYNzTEwerlqWKoqNSwN
6DnMEQtroVQneH5EBKSKovN4GbrsCQWsrJIjIE4d2iHJFdz56U+N6/QtTGj4zuvlaK1AUH3Q0dOl
6SdvYdXOlZAVB7SqwyWeu0XiuVuYu9hS18uDOp2bYWKvWd60vDEwMKBFixZl3qenp6cm8VsemJiY
KLtFP46VlZUy9UqbPe7u7uVuz6vIoZ/vqDgfAIOnNlZzPuLvZlUL50NeqODB3SziwjOJjcggLjyT
+JgsUh7kkpVeehW0u6EZT18kKDeCziSwYJeQ7Rc8P8IBqaKopGDxqAeIPE+BokBDAboC8lL1QSbD
sV0bYo9eJuuuZknPhqO7o2daspqNQPCyU6dTU2o2r0/It7+TcPam1nUZd+6Tcec+YeuOYdqgNjUa
22PuaoepgzU6+nogk9C3MK2U91RBZtHhREFWLjnxL66vSVVBz9QQfbPq3TivNNy6lMzBDWEqY26v
WdN7jGp0Lj4mi28mnldzPl4f7MCYuZXrfDxMyuN2UAoR19OIuJFGVMhDFRUvQfXg3p0M8nLkGBqL
qJPg+RAOSBVF5YvisQiItvqP/DQ9UMiwdWuCgZExEZtPalxnbFuLem+1LXd7BYLqiIGFKS2+GkXS
hTBu/+hHVlRCieuzohPJik7k/p9BL8jCkqmbGc/Mxv1xOp/JPyOWV7Y5lYJ9vzY0nTmgypzslzcZ
qfn85BOE9Nizeg1LAyYsaKHymhPuZRdFPhLVIx+V4XzkZhdy62IyNy8kczMgibiIzBd6f0HF0LJr
HeF8CMoF4YBUUVRSsMhBV5JjTAHpT+n/4dShHXf3nCMvSXNY2mXCG0WntgKBQIl1O1esWjsT+8dF
In47Q17iw8o2qVQ0NLOhoVnJ6lovO7F/XKSmewPs3vSsbFPKHUmS2DD/qopTIZPB+74tsbB6lIef
FJfN0knnSU1Q7fPRZUC9F5p29TA5j6Az8Vw5E8/NgGQKC54twqGrJ8OyrjGWdYwwtdDH1MIAsxr6
GJnpoaenQ/L9bLIyCjAx16eei7koqH9B1LA0xKNz7acvFAhKgXgSraKoqmDlPL3+I6Wo/qOBRwsi
v9Fc+2HuaotNd5GPLRBoQqarQ7232mHXrzWJf4cQveccD4PvVrZZglKQGanevPFlwG9LBNfPqabS
9h3njFv7R0IASfdzNDYZ7OxdpHZV0c5HVnoBF0/c57xfHLevpFCW/pE1rQ2xdzXHvqE59s5m2DqZ
YW1rjIW14Usb0RIIBEVUaxWswPDLHL/+F4npieQW5D59QzUiS9cCuawozCmTRWBKFtZkkpNUoBKK
Lyb7niHyQj3MbewxTNbcdDDTyRC5WdULnRroGWBpZknXJh3p7ta1ss0RCJRkRiWQ6B9Cwj83Sb8V
W9nmCLTQ+tv3sPRsWNlmlCu3L6ewdHIACvmjJ3rXlrWYvb69stt5yoMclrx/nqS4HJW9HfvZ896X
FdfnQ16o4OrfCfgfjuXaPwnIC5/udch0wMmtJq4ta9GweU2c3WtiafPy1+8IBALNVEsH5J9b//Lj
iQ1k5ak34xNUbwx09fm/zsMZ0KZfZZsiEKiQn5bFw5sxZNy5T1ZMEpkRD8i+l4wkV4AM9EwM0TUy
qGwzXyn0zIxoMLwzdr1ervSr9NQ8vhzxj0oxuamFPl/t6Kx8aE95kMM3E8+TGKvqfHToY8f4BS0q
xPlIuJfNmX138T98j/Tk/Keur1PPBPdOtWnW3pomrS0xNtMvd5sEAkH1pNo5IBv+2sLhy0cBMDM0
pb1rWxyt62NiKE5Sqiu5BXncS4kj4E4gKZmpALRp6Mm8QbMr2TKBQCB4sSgUEiumXiAkMFll/ONV
bfDoVAeAlPgcvpkYQOI91UO49m/a8v7XLdHRLT/nQ5IkrvsncnJ3NNf9NSsrPo5jUws8u9vQqpsN
9s7m5WaHQCB4uahWDsihS378cvpXAN708OLdriMxMTSpZKsE5UVBYQH7Ag+y89xeJCR6ufdgaq/3
K9ssgUAgeGHsWxPK4Y3hKmP93nPm7WmNAe3OR9s3bJm0sPycj/xcOef+iOXPbZE8iNbcK6eYug1M
ad/bjg597KjjYFou9xcIBC831aYIPTc/l81nfwNgcLu3GNNlZCVbJChv9PX0Gd7hbWqZ1mLt8Z/5
8/opBrTuh72VXWWbJhAIBBXOlTPxas5H49aWDJrcCPhf2tUkTc5H3XJzPrIzCji5K5rjOyLJTNPe
ENDYTI/2b9rRZUA9tWaIAoFA8DSqjQOy8cxvyBUK6lvV453OwyvbHEEF0sujB4HhlwiMuMya4z+z
aMQXlW2SQCAQVCjxd7PYMP+qypiFtSGTF3uioysj+X4OSyep13y08arLRN/ndz7SU/M4tjWSv/4b
TW62ZrVFAMdmFvQc1oA2XraiH4RAIHhmqo0DcjH8MgD9WvVGR6ZTydYIKhrv1n0IjLhM2IPwpy8W
CASCakxOViE/zLhETuYjBUMdXRlTlnhiYWVIUlw230wMIPm+uvMxaWFLpSrWs5CRms/RXyM4uTua
/FzNjoeunox2vWzxGuFYbaIdGRkZ3Lx5k+DgYCIiIrCzs8PV1RUXFxfq16+Pru6LcZ4kSSIqKorg
4GBu3rxJbm4uLi4uODs74+LigpWV1QuxQyCoalQbByQ9p6ixXjP7JpVsieBF0PR/v+cCeQEKhQId
HeF0CgSClw9Jkvh5XhBxkaqdwod/0pRGnpYkxGSxdHKAWp+Ptm8URT6e1fnIfFjkeJzYqd3xMDbT
o/uQ+vQc4Uit2kbPdJ8XjUKh4Pvvv8fHx4ecnByNawwMDNizZw/e3t4VaktYWBjvvfce//zzj9Y1
bdq0ITAwsELtEAiqItXGASlUFJ0MWZjUqGRLBC8CfV09TAyMyc7PITEjGRsL0X1VIBC8fOxbe5ug
swkqYx362PHGSEfuR2WybHKASid0gHa9bJ857So3u5A/t0Vy7LdIlYjL49SwNKDX/znRfWgDjE2r
zWMCmZmZ9O7dG39/f0xNTVm4cCEdO3akSZMmJCQkEBYWxokTJ/Dz8yM7+9ll/FNTU7l+/Tqmpqa0
bt1a45rt27czYcIEcnJy8PLyYvz48Xh6emJiYkJERASXLl3ijz/+ICkp6ZntqG5cv36dmJgYunXr
homJEBB61ak+nyz/Q0d0R31lkBWn2mnqvCgQCATVnHNHYvnjiaLzBk1rMPZzd+6FpbN86gXSU1T7
bbzWx44JX7Uos/NRWKDgr/9Gc/iXcDLSNPfwsLA2pO9YZ7oNdkDfsPrVd/j6+uLv74+TkxOHDx+m
WbNmyrm6devi4eHB22+/DUB+/tP7mGhjz549TJw4kbFjx7Jp0ya1+fj4eKZMmUJOTg5z587l66+/
VoniOzg48PrrrzNjxgzy8vLU9r+s9O7dm7i4OKKiomjQoEFlmyOoZKqdAyIQCAQCQXXn1sVkNn11
TWWshpUB01e05t6dDL79IJCsdFUVqk7e9oybX7YO5wqFxHm/OPavDSX5iTSuYqq74wFw584dvvvu
OwBWrFih4nxowsBAc9PQpKQkAgMDUSgUtGnTBhsbG5X52NhYEhOL+qFkZGQQEREBQM2aNbG0tATg
s88+Iz09nZYtW+Lr64ushINTQ0ND5b/lcjnR0dHo6upqfEAvvlfDhg01jjs5OSGTyYiPj+fs2bO8
+eab1KhRg7S0NFJSUpQ2yuVyAgICkMvldOnSReVacrmc4OBgQkJCaNSoEc2bN0dfX72B5JP3zM/P
x9/fn9zcXDp27IiFhYVybXZ2Ng8ePKCwsCjidvfuXeRyucp+wauHcEAEAoFAIHiBxEZk8MPMS8gL
JeWYnoEO01e0ISEmm1WfXFRTonp9sANj5jYv08PaNf8E9qwK5d6dDI3zZjX16fuuMz2GNcDAqHo6
HsVs3bqV/Px83N3dGThwYJn3FxYW8tlnn7F8+XLlmI6ODosWLeLTTz9Vjg0aNEhZs7F371727t0L
wKeffsqSJUsoKCjg11+L+pXNmzevTL+v+Ph4nJ2dqV27NgkJqml5hYWFODs7A0V1Q4/TpEkTCgoK
SE9PZ+zYsezfv7+ogeT16zRv3py1a9fi4+PDrFmz6N27N0OHDiUlJYW3335bxQEJCgpi8ODBREZG
Ksfc3d05cOCAmtNTfM+srCyVyZW3AAAgAElEQVRWrVrF119/rUxrs7Gx4eDBg7Rr1w6A06dP069f
P+Xerl27Kv+dk5ODkVH1qC8SlC/CAREIBAKB4AWRlpjLyumBavUX47/0ID05jx8/u0Jhvmra6Ruj
HBk5s+QT/ceJDE5j9/e3CL2UonHeyESXN99pSK93nKpVjUdJ3L59G4COHTs+04n6+++/z+bNm+nV
qxcffvghsbGxrFixgjlz5tCgQQNGjBgBwOeff87evXvZsmULnTp1Yvz48UDRgzoURQaKT/c7depU
Hi+t1Hz88cf89ddfvPvuu3h4eFC7tmrtZFhYGL/88gsuLi4MGDCARo0aKedCQkLo0KED5ubmzJ8/
Hy8vLzZu3Mhvv/1G//79uXHjhkYxmK+++orvvvuON954g27durF7924uXrzIpEmTuHLlCgAeHh5s
3LiRGTNmkJaWxtKlS7G2tgbQGF0RvBq8HJ88AoFAUE1RKBQEBwcD0LRpU/T0xMfyy0rmw3xWTLug
lgo1ZHpjcrMK+WlekFrJW//xzgye2rhU10+IyWLvmtsEHr+vcV5PX4fuQ+vT/z0XzGtpTkGqroSF
hQHg6OhY5r0XL15ky5YtODk5cezYMeV48+bN6dSpE0uWLFE6IN7e3jx48IAtW7bg6urKuHHjNNph
ZGSklr5V0Rw5coSgoCDq16+vcf7AgQPMnTuXhQsXqs3Nnj2b3Nxc1q1bx7vvvgtAly5diI2N5fjx
4xw8eFBjZGnlypUcOXIELy8vAIYMGULDhg0JCgoiMzMTMzMz6tWrx7hx45g3bx5paWkMGzZM1IAI
hAMiEAgElUlWVhYeHh4AxMXFYWtrW8kWCSqC3OxCVn4YSGy4qtxut7frk5cjZ88PoWp7hn3UhN5j
GqqNP0l6ah4Hf7rDmX13VdK6ipHJoENfewZOaYS1rfGzv4gqzP37RU5XnTp1yrx38+bNSJLE0KFD
Vcbbtm2LiYkJV69eJSsrC1NT01LbYW1t/cJrG/bt26fV+YCiInBfX1+18aSkJA4fPoyBgQEDBgxQ
mevWrRvHjx/n3LlzGh2Qbdu2KZ0PKKrpqFmzJmlpaSQlJWFmZvYcr0jwMiMcEIFAIKiiVGXZytJI
kQqKKMiTs2rGJSJuPFQZb9GlDvl5hRzacFdlXKYDY+e502WAQ4nXzcsp5NhvkRz9NUJr93L3jrUZ
8mFjHFxfbgn7+vXrExcXR0xMTInrVq1aRXR0NKNGjVL+3YaGFjl/v//+O/7+/hr3xcTE0KTJ0/uQ
FTsAxUXXLzKi2aJFixLn3d3dNTpFxa9fT0+P/v37q8wlJycDRYXjmujbt6/amKmpKWlpaaWyWfDq
IhwQgUAgqKJUZdnKp0mRCoooyJPz/SeXuBWYrDLu2rIW2RkFXP1btdjYwEiHSYs88Xxde/qOvFDB
2QMx/P5TGOnJmuVkHZtaMPSjJjRt+2p02nZxceH8+fOEh4eXuG779u0EBATg6empdECKC75NTEzU
HIa2bdsCKOs6SmMHFBWNR0dHKwvHqzLFr9/Q0FDt9dvY2GBjY4ODQ8nOsEBQVoQDIhAIBFWMsshW
llY2s7RSnJmZmVy9epXY2FhMTU1xd3dXS+sojRTp40RHR3Pt2jX09fVxd3fH3t5e4+surY3Z2dkE
BgYSFxeHlZUVDg4OuLq6Vrn6mfxcOas+ucjNC6rOh72LOakJuSTFqXbqNqupz0cr2+LsXlPj9SRJ
IvD4A/atDSUhRnMjvTr1TBg8rTFt36j7SsmbNm5cVCdz8uRJsrOzyxQxdHFx4dq1a3z44YeMHTv2
uexwdHTE0NCQvLw89uzZo6KgVVUpdppq1KjB6dOnK9cYwSuDuqSBQCAQCCqV06dP4+zsrDyZ7Nq1
K87Ozjg7O6s0LgsKCsLV1ZUWLVowYsQIWrVqRevWrZUOweOsXbsWZ2dnlixZwqlTp6hTpw6dOnXi
+++/V64ZOHAg1tbWdO7cmeHDh9O/f38aNmzI559/rnKtQYMG4ePjAxRJkRbbtnTpUpV1oaGhtG3b
FkdHR9566y369OlDvXr18PLy4t69e89k46FDh3BycqJbt26MGjWKN998k2bNmvH3338/w0+64sjL
KeT7j9WdDytbY5Jis9Scj9r1TPDZ1FGr83HjXCJfvePPus+uaHQ+zGsa8H+zm+G7pyvtetm+Us4H
wPjx4zEzMyMuLo6VK1eWaW9xDZafn1+Z9mlqIqirq8v06dMBWLx4sTKFqTQU/84yMjKUhw/FbNiw
oUy2lYVGjRphaGhIdHQ0ISEhFXafYl6l5osC7bwyDoi/vz+DBw9m8ODBfPXVV2Xef+7cOeX+s2fP
VoCFAoFAUESxbGXNmkUPo0uXLmXjxo1s3LhRGd0ols3MzMxk/vz5nD17lrFjxxISEkL//v1RKBQa
rx0WFsbQoUNxcXFh4cKFSnUfgCtXrjBr1iyOHj3KpUuXWLx4MVDUYbpYUhOKpEiLlXI6deqktG3I
kCHKNXfu3KFVq1ZcvnwZHx8fzp07x9mzZ/nwww85efIknp6eJCUllcnGlJQURo0aRUpKCuvWrePy
5cscOHCAL7/8skoV72dnFLB8ygVCnki7Mq9lQPL9HPJyVH83jVtZ8vmWjtjUVy9yvn0lhSUT/uXb
6YHcvZWuNm9gpIv3BBeWHOxGz+GO6Om/Ml/rKtja2jJ37lyg6O91/fr1pd47bdo0rKys2L17d6mc
kOJCd23PAp9//jl16tTh4cOH9OrVS6mM9SSJiYls3LhR+f/W1tbo6emRm5vLzZs3leM7duzggw8+
KPXrKSuGhobKSM2UKVPIzdXcsPJ5edrPTfBqUbXi1RVI8+bN8fPzIzc3lz/++IMPPvgAK6vS58au
WbOG/fv3o6+vz88//1yBlgoEgled0shWPqtsZklSnOHh4SppTK1ateLkyZOcOHGCwMBAPD09gadL
kQLMmDGD7OxsFi9ezJw5c5TjXbp0QUdHh5UrV+Lj46PxQVGbjVeuXCEzMxMvLy8mTZoEgKenp5py
T2WSEp/Dd9PV1a4MjHXJSFWv1+g6yIF3PnVTcxzCr6Vy4Kcwgv/V7KTp6Mp4fZADb73vioW1ocY1
rxozZszgxo0bbN++ncmTJ7N792569uyJu7s7eXl53Lx5U6XJXjHW1tasXr2aMWPG0L9/f8aNG0fn
zp2RyWScP3+e8+fP89tvv+Hm5gbAa6+9hqmpKbGxsQwfPpxhw4bRuHFjmjdvDhSlMm3fvp133nmH
y5cv06pVKwYPHkzLli2pW7cu4eHhBAUFcejQIRwcHHjvvfeAop4Y3bt35/jx4/Tp04eBAwdy9uxZ
goODWbt2LVOmTKmwn93cuXM5cuQIZ86coUWLFkyYMAEnJydCQ0M5f/48tra2/PTTT891j549exIU
FMSCBQtITU3F2dmZwYMHl9MrEFQ7JElKkaoBA5aPkAYsHyFl5GQ88zVGjhwpARIgrVq1qtT70tPT
JRMTEwmQBgwY8Mz3r0gUCoWUn59f2WaUK6N+GC8NWD5CepD6oLJNEQgqjPT0dOXnUlxcnMqcnZ2d
BEhRUVEq44mJiRIgGRgYSKmpqSpzCxculABp1qxZGsd79+4tKRSKUts3e/ZsCZB8fX1Vxn/66ScJ
kMaOHau2JykpSQIkPT09KS0tTW0+PDxcAiQjIyNJLpeX2sakpCRJX19fMjY2lo4cOVLq1/CiuHv7
oTSj90lpXKs/VP4b3+YPtbEJ7Y5IJ3dFqV3jzrVUacW0ALX1j//345zL0oO7mZXwCqsHBw8elFxc
XJTvq8f/s7Ozk7y8vKRz586p7bt06ZLUpk0bSUdHR7m+Zs2aUufOnaXo6GiVtbt27ZIsLCyU6558
f0iSJCUnJ0ujR4+WjI2N1ezQ0dGRevXqJe3Zs0dlT3h4uOTh4aFc5+zsLP36669SQUGBcuxJ9PX1
JUDKysrS+PPQ9pnwJPn5+dLcuXNVXpeOjo7UqFEjaeHChaW+p729vQRIkZGRKuMPHz6Uevfurby2
np5eifYIXm5emQgIwLhx49ixYwcAmzZtUuZpPo19+/aRnV2Uc/vOO+9UmH3Pwrp161i4cCHx8fH8
+OOPyq6sAoHg5eV5ZDO1SXEWk5uby7Fjx4iMjOT+/fscP34cKCqALi3FXanr1q2LhYWF2ryTkxMG
Bgbk5uYSExOjFt3RZqOVlRWTJk1i9erV9O3blx49ejBr1ix69+5datsqiiun4/lpXhB5OepqSU9m
w9WqY8TUpa1U6j1CApP5Y+MdtZqRx3HvVJu3pzWmfuOXW1L3efH29sbb25uMjAxu3bpFZGQkDg4O
NGvWTOPfYzGtWrUiMDCQrKwsbt26RZ06dbSqPw0bNoz+/fsTGhqKiYmJRrUrS0tLfv31VzZv3kxk
ZCQ3b96ksLAQBwcHGjZsqFGwoWHDhly5coWwsDD09PRUrqvtPZifr1kJrZi5c+cq09NKQl9fn4UL
F7Jw4UKioqJISUmhadOmGBur944p6Z6a6rugKDLk5+dHTEwM9+/frxYKYYKK45VyQHr27ImDgwMx
MTFcuXKFq1evPlU3G2Dr1q1AkcKLt7d3RZtZJuLj47W+2QUCwctJRclmLlu2jMWLF5Oamkq9evXo
1KmT1lqSkihuxqbpAQuKim1r1apFfHw8cXFxZZIY/uGHH+jcuTPTp0/n1KlTnDp1Ci8vL3bs2IG1
tXWZbX1eFAqJQz/f4fefNOf5P4l7x9qMX+BBjVqGKBQSl/96wNGtkURc1943oUkbSwZPbYxLi1rl
ZfYrgbm5OW3btlVK6ZaW0va2MTExUaYlloSOjo5SqKE06OjoKFW9KgtHR8dn6ipfGhwcHISsr+DV
ckB0dHQYM2aMMq948+bNfPfddyXuuXfvHn/99RcAQ4cOxdCw5FxbSZK4ffs2OTk5uLm5aZTDLA2J
iYmEh4djZWVF/fr1n3rfZyUzM5OQkBBsbGxK7KBaWorttra2Vkr7CQSC8qUiZDPXrl3L7Nmzef31
19m8ebPy4WPOnDlcvXq1TNcqdiiKpXqfRC6XKwvQn+UhZ/jw4bz11lts3LiRefPmceLECebNm8e6
devKfK3nIT01j58/v6q1TuNxdPVkDPmwCb1GOZKbVcjxHVGc2BFJYmyO1j2NW1kyYJIrTdq8Gr08
BALB/7N33nFR1/8Df95xHHtvUBEQ3LiAzJU7c2WZ5S9T8etIs8z0q6U0zNQyR+lXbbjAlpqakyy1
zFVuFGSoiIggyN5wcPf5/UGcnHdMQUA+z8fjHse91+f1+XDj83q/VtOhSSkgAP7+/moF5IcffuDz
zz+vUEn44Ycf1DuA48ePL3dcTEwMb775JqdPnyYzs6TarYGBAd27d2fz5s1V2vk4efIkH330EaGh
oRrZYSQSCY6OjowYMUIdsPnFF1+wfPlycnIeBDrOmTNHnRoTSrJZfPTRR1rHycjIYP78+Rw7doyY
mBi1WdfCwgJvb28+/vhj+vXrV66cCQkJdO3aFSgp0nTgwAEiIyN55513OHz4MACjR49m165dlZ6z
iIhI5TyctvLhtJlt27Z95GOUWnrXrFlTLaVAV0pNT09PpFIpSUlJJCUl4eCgWVQvLCwMpVKJmZlZ
jbNXGRkZMXPmTHr27EmXLl34+eef+d///lfjTZ/qcvX0fbYsukpWWsXuLwAuHqZMWdwJPT0J3316
jb+D43W6apXSxseaEVM8G00RQZVSICdLQX52MXk5ReTnFJOfU0xedhF5OcUU5BSjKFBSWKBEka+k
sKAYRYGKwgIlxQoVxUUqlMUqlEUCxUUqiotVKIsFBJWASiUgqKC4SIWiUImgAokEZHIperKmmfGr
qWBuLeeVd9pWWJRTpPHS5BSQVq1a0bt3b06ePElycjIHDx7khRdeKHd86Y9yy5Yt6dWrl84xwcHB
vPbaa6SnpwMlZtmioiIKCwv566+/8PX1Zc+ePfTt21fn/OzsbObPn88333yj4eOpp6eHUqlEEATu
3btHZGSkui8nJ4ekpCSNdbKyssjKytJY92H++OMPJk6cqOG2ZWxsTF5eHpmZmZw8eZIBAwbwzjvv
sGzZMp2WF6VSqT52WloaV65cYcCAAdXKdy4iIlI59vb2JCQkcOLECby8vNTtpWkzFy9ezIwZMzh8
+DCGhoaPdKxSt6moqCi1a2p+fj5hYWEAWilzK0qpaW5uzqRJk9i8eTMrV65kxYoV6j5BEPjss88A
qhyHV0pGRgbm5uZIpQ9uPM3MzJBKpSgUCo32uiIvu4jtqyM4tb9y11epnoTBr7bEzsWYbcvCiLmW
WeH4Tr3tGf4fDzy869fVSqUSyMlQkJlaSGZKIVlpCrLSCslKKyQ7XUF2uoKcjH+fM0sUjseJIEBR
oYqiwuq7B4o0Hgpyi9n4wRXW/TkIqV7TqmvTFGhyCgiUWEFKi1YFBgaWq4BcunSJa9euASXB57qC
Iq9cucKIESNQqVS0b9+erVu30q1bN4qKijh48CCTJ08mPT2dSZMmqYPKHubNN99k27Zt6tdTp05l
8uTJdO7cGYC4uDj+/vtv0tLS1GPGjx9Pz5492bZtG0FBQQDMnTuXoUOHqsc87FIVGRnJkCFDKCoq
QiKR8P777zNhwgQ8PDzIzMzkn3/+4Y033iAmJobVq1ejVCorLeikUCh47bXXSE1NZcCAAYwdOxY7
Ozv09PQqnCciIlI5FaWtrO20mQMHDmTz5s3MnDmTixcvArBz5051RemDBw8yZswYevbsCVSeinTp
0qUEBwezcuVKkpKSGDZsGPn5+fz8888EBwfj6elZpcDYsuzevZvFixczbtw4vL29ycjI4Ntvv0Wl
UuHv71+n3zuCIHDmYDw/r42sktXDxskIR1cTju2MrfBGWaYv5emhzgx+zQ0Xd7PaFFkLQRDITleQ
fr+AjORCMpILSE8u+TszpZD05IJ/FY5CBPHeXqQBUFykQqUSRAXkCaRJKiAvv/wys2bNIjc3l+Dg
YJ0uAvDA+gHlZ7+aN28eKpUKExMTjh49iqOjI1CyQzl69GgyMzOZPHkyt2/f5qefftJy4zp58qSG
8rF+/XreeOMNjTGtWrXSiqcoDRArW/23bdu29O/fv9zzfueddygqKgJg8+bNGrn7LS0tGTJkCOfP
n+epp54iOjqa9evXM23aNNq1a1fumhcuXEAqlfLtt98yderUcseJiIhUnw8//JBr165x+PBh5s+f
j0wmU3+GDQwMOHPmDIsWLWL9+vXMnz8fKIl1a9WqFU8//XS1jrVy5Uri4uL4/fff+fzzzzE3N+e9
997j3XffZfDgwRw7dow+ffqQl5eHgYEBDg4ObNmyhWnTprFz50527tzJkiVL1AqIg4MDV69e5fXX
X2f79u3q71MjIyOmTp3KqlWrMDHRLrxXER4eHjg7O7NmzRp1ZkJDQ0P++9//smzZsmqtVR3Cz6Ww
639R3A6v2IIBJbEeejIpqffySb1XfnyHpZ0BfUe3oO/oFphbP3qMn0opkJFSQHpSAWn3S57T7xeQ
9u9zidJRgLK46tnMRETqE7mhHv83t22TLa75pCMRBCENaPCpNUat+j8Avp+5EVND00dez9/fX205
WLlyJXPnztXoLy4uplmzZiQlJeHn58fZs2e11jh27BgDBw4ESiqprlu3TmtMYWEh5ubmKBQK+vfv
z7FjxzT6/fz8OH/+PFBSoKu6FUI//vhjFi1aBMCmTZvKTcN79OhRBg0aBJQoNFFRUeW6K6xfv15d
dXXEiBHs379foz8uLk7DuvLZZ5+pq6jWJuPWTSG3MJdvJn+Jg6XoAyrSdCmbtrK8AqqVpc2sKrdv
3yYzM5MOHTpoWBRCQ0Np0aKFVhrTvLw8jVSkuqy8CoWCiIgI9ZhHdZVSKpVERUVRXFxMq1at1Faa
2ubq6fsEb43m+uX0Wluz3VO29B3dnC7POFQ5hqFIoSQjuVCtSKgfZZSNjJSCerNaSCRgbKaPsbk+
RqYyjE1lGJuV/G1kqo+xqQy5oR4GRnqaz4Z66lgOmb4UPX0JMn0pMpkUPZkEiVSCVCpBIgWptGQH
PD+3GEMjPXFHvAlgYCQT/89PME3SAgKaCkhgYKCWAvL777+r4xzKs36UVRa6d++uc4yBgQEuLi7E
xMRw69Ytjb7i4mIuX76sfl02gLy2OXPmjPrvCRMmVHgDMHHiRLUCUnaeLry8vJg3b17tCCkiIqKT
qqStrK20meWt0bFjR53tVUlFKpfLq5TyvKro6elVaJl9FDJTCvnncDzHdsaSUkGGqupg62xEj2Eu
9BrZDFvnB8pSUaFSHWeRkVL6/MA9KiO5xC0qN7OoVuSoDibm+ljYGGBua4CFtRwz6wfPZpZyzKxK
HiYW+hib6asVhLrG2OzxJBkQERGpW5qsAvLMM8/g5uZGTEwMYWFhXLhwAR8fH3V/qbuATCZj7Nix
OtcoLbYFsGXLFvbt26dzXEZGSX73+Ph4VCqV+ub/1q1bFBc/CN4rzSxVF5SVtbKbFFNTU2xtbUlJ
SSE1NZXU1NRyd11tbW0fS+CniIiISF2gUgncvZnNud8TuHw8iXsxubWyrqGJHu4dLHHxMMPQWEZW
moIdX0T+G8xdEtT9uIO3AYxMZVjZG2JpZ4iVvUHJs50hFrYGWNqWvLawNRDdXkREROqUJquASCQS
/P391Wlqt27dqlZAsrKy1MrEkCFDsLOz07lG2Zv60lohFVFUVMT9+/fVcSKl1Yyh5Ka/vOPUBmVl
dXFxqXS8i4uLOuvN9evXq+1PLiLSVFGpBO7F5HA7PJOkuFzuRGZxOzITRYEKqRQsbA0xNmuyX731
QlJcLoV5SgxNZMhkEoqLVRQVqFAolKjqSAcoyFUSfjaV8LOPLzugmaUcK0dDrO0NsXIofTbCyr5E
2bCyN8TASHzviYiI1D9N+pto4sSJLFq0CEEQ+Omnn1i9ejUGBgbs2rWL/PwS03tFtT/K+jq//fbb
WFpaVnrMskGXZefXtRWhrKWlKpliymb8KpsaWERERJvcrCJC/kri8l9JhJ9LpSC3/LvavOyccvtE
6paiwsqzVzVEJFKwsDHA2qHUcqFbwdCXi9kHRUREGgdNWgFxdXWlX79+/PHHH6Snp7Nv3z5efvll
tfuVhYUFI0eOLHd+u3btOHfuHAD9+/evcKwuyhYPy8rKIjk5uc6sIF5eXup4k/j4+ErHlx3j6elZ
JzKJiDR2bl5J58+fYzl/LJFihZi3VKR66MkkmFnJ/3V/euAGZfGvK5SVvSGWtgaY2xg8thgLERER
kcdBk1ZAACZNmsQff/wBlLhhde/enb/++guAl156qcLiXmWDIE+dOlVtBcTV1RUjIyO1teXixYsM
GTKkuqdQJcoWMYuLi6twbF5entr9ytLSsk5dw0REGiPh51I4sPEmUZfSKh8s0mTQk0kwMNYrcYWy
N8TMSo6ppVwjaNvc2gAzazkW1gaYWOjrrC8lIiIi8qTT5KPMXnzxRczNzQE4cuQIy5cvV7scVeR+
BSVWj9Ifj6CgII1CgVVBIpGo0/gCLF68uFrzQdOdKjY2ttxxTz31lPrv7du3V7jmjz/+qL4GZQPz
RUSaOgkxOXwx6zwrZ5wTlQ8RLZTFAnlZxSTdyeN2RBYFuUqs7Q1p392WvqNb4DfYmTY+Nri4m2Fq
KReVDxERkSZLk7eAGBsb8/LLL7Np0yaUSiUbNmwASqqI9+nTp8K53bp1Y8qUKWzcuJH79+8ze/Zs
AgMDqxXPsWrVKn777TcUCgV///03K1asqFZa27IZrYKDg8tVYoYNG0bv3r05efIkISEhBAcHa1RN
LyU3N5dVq1YBJQrS0qVLqyyLiMiTSpFCyYGNNwkOuoVKWXlMlJGpDPcOlri2McfOxRgkUKxQYWym
X/Ja5LFjZCrDxUOz0ri6vkZSAXE3sogJzyQ+OpvE27kU5isf6XgFucWEnkkm9EwyAAZGenh1tab9
U7Z07GGHk9uj17MSERERaaw0eQUEStywNm3apNE2bty4Ku1OLV++nL1795KcnMx3333HzZs3+eKL
L+jSpQtyuRyA9PR0jh49yoEDB/jmm280ioR5enryzjvvsHz5cgDmz5/P5cuXmTFjBl26dEEikXD7
9m1+++03Dhw4oJVtq2z+/UuXLrF+/XrGjRunMyD+yy+/xNfXF5VKxejRo1m/fj1jx47F2NgYlUrF
lStXmDhxIpGRkUBJkL6fn18Vr6KIyJNJzLUMNn54hcTbFadnNbXU5+mhLnTr50irTlZiAa1GgL5c
DzsXY+xcjPHqaq1uV6kE7t7IJupiKlGX0ipNLFAVCvOVhJ5OJvR0MttXR2DjaIh3L3s69bGnra+N
GEBei2RnZxMeHs61a9e4desWzs7OeHp60qpVK1q0aFGlRCw1JTExkeTkZPVrPT09bG1tsbOza3AW
r+TkZBITE7Gzs1Nn5xQReVw02UroD9O6dWuNVLXh4eEaQeIVER4ezvjx47l06ZK6TU9PjxYtWpCe
nq6uAwKQk5OjkQkLSjJUBQQEsGLFCo2MUxKJROO1lZWVTjev8ePH8/3336tfGxkZ4ezszPTp0/nv
f/+rMXbnzp28/vrrapn09PRwc3Pj3r175OY+uMEaO3YsX3/9tVbVY9CshN6jRw9Onz5d8QWqIWIl
dJH6RBAEgrdG88vXNyq0erh4mDLU3wPfQU5i7YQnlOIiFZHnU7n4ZyKX/0oiK7XibFoyfSnFRVVP
SiA31MO7px1d+znQqbc9RqZisb2aoFKpWLNmDQEBAerYyoeRy+Xs2rWLESNG1IkM8+fPZ8WKFVrt
+vr6DB48mPfff7/cwsWPm2XLlhEQEMC8efP4/PPP61sckSaGaAH5F39/fxYuXAiUuFZVVfmAkmD0
f/75h08++YQtW7YQHx+PUqkkJiZGPcbd3Z0+ffqorSJlkclkLF++nGeeeYZ58+YRGRmJSqXSUD7c
3d159tlndR5/w4YNGHDjyvIAACAASURBVBsbs3HjRgRBID8/n+joaIqKtKvnvvzyy3Tv3p3p06dz
/Phx8vPzuXnzJlCi8Hh4eLBkyRJeeeWVKp+/iMiTRk6mgo3vX1G7z+jCxsmIMbPa4DvIscHtbIrU
LjJ9KR162NGhhx3j3+tA6JlkTu6L48rJ+yiLtZXT4iIVEim4t7fEzFpOzLVMMlMKy11fUaDkwrFE
LhxLRE8mocPTdvgOcqLLM6IyUlVycnIYMmQIp0+fxsTEhKVLl9KjRw/atGnD/fv3uXHjBkePHuXX
X38lLy+vxsdJT08nNDQUExMTunXrVu64nj17MmbMGLKzs7lz5w67d+/m0KFDnDhxgsuXL+Ph4VFj
GWoLGxsbWrdujb29fX2LItIEES0gdUBqaipXrlwhPT0dJycnWrZsibOzc5XnZ2dnc/nyZZKTk3F0
dMTNza1K85OSkrh27Ro5OTm0bt0aDw8PjVojD6NUKrl+/TqRkZG4uLjQvn17LetMfSJaQETqg7s3
s/nfnAskx+veQdWTSRg+uRVD/d1Ft5kmTlZ6ISf33uXY9ttklKNg6Mkk9H6+Od2fcyI2IovQM8lE
XUqjqLByC4lMX0rHnnY89awznfvYIzcU32/l8d5777F8+XLc3Nw4ePCgRpbKh1EoFDo3A6vCxo0b
mTZtGv7+/mzdulWrv9QCMn36dL766it1e3JyMp07dyYhIYEFCxawbNmyGh1fRORJQbSA1AE2Njb0
79+/xvPNzMwqDYDXhYODAw4OVb9R19PTo23bttWy9oiIPMmEnknmq3cvUZCnOwDZta05UxZ3wsXd
TGe/SNPC3MqAYZM8ePY1N84eTuDw9zHE38zWGKMsFji++w7/HE5g+GQP3lrdDQSIOJ9KyIn7XDl5
n/T7BTrXLy5Scfl4EpePJ2FgpEfXfg48/ZwL7Z6yFWOMylAaewkliV0qUj6AcpWPlJQUzp8/j0ql
wsfHR+v3ND4+Xh3fkZ2dza1bt4CSdPXW1tZa65XFzs6O5557js2bN6vjLAH1Gm5ubkgkEpKSkjhx
4gTPPvusOkNnVeTLy8sjMTERIyMjnJycdMqQlJREbm4uLi4uGBgYkJGRQVpaWoXyx8bGcvXqVfT1
9enYsSMuLi46x6WkpJCVlYWtra2W3Onp6aSnp2NlZYWVlfZ+9/Xr1wkPD6e4uJjmzZvj7u4upv9v
AogOyyIiIiLAiV/usGb2hXKVj0GvtiRgaw9R+RDRQqYvpeeIZnyyozczV3TFxUPbSl+QW8yutVF8
MOYkkRfT8O5lz4SFHVgZ3I8PtvVgqL87Di3Kt0AX5iv5OziB1W+dZ86QY/y4MpyY8Ixyxzclvvvu
OxQKBR07dmTUqFHVnl9cXMy8efOws7Nj6NChDB8+HGdnZ3VymFJeeOEFAgICANi9ezceHh54eHhU
OX6iuLgkkYGNjY26rU2bNnh4eJCTk8Po0aNxcnLi5Zdf5s6dO9WSLysrCy8vL7y9vXW6X6tUKvz8
/OjcubO6f8OGDXh4ePDZZ59pjY+KisLX15eWLVsycuRInnvuOZo1a8bAgQO5e/eu1viFCxfi4eGh
EY9ayqpVq/Dw8GDNmjUa7QUFBbz44ou0bt2aF154gTFjxtC9e3deeumlyi6lyBOAaAERERFp8hzc
fJM9G67r7DMx12fyx9507iO6AV65cgVBEOjUqZMY91IO3fo70qWvA+d+S2DvNze4H6cZb3D/bh5f
vHWebv0deXVeO6zsDXFrb4lbe0teeqsNd65ncf7IPc7/fo/7d3XHKmSlKTj6022O/nQbx5Ym9Bjq
QvehLtg6Gekc/6RTmkCmR48eNXpfTp06lcDAQAYPHsysWbOIj49n1apVvPfee7i6ujJ27FgAPvjg
A3bv3k1QUBA9e/Zk8uTJAHTs2LHSY+Tn56uLHJfNXlnK7Nmz+fPPP5k4cSLe3t4aFoCqyOfo6MiQ
IUM4dOgQBw8e5IUXXtBY/7fffuPOnTtMmzYNU9OK3dhv3rxJ165dKSgoICAggGHDhlFcXMyuXbtY
u3YtXbp0ISIiAltb20rPuyIWL17ML7/8wrPPPsvcuXMxNzcnJCQEhaLiJA8iTwaiAiIiItKk2b46
gt9/iNHZ5+xmyqwvumHf/PHHRt24cYOCggKaN2+uM612feDr60tRURG5ubkYG4v1TMpDKpXQ/TkX
fAY68efPsez79gZ52ZppfC/+kUj4uRTGvN2GZ15orr5xbuFlTgsvc0bPbM3tiEzOHk7g7G8JZCTr
jjFJvJ3Lng3X2bPhOq27WvP0MBd8Bzo2qeD1GzduAJp1sarKhQsXCAoKws3Njd9++03d3qFDB3r2
7Mlnn32mVkBGjBhBYmIiQUFBeHp6MmnSpCodIzExkZkzZ3L79m08PDwYN26c1pjg4GBCQkLUGSZr
It/EiRM5dOgQQUFBWgpIaamBqVOnVirvnDlzyMvL49NPP+W9995Tt/fu3RupVMqXX35JQEAA33zz
TZXOvzxOnjwJlCh2PXv2BDSLJos82YguWCIiIk0SlUogcEloucpHOz8bAgKfrhflIzExkXbt2uHt
7c2CBQse+/FFageZvpRBr7rx2b6+9H/ZlYc35/Nzitm2NIwV08+SkqBt7WjZ1oJX3mnLyuD+zP/m
KXqPao6Rafn7hlGX0gj8JJS3Bx3jq/cu/5ulq+rpgBsr9+7dA6hRNqfAwEAEQWDMmDEa7b6+vhgb
G3PlyhWNFPVV5ciRI4wePRpfX1/c3NzYs2cPLVq04Oeff9aZ3r60/1HkGzlyJFZWVgQHB2vUIklK
SmL//v107twZHx+fCuVOTU3lwIEDyGQyZsyYodX/1ltvAbBt2zZUqkd7b/n6+gKwcuVKjXIFIk0D
UQERERFpcqiUAps/vMKJX+J09j891JnZa33rbRc5MDBQ7S/+008/PVLaUJH6x9RCzmvvtufD73ri
3kH75jPyQhofvnKSk/t1vx+lUgltfGyY9EFHvjwygDc+70KXvg7oyXS7GxUrVJw/co81sy8w59k/
+H75NaJDn9wbvNIb97g43devlLVr1zJ37lwuXryobouKigJg37599OrVS/3o16+fekxl6+qitIBw
dnY2/fr148svv+T69es63a8AOnXqpLO9OvIZGBjwyiuvUFRUxA8//KDuL/0+qYr1o9SdzdHRUaei
5Obmhlwup6CgoEbXpSxTp07Fzs6OvXv30qpVKwICAkhJSXmkNUUaD6ICIiIi0qRQFqv4JuAyf/+a
oLN/8KstmbK4U70VFRQEgU2bNiGRSDA2NiYzM5Off/65XmQRqV1c21qwcGsPxs1vh4GRZkrdgjwl
Wz8OZe2cC2Snl+8Dry/Xw2eAE2+t6sYXvw/gtffa49GxfBe97AwFf+yMZan/Gd57/jh7v77OvZic
WjunhkCrVq0AiI6OrnDcjz/+yOrVq4mIiFC33b9/HwBjY2NkMpnGw9fXl2eeeQalUndiioqYOnUq
OTk5REZGEhwczNtvv42BgUG116mufBMnTgQgKCgIePB9YmxsrNP162FKrUnlZcWSSCTqTFYJCbq/
Q6tK27ZtCQsLY/To0aSmprJs2TLc3Nx0BrKLPHk0mhgQCRIEBIpV1f8iEGmcKFUlO8ByWfW/tEVE
dFFcpOLrBZe59GeSzv7nX/fk+Wmej1kqTf744w+io6MZNGgQbm5ufPvtt2zatEl9Y/EwulJphoaG
cvPmTTp37oybm1utzNHF3bt3USgU2NnZYWamnR1MqVQSGxuLXC6nWbNmVb0ETzRSqYQBr7SkUx8H
gpaEcu0fzR3fkL/u89G1k0xd0pm2vjblrFKCqYWc/mNc6T/GlaS4XP4+FM/fwfHl1rC5fzeP/Rtv
sn/jTVq0NsfvWSf8Bjlh69y443lat24NwLFjx8jLy6tWfFKrVq24evUqs2bNwt/fv44krDnVla97
9+60bt2akJAQrly5QlpaGjdv3sTf31+nReNhXF1dATRcuMqiVCrVVoqaxNw8jL29Pbt27SI0NJR3
332XX3/9lYkTJ9KvX79yU/6KPBk0GguITK9EV0rJTq1nSUQeB7mFeRQUlQRdWpnWTwCuIAiEhoYS
GhqqM61hYyIsLIzQ0FAEQbtqc1OhuEjFV++Vr3y8MqdtvSsfAN9++y1QsoNa6jJx6tQptSvGw5RN
pXnu3DmcnZ3x9vbmxRdfxN3dnbFjx2q5cNVkji6WLl2Kh4cH8+fP19m/f/9+PDw8WLJkSXUuQZPA
1smIuev9GL+gvVaBwYyUQlbOOMvu9VFVjuFwaG7CqOleLN/fjwWbu/PMi80xNit/j/FOVBa71kYx
f8RxFo8/zeFtt0iOb5yufpMnT8bU1JSEhAS+/PLLas319vYG4Ndff63WvMLC8ivb1yY1ka90syIw
MJCNGzcCVQs+B/D09EQqlZKUlERSkvZ3ZVhYGEqlEjMzM416I6VJFNLT0zXGp6Wl8csvv1R63I4d
OxIcHMyoUaNQqVTs2LGjSvKKNF4ajQJiZ16yE3Q55ko9SyLyOLgUEwKAiUH97czl5+fj7e2Nt7e3
zi/ixkTXrl3x9vYmP1/3zuiTTnGRig3zL3H5uO7/42vvtufZcVXb9a9LkpOT2bt3L/b29owaNQof
Hx86d+4MPMhiUx7R0dEMHz6cVq1asWTJEhYsWICVlRU7duzQGUxa0zllKU1Dun37dgoKtIvpff31
1wC8/vrrla7VVOn3kisfb++F+0NuVIIAh7ZE8/nrZ0lLqt7n1rOzNRMDOvLlkYG8ubIr3fo7IpOX
/3N/OzyTnWsieXfkcT76v5Ps+/YGd6KyanQ+9YGTkxMLFy4EYMmSJdXKzjRz5kxsbGzYuXNnlW7y
SwPdT5w4UTNhq0l15QN47bXXkEqlfP/99+zZs4d27drRo0ePKs01Nzdn0qRJqFQqVq5cqdEnCIK6
ZkhpMHopjo6OABrxNVlZWTz33HMaLm9lSU3V3lAuLWLY2Df9RCqn0SggA9r3BeDApV/JLWycuzQi
VUOpUrLr7D4Aurp1rmdpngxat25N69atkUobzUe+1ihSKFn334uEnLivs9///Q70f9n1MUulm6Cg
IBQKBRMnTkRfvyQAvnTnctu2bRX+KO/fv5/Fixdz4sQJAgICWLZsGYcPHwbghx9+0OkfX5M5ZfHx
8cHb25uMjAytXc5bt25x5MgRfHx8yg28FSnBobkJCzZ1Z/h/PLQyZd0ISWfRq6cIPaPbJaYiZPpS
uvZzZOaKrnz5+wAmfdSRdn42SCr4Goi7ns2+b26w6NVTzB36B9uWhXH5eBL5ucXlT2oAzJkzh1df
fZX8/HymT5/OgAEDWLZsGQcOHGDXrl0sXryYmBjtjHe2trasW7cOfX19hg8fzpQpUwgMDCQoKIgZ
M2bQpUsXrl27ph7fvXt3TExMiI+P55VXXmH37t2EhYXV2XlVVz6A5s2b079/f1JSUigsLKyy9aOU
pUuX4uTkxMqVK5kwYQI7duwgMDCQ4cOHs337djw9PdUKXymDBw8GYO/evYwYMYKxY8fi7OxMUVFR
uRsQPj4+jBo1inXr1vHLL7/w9ttv8+OPP2JhYSEWI2wKCIKQJjQS/m/tf4TnV44VFu1aJhQWFda3
OCJ1gFKlFNb99o3w/MqxwourXxVyC/PrTZbc3FwBEAAhLi6u3uQQqTmKwmJh9ZvnhEldD2k9/tPt
kHByX8P6v3p5eQmAcP36dXVbRkaGYGRkJADC7t27teYsXbpUAIRZs2bpXNPHx0cAhK1btz7SHEEQ
BH19fQEQcnNz1W1r1qwRAGHQoEEaY999910BEDZu3FjZaYuUIfxcivDO4KM637O710cKSqXqkY+R
kVIgHN0eIyybfEb4Tzft4+h6TPELFj6dfEbY+8114frlVKFIoayFs6199u/fL7Rq1Ur93V324ezs
LAwcOFA4c+aM1ryLFy8KPj4+glQqVY+3tLQUevXqJcTGxmqM3bFjh2BhYaEet2TJEnXfvHnzBECY
Pn16leTV9ZnSRXXkEwRB+O677wRAMDAwEFJSUnSuWfo9MG/ePK2+5ORk4cUXX1TLBwhGRkbC1KlT
haysLJ3rLVu2TJDJZAIgGBoaCiNHjhRSU1OFgIAAARA++ugjjfGTJk0SXF1dNf5HXbp0EU6fPl3h
tRB5MpAIgpAGWNW1olMbRCZcZ8FPixAQ8HBwY0o/f9q6eNW3WCK1RFzqXTb/uY2Q2FAA3h4yg37t
+9SbPHl5eZiYlNSAiIuLq3IQbV5eHmFhYdy+fRtPT0/atm2LoaFhrc25desWUJIOUSKRkJWVxYkT
J7CysqJLly46AzAfnlNeu0Kh4PTp0xQUFNCjR48KgxZTUlI4f/48crkcPz8/zMzM1EHJzZo1Qy6X
V3yh6hhFgZL/zb2oFeQLIJHAfxZ503N4wwmM/uuvv+jbty99+/blzz//1Ojz9/cnKCiI5557juDg
YI2+ZcuWERAQwLx58/j888+11n311Vf56aef+Oijj1i0aFGN5wDI5XKtQoRpaWnqnc6YmBhatGih
fg8UFBRw79499edIpGpkpyvY9OEVnVaPdn42TFvWGXOr2knOkZ5cwMVjiVw8lsj1kDSEKpZ20DeQ
4tHREq8u1nh2tsKtvSXGZg2n+GF2djaRkZHExMTQvHlz2rVrV6Ug7NzcXCIjI7G3t6d58+bljsvL
yyMqKgpjY2M8PDyQyR5PTp+qyldbKBQKIiIi1OdZmRU9PT2dW7du0a5dO4yMjKp0jNJAeRcXF5yd
nWtUzV6k8dFosmABtHH2YsGouSzf/wXRSTEs2P4RjpYOtLRtgXE9xgqIPBqFRYXcTUsgNuUOUJLx
bHK/CfWqfNQElUrFihUr+PDDD1EoHqTRNDU1ZfXq1TrN4DWZ06ZNG4qKisjOzuatt97i+++/V9eM
sLa2Zvv27QwaNEjnnIcrWJdtX7t2LZ988ok6+NjBwYH9+/fj5+ensVZRURFz5sxh3bp16jYjIyPW
r1/PypUrCQ8P5+LFi3Tt2rU6l69WKcwvZs3sC0ReSNPqk0hhysedeHpow8qwUhosGhkZSbdu3TT6
SrPO/Pbbb8TFxVXrxqM0O1XZ91dtzrG2tmbUqFHs2LGDoKAgPvjgA/bs2UNycjLTp08XlY8aYGYl
Z/ZaH4IDb7FnQ5SGUhB+LpWPXz3NG593rTD9blWxsjNk4NiWDBzbkux0BSEnkrj8VxLhZ1NRFJSf
dbKoUEXkhTSNz5ijqwlu7Sxo2c6CZp7mNPc0w9SyfjYizMzM8PX1VRe7qyomJiZanz9dGBsb14tr
YVXlqy3kcnm5NUp0YWVlVW35rK2ttX5nRJ58GpUCAuDn0Y1NU9ex8tBawu9GkpiRRGJG4w4QFnmA
q21z5g57ixa2db+zU9tMnz6djRs30rFjRxYtWoSHhwcREREEBAQwbdo04uPjNXaTazqnlP/+978c
OnSIiRMn0r59ew4fPszvv//O0KFDCQ8Px9Oz6hmdPv74Y7744gsGDRpE37592blzJxcuXOD111/n
8uXLGmMnTJjA9u3b6dixI0uWLMHZ2ZkzZ87w7rvvkpamfcP/uMnLLuKLWeeJvqpdeE0ihamfdKb7
EOd6kKx80tLS2LVrF8bGxjotbfb29mRlZZGRkcHWrVv58MMPq7x2aR2BqqbWrcmcyZMnq/3E33//
fXXw+bRp06p8TBFNJBIJwyZ50KqTFV8vuExmyoOsS+n3C/hsyt/839x2tRq/ZGYlp/fzzen9fHOK
CpVEXkwj9EwyYWeSSYytvBp4YmwuibG5GjV2LGwNcHE3xaGFCfYtTHBoboydizFW9oYNymIiIiLy
eGlULlgPU6wq5lTk39xOvkN2fnZ9i1Pr2CiD0EN7B+pPZVsKC/pptOWmSbl5RtMkb2aiYvTITK2g
xtogK1FF7FkluSlVT+tq7SrFpYseJjaaAhkZGNHcphnPtOmJobxiV6XHSXVcsC5cuICfnx82Njbc
unVLoyZCYmIi7u7uCIJAeHi4+qauJnPggRuMr68v+/btU6dCFASBESNGcOjQIfz9/dm6davWnIct
IKXtcrmcQ4cOMXDgQABiYmJwd3cHSlwZTE1NAfj777/p0aMH1tbWREdHY2n5YAc2ISGBrl27kpSU
VG8WkKz0QlbPPK8zg49UT8K0JZ3xG+ykY2b9smbNGmbPns3bb79dbhrR1atXM3fuXFxdXbl165ba
FaIyd6pWrVoRHR3NqVOn6NmzZ43nQPnvI0EQcHNzIzY2lg0bNvDGG2/g6+vLuXPnHum6iJSQmVLI
1wsuE3VJW8HvMcyFCQs7aKXyrW1S7+UTcT6ViHMpRF5MI/2+dtaz6mJorIe1gxFm1nLMLOWYWckx
sdDH0ESGoZEMA2M95IZ66OlJyEpXkJOhwMRcH/tmosdDU8fM2oAWXub1LYbII9DoLCBlkUll9G3X
u77FqDNuXVmHVKW963RV4UVmTkeNNkMLuLDLDEH14OY+HWhr7sSgnqZ1Ip8wUeDc7/fYvS6KlITK
00Tm3oLrf0LHnnYMm+SBVxfdlVYbI0FBQQiCgL+/v1ZBNkdHR1566SW+++47tm/fzoIFC2o8pyy/
/fabuiItlOyYzpgxg0OHDmnFEFTGDz/8oFY+oGTn29LSkoyMDFJSUtQKyLZt24CSmISyygeAs7Mz
NjY29ZayOCUhj1Uzz5N0R/szoyeTMP3TLnTr71gPklVO2dof5TFhwgQWLFhAbGwsR48eVWedKeXM
mTMkJydjZ2enbjt48CDR0dF069ZNQ5F4lDm6kEgkTJo0iUWLFjF79mxAtH7UJha2Bsz7+il2rYvk
8DbNTE5nDsUTdyOLt1Z1q9OCgjZORvQa2YxeI0s2YlIS8rh+OZ3rl9OIDs0g4VZ2leNHSinIU5IQ
kwPayalERCql30stGL+gQ32LIVJDGrUC8qQjkej+98ik2jtPejKwcFSSkaA5J+iXjDpTQCQSCU89
60y3/o78sTOWQ1uiyc6o3Gc89HQyoaeT8exsxZDx7nTqY49U2riDzq5fvw6UxFToorS9dFxN55TF
wEA7CLXU7eru3bsUFxdXOTBy6NChWm0mJiZkZGi6Md24cQOA9u3bV2ndx0VsZCZr3r5ARop2cTCZ
XMrMz7vSqbd9PUhWOWfOnCE8PJwePXpUeF1tbW0ZNWoUO3fuZNOmTVoKSEhICB06dGD69Ol07tyZ
sLAwPv30U+RyuU4rR03nlMekSZNYvHgxCoUCc3Nz/u///q9a80UqRqon4eW32+LR0YrNH12hIO+B
dTzuejYfjzvN68s60+FpuwpWqT1snY2xdTamx7CSWKrC/GJiI7KICc8g7no2d29mk3Arh+Kiamol
IiJV5PjuO7zyTts6t/6J1A2iAtKQKUcBMZYVo6sevFUzbQXk9KV8btwuxLNl7WRM0YVMX8rgcW70
eaE5v/8Qw+HvYiioQs74GyHp3Ai5iH1zYwa/6kbPES4YGDXOt+S9e/eAkmA6XZS2JyQkPNKcyii1
pKhUKpRKZa1nZim1bjxs/ahPrpy8z9cLLlOYr+2uKDfU4+0vutHWz7YeJKsapdaPqlgMpkyZws6d
O9m3bx8pKSnY2j44rxkzZmBlZcWSJUvUBSfd3NzYtm0bvXr10rleTeaUR4sWLRg4cCC///47r776
qhh8Xkd06++Is7sp6/97qcR68C+5WUV88dZ5XpjhxbD/eDz2TEIGRjK8ulrj1fXB95lKKZB0pyQu
JOlOLklxuSTF5ZGWmE/6/QKKCkXlRKTmWDsaicpHI6Zx3u01EcqzgBjo6S5G5uCmIkaHy3XgL5ks
fafud38NjWWMnOpJ/zGuHP7uFsd2xOq8KXyY+3F5fL/8GrvXR9FzRDP6j2mBo2vdWG3qCldXV0JD
Q0lO1l0srPTGvWXLlo80pzJKg4ednJx0WkgelRYtWhAWFtYgKsMLglCSJWh9FIKOUCQTc31mr/HB
w7thh7gFBgYSGBhYpbGDBg1C0HWylFgkFy5cyPz58wkPD8fGxgYXl4ozfVV3TmVZsQoLSyxQYuXz
usWppSnvb+vBlkVXuXAsUd0uCLBnw3VuR2Qy+eNOGJnU70+8VE+Ck5spTm66v8+z0xVkpBSQna4g
+98Yj5zMIgrziynMU1KQV0xRoYqCfCX3YnIoyCtGJpNi62LUaDerRGoHC2s5wya3qm8xRB4B8RPc
gJFI9NF1qyGT6L4JsG+pezfplyNZvDvVBnPTx7NTYGop56W32jBkvHu1FJH8nGKO/nSboz/dpp2f
DX1eaE6Xvg7oyxv+DkebNm04ePAgV65c0dkfEhIClFQkf5Q5lXH16lUA2rVrV+U51aF9+/YEBwfz
66+/MmPGDI2+Q4cO6aw0XBdkpyvYvOgKV0/pVt4s7QyYu94PFw8znf1PMjKZDG9v7zqf8zCXLl3i
r7/+wtfXl86dOz/SWiKVY2gs443PuxIcFM3udZqpei/9mUTCrdO8uaobzuXc/DcEzKxKAs9FRESa
HhVXlBGpVyQS3SkKJRSiK2RCKVNiaqWthOQXCOwI1s4KVNeUKiIrDvZj5NRWGJtVXd8NP5fK1wtC
mPPsH/zw+TViIzLrUNJHZ/r06cjlcr777ju1a1UpYWFhHDhwAAsLC8aPH/9Ic8qyd+9ejddFRUVs
2LABgLfffrs2TkuLN998E7lczsGDB/n000+5d+8eISEhvP/++/j7+6uD1euyKFfkxVQ++r+T5Sof
Lq3MeD+wR5NUPuqT1atXA6L143EzdKIHc9f7YWqp+XuRGJvLJ+NPc/7IvXJmioiIiNQfjToN75NO
XMQQlAVRWu0H9ezJLQgkLjtPq09y3ZKDP2srIU52Mk782BKZXv0FexfkFXN81x1+/yFGZ7BwZTi6
muD3rBNPPeuMU8u639Urm4Z37NixOn3ajY2NWbt2LQCffPIJH374Ic2aNWPOnDm4u7sTFhbGihUr
yMrK4quvvtK6Vvc0HAAAIABJREFUOavJnNJUqCYmJvTv359Ro0ahr69PYGAgf/zxBwMHDuTIkSM6
55SXhvfhdoBmzZoRHx9PTEyMhhvYt99+y8yZM9XFD6FE4Th8+DCzZs0iPDycqKgovLy8qnG1K6cw
v5hd/4vij52xOl2uADr2sGP6p50xMq2b+gJFhUoy0xRkpRaSk6kgN7OI3Kwi8rKLKMgr4zaiUFGs
UFFUpEJZpCI/p5jUe/kUF6mQ6kmwsDWslkJeEVdvHeXijYN0dOuPj9fIOptTEXkFmfx8cjEyPX1e
7vMx+rKquf8Zm+oz8P9a0rHH4wmcfpJJvZfPunkXiY3Q3mwaPM6NMbNaoycT9xxFREQaBqIC0oCJ
jxxJUX6oVvs+qQVOhvs5cVd7B7itsRUrA3S7O60JcGTkgPrfFS4uUnH2twR+/z6GuBs1q9/i4mFK
52cc6NzHAfcOFnUScFlWASkPCwsLjUxRO3bsYM6cORqB415eXqxfv14jzW1ZqjunVGm4fPkyU6ZM
4eLFi0BJVqzx48ezfv165HK5zjm1oYAAnDt3jl27dnHjxg38/PwYOnQonTp1wtXVlTt37pCYmIiD
g0OF1646nP0tgZ/XRpKWWH7tgecmuDP6rdY1zqiWn1uiJKQl5pNyL5+0pALSk0qCZTOSC8lIKaxS
cgWR6iGRwMItTzf4WJ3GQFGhku8+u8ap/Xe1+jy7WDHj0y5Y2jWcWksiIiJNF1EBacAkXH8JRe5F
rfZfMKSX4ymCwm9r9TU3M+afIFNCIrRv1Dp4GXDg6xZ1IWqNiTiXwtEdsYScSKp2DvlSzK3ltHvK
lrZ+NrT1tcXWyah2hawBiYmJxMXF4enpWeWMUVWd87DSkJycTFxcHB06dNBSPB4n+fn5mJqaYmho
SE5OTq0ohVdP3Wf/xhvcCivfBc/IVMbkRd507VdxjY8ihZLUe/kkx+eTHJ9HcnweKfH5pNwrec7N
0p3cQaTuGTzOjbFz2ta3GE8Mx/fc4cfPw7VS4Jpby5n+aRfa+NjUk2SPn8jISAoKCmjdujVGRjX/
bbhy5QqCINCpU6fHnmFMRORJRAxCb8BIy8mCJQVamOvui8/J4z8vOzPrY20FJOx6If+E5NG9c8Op
ItvWz5a2frak3svn+J47nPgljuz0ymuJlCUrTcE/vybwz68lFgQbR0PcO1ri1r7k4eJuiqnl470x
d3R0xNGxekXvajIHwM7OTqOQXH2xevVqVCoV48ePf6Qf6LzsIv4Ojuf4njjib1ZsIfPsYsXUTzpj
62REUaGStKQCUu7lk/rvIyUhj5SEfFIS8mulcrNI3WDTADYNniT6vtgC19bmrJ9/ScNqmJWmYMWM
s7wwvX5S9dYHo0ePJjw8nIsXL9K1a9car+Pr61uutbg+UKlUXLt2DYC2bdvWadydiEhdIL5jGzLl
BKFLETA1UGEh1ydToblrqxLAs72E5k4y4u5pu4ts3JnRoBSQUmycjBg9szXPT/Pk6qn7nNx3l6un
79fIKpKaWEBqYiLnjzxIT2lmKcfRzQRbJyMs7QyxtDXA2EKf7LRCigpVGBrLcGhhgp6s4f8gC6qS
AIjwc8kYGT7+/+Xrs1/B1sYBv649cHRwISMznRNnjrIveDv6+nJGPzuNa//oDhAvxdBYhmtbC2T6
UvJzi7l7I4vo0AzCziQTdSkNZXE5QR7/oieT4NrGAkNjPf435wLp9wvIyRAtGI2R9t1t6fdSw7LM
Pgm4tbdk0Q+9+CYghGv/pKjbBVVJqt6oy2lM/aQT5lZ1VyNKpO7Izc1VZ65LSEjAycmpniUSEake
ogtWAyYp+j/kZ/2p1X4IA15t/we7o/IJuZ+h1T/c3ZnEy0Z8vE73TeDRQFc8WjT81IcZyQWcCY7n
7OEE4q7XLFbkSeT3mx8iCEoGeixCT1o3wdYVcSnhezIKYilSaiZBsDJyo539SEzlVa85I5WCqhHV
IpPqSTC3kmNuY4CZlRwTc31MLPQxMdPH0ESGobEMA2M95AZ6yORS9PWl6OlLkUghK6WQ3OwiDI1l
2Lk0vE2A+sDIVCZmK6tjVCqB/RtvcGDjTa3kDZa2Bkz9pFODLtT5qLRv375WLCAVxctVlfT0dEJD
QzExMaFbt241lgUgOzsbc3NzQFsBCQ0NJS4ujr59+zYIa83DNHT5RB4PogLSgLl/axp5mUe02n/F
gBfbHuLafVP23NAONmxnY45/aw+efiWGrBztu7uxw8z5dG7tBQg/Du7dzuHsbwmc//0e927n1rc4
Ik8gejIJ1g6G2DgZlTwcjbCyN8TKwRAre0MsbQ0xtdRvEm4rIk8e1/5J5tuAK2RnaLq4SiQwdJIH
o173fCKzZDUkBWTjxo1MmzYNf39/tm7dWmNZoGIFxMXFhYSEBG7fvo2rq+sjHacuaOjyiTweRBes
hkw5Llh6gEKVh7uF7niBWxm5GBpKeHWEBV//lK7Vv+f3bGZPtMHBtvH8+51amjLqdS9Gve5FUlwu
IX8lEXLiPjdC0lEpK3bXEREpxdLOALtmxtg5G2PnYoytixF2ziXPlnaGNc6gJSLS0Gnf3Y5FP/Xi
64WXuXH5we+CIMChLdFEnE9l6iedcGhecea/hkxKSgpnz55VWxjMzCq3rqWkpHD+/HlUKhU+Pj41
zt5X2Trx8fEkJ5d4JWRnZ3Pr1i0ALC0tsba21hirVCq5du0aEREReHl50aFDB/T1K7d25+XlkZiY
qE6RfufOHZTKkqyYbm5uWpsnVTn3jIwM0tLS1HIqlUrOnj2LUqmkd+/eGmOvX79OdHQ0mZmZNG/e
HD8/Pw25qytfbGwsV69eRV9fn44dO+Li4qLzvKsjo0jDofHcgTZByitEKAUUynxamhmjL5VS9JAP
S4FSSUJOPv4vWLL553SKHgoFURQJbN6VzsLp9R+4XBMcmpvw7GvuPPuaO/k5RURdSiPyfCoR51Nr
nNZXpPEjkYKlnSE2jkbYOJZYMmydjbF1MsLWpcSqoS/Xq28xRUTqDSt7Q979pjt7v77Ooa3RGi5Z
t0Iz+GjsKV55pw39Xmpcu9JKpZJ33nmH//3vf+o2IyMj1q9fX+6c4uJiFixYwMqVK9VtUqmUZcuW
8e6771b52FVd54UXXuD8+fMA7N69m927dwPw7rvv8tlnn6nHhYSE8OKLLxITE6Nu69ixI3v37sXd
3b1CWY4fP86wYcPUr/v06aP+Oz8/H0NDw2qf+4YNGwgICGDevHkMGTKEMWPGkJaWxujRo9U39wcP
HmT27NlER0drzPX09OTQoUN4enpWS76oqChee+01Lly4oLHegAEDCAwMpFmzZtWWUaThISogDRhJ
uVmwBIqEAvSkElpamHAjXfumOzojh2ea2zNqkDk//6pdmOrHA5nMHGeNhVnjviEzMtWnc5+SeiAA
+TlF3A7PJCY8k5hrmcRHZ5Mcn1dpULNIw0RuqIexqawkzsJcH1NLOWZWcixsDDC3NsDC1gBLO0Os
7A2wtDVEWo+FNkVEGgNSPQkvzmxNu6ds+fb9EDKSHxSFVRQo+e7Ta1w+noT/+x2xdmwc2cmmTZvG
li1b6NmzJwEBAVhbW3Ps2DFmz55Nbq5ul92pU6cSGBjI4MGDmTVrFvHx8axatYr33nsPV1dXxo4d
W6VjV3WdDz74gN27dxMUFETPnj2ZPHkyUKJclBIREcHTTz+NmZkZH374IQMHDmTLli18//33DB8+
nLCwMKTS8t3kvL292bJlC3PmzCEjI4PPP/8cW9uS+J6yloianPuNGzfYvHkzrVq14vnnn9coNBsW
FoanpycfffQRbdu2JSEhgZUrV3Ly5EnmzZvH3r17qyzfzZs36dq1KwUFBQQEBDBs2DCKi4vZtWsX
a9eupUuXLkRERKjnVVVGkYaHGAPSgEm5s4Cc1O1a7X8hp4vbWrwtn+XQrQR+jbmnNaarvRX/6ehO
9B0Fgybprhw9Z5INb4231u54wlAWq7h/N4/7cXlkJBeQkVJIVmohSXdySYzNRVGgRCKVYG4jx8JG
LNJV1+RmKhAEgVadrej4tB3m1gbI5FJk+lL0/302MJZhYKQnukSJiNQhORkKtiy+Sshf97X6DI31
eGlWG/q91KJBxz1FRkbSvn17HBwciI6O1qj1ERsbi5+fH/fv39eIAblw4QJ+fn60bNlS7QoFcObM
GXr27EmnTp0ICQnROI6uGJDqrlNZDMiIESM4ePAggYGBTJw4Ud0+ePBgjhw5wi+//MKoUaOAmseA
VFfmZcuWERAQAMDChQtZunSpltzFxcVaaYBPnz5Nr169cHJy0iiyW5l8I0eO5MCBA3z66ae89957
Gn3vvPMOX375JdOmTeObb76plowiDQ/RAtKAqcwFC8DdwlTnmOjMHAA8Wsh5tpcph0/maI3Zsjud
yS9ZYmz05AUelkVPJsWppSlOLXVfKxEREZGmiKmlnFmrfTi5L46fVoZTkKdU9xXkKfn+s2v8HRzP
hIUdaO5pXo+Sls+mTZtQqVSMGzdOq9Cgq6srtra23L+vqWAFBgYiCAJjxozRaPf19cXY2JgrV66Q
m5uLiUnF8TC1tQ6UxGMcPHgQuVzO888/r9HXt29fjhw5wpkzZ9QKSE2pqcxDhgxhyZIlOtfUVYOk
VNkrjXupCqmpqRw4cACZTMaMGTO0+t966y2+/PJLtm3bxldffaVlDapIRpGGh6iANGDKd8EChapU
ATFBAjxs4MgsLCIlvxBbIwNmvGqlUwHJyFLx3b5MXh8rGsBEREREmiq9n29OW18bNn90lahLaRp9
0VczWPTqKQaObcnz0zwxNnv8qb8r4saNGwC0bt26ynOioqIA2LdvH6dPn9Y5Ji4ujjZt2jyWdcqu
JZPJGD58uEZfamoqUBK0/ajUVOaOHTtWagmLiIjg9OnTJCYmqq0egi73i3K4fv06UFKU18LCQqvf
zc0NuVxOQUEBcXFxWtaTqsgo0nAQFZCGTAWFCAtVJX6tBjI9mpkZE5edpzXuVkYOtkYGeLc2pFc3
Y05d1B6z6ed0Jr5ggaHBk20FEREREREpH1tnY+Z/+xTHd9/h57VRFOQ+yF4iqODIj7f5JziB56d7
0vfFFg0m3ur27dsAOmMCyqPUImJsbKy1e+/r6wugzs70ONYpu5aBgYHWWg4ODjg4ONC8efMqrVWV
49SGzKXcvn2b8ePHc+rUKeRyOT4+PlVSuh7m3r0Sd/KHs4KVIpFIsLKyIikpiYSEBDGFbyNHVEAa
MBW6YP1rAQFoZWmqUwG5mZGDn5MNAG++Zq1TAUlJV/LjwUz+M1q0goiIiIg0ZSQSCf1ecqVTb3u+
/+waISc0XZeyMxR8/9k1/tgRywtveNGtv+5U8I8TU9MS19qMDO2ivOXRqlUrrl69yqxZs/D396/x
sWtrndK1AMzNzTl+/PgjrVXZcWpLZoCcnBz69+/P3bt3CQoK4uWXX8bQ0JCCggK2bNlSrbVKFYry
3LaUSiUpKSkAtGzZ8pHkFql/xG3vBkx5LlildUBKcbcsJw4k44Hb1VOdjPDz1h1g/fVP6RQqGlE5
ahERERGROsPawYhZX/gw64tu2DprZ8JKiMlh/bxLfPzaKa6e1g5gf5y4ubkBJZmYHkahUJCTo+1+
7O3tDcCvv/76SMeu6TqFhYVabV5eXhgYGBAbG0tERMQjyVXRcWrr3Es5ffo0MTExDBs2jAkTJqhT
6dZEPk9PT6RSKUlJSSQlJWmNDwsLQ6lUYmZmphF0L9I4ERWQhoxErrO5xALyQAHxKCcQPSmvgBzF
AzP6rAk2Osclpyn5fl9mzeUUEREREXni6NzHgSU/9+GFGV7IDbVTtsdGZPHlrAssmXiaC8fuoVI9
/nTnpXUltm3bRnx8vLo9JSWFAQMG6IybmDlzJjY2NuzcufORbsSru469vT0AJ06c0OozMDBQ1+CY
MWMGBQUFNZarouPU1rmXUuo2VRq/Ucq5c+eAEqtFerpmQeTy5DM3N2fSpEmoVCqNGiVQEktSWi/l
rbfeemS5ReofUQFpwFRUB6RQ+UABMTfQx87IQOfYW5kPdn96djWmSzvduxNf/ZROXr5oBRERaYik
pqZy+vRpLl26VG5dAxGRukBuqMeIKa34bO8z9BrRDImOu4ZbYZlsmH+ZBaOOc2zHbfJzi7UH1RGv
vPIKHTp0IDk5GV9fX6ZNm8aoUaNwd3fH1dWVtm3bas2xtbVl3bp16OvrM3z4cKZMmUJgYCBBQUHM
mDGDLl26cO3atUqPXd11unfvjomJCfHx8bzyyivs3r1bw3KzcOFCfHx8+Ouvv+jUqRMrVqxg165d
LF26lBEjRjBt2rQqXZMBAwYAsHjxYlasWMGePXtq/dxL6d27NwYGBoSHhzNw4ECWL1/OSy+9xNCh
Q9XWqVWrVqkD6SuTb+nSpTg5ObFy5UomTJjAjh07CAwMZPjw4Wzfvh1PT08WLlxYZflEGjCCIKQJ
Ig2SzKQtQsylllqP/ZdaCVujZ2qM/e5ajDDz6AWtx+7rcRrjTpzPEVr2u67zseHH1Md5eiIiIpUQ
HR0tDB8+XKAk0Z0ACBKJRGjevLkwa9as+hZPpAmScCtbWD//ojCp66FyH6/3OCxs/uiKEHXp8fym
JCcnC4MGDVJ/RkxNTYVx48YJhYWFQrt27QRAuHjxota8ixcvCj4+PoJUKlXPtbS0FHr16iXExsZq
jNXX1xcAITc395HW2bFjh2BhYaEet2TJEo1+hUIhLFy4UGOMVCoVvLy8hKVLl6rHZWVlqfsTEhI0
1sjMzBSGDBmi7pfJZDWWeenSpQIgzJs3r9zr/+OPP6rllUgkQo8ePYSIiAjh2LFj6usWEBBQZfmS
k5OFF198UT0XEP6fvTsPi7JcHzj+nYVh3xdRXAEFN0QtPaDmUif7ZWaL2W6e1DYtyzKzzKNlq1rH
ymOWaZqd1NRKszTTUlxwCw0UUFFQ9n0GBmaY7ffHxOg0gwybLD6f6+LC3veZd54hmJl7nue+b1dX
V9PUqVNNKpXK5v4dmaPQ8ohGhC2YqvBrii/NtTl+CjlZnsN4Ivxygteh7EK+Ts6wGdvFy51ZN1pX
o5gw4xJHE22Xd328pOz7uiue7q27O7ogtAXFxcVER0dbyk3ec889tGvXjsTERH766Sd69+5NXFxc
c09TuE5dPKPi++VnbBLV/y6okxs33NKeASPa0a23d5OWSS0tLeXChQv06dPHqvN3bdRqNSkpKQQF
BTWo0pSj16moqCA1NRU3NzfCwsLs9tEAc3Wp4uJievbsadPjxBGXLl0iJyeHsLAw/P3tb8FurMde
UVFBcnKypfdKtaKiIvLz84mMjLT5f1/b/KqqqkhOTrb8nK7WBV5ofUQA0oKVFW2k6OJsm+PJyElz
H8j0Hpe7pOdXaHjjkO2yqVQiYfHwaBSyy3+48ScqeHBmls1YgGkP+/LSZMfLGQqC0DRefvllFi1a
RM+ePUlKSrJ68dXpdJw6dYro6OhmnKEgmBPSd667wKHtWeh1V9/G6xPoTL9hQUQM8CNioD++QY4n
LAuC0LaIMrwtWM1VsExWZXgBgtxc8FTIKauy3ntrNJk4rywn0u9yF9t/RLsR09+VQwnW1wBYtbmU
x+72IdBP/GoIQnM6fPgwAE8++aTNJ39OTk4i+BBahA7dPPjX632555ke/LYpg7gfMinJs59AXVqg
Ze+WS+zdcgmAwI5udO3pTcfunnQM8yQkzAPfdi44KcQqvCC0deJdZgt2tT4gVyahVwv38SQhv8Tm
+NmSMqsABGDWZH/umZ5pM7ZSY2Lp2mIWPh9Uv0kLgtAoZDLzm7C9e/cyY8aMWser1Wp++ukntm7d
SnJyMrm5uQQGBhIbG8vrr79OcPDlng2LFy/myJEjTJo0idtvv93u9Z5//nmys7NZtmwZgYGBACiV
St566y0OHjxIZmYm/fr148knn6zxGsL1w9vfmbue7MGdU7tzOr6QuK2XSPg9/6qrIgWZFRRkVnB0
V47VcQ8fJ3wDXfD0c0buJKE4T4NOa8DZVUaHUE+7FbkEoS68/BTcPKEr3gH2C/gITU8EIC1ZDWV4
zX1AbFcvwn087AYg50pt66D37+XKrUPd+WW/bUWd9T8q+dc9PoR1tn//giA0vTFjxvDbb7/x/fff
88Ybb/Daa69ZghJ7NmzYwOTJk/Hx8aFnz55069aNgwcPcuLECfbt20dCQoJlr3lgYCDffvstBQUF
doOHxMREli5dysCBAy3BR0pKCmPHjiUtLY1BgwYRERHBnj172LZtG5988gnPPPNM0/wghFZFKpXQ
JzaQPrGBVJTp+HN/Pn/8nkfigQK0lY512C4v1VFeqgPKbM5dTLU9Jgj1cWJvPm9sGNbc07huiYye
FkziYB+Qat19Pe2Oz1Cq0RlsP4WaNTkAezldBiO8s6KwTnMVBKFxTZ8+nREjRmAymfj3v//NoEGD
OHToUI3je/TowcaNG8nPz+fgwYPExcVx5swZpFIpSUlJ7N271zL23nvvxd3dnb1795Kenm5zrc8/
/xzAquznv/71L86dO8f69euJj49n586dJCQk4OnpyZw5c+rUiVq4Prh5OvGP/wvhmfcG8NGeW5j5
yY2MeTyM7tG+yORNl4wuCI7IPFfmcFAsND4RgLRgNW3BkmFCb6rCaLIOKtq7u+DuZLuopTeZuKC0
XekI76Jg/Ggvm+MAuw+pOfiHbZAjCMK14ezszM8//8yUKVMA+OOPP4iNjeXxxx+3+2Z/6NCh3Hff
fVbVf8LCwoiNjQUgLS3NctzDw4Px48djMplYu3at1XU0Gg3r1q3D3d2dBx98EIDvvvuO+Ph4hg0b
xoQJEyxjw8PDefDBB1GpVPzvf/9rvAcvtDlOChl9YgK5d1oEc76IYdneW3l1VQwTX+vDqAldiBjo
h0+gs90+I4LQFKJvCsLZVWznay5iC1YLJpHWnAMC5lUQF9nlLugSiYRwHw9OFti+OTlbWkYPP9sV
kpn/8mfrnjI0WtsOtguXF/Djis5IpeKTKkFoDi4uLnz++ec88MADTJs2jdTUVFavXs3OnTvZsWMH
ffv2rfUa1V2HKyutt20+9thjrFmzhrVr1/L6669bSmRu2rSJkpISJk+ejKen+Tnj999/B6Bfv37k
5eVZXac6t+TvnZAF4WoULjLC+/kS3s+6CKfRaEJVpKW0UEt5aRU6rZH05FKKczUoXGV0DPcUr0lC
g3n5ORM1NLC5p3FdEwFIC1bTFqzqeL3KWGkVgIB5G5a9AORcif19s+0C5Dz5gC9L1xTbnEtOq+Lr
bUoeHedTt4kLgtCobr75ZhITE1m8eDELFiwgOzubESNGkJycbAkwwFyLf+PGjWzfvp2cnBxycnLI
zs62e80RI0bQpUsX0tLS2L9/P8OGmfdCV2+/mjp1qmVsdXDxySef8Mknn9i93qVLlxrlsQrXN6lU
gk+gCz6Bl0v09h/RrhlnJAhCUxABSEt2lRwQsJ8HEu7jYXMM4IJKjc5oxMlO0seT9/uyfruSvELb
vZCLvyhizAhP/LzFMqUgNCcnJyfmzJlDTEwMI0eOpLi4mI8++oiFCxcCcOzYMUaPHk1JSQl9+vRh
6NChTJ06lWXLlnH06FGb60kkEh599FEWLlzIl19+ybBhwzhz5gz79u2jb9++DB482DK2qqoKMCfG
33DDDXbn17179yZ41IIgCEJbJAKQFuxqOSBgvxRvBw9XXOUyKvXWwYTeaCJDqSbcTqK6q4uUlyYH
MOu9PJtzqnIji1YW8s6L4hOov9NoNHzxxRf4+Pjw8MMPN/d0hOvEiBEjGDx4MIcPH+bkyZOAeeVj
9OjRlJaW8uOPP1pVttq6davdAARg4sSJLFy4kG+//ZaPP/6YlStXAtarHwA9e/Zkz549dO7cmfnz
5zfNAxMEQRCuGyLdqwWrOQAxs1eKV/pXHog99srxVrv3Vk+ie9rvSrt+u4rjSbb31Viqqqr46KOP
uOeeexgyZAgTJ07knXfe4eeff26y+9RoNCxevJhVq1bV+xpqtZrp06fz5ptvWh3fs2cPixcvJiUl
pVnnJ7RdkZGRALRrZ/5gID4+nuLiYqKiourUk6N79+4MGTKEsrIy1q9fz5dffomLiwuPPPKI1bjq
VY/t27ej0dhvMicIgiAIjhIBSAvmSBK6PTWV4z1TQx4ImLdjvDkjEEkNuX1zPshHp7dNVG+osrIy
brjhBmbMmMH27dsxmUz8/vvvvPrqqzz99NONfn/V1Go1s2bN4v3332/0a3/33XfMmjWLEydO1Psa
TTk/oXXYtGkTarVt9bqCggJ27NgBmCtfgfnvCMy9OoqKiixjz549S1JSEgBZWVl27+exxx4D4MUX
X6SgoIDx48fj62udGPzII48QFRXFxYsXeemllzAYbLdrmkyN//wgCIIgtE1iC1ZLJrHfofPyCoj9
ACTcx34AckGpxmA0IauhgkifHi48eIc3/9umtDl3Nr2KT78p4dlH/Wqfdx3MmTOHxMREHnjgAVas
WIGXl7kscGpqKnv27GnU+7qSm5sb77zzDn5+jft4AO68805CQkLo169fva/RlPMTWoennnqKqqoq
7rrrLqKjo2nfvj27du3ihx9+oLi4mNtuu42JEycCMGTIEHx9fSkpKWHAgAFMmDCBjIwMtm3bRv/+
/QFzQDNixAibFZIJEybw3HPPWUr7Xtn7o5pcLueLL77gtttuY9myZcTHxzNu3Djat2/PyZMniY+P
p0ePHnz99ddN/FMRBEEQ2gKJyWQqBnxrHSlccwZ9KZcS+9sc1wCrJe7c1/ktbvAbZ3PeaDLx8t6T
aOx8SjlzYAShNWzRAihVGbhlUgZFpba3VThJ2PZpJ3p0sx8Y1UfPnj1JSUkhOTnZsq2ktSgqKiIg
IICIiIgGbbcSBHtGjRpFXFwcer3e6ribmxvPP/88r7zyiqVMLsDu3buZOHGipepV586dWbp0KWPH
jmXgwIERXSW9AAAgAElEQVScPHkSiUSCSqXCw8P6OeDBBx9k/fr1tf4u5+Tk8PTTT7Njxw60Wi1g
Dk4iIiKYNGkSL730UmM9fEEQBKENEysgLVhtOSC6GlZApBIJYT4enCqys5JRWnbVAMTHS8a8aYHM
eCvX5lyVzsTMd/P4blknnBqpi231Vo+kpCSHAhC9Xs/SpUvZu3cv+fn59O/fn9mzZ9O1a1ercd98
8w179uzhiSeeIDg4mC+++IJdu3axaNEiYmNjUavVPP/88wQHB1vlcJSWlhIfH8/hw4eJj4+npKSE
nj17Mnv2bIcDpCvv+8Ybb7Qcf+KJJ666TSUmJobHH38coMb5XXntqKgoVq9ezS+//EJBQQFjxozh
pZdeQi63/bM+fPgwq1ev5sSJE3Tt2pX777+fyMhIPvjgA2688Ua7n3oLzWvPnj2o1WpOnjxJVlYW
er2esLAwIiMjLSuFV7r55pu5cOECp0+fxtPTk7CwMMu5P/74g5MnT9KtWzeb4APMv1fffPNNrXNq
374933//PXq9npSUFAwGAz179kShsF+xTxAEQRDsEQFIC1ZTAFKdA2KvCla17r41BCAl5YzuevX7
vfNmT7bsUrH3iO31T53V8slXxbzwL/+rX8RBDz74IIcOHWL69OkEBgYyfPjwGseWlpYyduxY9u/f
T48ePfD39+fTTz9l06ZN7N27l169elnGHjx4kJUrVzJgwACWLl1Kamoq7du3t+yV12g0rFy5koiI
CKs3+K+//jrLly9n4MCBdOvWjbNnz/Lll1/yww8/kJKSYtVzoSbV933zzTdbBSD79++3O/7ChQto
NBp0Op0lAKlpftXXjo2N5fXXX2fnzp0EBgZSUFDA/v37KSgoYMmSJVbXX7VqFU899RROTk6MGDGC
4uJiJk6cSHR0NPv370elUokApIVyd3e3dDJ3hEKhIDo62ua4VCq1bMVqDHK5nD59+jTa9QRBEITr
i0hCb8lqrYJ1tQDEfh5IWmk5eqOx1rte+HwQ7q72Vzk++bqYo4mNUxXrscceY/DgweTl5TFy5Ege
f/xxcnNtV18AFixYwP79+1m6dCkpKSkcPHiQ77//nsLCQhYsWGD3Nq+++irR0dGkpaWRnZ3N6NGj
rzqf++67j/T0dA4fPsz69es5d+6cpbfCDz/80KDHevr0aZuvd999l6qqKvz8/HjttdccvtasWbPI
z88nPj6evLw8S6fqFStWWK2yXLx4kWnTpuHq6sqhQ4fYvn07v/zyC2fPnsXJyfz7JZKHBUEQBEG4
lsQKSAsmkUjMQYhJZ3NOajLZLcNbrZOnGy4yKRqDdbChMxrJUFUQdpVtWAAdg52Y+0wgc5bk25wz
GuG5N3P56fPO+DawQaGXlxe7d+9m9uzZ/Pe//2X16tVs2bKFxYsXM2XKFMu4wsJCli1bhoeHB1On
TjX/bICxY8fi7e3Npk2b0Gq1ODtb56dERUWxdu1ah7eI3HTTTTbH7rjjDnbu3ElGRkYDHqmthIQE
HnroIeRyOVu2bKlTIzd/f3927NhhWZEZPny4JQm5sLCQwMBAAJYsWYJGo2HMmDFERUVZbh8cHMyr
r77Kb7/9ZvlZCk3LYDBRqTWh15vQ6U0YDKDWGFCWGXF3leLh1rY/D/J0l+LlIRqaCoIgCCIAafEk
EidM9gIQQHuVFRBzPxBPkuxsw0otVtUagAA8MMabnfvL+f2w7f3kFup58d1cvni7Q4PfwLq7u/PJ
J5/w8MMP8+yzz3L8+HGmTp3KH3/8wbJly5BIJJw+fRqdTke3bt1Yvny51e39/f1RKpVkZmZa7XsH
ePrpp+u1P91gMJCTk0Nubi4XLlwAsEkGboisrCzGjh2LWq1m9erVV916Zs+8efNstoOFhIRQUlJi
VSK1ulHdqFGjGj5pAQCd3kRBsZ78IgP5RXryivQUFBsoURooLTOgKjNSWmYOLCo0RjRaExqtEV3j
/fq0Wg+M8eLtmUEi6BUEQbjOiQCkhZNInLC3QUaG/UaEV+rhZz8AOXuVfiB/995L7fi/KRcpVtpW
xfrtcAVLVhXx0uQAh693NTExMRw+fJj33nuPuXPnsnz5ch599FFiYmIsQcCZM2d48cUX7d4+NzfX
JgCpq9LSUhYuXMjatWspKCjAy8sLFxf7DRrrS61WM3bsWLKysnj11VeZNGlSna8hkzn2SXJ6ejpA
nfIIBChRGriQWcWFTB0Xs3VczNFxKUdHVp454BC71upn/XYVN/Rx5d7Rtkn0giAIwvVDBCAtXM2V
sExUXSUJHaBHDXkgF5RqdAYjTrLat3wE+cv5YE47Jr2Sbff8sq9LiAh1ZuxI+/dVVzKZjFdffZWE
hAQ2bdrE5s2biYmJoX379oA5R2Pjxo2Ncl9/V1FRwejRozl+/DgLFiywbFtavXq11XawhjAajTz8
8MMkJCRw3333sXDhwka5bk0CAgLIyMigsrLpOtm3Zll5Os6mV3E2o4pzGVWcu1hF2sUqlGW150kJ
9XMmXdvcUxAE4QqLFi0iISGBpUuXWrbvCkJTEwFISyexv33IvAXLtkvylUI8XHGXy1DrrVcv9CYT
55XlRPg59ink8EHuPPWAL5+uL7F7/qV38wjwkRHT382h6zlixIgRbNq0idTUVABLhavqvgj2Ss02
1G+//caRI0eYNm1anRLC62LWrFn88MMPDBo0iDVr1jT5VpTu3btz/PhxDh48SExMjNW53bt3N+l9
tyTKMgPJ57WkpFWRekFL6oUqzlzQoq4USxnX2ohB7s09BUGwoVarGT9+PHq9ns8++4xu3bo195Su
mb1797J9+3beeustEYAI14wIQFq4q/UCuVoVLPNtJYT7enKyoNTm3JmSMocDEIAXJ/tzNLGS46c0
NueqdCamzs3mmw870reH49uVTCYTmZmZdOrUyeZc9SrHgAEDAOjYsSP33nsvmzdv5r333muSAOHs
2bMAllK91aq3MalUqgZd/7PPPuODDz6gS5cubN26FVdX1wZdzxFPP/0069ev5/333ycmJoaYmBhO
nz7N4sWL+fnnnwHHt3O1BkajifQsHclpWk6f05KcpiU5rYrcwuZPwJBIwNVZgpOTBLlMgt5goqLS
iMEIUil4uElxc2m7ieheHlKmTvBt1A8qBKGxbNiwgR07dgDm0uVXlj8XBKHxiQCkhZNIr7ICUssW
LDBvw7IXgKQUlzG2DukScpmE5QvaM/api+QV2uaDqCtNPPxiFqvf6cDAPo69sdbr9XTt2pV//vOf
jBs3jl69epGXl8emTZvYt28fXbt2ZcaMGZbxS5cu5cCBA8ydO5dTp04xbtw4vLy8OHr0KPHx8Sxe
vNiqF0hdxcbGIpFIWL9+Pd7e3kRGRrJ161ZOnTqFRCJh165dJCYm0rdv3zpf++TJk0ybNg0wJ4R/
/fXXNmNCQkK4//776z1/e2666SamT5/OJ598wpAhQ1AoFFRVVREREcHHH3/MhAkTbCqHtRblFUZS
z2tJOW8ONk7/tbpRqWn6VQ1/HxlB/jKC/OW085fTLkCOn7cMb08pPp4yfLzMFZ883KS4OEtwcZbg
rGi7wYUgtHafffYZUqkUo9HI6tWrmT9/fpv6cEYQWhoRgLRwV8sBuVoVrGo1rXJcVKmp1BtwlTv+
BBvoJ2flwg5MeD7T7pu8MrWRR2Zl8dHcYP45pPYqWxKJhO7du7Nz50527txpde6uu+5i0aJF+Pn5
WY6FhISQmJjItGnT2LJli6Vzs4eHB717925wsvigQYNYvHgxr776Kh9//DFOTk48/PDDbNy4kWee
eYavv/6agQMHUllZWecXpkuXLlmqaK1evdrumKFDhzZ6AALw8ccfM3LkSH7++WdKS0sZMWIE9957
L/Hx8QB2u2q3JDq9ifTMKlIv/LV96nwVKRe0XMppulUNhZOELiFOdOvoRNcQJzq3d6JzByc6BjvR
IUgugglBaEMSExM5fPgwjz32GIcPHyYlJYUdO3YwZswYm7Hl5eVotVp8fX2RSqWo1WoSEhIICwuz
5Co2ZHw1rVbLiRMnUCgU9OnTx9K3qZrBYKC0tBRnZ2c8PMyvt1lZWVy4cIF+/frh6VlzXualS5dI
T08nKioKb29vR39MgtCoJCaTqRjwbe6JCPZlp95NVcUJm+ObcUEl92FB30O1XuO1uD9RVtmW8n0i
KoyoQJ86z2lPvJon5mZjuEqe7tMP+fLCJH+c5LXnOBQWFnLq1CkKCgoICAigR48edOjQ4aq30ev1
pKam4urqSrdu3Ro1l0KpVHL+/HkiIyOttkklJyfToUOHNvOE/f777zN79mz+85//WK00NZfyCiPp
meYk8LRLOs5lmJPD0zOr0NsuujUKd1cJ3bso6N7Nme5dFIR3VhDWWUHHYDlSqSgVKwjXg2effZZP
PvmEAwcOEB8fz4svvshdd93Fd999ZzN2/PjxbN68mdOnT7No0SLWrVuHTmd+fb3nnntYs2aNJSCo
z3iA5cuXM3PmTDQa85bnoKAgNm3axLBhwyxjkpKS6Nu3Lw888ABvv/029957LwkJCQAEBgby888/
M3DgQKvrZmVlcffdd3P06FHA/CHgrFmzOHnyJDt37uT8+fPXVe6L0LxEANLC5ZyZgFZ91Ob497iQ
J1HwTvTJWq+x5tQFjuYW2xwf3jGI+yJs8y8cseUXFS+9l3fVcqShnZyYPTWAm2PckcnEm7nmolar
cXe3TvxVKpX07duXwsJCLly4QLt27Zp8HpUaI/lFenIK9WTm6snK03EpW0dGto70LB2FJU0UZQAy
KYR2VhAZqiCymzMRoQoiujnTMdj+CqMgCNeHyspKOnToQEhICElJSRQWFhISEoLRaOTSpUsEBwdb
ja8OKMaMGUNGRgYPPfQQwcHBLF++nKNHj/Kvf/2LVatW1Xv88uXLeeaZZ7j//vt54YUXSE1NZcGC
BRQWFnLx4kXLB2DVAUhMTAyZmZn06NGDCRMmkJCQwKeffsqkSZOsVtu1Wi2RkZHk5eVZVsVTUlJY
uHAh8fHxmEwmEYAI15TYgtXCXS0J3YgBnVGLk/Tqe/gj/LzsBiCpJfVPqr7nVi8MBhOzF+fXGISc
v6TjyXk5uDpL8PGS4e4mpVOwHH9f8Wt3LX36VjTOrt507PYPgjr0oUyZTdLRbyhX5TJ45HMsXgOQ
Z/e2Go0RkwliB7rSK8wFmdScMC2RSNBojVT+1WSvUmNOqFaWGylVGVCWG1GqDBQrDeQVmZv2lamv
TWlbLw8pPcOc6RXmTM8wBb3CnQnvohDbpgRBsPHtt99SWlrK/PnzAXPp8rvvvpsNGzawZs0aZs+e
bfd27u7uHDlyxLJKPn78eDp16sRXX33Fm2++SUhISJ3Hl5WVMW/ePPz9/Vm3bh1yuZzBgwdTVlbG
9OnTWbVqFS+88ILVdQ8dOsSMGTP4z3/+Yzm2fv16tmzZwmeffWbZurVy5UrS09N55513mDx5MgCh
oaGMHj2am266iYMHDzb8hykIdSDeCbZwNSehm9/1Vxkrag9AaugHkqvWoNLq8HKu36fA9/2fN26u
Ul54O/eqXZ4rtSYqC8wDzmVU1eu+hPrzCP8PRr2KLFUZmaVVSCQdcOsyH2/3HuTRkU07ag9Et+8t
vwYzrRuJBLp0cCIy1Bxo9Axzple4MyHtxKrGtVRaWkp6ejpeXl6EhoY293QEoU4+//xzXFxcePTR
Ry3Hpk6dyoYNG/jiiy9qDEDeeOMNqy26np6e3HbbbWzYsIHExESbAMSR8UePHqWwsJDx48eTlZVl
GVv9d5WYmGgzj5tuuokPP/zQ6ljPnj05dOgQarUaHx/zNustW7YA5sDnSjKZDF9fsQlGuPZEANLC
1bQCUv1Zrtagxl1+9ScPXxcFQW7O5FfYNgBLLVFxY7B/vec3ZoQn7QLkPP3vnCbdQiPUn4v3gOae
QoMF+sno3kVBRKgzEd3M26ciuilwbaNla00mE0lJSQBERkbaJKC2JLt27WLChAmMHTuWrVu3Nvd0
BMFhycnJ7N+/n9jYWP7880/LcalUio+PD2fPnmXv3r0MHz7coetVBx2ZmZn1Gn/mzBkANm3axKZN
m2zG27tuhw4dbHIg7fXJunDhAmAuaS8ILYEIQFq6GhoRVtdgcqQSFkCErxf5FQU2x5OLGhaAANzQ
x5WfPu/Mi+/mEXfMsfkIwt/JpNAx2IlunZwI66QgvIs5IbxHVwXentdXOczKykqioqIAc8Ua8aZB
EBrf559/DsDBgwcZOXKk3TErV650OADRas0f8vn7O/aa+vfx1SskkydP5pFHHrEZX72aUR+lpaVI
JBJRWlhoMUQA0sJdrQwv1N4NvVqknxdxWbYBSGpxmZ3RdRfoJ2ft+yFs+UXF+ysL7fYKEQR7fDyl
DO7nyu0jPBk52A1Pd/ECKQhC09Jqtaxdu5bu3buzfv16m/NlZWXccsstbN68mY8//tihN/8XL14E
cHgr4t/HV/exKigoYMSIEQ5dw1GdO3empKSEzMxMkWgutAhtc/9CG1LbFqwqB5oRAvTw88ReHSpl
lY6c8sr6Tc6Oe271Yu+6rrz7UhB9e9hfvRFaJ6nEnHfR2ErLjOzcr2bGwlwG3HWeh1/MZM13peQW
NH/3ckEQ2qYtW7ZQVFTE1KlTGTBggM3X8OHDuf3226msrLTbOLY6eKhWVFTErl276NWrl91mtY6M
79+/P3379mX79u0cO3asER8t3HjjjQCsW7fO6vhXX33Frl27GvW+BMERYgWkhaspCf3yFizHVkBc
5TK6erlzQWU7PrlYRXsPx7qXO8JZIeX+2725/3ZvCop1fLtDRWauHpkMundxxtVZlORtTTzcpQwZ
4IaXx+WVCZ3eRInSXOWq9K9qV7mFejKyzGV1M7J0ZObq6ty/Q2+AgwmVHEyoZP7HBUT3dGHMCA9u
H+5Bh6CWmwfRUlRUVJCUlER6ejrdu3enZ8+eV23QWV5ezsmTJ8nKysLd3Z2+ffvSuXPnGscbDAaS
kpI4d+4cUVFRhIeHN8XDEIQmV10h6rHHHqtxzNSpU9m6dStffPEF06ZNszo3btw4ZsyYwdixY1Gp
VMydOxetVsvChQuRSm0/23VkvFwuZ8WKFYwcOZJbbrmFuXPnEhsbi1KpJD4+HplMxrx58+r1eGfP
ns2XX37J/PnzycvLIzQ0lN27d5Oamkp0dDRHjhyp13UFob5EANLS1ZADcjkJ3fGci0h/L7sBSEqx
ilGdm6YPRKCfE8881LAcE6HlcZJLCPKXE+Rf81OI3mDiXEYViaka/kzVknhGQ3JaFVW6qzSP+ZsT
yRpOJGt4a3khA3u7cOfNnowZ4YG/j3jqupLRaGTRokXMmzePqqrLleY8PDz44IMPmDp1qs1t7rrr
Lnbs2GHZhw7mijhz5szhzTfftBn/xx9/MG7cOKtE2OHDh3Pvvfc28qMRhKZ19uxZfv/9d+677z6C
goJqHPd///d/hISEkJCQwPHjx60a+61bt4758+fz7rvvAuY8jo0bN3L33XfbvZaj42NiYjh+/DhT
pkxh9uzZGI3m8uUdO3a0qtRVV+Hh4ezYsYNHHnmEZcuWIZFI6N+/Pz/99BMzZ86s93UFob5EI8IW
rjjrHVT5n9kcP4QTJyQKxoa8wtBA22Q1e9JKy/nweKrNcYVUyvvD+yG386mNIDSmKp2JP1M1xJ+o
5GBCBccSK69awtkemRSG3uDGPf/04tah7rg4t73f24qKCkvzSEeS0J944gk+//xz+vbty/z58wkL
CyM5OZnXXnuN8+fP8+9//9vS56Baly5dmDhxIkOHDiUwMJBffvmFuXPnYjAY+OOPP+jfv79lbEpK
CgMHDkSn0/HWW28xatQoLly4wGeffcaePXswGAyiCpZwXahuLJiSkkJERAQ5OTmUl5cTHh5uU42q
PuOvpFarOXfuHJ07d260Urkmk4m0tDS8vb0JDAxslGsKQn2IjxFbuKs1IgRzGV5HdfVyx0UmRWOw
bghXZTRyXqmmRw39QgShsSicJNzQx5Ub+rgy/RE/KiqNHD5Zye54NXsOqclxIO/DYIS9RyrYe6QC
d1cJ/zfck3tv9WRwP9daX9DbomPHjrFy5UoCAgI4cOAAnp7mv+N+/foxYsQIQkNDee+993jssces
kk/T0tKsynUOGDCA3bt38+uvv3L06FGrAOSNN96goqKCDz/8kOeffx6AgQMHMn78eObMmWP5VFcQ
rjft27dvsvHu7u7069evrlO6KolEIrZOCi2CCEBaOEkNTQYtW7AczAEBkEkldPf1JLFQaXMupUgl
AhDhmnNzlTLyH+6M/Ic7PA+nz2nZEVfOjrhyzqbX3rRSXWli0w4Vm3aoCGknZ/xoL+651YvOHa6f
fJE1a9ZgMpmYNGmSJfioFhwczPjx4/nqq69Yv349c+bMsZyz1ytgwIAB/PrrrxQUXK6Yp1Qq2bBh
A3K5nEmTJtm9jSA0J6PJhMFkMn83Vv8bDCYTJRotlToj7goZrvKGV9jT/JXYVlChwVtdewGXuo5v
ybwUTrg5ibeNQuMQv0ktnKS2PiB1yAEBczleewFIcrGKOwmxcwtBuHZ6hZu7mc/8lz9pF6v48fcy
fvytnHMZtQcjWXl6lq4tZunaYgZFuTB+tBe3j/DE3bXtbdG6UnXzssjISLvnq49Xj7uSRqNh586d
XLhwgZycHEs1HJPpcp7O+fPnMRqNtG/fvkF9CATBHpPJhFpvoEyrQ1WlQ1WlR63To9EbqNQb0BgM
aPQGNHrjFf82f2kNRvQmx3PKGoPPXY9y76g7WZerRl58utHHt2RSiYRxYSHc3KVpckaF64sIQFq4
xuoDUi3S38vu8UtlFZRV6fBUXD+fHAstW1hnBTMm+jNjoj8p57X8sLuMrbvLyM6vfZvWkT81HPlT
w78/LuD/bvLgnlu9iIl2RSpte1u0cnJyAPDz87N7vvp4dna21fFFixbxzjvvUFJSQseOHRkyZIgl
4fVK6enpAAQEBDTirIXrgc5gpEhTRVGlliKNllJNdZCho6xK/9d3HcZrG0M0iE+nLk06viUzmkx8
dy6TXv5ejVo5U7g+iQCkpathC1Zdy/BWa+fmgp+LgmKN7SfKKcVl3Bhs/02MIDSnyFBnIkOdeXmK
P0cTNWz5RcVPe8spU9u+Yb5SpcbEll/K2PJLGcEBcu66xZO7/ulJRDf7f1etUZcuXUhMTLTaNnWl
vLw8ALp27Wo59t///peXX36Z4cOH8+WXX1rOvfLKK5w8edLq9h4eHoC5k7Ig/F2JpoqCCnOAUVip
paiyiiKN+buqStfc0xOaQEGlVgQgQoOJAKSFq30LVt0CEICe/l4cyCq0OX66SCkCEKFFk0gkDIpy
ZVCUKwueC2TXATWbdqqIO1aBnQ/vreQW6vl0fQmfri8hMlTBnTd7MnakJx2DW/eqX2RkJD/++KNN
4FDtxIkTAERERFiOffXVVwAsXbrUKjCxpzpxPTs7m+LiYpuVlqKiovpOXWhFSjRV5KgryVFryCmv
JFetIVddaVPURGjb3OUyQn08mnsaQhsgApAWruYAxLxmXVXHFRCAnn72A5CUYhUmk+m6rCQktD7O
Cil3jPTkjpGe5Bfp2bJLxeadZQ7li6ScryLlfBHvf15EdKQzd4z05LabPAhp1/qCkaeeeoqPPvqI
r776irlz51pV2UlKSmLbtm14e3tb9RCo3raVmppqqbJTWVlJUlISAIWFl58fQkNDiYyMJCUlhSVL
lvDWW29Zzq1du9ZSFUtoG7QGA5lllWSo1GSXmwOOXHUl2hYcaEgAmUSCVCpBJjF/SSUS9EYjVQYj
pr/Oeyrkotx8A/i5KLgzPAQPkYguNALxW9TC1dYJXVOPFZAIPy+kEmz23ZZV6blUVklnL7c6X1MQ
mlOQv5ynHvDjqQf8OJGsYfNOFVv3lKEqr/1N04kULSdStCxcXkjfHs7cNsyDfw5xp3vXlrFNa9as
WZaeIFdyc3Pjo48+IiwsjLlz5zJv3jwGDRrEzJkzCQ0NJSkpiUWLFmE0Gnnvvfesav7fcsstlu7O
x48fB2Djxo24uZn/9n/88Ufuu+8+hgwZglQqZcGCBdx///28/fbbHD16lPDwcOLi4khPT+eFF14Q
ZXhbKZ3BSGZ5BRdV5q+MMjV5ag3XOiXDRSbFS+GEp7OT+btCjotchovMXLnKRS7FRSYzH/vrePUx
uVQiPjQThFZINCJs4SqUu8k/P8XmeAYyfpK44OUUxGu999T5uh8eTyWttNzm+NjQDozuVre65oLQ
EmmrjOw+pOa7XWX8fljNX9UwHdYxWM7NMe7cdKM7/+jnits1rKZ1ZSPCmnh7e1vlZWzYsIGZM2da
JZv36NGDZcuWccstt1jdtrS0lPvvv59ffvkFAC8vL1555RVmz57Nrbfeyu7du5FKpVRUVODsbA7E
1q1bx7Rp01CpVAD07NmTDz/8EJVKxYQJE0QjwlYgV11JWmk56So1F1UV5KgrmzQBXAL4OCvwd1Xg
7+qMv4sCr7+CjOpAw1PhhEImViUE4XojApAWrlIVR17aRJvjmUjZJnHFWerOG1GH63zdnek5bEvL
tjke6u3BzBsi7NxCEFqvYqWBbXvK+GF3GQmnNXW+vZMc+vdyYXA/NwZFuRIV4YyXR8N7CjSF3Nxc
Ll26RPfu3Wstm5ueno5SqaRPnz7IZJcfT2JiIp07d8bb29tqvNFoJDU1FU9Pz1q7swvNy2A0kVle
QVppOWml5ZwrLUetq72CXF0pZFKC3VwIcHU2BxmuCvO/XZzxc1Ega4OV5wRBaDgRgLRwmvLD5J59
wOZ4NlJ+kLgiQcK70Yl1vm5mWQXvHkm2OS4B3rupn2g2JLRZl3J0/LC7jB9/KyP1Qu35IjXpGuJE
3whnoiJc6B3uTJcQJ9oHysV2EKFZVBmMpKvUfwUcZZxXqqlqxLwNhUxKe3cXgt1dae/uQvu/vvu6
KLKnYtIAACAASURBVNrM77xWq0WhaDuPRxBaMvEus4WrrQqWCRNaQwXOsrrlbYR4uOKlcLIpk2jC
nIw+oJ2ohiW0TZ3aOzH9ET+mP+JnaXa4Y185KefrFoykZ+lIz9Kxbc/lrYwKJwmdOzjRNcSJ4AA5
ft4yfL1lf32X4uEuw0UhwVkhQVtlpKLShIe7FA+3tr8FxdNd2mJXjVojk8lEVnklKcUqUopVnCst
R99I+6n8XRR09nKns6cbHTxcae/hiq+zU5t8Y75+/Xq+/vprTp06RXp6Oi4uLoSGhhIeHk54eDgL
Fy7ExcWluacpCG2OWAFp4bQVp8lJHWNzvBAp30rMdbhf6/0bXk6BNmNqs+50OvE5tiU0Bwf782jv
rnW+niC0ZhlZVezcr2b3oXKOJWlqLesr1N0DY7x4e2ZQm3wjey0otTpSi1Uk/xV0lFU1fEuVr7OC
zl5u5i9Pdzp7ueF+HayAFxYWMnXqVL7//ntCQkIYPXo0UVFRlJWVcfbsWX799VdL6WlfX/EWSRAa
W9t/lmnlaq6CdfmTLq2hHOoRgPT297YbgJwqUopyvMJ1p0uIgifuV/DE/b4oywzsO1rBvmMVxB1T
k1dYxwx2wa7121Xc0MeVe0d7NfdUWgW90cjZknJzwFGkIltd2aDrOUmldPN2J8zHg65e5mDDU9H6
Sk83hunTp/P9999z++23s27dOrtBxokTJ2otBiEIQv2IAKSFq20LFoDGaFvNyhGR/vbL8Zbr9Fws
q6CLl3jiFa5P3p4yxo7yZOwoTwDSLlZx+M9Kjpys5M9UDRcyRYfn+jqTrm3uKbRoSq2OU4VKkoqU
pBSrGpTH4SaXEebjQZiPB+E+nnTydBNJ4cC+ffvYsGEDQUFBfPvtt5by038XHR1t97hSqSQpKQkv
Ly8iIyNxcrIN4srLy9Fqtfj6+iKVSlGr1SQkJBAWFmbVq6eqqoqysjKcnZ3x8LBt8KfRaFCr1Xh5
edm9H0ForUQA0sLVFIBcuWO8Pt3QAVzlMkK9PThnpxxvUqGyTQQgS5cu5fDhwyxZssTqSb8xZGZm
8vLLLxMbG8v06dMb9dpCyxLWWUFYZwUP3WGuClWmNpB0RsufqVqSzpoDkovZOsrUYt9WbUYMav3P
K40tq6yCxEIliYWlZKgq6n0dL4UT3X3NwUaYjwft3V3ESrYdK1asAODFF1+sMfiwJz8/nylTprBt
2zbLMWdnZ+bPn8/LL7+M9Iomh5MmTWLz5s2cPn2aRYsWsW7dOnQ68wcX99xzD2vWrMHDw4PMzEzC
w8OJiIggOdm2MMyUKVPYsGEDGRkZdOjQob4PWRBaHBGAtHA1bcGSX7EFS2Oo3woIQJ8A7xoDkDGh
zfdk9/DDD1NaWsrWrVutyoOCeek8NTWVJUuWEBUVZXVu48aNfP7553z99dcEBQURFxfH5s2b+fe/
/93oAUhpaSnffPMNJpNJBCDXGU93GTH93Yjpb/3mpVhpICNbx6VsHYWlekqUBoqVRkpVBkpUBioq
jWi0JkrLDJQojRgMJiRS8HCT4ubSthPRvTykTJ3ga/Mzux6ZTCYuqNSczC/lRH4JRZr6VWNzkkoI
8/Gkp58Xkf5ehHi4NvJM26YzZ84AEBMT4/BttFotsbGxXLp0iQ8//JAxY8agUqlYsmQJc+bMITc3
l//85z82t5s1axYZGRksWLCA4OBgli9fzpYtW/D29mbVqlWEhoYyYsQIfvvtNw4dOmQ1p8LCQjZt
2sQdd9whgg+hzREBSAsnkdjvxmy9Bat+KyBgDkC+P5dlc/xSWQVKrQ5v5+ZZ8tXpdPz0008cP36c
QYMGWY5rNBpWrlyJVqvl119/tQlA1qxZw9mzZwkKCrrWUxYE/P6qeNW/p6iaI1gzGE2cKy3jRH4p
fxaUoqyq3za+EA9XIv286OnvRZi3B06iiV+dnT17FoCuXbs6fJsPP/yQtLQ0FixYwPPPP285/r//
/Y/k5GSWLVvGU089RWRkpNXt3N3dOXLkCK6u5uBw/PjxdOrUia+++oo333yTkJAQJk+ezG+//cbq
1autApAvv/wSrVbLk08+2YBHKwgtk3jmauFqTkK/rL5bsACC3V3xd7F/H0mFynpft6FGjRoFwJ49
1l3ejx49ilZr3kN+4MABq3NarZbff/+d0aNHX5tJCoIgXIXRZCKlWMXXyenMiTvJxwlnicsqqFPw
4SaXcUM7Pyb26srbQ6OYM7gXd3fvSKSflwg+6sFkMlFZaU7mr0t53R07dgDw0EMP2Zx78MEH0ev1
/Prrrzbn3njjDUvwAeDp6cltt92GXq8nMdHcw+vee+/Fx8eHDRs2UFFRYZnnihUr6Nq1K7feeqvj
D1AQWgnx7NXCSSROmNsDWpMCmMzbsLT1TEKv1ifA2+7xpMLSBl23IWoKQOLi4nBxccHDw4ODBw9a
ndu7dy8VFRXcdtttNV5Xp9Nx6NAhUlNTr3r/SqWSAwcOkJiYaNm3W1darZbDhw+TkJBQ72sIgtC6
mEwm0krL2Zh6kVfj/uSThLMcyi6iQu94JbVgdxf+2SWYFwZG8O5N/ZjUpxuD2vvj1Uwr0m2JRCIh
NDQUgLS0NIdvV71tq1OnTjbnOnfubDWmNiEhIYA5jxDMgdBDDz2ESqVi8+bNAOzevZtz584xZcoU
q9wSQWgrxG91K1BTInr1/rmG5IAA9AnwsXs8pbisUTvp1kWPHj0ICQlh//79lhUPMAcggwYNYvDg
weTm5nL+/HnLuR07diCXy7n55pvtXvPNN9/Ez8+P2NhYIiMjmTx5ss2Y/Px87rzzTnx8fBg6dChR
UVF4enry7rvvYqxDY4jly5fj4+PDP/7xDwYMGEDHjh2Ji4urw09AEITWJEOlZsuZS7x+IJEPj6ey
L7OAcp1jfTokQHcfD+7p3pH5sX2Y+4/ejAsPIczHA6lIIm903bt3B8xldh1VnYto73XAYDBYjalN
9Wuav7+/5Vj169Hq1asB+PTTT5HL5Tz++OMOz1EQWhMRgLQCEunV80AasgULoLuvB852lvJ1RiOp
JaoGXbshRo0aRWVlJfHx8YD5Sf7gwYMMGzaMIUOGANbbsHbs2EFMTAxeXrY9BubNm8fHH3/M1KlT
WbFiBeHh4axatYr09HTLmOokw507d/Lhhx9y5swZjh07xj333MOcOXOYOXOmQ/Nevnw5zzzzDOPG
jSM+Pt5S7eSOO+5AqWy+bW2CIDSuwkotOy7k8MahJBYdTWHPpXxKtY6tdsolEnr5e/FQZBfeGdaP
GQMjGNW5HQGu9p/vhcZTvUr+3nvvWX3AdTU9evQA4OLFizbnql9HqsfUpvoa1SsxAAMGDCA6Oprf
f/+dgwcP8sMPPzB27NhGL54iCC2FCEBagZp7gZi3YNW3D0g1uVRKT3/7jcESC1pOHsiff/6JSqVi
2LBhxMbGAli2YWVkZJCcnFzj9qvff/+d/fv388EHH/DEE08wbdo0wFw1q1p1kuFrr73G888/T/fu
3Rk4cCD/+9//iI6OZtmyZaSkpFx1zmVlZcybNw9/f3/WrVvH4MGDmThxIjNnzkSlUrFq1aqG/VAE
QWhWlXoDB7IK+OBYKvMPJvHj+WzyKxx7E6uQSokO8mFS7268c1M/nonuTmxIAB4KUQ/mWnriiSfo
3bs36enpPPPMMzUGIWlpaWg0GgDuuusuANauXWs1xmAwsHbtWpydne3mH/49YCkqKmLXrl306tWL
vn37Wp2bPHkyJpOJ++67D71ezxNPPFHvxygILZ141msNaqmE1dAVEICoAB9O5NvmfCQWlmIydW6W
WvIjR44EzHthFyxYQFxcHDKZjNjYWIxGI1Kp1LICUp0gWFMA8s0331h9OtWrVy8AsrOzLcdqSzKc
PXs2v/76q02VkysdPXqUwsJCxo8fT1bW5epi1Z90VScdCoLQelQnkx/OKeJkQSn6v3dvvQq5VEIf
f28GtPOjT4A3CpE43uzkcjmff/45d911F6tWreL48eM89thjREdHYzQaOXPmDNu2bWPHjh3k5ubi
4uLC008/zcqVK3nvvfdQKBTcfvvtlJSUsGTJEs6cOcPcuXOtVjSqjRs3jhkzZjB27FhUKhVz585F
q9WycOFCm9yOhx9+mFmzZpGdnS2Sz4U2TwQgrUBtW7AamgMC0CvAGwnw95fVsio96So13bxtO7Q2
tS5duhAWFsaRI0dQq9Xs27eP6OhoPD3N3al79+7NqVOnUCqV/PzzzwQFBdG/f3+716pO+qsml9v+
6jdGkmH1+U2bNrFp0yab89VJh4IgtHz5FRric4o4klPk8NYqAKlEQk8/Lwa28yUq0AcXuWO5AcK1
ExMTw6lTp3j22Wf57rvvbLbYdunShddeew1vb3ORFrlcTlxcHM8++yxvv/028+fPByAgIIAVK1bU
uFqxbt065s+fz7vvvguY8z42btzI3XffbTPW19eXu+++m2+++UYknwttnghAWoHat2CVNfg+PJzk
hPnY74r+Z4GyWQIQMK+CrFy5kn379rF//34efPBBy7khQ4aQmJhIXFwce/bsYdy4cQ1aqWmMJMPq
couTJ0/mkUcesTnv42M/4V8QhJahymDkj/wSDmUXkmbn+fBquvt4cEOwP9FBPrg7iZfXli4gIIBv
vvkGg8FAWloaZ86cwdPTk06dOtGtWzeb1xMvLy/WrFnDypUrSU1Nxc/Pr9YGgb179+bPP/8kJyeH
8vJywsPDr/o6pdVqRfK5cF0Qz5CtQFMnoVeLCvSpIQApZVx4iJ1bNL1Ro0axcuVKPv30U/Ly8hg2
bJjlXGxsLJ9++invv/8+ZWVlVy2/64gePXqQmZnJxYsXiYiIsDrnaJJh9daugoICRowY0aD5CIJw
7WSo1BzMLuR4bjGaOlT/C3Z3YVCwPzcG++FbQ08loWWTyWT06NHD4SRyJycn+vTpU6f7cCSZ/Pz5
83z//feMGzdOJJ8LbZ5Y32sFal4BMdMYGr4CAuYAxJ68Cg256spGuY+6qs4D2bp1K4BVAFJdCSsu
Lg6JRNLg/bL1TTK8Uv/+/enbty/bt2/n2LFjDZqPIAhNq1JvYF9mPu8cPs2ioykcyCp0KPjwcJIz
vGMQL9/Yk7n/6M2tXYNF8CE02NKlSzEajaLzuXBdECsgrUDtOSCNswIS4OpMBw9Xssttg42T+aUE
d3O1c6umFRwcTK9evTh9+jSRkZEEBgZazoWGhtKuXTvy8vIYMGCA1bn6qG+S4ZXkcjkrVqxg5MiR
3HLLLcydO5fY2FiUSiXx8fHIZDLmzZvXoHkKgtAw55XlHMgq5I+8EnQO9veRSqC3vzcxHQLo7e+N
TCr6czQWncFIpd5ApcGAzmCkymhEZzCiM5r++m4+VmUwojeaqDIYMZhMGE0mTCYTRsyFAowmcyNI
jcFAdnklVQYjMqmEIFcXXJ2ubR6Od78bucXZnV/yVMTrL9Q63mQykaau4vbHnyQnpDtrTtV+GwBX
uYxhIYG097j2r8+C0BAiAGkFassBMaJHZ9TgJHVp8H1FB/rYD0AKShndrXmWhEeNGsXp06etVj+q
DRkyhC1btjR4+xXUP8nw72JiYjh+/DhTpkxh9uzZlpySjh078uijjzZ4noIg1F2l3sCRnCIOZBWS
XYcV3WB3F2I6BDAo2A9PhehEfjVavYEynZ7yKj1lVTrKdXrKqvSUV+mo0BvQ6A3mQONvXwaT41XF
6sPRMsmNyTX2FiJibyFVB+QWO3Sbrg9OAeBYXkmd7utQdhGvDO5JO7eGvwcQhGtFYjKZigHf5p6I
ULP8809Todxhc3wnzpyXmGPIub1/x9MpoMH3lVVWwTtHku2eeyO2D37XSZMsnU7ncJLh1ajVas6d
O0fnzp3x9RV/ZoJwraUr1ezPKuB4HVY7nGVSBrbzI7ZDAF293Zt4hi1fhU5PqVZHqbaKUs1f3//6
b3OAoadMp6tTeWKhcd3aNZg7w5onV1MQ6kOsgLQCtW3BAnMp3sYIQEI83fB3UVCkqbI5d6KglFGd
2zX4PlqD+iQZ2uPu7k6/fv0aYUaCIDhKazBwNLeY/ZkFZNpZ0a1JNy93YkMCGNDOF+daKt61FSaT
CWWVjqLKKgortRRWaimq1JoDDI050KhyMHATmo/rdfL7KrQdIgBpBWrbggWgbWA39CtFB/my+2Ke
zfGE/JLrJgARBKH1yS6vJC6zgKO5RQ5XsnKTyxjU3p8hHQLa7D56g9FEYaWWvAqNJcgwBxpVFGm0
YuWilevg4cqwjg3LgRSEa00EIK2ApIbcjiv/5zVGM8Jq/WsIQC4o1ZRqq/BxFtVeBEFoGfRGIwn5
pcRlFnBe6fjzYJiPB0M6BNA/yBenNtKdvEKnJ7dCQ55aQ36Fhly1xhJ0tOQYQyaR4CqX4SKX4SyT
4iSV4iST4iSVoPjr3wrLMfNxmVSCFAlSiQSJxNz8USoBKebiAPmVGrR6Iwq5lA7ursga0COqJXN1
khHp54WTaFootDIiAGkFHN2C1Vi6eLnh4+xkt/PvifxSRnQKarT7EgRBqI+iSi37swo5lF1IuU7v
0G1c5TIGt4HVDq3eQLa6kqzySrL/+spVaxz+OTQVuVSCh5McT4XTX9/leCic8HSS4+Ykx1Uus/ly
kctQtJEAUBAEx4kApBWQSOwHIPIrtmA1ZgAikUjoH+TLb5fybc79kVcsAhBBEJqF0WQiuUhFXGYB
p4qUOPqhflcvd4Z2DGRgK1vtMJpM5FdoLUFGVnkF2eWVdnP0mpKTVIKPswIfZyd8XBSX/+2swMv5
csDhIhd5CIIgOEYEIK2AQysgjZgDAtC/nf0A5LxSTammCh/RdEsQhGukXKcnPruQuMwCh998O8uk
3Bjsx9CQQDp6ujXxDBtOZzSSXV7JJVUFl8oryCwzBxu6a7B3ykUmI8BVQYCrM/6uzgS4OuPncjng
cHcSbxUEQWhc4lmlFahpBUTWRCsgYK4GU9M2rD9EMrogCNdAulJNXGYBx/OLHU6U7uDhyrCQQAYF
++HcQj+RNxhNZJVXkKGqIEOl5lJZBTnqyibN0/BUyAl2cyHIzcUSZAS4KvB3dRYBhiAI15x41mkF
HMsBKWvc+7zKNqzjecUiAKmj9PR0pk6dysiRI3n11VebezqC0GLpDEaO5xWzL7OAi2UVDt1GLpEQ
HeTLsI6BhPl4NPEM68ZkMpFXoeWiSk26Sk2GqoKssgr0TdB8TyaREODqTLC7C+3cXGh3xXfXFhqM
CYJwfRIBSCtQcw7IZY29AgIwsJ2f3QAkQ1VBYaWWgOukKSGAXm9O7pTL6/cnU15ezq+//kpAQMN7
tQhCW1RYqSUus4D47ELUeoNDt/FzUTA0JJCYDv4tpkt5pd5AulLNBWU5F5TmoKPSwcfjKAng7+pM
iIcrHTxcCfFwpb2HK4GuzkjbaLWnaykzM5Pk5GRcXFwIDw+nffv2zT2lFstkMmGqIZiWtqDKXPv3
7+eRRx7hlVde4amnnqpxXPVjkYi/oyYnApBWoOYVkCu3YKka/X67ervX2JTwWG4xt3W7Pp6UZ86c
ydKlS4mLiyM2NrZe14iMjCQnJwcXF/sllQXhemQymThdpGJfZgGnHUwqlwA9/b24qWMQvfy9mv0N
d0GFhrTScs7/FXTkqjUOJ8c7wl0uo4OnmznYcDcHHB08XEXlqEZmMBhYtGgR7777Lkql0uqcm5sb
0dHRHDhwoJlm13L169ePxMREu+eWLFnCzJkzr/GM7NNoNGRkZKBSXf290tChQ4mKimL58uXXaGbX
LxGAtAI154Bc1hQrIGBeBfklI9fm+NFrHICUl5eTkpJCRUUFXbp0oWPHjsjsdH5VKpUkJSXh5eVF
ZGQkTk62n4qWl5ej1Wrx9fVFKpWi0+k4duwYfn5+REREWI0tLS2luLgYo9GIUqmkqKgImUyGj4+P
1bjKykoSEhJQKBT06tULNzfrpFeJRIKTk5PNCkpd5nKlzMxMzp49S8+ePQkODq71MRYVFXH69GmG
DRtW4zUF4VpR6/QcqmNSubtcxj86BDCsY2Czrb4aTSayyis5V1JGWmk5acpyyqoar/Stj7MTnTzd
6OTpRse/vvuKgh9Nrry8nJtvvpkjR47wz3/+k+eee47o6Gi0Wi1nz57l119/FcFHLVauXGnz+nbj
jTc202zqp6CggPj4eF577bXmnsp1QQQgrUBNKyBWW7CMjZsDUu2GYPsBSF6FhsyyiiavLpOfn89z
zz3Hxo0brZZ5b7/9drZv3241bsqUKWzbts1yzNnZmfnz5/Pyyy9bLQVPmjSJzZs3k5KSwsaNG3n/
/fcpLzcHcI8//jhffPGFZewNN9xAWlqa5T4BQkNDLcf++9//smrVKk7+P3vnHR5Vlf//10ymJpNe
CYFACBB6EZSurMJSXLCtFBX5gYK6NlTAXZFVFEXKFzsgRUWkiRUEZVlBYDEJRdBA6EkglUzKpE2m
//6YzMBkJjCpED2v55knkzPnnHvmBu697/Npx4453bTCw8PZuHEjf/nLX5zzpKam0q1bN8aPH8+G
DRvqtBaArKws7r//fg4cOOAyx/Lly1EqlW7zpqSk8Oqrr/Lll1/SokULMjMzvTvxAkEjkFFSzt7M
fA7neR9UHhvgy+CYiOuSQtditXGhtJwzRWWcLS7lfHGZ1xXWr4W/QkZsgF/Vyy42bhQ3sj8bL7/8
MsnJyUybNo1ly5a53C/atWvHiBEjruPqmgcPPfQQCkXzFsvbt29HpVK53LsFjYew4TYDvMmCpW/g
IHQHDnO/J5JzChrlmA4qKysZMGAAmzZtYvTo0ezZs4fjx4+zadMmHnzwQWc/g8HAgAED+PHHH1m6
dCmnT5/m0KFD3HPPPfzzn/+s0QQ8d+5c3nvvPR599FFWrFhBfHw8a9asIT093dln5cqVzpvPwoUL
2bp1K6tWrXJ+fvbsWe6++27279/P2bNneeutt8jPz+eJJ56o1Xf1Zi16vZ6BAweSnp7O+++/z6+/
/sojjzzCJ598wptvvulx3ueff56UlBRee+01li5dWqs1CQQNgdFiJTFby8LkVBYdPElSTsE1xYdM
KuGWFqHM7JvAzL6d6NcitEnEh8Vq47yujB/Tcnj/19PM/PkoSw6d4rtzWZwoKKmz+FD6SOkQ7M+w
2Ege6RbHawO78ebgHjzWI56RbVvQOTRQiI/rRFpaGu+99x7h4eEsWrTI67gFo9HInDlz6NWrFxqN
hu7du/PCCy+g1+td+h08eJB+/fqxbt06Tp06xYQJE4iMjGTo0KHs2bMHgJ9//pnRo0cTFhbG5MmT
SUlJqXGOgwcPcs899xAaGlqjq9B//vMfnn/+eQYMGIBGo6Fdu3YsXLjQrd+0adO49dZbMZvNzJw5
k3bt2jFv3jzn5zt37mTIkCEEBATQtWtXPvjgA6/OTU18//33DB48mMDAQPr27cvGjRt55ZVX6Nev
HwUFl58n7r77bv7+97+7jZ88eTLDhw93adNqtbz99tuMGzeO1q1bExwczIgRIzh16lSt17d161aG
DRsmXKWbCGEBaQY0dSX06vSJDOG7siy39oN5hdzVPqbRfLAXL17MuXPnGDx4MN99950zKKxz584u
/ZYuXcq5c+d49dVXefbZZ53t69evJzU1lQ8++IDHHnuMhIQEl3F79uxh//79dOjQAYCKigpmzJjB
5s2bmTVrFgBDhw5l48aNAAwcONAtBuT//u//XH6fNWsWH330EadPn0av16NWe1dt2Zu1vPPOO2Rk
ZLB06VL+8Y9/APDRRx/x7bff8t577/Hyyy+7uaVlZWWRmJhIQECAV+sQCBqK/IpK9mVpSczWUuFl
EHaoSsHgmHD6RYehaYLUsFabjYulFZwqLOVMUSnndGUYG8DCEa5WEheooW2gH20D/WihUV/3WBWB
Z44ePYrFYmHs2LFeXydNJhODBw/m0KFDPP744zz11FMcP36cd999lx9//JHk5GTntV+n05GUlETv
3r3517/+RZs2bRgzZgzr169n4sSJfPLJJ9x///3069eP4cOHs27dOrKzs9m5c6fzeI45evTowQsv
vEBcXBxjx45lx44dPPHEExiNRp555hln//nz5xMWFsb999/Pfffdx8qVK5k9ezadOnXib3/7m7Pf
iRMnOHLkCM8++yzr169n5MiRzvvrxo0beeCBB+jTpw/z5s3jyy+/5Mknn0QikdR6gw1g8+bNTJgw
gZtvvpkFCxaQm5vLzJkzKS8vp6ioCJPpcsr/o0ePekz4kpKSwvnz513ajh49yrvvvsv48eMZPnw4
iYmJrF69mokTJ3L48GGv12c0Gtm5c6fYqGtChABpBnjlgtVIFhCAvlEhbD2X5RZYWWo0c7KwhM6h
gY1y3P/85z+APQj8ahkpfvjhBwAmTpzo9tmECROYPXs2u3btchMgGzZscD7ww2Vhk52dXa91t27d
mnPnzlFeXu61APFmLdu3bwfsfrUZGRnO9l69erFz506ysrJo3bq1y7xr1qwR4kPQZFhtNn7P17Ev
K5+Thd4nxujchEHl2WV6ThWWcLqolDNFZVRa6pehSiaVEBvgR7tADW2D/GgbqGkS8SRoGM6cOQNA
mzZtvB7z4YcfkpyczNtvv+3y4N+jRw8efvhhFi1axNy5c13GLF++nBUrVvDoo48CIJfLWbZsGWPG
jOGbb75xWtrz8/PZvXs3RUVFBAcHu8yxYcMGNm/e7Ox78eJFEhISeOONN5g+fbpz537btm1oNJfT
UXfu3JmRI0eyZ88eFwECdst6YmIimZmZztjFiooKnn/+eTp16kRSUhIAzz77LAkJCSxYsIDp06e7
bXZNmTLFxXo0fPhwp6eCyWRi1qxZxMbG8tNPPznvi88++yzDhw/n0KFDNWbSuhYDBw7k7NmzzmNP
nTqV33//naSkJEpKSry+//3888+UlZUxevToOq1DUHvEVbIZ4I0LltlmxGw1IpM2vA9msEpBua6D
rgAAIABJREFU+2B/The5i5yknIJGEyAOE2p1i0d1Tp8+DUCrVq3cPnM8kDv6XEnLli1dfq9Lil2z
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
hb6dCPe9uolaJpOxb98+nnrqKd544w1eeeUVAMLCwlixYgXTpk3zOO6ee+4hISGByZMnYzAYkEql
jBo1is8++8zFXN6/f38OHz7MI488wuzZs50m35iYGB566CGvv+/HH3/MzJkz2bx5M5s2bWLIkCEk
JiaybNkylixZQufOnZ2Zp9q3b8/LL7/MypUrueuuu+jevbtzx6Uhz4E3yGQygoKCmDt3rrPuSWBg
IEuXLv1DZNgAu9DIKdeTW15JTpXgyCnT1zkVbmMgAcLVSloF+NLK//JLWDMEgqbBz8+PxMRE3njj
DZYsWeJ0XXIQFxfHCy+84Pw9JCSEgwcPMnnyZP7+979js9mQSCQMGDCA1atXuwV1NxSzZs3ixIkT
9O/fH5vN5szcdGW8Yd++fZkxYwZr1qxh7NixxMfH88knn3Dw4EHnppwnV6bqPPTQQ4SGhvLkk08y
ZswYwG4lT0hI4P/9v//n1v+JJ55wa+vatavTerB582bGjRvHpk2b2LRpE/Hx8axfv56PPvqIxMRE
l+D7Bx54gP3797NhwwY2bNjA7bffztdff83w4cPdskL9+9//pqCggDlz5qBQKJg6dSpnzpyhV69e
PPfcc0ilUpdUyQ4cLnJz5sxxcffq1KkT3377rUvsi0qlIjExkalTp7J+/Xo+++wzJBIJcXFxzu9X
13XUd2xzRmKz2QqB4Gv2FFxXDOVHyTl9t1v7JaR8KblsHYlStWdGwtdNubQaWXHsLL9rPQuiMLWS
Z2/qQJDSc9aM6phMJk6dOkVISEiNlbpTUlLo1q0b48ePZ8OGDRiNRk6fPk1sbCz+/v5Xnb+8vJyz
Z886q5DWhZycHORyucvu0tmzZ4mIiHDLnmWxWEhNTfVqbQ68OQd1wWazkZaWhtFoJC4ursZMJjci
FquNwkoDWr2RgkoDBXojBXoDBVVttSnu1xQofaRE+6mJ1thfMf6+xGjUKGVNF6wqEAiuzsWLF0lN
TUWtVtOqVStiY2NrzE5VVlZGeno6bdu2dXHDbUh27drFsGHDeOutt5g1axY6nY7c3Fzat29fY+X2
yspKcnNzXeqbZGRkEBwc7HXBRQdarZb8/Hzi4+OdNaTqilarpby83OkV8OCDD/L555+Tk5NDVFSU
S9+8vDzUarVX683IyCAiIsKZYMZgMHDx4kXatWt31cxiFRUVpKamotVqadu2LfHx8TWeU7DXTTl3
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
dlwUFLTrAAAAAElFTkSuQmCC

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/bitstrings.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
veZsFDYqLKo2apbtz65gT0WzosuiJzkunIOcl1xHbiF3IsYupiDmeaxdbEHseJxd3P64iXiH+KL4
VzwXXgnvTYJnwtGE6UT/xKrEuaSwpIZkQnJU8nm+BD+R37lWce36tX0CXUGOYDjFJuVAyqTQW1iZ
CqWuSm1Jo6OmpjtdK/2H9JEM+4zSjI/rQtedXS++nr++e4POhl0bnme6Z/68EbORs7EjSzlrW9bI
JqdN5ZuhzdGbO7aobsneMrbVY2v1NtK2xG2/bTfaXrD9/Y6wHa3ZCtlbs0d/8PihLkckR5gztNN2
59EfMT/yfuzZZbrr0K6vudzcm3lGeUV5s7s5u2/+ZPxT8U9ze2L39ORb5B/Zi9vL3zu4z2FfdYF4
QWbB6H7f/U2FzMLcwvcH1hy4UWRWdPQg6WD6weFin+KWQ2qH9h6aLYkvGSh1Lm0oky/bVTZ9mHu4
/4jjkfqjCkfzjn4+xjt2r9yjvKlCo6LoOO54xvFnJ0JPdP1s9XNNpWxlXuWXKn7VcHVgdWeNZU1N
rXxtfh1cl143cTLyZO8p11Mt9fr15Q2MhrzT4HT66Re/RP0yeMb7TMdZq7P159TPlTXSGnOboKYN
TZPN8c3DLeEtfee9zne02rY2/mrwa1WbclvpBckL+RdJF7Mvzl3KvDTVLmh/dTnu8mjHmo6HV1Zc
udu5vLPnqvfV69fcr13pcuq6dN3uetsNmxvnb1rdbL5lcaup27y78Tfz3xp7LHqablvebum17m3t
W9Z3sd+h//Id1zvX7rLu3hrwG+gbDBm8NxQ5NHyPe2/8ftL9Nw8yHsw83PoI+yj3sdjjoifyTyp+
1/69Ydhi+MKI60j306CnD0c5oy//SP1jdiz7GfVZ0XOl5zXjJuNtE+4TvS9Wvhh7KXg58yrnT/E/
y15rvT73l+Nf3ZMrJsfeCN/Mvd39TuZd1Xuz9x1TAVNPPiR/mJnO/SjzsfqT1aeuz2Gfn8+sm8XP
Fn/R/tL61fvro7nkuTkBW8he8AII2sKxsQC8rQKAGg4ADfXFJJFFL7wQAS36d5TnffyCl/9PXvTL
C/EWAJzaClADAYBpOwCnUdZAmYrWAEcAgh0BbGr6raLqfEmNNTVZAIiMehVs0dzcO9Qb4rUB+DI0
NzfTPDf3pRL17A8AaP+w6MHno8VOAnAsxMgyzOe6/rPyhfHfNX8DuEroj/qxrFIAACAASURBVHgB
7J0HuBRF9vYPkiRJzjlKVJJIEpAgSTKIREUR1oABMa7iKiLIqou6IgZUBEUUJIhIFMkgSXLOOScB
EfF+/dZ/a76enu65PfHOzH3P84zdXV1d4dd91Tp1QpokQ4RCAiRAAiRAAiRAAiRAAiRAAiRAAiRA
Ag4EbnAoZzEJkAAJkAAJkAAJkAAJkAAJkAAJkAAJKAJUHvBDIAESIAESIAESIAESIAESIAESIAES
8EuAygO/eHiTBEiABEiABEiABEiABEiABEiABEiAygN+AyRAAiRAAiRAAiRAAiRAAiRAAiRAAn4J
UHngFw9vkgAJkAAJkAAJkAAJkAAJkAAJkAAJUHnAb4AESIAESIAESIAESIAESIAESIAESMAvASoP
/OLhTRIgARIgARIgARIgARIgARIgARIgASoP+A2QAAmQAAmQAAmQAAmQAAmQAAmQAAn4JUDlgV88
vEkCJEACJEACJEACJEACJEACJEACJEDlAb8BEiABEiABEiABEiABEiABEiABEiABvwSoPPCLhzdJ
gARIgARIgARIgARIgARIgARIgASoPOA3QAIkQAIkQAIkQAIkQAIkQAIkQAIk4JcAlQd+8fAmCZAA
CZAACZAACZAACZAACZAACZAAlQf8BkiABEiABEiABEiABEiABEiABEiABPwSoPLALx7eJAESIAES
IAESIAESIAESIAESIAESoPKA3wAJkAAJkAAJkAAJkAAJkAAJkAAJkIBfAlQe+MXDmyRAAiRAAiRA
AiRAAiRAAiRAAiRAAlQe8BsgARIgARIgARIgARIgARIgARIgARLwS4DKA794eJMESIAESIAESIAE
SIAESIAESIAESIDKA34DJEACJEACJEACJEACJEACJEACJEACfglQeeAXD2+SAAmQAAmQAAmQAAmQ
AAmQAAmQAAlQecBvgARIgARIgARIgARIgARIgARIgARIwC8BKg/84uFNEiABEiABEiABEiABEiAB
EiABEiABKg/4DZAACZAACZAACZAACZAACZAACZAACfglQOWBXzy8SQIkQAIkQAIkQAIkQAIkQAIk
QAIkQOUBvwESIAESIAESIAESIAESIAESIAESIAG/BKg88IuHN0mABEiABEiABEiABEiABEiABEiA
BKg84DdAAiRAAiRAAiRAAiRAAiRAAiRAAiTglwCVB37x8CYJkAAJkAAJkAAJkAAJkAAJkAAJkACV
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
IiACIiACIiACIiACOUJAyoMceVCF0M2weAdSHhTC09cY84EA/1eJgRAWJHHixIlm8uTJBZUSMR+e
q8YgAiIgAiIgAiIgAhCQ8kDfg6whEGZ5EORLnTWdVkdEQARiCOBmRBaGWrVqxZS7g1mzZpl33nnH
4M4gEQEREAEREAEREAERyB0CUh7kzrPK+56GKQ9keZD3j14DzDMCm222menSpYupV69e4MiIfzBy
5MjQAKmBF6lQBERABERABERABESgXAlIeVCu+HVzLwEpD7w0tC8CuU1g0003NR07djT77LNP4EC+
/fZb8+KLL5rvvvsu8LwKRUAEREAEREAEREAEsouAlAfZ9TwKujdSHhT049fg85DAJptsYo444gjT
smXLwNH9/PPP5qWXXjJLliwJPK/CshF44IEHzCmnnGJQ1EhEQAREQAREQAREoKwEpDwoK0FdnzIC
Uh6kDKUaEoGsItC8eXPTrl07gzLBL3/99ZdN5Tht2rScDaT42Wef2fExxqDt1VdftcNetmyZPT9w
4EA/hrQcT5o0ybzwwgvmp59+iraf6T5Eb6wdERABERABERCBnCewac6PQAPIGwJSHuTNo9RARCCO
wJ577mlI5zhmzBizcePGuPMff/yxWbNmjenQoYPZYost4s5nc8EPP/xg3nvvPVO1alVzwAEHxHW1
QoUKtoyMMtSrVq1aXJ1MFWRDHzI1Vt1HBERABERABEQgtQSkPEgtT7VWSgLkgf/9998Dr95qq60C
y1UoAiKQWwR22WUXc9JJJ5k33njDfP/993Gd//rrr+1KOQqEmjVrxp3P9oIDDzzQjB07NrSbjRo1
si4E5akcyYY+hALSCREQAREQAREQgawmEG9DmtXdVefylcBvv/0WODResitWrBh4ToUiIAK5R6By
5crmhBNOMHXq1AnsPHEQXnnlFYMlQlFRUWCdXC3EAqFSpUqGYJJewRqAwJEoURFcOXDjWLx4sbda
3D4uCBMmTDB8JipBfYAz9y9uc33z3uePP/4w06dPN7Nnz7Z99p7TvgiIgAiIgAiIQP4RkPIg/55p
To5ILgs5+djUaREoFYHNN9/cHHPMMaZFixaB1zOZZfJMOkcm1vkiCxcutC4L5513XsyQzjzzTFv+
xRdfmNtuu81UqVLFtG7d2mAlcM4558TUXb16tenatavZaaedTN26dW1ASj5PPPHEqPIh5gLfQVAf
NmzYYO+PO0XYtnz58piWBg0aZLbffnsbDHP//fc3tWrVMsRYkIiACIiACIiACOQvASkP8vfZ5tTI
wiwP5LKQU49RnRWBhAmwAo7yoEuXLgZlQpCsXLnSPPfcc4aAhIUgN910k3nooYcMyoXHH3/c7L77
7mbIkCExlgXEV4Adk3eUDVge4C7x8ssv28wVpeG07bbbWlcS3Em82wUXXGCbw0qkevXq0aa598UX
X2yVGB999JF55plnzDbbbGM6d+5sfvzxx2g97YiACIiACIiACOQXgVjbyfwam0aTQwRkeZBDD0td
FYEUEmBi2qNHDxsrgFV1v/z55582yCATZdI+MtHNVpkzZ47p3r17TPeOP/54my4xpjDk4IMPPjCT
J082e+yxh62BUrVv375WKXD11VfbMqwRRo0aFW0BBUPv3r1Nz549Dfc/+eSTo+cS3cGVgom/V3BF
QHGDmwlBLlEOILiVoOQgOCTnccFACUT5JZdcYpUd9FkiAiIgAiIgAiKQfwSkPMi/Z5qTI5LlQU4+
NnVaBFJCgCwMTLpZxZ45c2Zgm5jNDx8+3LRp08bsvffedvU9sGI5FhIDgIwRXmFSnaiQVtEpDrhm
r732spd+8803xTax22672fOpcvHgfriVMB5cR1w/uAmxKNavX2+f16pVq6L9qlevnt2fN29etEw7
IiACIiACIiAC+UVAyoP8ep45OxopD3L20anjIpASAptsson18991113NuHHjTJA1ElYI48ePN/Pn
zzeHHnpo1mVkYAW+uGwLJYEiG4VX/IEV3bklS5aYJ5980rosfPvtt2bt2rXuVJk/4Y7iAMUA7gnt
2rWLafPzzz+3xwS1ZPMLriYSERABERABERCB/CQg5UF+PtecG1WY8mDrrbfOubGowyIgAqUngPLg
1FNPNZjwu4mqvzUmy/j4Y8J/0EEHmUL6O/Hhhx+ao48+2uDuccopp1hLDCwByGBRViGjAuxnzZpl
3SUuvPDCuCa33HJLW0Ygx9NOOy3uPEEUJSIgAiIgAiIgAvlJQMqD/HyuOTeqoFVGBqGAiTn3KNVh
ESgzAVK0dujQwdSvX98qEX7//ffANhctWmS++uors99++5mmTZsarst36dOnj40zMHXqVJvtgPFO
nDgxJcMmrsLo0aNtEMt77rknsE3nwrBu3Tpz2GGHBdZRoQiIgAiIgAiIQH4SULaF/HyuOTeqMMsD
KQ9y7lGqwyKQMgINGjQwp59+urUwCGv0r7/+sn74Tz/9tE3vuHHjxrCqOV+OZcCCBQsMq/9eawsy
MCBhf0cTGfjgwYPNvffea5Uwzz//vMGNJEhQ0uy77742iGJYfIqg61QmAiIgAiIgAiKQ+wRkeZD7
zzAvRhD20ivlQV48Xg1CBEpNAGuC9u3b26B9uDJ8//33gW0RD4FgfmQcYHLLRqaAfBIm9E2aNDGf
fPKJza5AJofp06fbVImbbbaZmTRpkiGwpAugmOjY4darVy8bhLJbt26BsQywBNlxxx2t1QNpJA8/
/HDTtm1bc8MNN9hYFaRoJOBlxYoVbTaGRO+teiIgAiIgAiIgArlDQMqD3HlWedvTf/75x/DiHyTO
vzbonMpEQAQKh0CtWrVsSse5c+eaGTNmhP7NwBIBn302JtEoEYgPELaSnmsEhw4daq666iqbvvHF
F180hxxyiJ20E9wQywHcCsLcwMLGSmyJv//+255GGRAkEyZMsMoDzrVq1coqMM4991zTr18/g0UE
wjPCUkQiAiIgAiIgAiKQnwQqFEUkP4emUeUKAVKZDRkyJK67KA7OP//8uHIViIAIFDYBYiCgQCAt
oJu4Fkdkm222MQ0bNjS4QdSoUaO4qjlzjiwLlSpVMtWqVYv2+csvv7TjI/VlpgRFBfetXbu22WGH
HTJ1W91HBERABERABESgHAhIeVAO0HXLWALkRR8xYkRsYeSoatWqgdG84yqqQAREoCAJ/PTTT1aJ
sHDhQpOoHnzbbbc1devWtVYJO++8s9l8880Lkp0GLQIiIAIiIAIiIALJEpDyIFliqp9yAkuXLjWv
v/56XLukbMOnVyICIiACxRFAiUAcgM8++8zgBpWoVKhQwVSvXt2a42ORgMKS1XMpFBIlqHoiIAIi
IAIiIAKFREAxDwrpaWfpWMPSsClYYpY+MHVLBLKMAGb6BPBr0aKFmT9/vnVnSMTvH2uFtWvX2s07
JFymcHUgowEBGzfddFNDQEAUE85VgMCAkuQJwLZRo0ZS0CSPTleIgAiIgAiIQLkTkOVBuT8CdYB0
X1OmTIkDQUowgoFJREAERCAZAsRBwKIJS4Rly5Yl7NKQzD1Ut/QEUPb06NFDCoTSI9SVIiACIiAC
IlAuBIITOZdLV3TTQiWgNI2F+uQ1bhFIDwEyK9SvX98cc8wx5pxzzrFWCWQCwE1BUv4EcDNZtGhR
+Xckx3pw9913m1NOOcWsW7cuoZ4nWz+hRlVJBERABESgoAlIeVDQjz87Bh/mtqA0jdnxfNQLEchl
Arg/ka6R+Clkb+nQoYNNZ1i5cuVcHpb6noMEnnjiCdOuXTvTv3//UvX+ww8/NC+88IL55ZdfEro+
2foJNapKIiACIiACBU1AMQ8K+vFnx+DDLA+kPMiO56NeiEC+ECAQ4h577GE3xsQkjGwvxD1Yv369
2bBhg41tkGjmhnzhkulx4LZA3INCElxpbr/9drN8+XIzdepUc9lll5lMptQsJNYaqwiIgAiIQPoI
SHmQPrZqOUECYZYHCpiYIEBVEwERKBUBgiKy4eLghEkewRZRLKDY/OOPP+zx6tWrzZ9//mmDJ1ar
Vs0oYKIjltxnoQZMHDdunFUc4FLD9woLggsuuCA5eKotAiIgAiIgAuVMQMqDcn4Aur0xYcoDWR7o
2yECIpBpAkzutt12W7tl+t66X/4SwGWBmBsDBgww1113nXnyySdLVB6sWLHCBvxs3LixScTNJtn6
+UtbIxMBERABEUgXAcU8SBdZtZswASkPEkaliiIgAiIgAjlGAKuV119/3bRt29ZcccUVBssVsgzN
nTs3cCSrVq0yzZs3N7Vr17YZh3bYYQfTr18/8/fff6ekfmAjKhQBERABERCBBAhIeZAAJFVJHwFM
gsmd7hdMgjfbbDN/sY5FQAREQAREIKcIPP3003bif95559nftZ49e9r+Y33gF34T27RpY+bPn2+t
E7766ivz5ptvmkmTJhlcH/ySbH3/9ToWAREQAREQgWQISHmQDC3VTTmBMKsDxTtIOWo1KAIiIAIi
kGECBN9ESVCjRg1z7LHH2rufe+659nP48OFm48aNMT2i7rJly8xNN91k04zWq1fPdOzY0SoPWrVq
FVOXg2TrxzWgAhEQAREQARFIgoCUB0nAUtXUEwhTHijeQepZq0UREAEREIHMEhg/frzBeuCMM84w
lSpVsjffc889rXUB2T1effXVmA699tpr9rh79+4x5Vjj4b7gl2Tr+6/XsQiIgAiIgAgkQ0DKg2Ro
qW7KCUh5kHKkalAEREAERCBLCAwePNj2pEGDBuaDDz6IbgcccIAt97suLF261JbXqlUroREkWz+h
RlVJBERABERABEIIKNtCCBgVZ4aAlAeZ4ay7iIAIiIAIZJbAunXrzKhRo+xNzz///MCbf/jhh+bL
L780u+++uz3/ww8/2KwMiaYCTbZ+YCdUKAIiIAIiIAIJEpDlQYKgVC09BKQ8SA9XtSoCIiACIlC+
BJ555hnz559/mnvuucd88skncdvpp59uiInw1FNPRTtKhgXKVq5cGS0rbifZ+sW1pXMiIAIiIAIi
UBIBKQ9KIqTzaSUg5UFa8apxERABERCBciKAS0KVKlVMr169zP777x+39e3b1/YMJYNLw9isWTNb
9txzz8X0etiwYebdd9+NKeMg2fpxDahABERABERABJIgILeFJGCpauoJSHmQeqZqUQREQAREoHwJ
4I6wePFi06dPH7PFFlsEdqZp06aG2AdYJYwZM8Z07drV9OvXz5Da8ZZbbjFr1qwxZFt4//33bVv7
7befmTFjRkxbydaPuVgHIiACIiACIpAkAVkeJAlM1VNLQMqD1PJUayIgAiIgAuVP4IknnrCdCIt1
4Hro0ja6wInEPhg7dqxN7fjII4+YK6+80qxevdq89dZbpnr16u6y6Gey9aMXakcEREAEREAESkGg
QsS3rqgU1+kSEUgJgREjRtjVFX9jJ5xwgtl55539xToWAREQAREQgbwnwKsZKR4rV64cqDTwA0i2
vv96HYuACIiACIhAIgTktpAIJdVJGwFZHqQNrRoWAREQARHIUQIVKlSIZmBIZAjJ1k+kTdURAREQ
AREQAT8BuS34ieg4owSkPMgobt1MBERABERABERABERABERABEpFQJYHpcKmi1JB4J9//jF//fVX
YFObb755YLkKRUAEREAERCCTBMiEgKLbu/Hb9ccff9h4BHxuuummplq1aqZixYqZ7FpK7rXlllua
Ro0aGf3upgSnGhEBERCBvCYg5UFeP97sHtzGjRsDO0hkakwwJSIgAiIgAiKQKQK//fabWbdund1+
/PFH88MPPxg+f/nll4S6sHz58oTqZWOl2bNnmx49ekiBkI0PR30SAREQgSwiIOVBFj2MQuuKXBYK
7YlrvCIgAiKQHQQIMIiiYMWKFebbb781a9euTVhJkB0jSG0vfvrpJ7No0SLTpEmT1Das1kRABERA
BPKKgJQHefU4c2swYZYHmFBKREAEREAERCCVBLAgWLp0qVm2bJlZtWqV+fPPP1PZvNoSAREQAREQ
gbwnIOVB3j/i7B1gmOUBbgsSERABERABESgrE3dAvgAAIABJREFUAVwPvvjiC7NkyZLAtMBlbT9f
rt9uu+1s3IN8GY/GIQIiIAIikB4CUh6kh6taTYBAmPJAlgcJwFMVERABERCBQAJYtX3++efWDH/1
6tWBdZIt3GqrrQy/TWzsb7bZZrYJlBP//vuvqVSpkgImJgtV9UVABERABHKOgJQHOffI8qfDYW4L
sjzIn2eskYiACIhApgisXLnSfPrpp9bKgAl9skKg3qpVq5oaNWrYz+23395UrlzZsCpPNgWJCIiA
CIiACBQ6Af0aFvo3oBzHL8uDcoSvW4uACIhAHhAgbgGB/lAafP/990mNCOuBnXfe2dSqVcvssssu
VmEgJUFSCFVZBERABESgwAhIeVBgDzybhivLg2x6GuqLCIiACOQOgV9//dXMmTPHzJs3L6nAh1Wq
VDH169c3devWtRYGm2yySe4MWj0VAREQAREQgXImIOVBOT+AQr59mPJAMQ8K+VuhsYuACIhAOAFi
DMycOdNaGyTqmlCtWjXTsGFDqzTAFUEiAiIgAiIgAiJQOgJSHpSOm65KAYEwt4XNN988Ba2rCREQ
AREQgXwhsGHDBvPxxx+bxYsXm6KiohKHRVDDRo0a2Q3lgUQEREAEREAERKDsBKQ8KDtDtVBKArI8
KCU4XSYCIiACBULg559/NtOnTzcLFy5MSGlA7ILGjRtbKwO5JBTIl0TDFAEREAERyBgBKQ8yhlo3
8hMIUx4o24KflI5FQAREoLAI8PuApQGBEP/5559iB1+xYkWz5557miZNmtigh8VW1kkREAEREAER
EIFSE5DyoNTodGFZCGB2+scffwQ2IeVBIBYVioAIiEDeE0BRgMJgxowZob8RDgIubigMsDTATUEi
AiIgAiIgAiKQXgJSHqSXr1oPIRBmdUDqLJmahkBTsQiIgAjkMYFly5aZiRMnGoIiFicE1W3atKlV
GvCbIREBERABERABEcgMASkPMsNZd/ERCFMeyOrAB0qHIiACIpDnBFAWoDRAeVCcYGlw4IEHWqVB
pUqViquqcyIgAiIgAiIgAmkgIOVBGqCqyZIJhCkPlKaxZHaqIQIiIAL5QODvv/+2cQ1mzZpVbFyD
TTfd1Foa7L///kbZePLhyWsMIiACIiACuUpAyoNcfXI53u8w5YFeDHP8war7ZSKAv/fXX39t28AK
p2bNmmVqTxeLQLYSWLp0qfnggw8M2RSKk7322su0atXKbL311sVV0zkREAEREAEREIEMEJDyIAOQ
dYt4AmHKA1kexLNSSeEQ+Oabb0y9evXsgFu3bm2mTJlSOIPXSAuCAMqCDz/80CxZsqTY8ZJy8dBD
DzXVqlUrtl42nvzss89Mnz59Qrt24YUXmm7duoWe1wkREAEREAERyFYCUh5k65PJ836FKQ/SHfPg
q6++MldddVUM3fvuu8/stttuMWXFHfDit3bt2miV4cOHGyk9ojiK3fnuu+/MeeedZ+s0atTIDBw4
sNj6OikCIpAfBP79918zd+5c89FHH5m//vordFDbbLONOfjgg02DBg1C62T7CWI4vPfeezZt5AEH
HBDX3QoVKsSVqUAEREAEREAEcoGAlAe58JTysI9hyoN0uy3wUjdy5MgYorzcXX/99TFlYQdz5swx
jz/+eMxpXoSlPIhBEnrw22+/Rfmzsi4RARHIfwIoW8ePHx+jdPWPumLFioaYBgREzJdgiIxl7Nix
/qHqWAREQAREQARylsAmOdtzdTynCYQpD9JteRAE7bnnngsqDix79tlnA8tVKAIikHsE/vzzz9zr
dA71GMXqpEmTzIsvvlis4qB27drm1FNPtbEN8kVxkMhjIsYJ1li//PKLrV5UVGQ++eQTg/uSX8hE
MWHChBIzUvz+++/WLQQrjw0bNvibiR6vXLnStrd69epomXZEQAREQAREoCQCUh6UREjn00Igm5QH
ixYtsi9sJQ2UyODPP/98SdV0vhgCO+64o42u/vHHH5unnnqqmJo6JQLpI0AQvu23397Ur18/fTcp
8JaZ7KKYnT17tmFSHCRbbbWV6dChgzn22GPt8wiqk89lCxcutDEdcOXCMmOnnXaylhdvvfWWHTYT
+65du9ryunXrmiOOOMLweeKJJxrcQLzyxRdfmM6dO1tXicMOO8zst99+Zuedd/ZWsfurVq0yBx10
kNl1111tewRlPeuss8wff/wRV1cFIiACIiACIuAnILcFPxEdZ4RANigPqlevbtatW2fHS9yCIN9U
L4x33nnHrFmzxhZVqVLFfP/9997T2k+AwGabbWZfjhOoqioikDYCTNqQbbfdNm33KNSGcU2aOHGi
+fzzz4tF0LhxY2tpkG5XtWI7kSUnCR55yimnmPbt29vN/RbhZkd8hEGDBpl9993XYC1AzJ6XX37Z
HH/88ebkk0+OjuD888+3FgdDhw41hxxyiLVQWLBgQfQ8O1gloDjAIuThhx+2+4888oh58sknbdyf
W265Jaa+DkRABERABETAT0DKAz8RHWeEQNgqRybdFli94cUJGTFihLn77rsNfrdh4lwW2rRpY9OL
Jao8wDSVFSRe/Eg3VqdOHUNQsNIKFhCkOeP+BB2sXLlyUk0R7XzFihXmxx9/tKtPrE5tsklyRkis
JLrJwR577GFfcJPqRCkrM2aCXrpV42zvt+PES/vee++dNl/un376yRDhnVVJrDvKIt9++61Zvny5
XcEk80PQ/wm+g19++aU1uSawXY0aNZK6Zaq5lPV7kWjnMTHn/x5MWLnNxUwAiY61NPVQyuCmEKYc
ps2qVauaI4880q6ml+YeuXQNShSXPcX1+5JLLjGXX365O7SfM2bMsJZYZ599dkw5f99HjRoVLdt9
991N7969Tc+ePQ3xd7zKg/nz51tLA86hcOBvweGHHx69lp0HHnjA/t8mSHCvXr3sucGDB5vRo0eb
hx56yNx4442B/99jGtGBCIiACIhAQRNIbsZQ0Kg0+FQSCHu5zKTygElPixYt7LCYML3//vuhQ2QF
6PXXX7fneTkrSfBZZWWHl2SCKdaqVcu0bNnSrh6x2okCYvr06aHNcD0mrGzHHHOMrcdq0YABA2xb
TNhpj0l0u3btzNdffx3aFuatRP7mpZUJz3bbbWcnsgQs5Jg2+vfvb1gxLElw8TjqqKPsNbzYsjEZ
OO2006x/7bBhw6L9vvfee+OaCxqXvxIv1m7spHRD8AM++uij7WStefPmhvHvsMMOhhffRKSs/U7k
Ht46TDA7depk+wijpk2b2lVuzIlRfqRKmAQ4E/xWrVpZbjzT//znP8XeIogx3xG+UyiTaAvG9B2L
GydM+nmu+Kjvueee9nuMsoL6bjXf1Q36LAuXoD4n+71gbHy3nHi/j+479+uvv7rT9hNFCSuzKP1Q
FjRr1swG9sNyif/b3bt3j6lfiAcuEO27774bqjhA4cLfnB49esQ8g3zmxXcEVwLv1rBhw7ghd+zY
0fgVB3GV/lfgMgO5OAmuHn8fcUk4/fTT7acr9346dwi+wygI2fjt4O8TCjiul4iACIiACIhAsQQi
L4MSEcg4gUcffbTo/vvvj9siE9i09mXmzJk439qN+z/44IPR44hSIPTekQwLtl5EuVEUeVEuatKk
SfS6yAp+3HWRF8Hoee4XWQkq4lp3bz4jJvxFkUlt3LUURF7oonUjL9xFkRe7ooi5abTM2w77kQlj
UeRlssS23HURX+O4ts4444zA611hxFS2KGIxEXNdZPIUPY6sdBVdcMEF0eNbb73VXRr99I8resKz
42U3bty4oojFR1HEtDnarhuD+4yspnmujt9NRb/jWw0vGTNmTFFEsRHtL6wjQeCix5yLBD4LbCAR
PlwYsTQoiuSJj7YJi4hSKOY4YllTFAkIGHgfP2MYRqw4Yq53fGE/derUosgkOu6erg6fEd9p26/A
G0YKy8KFNv19Ls33ImyM3nFELHNihhBZoY3hwrP0/l+OTMRi6hfSQcSqqigSv6Qooigt4jsUtr32
2mtFkeB9BYNmypQp9jsTUbQWO+Z58+bZehELgtB6EWVj0bXXXlsUUewVRRQHRe5vLt9Lr0RiTBRF
Ulza9jbddNOiM8880/6OeOtEFH0x32Xv9559+i0RAREQAREQgeIIyPIg8ospySyByBfShEU5z7T/
60knnWQiL1oWACkcw1bfncsCwasSdRNg5fa///2v+fTTTw2rmbgJRCZQ1h+VG8Ig8lJYInxWPnGx
iLzY2RW722+/3bbDSqzrC24IQSv9rnFiDbDiR9owVpfoD362XleNZ555xuZhd9d4P8nNfsIJJ9io
4JjE4htLQDR4LV682Lp/sHLlTWPJcy6rsBoemTTaYF4EVSMAG/EpvGkeb7rpJoPZfpBkut9EOMdS
hCjnuClgjoybCNsrr7xinxfnCFDGcy2tcP2rr75q3U0iShq7asj3C9cYOCEvvfSScd/b4u7DauRl
l11m+L+HGfQbb7xhnn76aWslw3W4GPXr18/AmXuy+n7RRRcZVpkHDhwYdVnAese5Afnvl2oupf1e
cJ3XwoiVYY69G9YETjDBd2PCCoN6rLLjhkL6Qcy9I5M0V72gPnHFeuGFF0xEsWRwzQoSLMmwjDru
uOOstVJQHZWFE8Dyap999rGuC1gy8f8y7P80FgkffPCBtcbCVYK6pL7EssAJ321+C/gek7nBv2HF
JBEBERABERCBYgkUp1nQORFIB4HIi3ecxQFWAFgjpFv8lgfcL2LuGV2NibwMx3Uh4tsdPR+ZaNnz
JVkesIIccReIa4uCiB9stL2I+XdgHe8KdOQ/sK0fmZTGWRdEFB7RtiIv6YFtwTsS6DHwHIWRCN7R
NoYMGRJYL+JmEa3DKmOQRJQRRZFAX9F6EQVDXDXvuLCoCBLvCjNjx9rBcffW9z6DsBWzVPXbe9/i
9nkG9DkS26IoMpmOqxrJMBHlw8q5XxLhM3ny5GgbEQWSvwlrIRAxsbd1Iq45RawO+8XPOBIAtGjW
rFkx1dzqqfv+YT0D80iQ0Zh6d955Z7Q/WDsESVm50Ka/z2X5XrgxRdyJgrobLbvjjjuiY4so16Ll
hbwTcTkrikw6Q60MnPXB22+/XRRRUhYkKvd/p6yWB/x/i7i5xVhtRBQK9jvptzzwgsbi6MILL7T1
Iq5u0VMR9whb5v+/Hq2gHREQAREQAREogYAsDyJvkZLMEgiLd5BpqwM3avKLO2Fl2y/48SP4RBMN
OxHB75wV+iAh3oELasdKcZgVhvdaVp2wjCDgoldoywkB7IKE1b/iAtpFzN+jlwX540cmASYyYbV1
8PuOvJRG63t3CNBFyjEnYeN35xP5JOc7K+P48/qlpLFnut+s5rEaj7Aa7fWtd33nu8bKH8LKYGnk
mmuusZfB1+1728G3POKCYotI34bFSnFCzAr6jt+zV4gt4c1GEJnI2Hr+IIHE9XCCD7Vf0sGlLN8L
f/+KO3bZWKiD9UihC0FS+XuINVWY8J3p0qWLTcFIKkZJ6QgQq4ZsCVgLeP/uY/mChFnJcY7/Hy42
jzfjgivDckwiAiIgAiIgAqUhsGlpLtI1IlAWAtmQacHbf8y8eTnDlJ/gcEwYMGdGIsq3qJkoE7+g
yPPethLZZ9LHhI20j7wgojxwE8qg6wnyhlIj6N60Q3v0MxElRFD7bqycC1LseCefTIqD+hHUbirK
CBAZ8eMNbMo7iQ0ae6b7TWR1JwQeDBIUZLvssouN2I/bSLJC0Mxp06bZyzBN9j47b1veCO/cJ4wh
1+BqQk54v+DOg5LLTZpR4vB98wvfTydBrhjp4FKW74XrayKfmH07wW2DYKMEpCs0YcKKSXzEMiZ0
6Pwd4nvEd5/Jq8TY/+f33HNPHApS/eKOVZyQSQaFHUFBmfSTmpEgu7iX8XuBSw3KOtwV+O0iBSNt
Hnjggfb/LP9HEFztnOCm9/zzz9vgvyhkcT9CyYlbES5epIHEPUciAiIgAiIgAmEEpDwII6PytBEI
mqBys/KyPEBxgAIBX3omP/iKuzRWrLgTIR5xqzb2IIl/8Acmqjs+4WwoJ/B7T1TqRFb7yYgQJLyw
O+VB0PmgMuIDYPGAzzL9cRkNgupS5lIysk+qsEyKfzXce++SlBiZ7rf3fhH3D+sP7+2v23crh8Se
QHmUTLpJFAHOv5xJPXEogoTn6qS4CR91mBAnIi6+RiJ1vXXSwaUs3wtv30raJwYEcUGYXBHTg78B
ZFHp06ePYSJW0newpPaz/TzKqoirl4mYuUe/d0F9xrIp4v5UrIVT0HX5XsZ3nwm5X5igl6Q84Jqh
Q4fa6/lNevHFF228HCb5gwYNsjFuiFGA4gBFH78RKLiIfYLw/5VsLHxPvRIJXmki7jgGpQYxcBCs
02gr37/PXg7aFwEREAERKB0BKQ9Kx01XlYFAtlkeMBRSDaI8QFjld8oDF5yKFbXGjRvb84n+g9Ih
4uNuXwBRHpSnoBQh1SQp57CuYNKaqGD67oSUk7kime63d5JMILKShIkZQfeC3BvCrvXeg2sJwliS
lHf6NW+f08WlJAalPc9kClcUlIsEBkQIgokVEqbft912W9zkrLT3yrbr+P/D6rY/JaC3n1gYYGnA
CnkySjBvG/m4T0BXrMFKEoIhFldv3333tRN8lIGwdtZWTPxxH3PuaCjesQyhLX53sMTC+ijIoo3v
9A033GA3gt7ye4xSWIqDkp6WzouACIiACEBAygN9DzJOINssDwDQtm1b+yLGhIyVHXz/McdmxQdJ
1uqAKOzkf2fSzks1eby5BybrrAgRG4AMCZkQIsNjouosDBgXkx+yQbCPdQUrUWHifakMMksPu668
yzPdb5e1g3GzMh1mLeLl4vVl9paH7XvvwYTNZVYIq095JIhlcafTfs7b53RxSecgcA3h/wgrvygL
PvvsM3s7JtdYJowfP95Egr3mzeRr/fr19m9FSUonJqeHHnpoTFyMdD6HQm47kgY1bvhBVmBYoXld
luIu8hVg1SYRAREQAREQgWQISHmQDC3VTQmBMOUBppPlJUxwMO986KGHbBewQmByjYk/50455ZSE
u8YkndSKTLR5OcM0tGHDhjHXewPRxZxIwwFp0pzigBUnVky9E2vMXosTXkbxu0XK24KiuH76z2W6
35j9siqNYMJN0LhUizeVGkopnmW2Sya4pJsBkzIUBWyke7zyyiujaU0HDx5sV94vvvjidHcjre3z
d4B4Gk45EnYz/nYddthhhgCpEhEQAREQAREQgcIiIOVBYT3vrBhtNrotAAbXBa/ywK3gRNJtRbMj
JAIQVwUXwO/VV1+NUxwk0kaq6uAjj5sCEkn1aFdOk23bceA6JsfFBYzzmqgne59U1890v70Te1aq
06E8iKT2jAb3JOI9cQ8yqYgqzTPKBJfS9Ku012BBRBwArCiwOEAIOpmrygP+HhPTYPbs2VbhGcYF
hSMBJJs1a2YVqmH1cqXcBavlbzUMcCNC4csncUW8G3XZcAvgk3rEruET5TLuBF6FbK4wSKafZH0g
VkN5xSZKpq+qKwIiIAIikD4CUh6kj61aDiEQZnlQ3i8lpKZr0KCBwRyZSbCbCLu0dyHDiSvGTxjB
kgLT8pKkOJ/Xkq4t6bzrC/XCMgB42wjqCy4P//nPf2w1YkBguu03yeeF+vLLLzeRHO/e5sp1P9P9
xtrABa8kIjppFImqnkqhfe7zxhtv2MnNgw8+aK6//vpU3iLlbWWCS7KdZqLH5JAJICnvkk0pyISR
/wcoCpl4uqCqyfajPOszSUYBhSIkTKHr+ocF1SGHHBL3/96dz4ZPlABYT7DxTHHXYvPuc+yUBUz8
UyVBKUpT1XY2tYOCqUePHlIgZNNDUV9EQAREIMMENsnw/XQ7EQh9US1PtwX3WIgF4BUmycmuIDur
A5Qkb7/9trc5uz9nzhybptGdIGhVusT1hfaJsu0XznuD2AX1Bb/mI4880l6KGwfHjAGFAZkDaJeY
DigOvGm+goJ1+e+fzuNM95vYAueee64dErEzLrvssqQCUybKggjq7v8K6djmz5+f6KXlUi9TXJIZ
HJNhhEkzMQvCxKWpDDqPIocJOOL93gfVzaYy/s/jhvT0008b0pkWpzhwf//4G+hXGGZyTPytcVli
Fi5caC2g3n//fTNq1Cgb4Paxxx4zbMOGDbN/j3AVw1ULSyn+fxDDBpcrstygXEil4iCTHMr7XjyD
RYsWlXc3dH8REAEREIFyJCDlQTnCL9Rbh72slrflAc/DH9uAOAjJ9guzXif4RhM/gUk20dr79u1r
83B/9913rkqxk5dopVLuePvChOHSSy81vHyTvu+FF16wedlJ++WEPOK8XPvlrrvuiqb0Y7WSVHmk
+MNct1u3btY1gkniJZdcEr3UTXCjBeWwk+l+Y6FBgD2EiUybNm1sbnavEocJzMsvv2yDcLISmqzU
r1/fRkrnOhRUWMwwzjVr1kSbYlWd9IK33367XR2PniinnUxwSWZo3lSPpGIkSGqQ4MrUvn17m9XC
pVfFOof/J8Q/YFKLdOrUKejyrCpjBZ5xkv4PpUFx3z3+5h188ME2sKpTtKR7MPwfwRLkyy+/tMoN
lDojR460So5HHnnEfqKoJPsF41iwYIH9O0YKTe//r3T3U+2LgAiIgAiIQCETkNtCIT/9chp7trot
gAO3hYEDBxo3uT/rrLOSpkTmgnHjxtmX88WLF9tYCt5GWMW/9tprDbEUmOSxQk0axSFDhpjddtvN
W7XM+6SYxO0CM3qEHPVsToj2/8QTT9g0Xyg5iLBOFG+UHldccYWrZn2dWcUj+CLKB8SrZMAP3OUi
dxclq3Rx16XyEx/tTPZ7hx12sCyJC4EfOQHocBfBTJ54BUxAUSQ58SpuXFkin7hEILfeeqv9nvXr
18+wcX+UOjxHt7rKsyxvyRSXRMfZv39/Q0YULAcmTpxoWrVqZf/vodgkLZ4TlANMVtkQUuPxLL11
cMvIZtcR/pahSOL/LX9vihPGRkpalI7pUP7xnfzxxx/t/wH3f4H/D2woNyTZTYC/LblkZZPdNNU7
ERABEchNAlIe5OZzy+leZ7PlAWCZ2JdF9txzT5thgXSMLm4C7ZFui4kc1geYPBNgjYk8K5mssmFa
m2rlAfclqBuTN4JBuskDOcMx62fyirKA6OmY+jLRWL16tZ1YeZUHtEPGCKwXmBDz6dJZojggrzni
Xf12OcjtiXL8J9P9JkAgK6P4xKMQYiIPd69fPMEc8SEvrWsHkzwmrLiL9O7d23z88cfW/JwJmVsh
J8AZigvukw2SCS6JjpP/o2PGjDHnn3++ca46+K37nwfpVpns8jxRNOCO4gQzfpQ48CcGQjYJSg/+
f2IlVFLKRfrN3yOYtGjRIiUBOH/55Rf7PXTfR6cowOw9m4Tn7TaUnfy/YuN5uk/2yWzCBic+UYJg
8cB3gr+lCpiYTU9VfREBERABEUgngQqRiUtROm+gtkXAT4AJa5CZ6QUXXJCW1S7//TN1zAsmq328
xO+9997WqsF/byaU+JCy0scLaDqFic+8efPsLZhUYnXgFV6EiX+w4447mn322ce+PHvPJ7Lfs2dP
a65PXRQMrPzngqSz327llwkUCqQ6EX/7nXfeOaVY+K5h5cJ3iewL3AeliX8ynNKblrGxTHApqYv8
HYIbQVL53rOqWrVq1bjLsLKhHhNxfjJRuOE+kg3WNd7Orl+/3n4H+B4kspLPZJjvCX9/UDAmI/y9
wGLAKQaYTLtjzmVamNTzN81tKM/cRkBMt88zY2PSz/glIiACIiACIiACiROQ8iBxVqqZAgKsiLl0
iP7mWMHTy5yfSu4cE1wOtw+sD7A6YCU3HabPqSaSq/1ONQe1l5sEmLCjoES5gfIgEWGijaLkwAMP
LDYQIhYzWAtwD7c5ZQHWBZkUJv8oxjCdZ2N/m222iX5yXr8fmXwiupcIiIAIiEAhEsguW8tCfAIF
NuYgiwMQsEKqF7/s/TKwion5bthKNquxmNE7twXcM7JBcZCr/c7eb4J6Vt4EUMBiRYTVEkoDVvwT
Ff7/7rvvvjaFLBNvhL/JKAhwz/BvlGfKOJG//ygFKleuHLdRHva3J9Gxq54IiIAIiIAIiEDZCUh5
UHaGaiEJAtkcLDGJYRRcVQJAnn322QYf8M6dO5u6deuaWrVq2ejomEjfc889ZtKkSZYL7hfEc8gG
ydV+ZwM79SE7COCSgosHLhMrV660KQfDlLBhPWbyTcBOJuZkWSBIJIoBrG6Ky7oQ1l5ZylFaEC8C
Nwk+3UYfiTMgEQEREAEREAERyF4CUh5k77PJy55le7DEvISegkGxwom5MpkZ2MKEWAmc98dTCKuf
7vJc7Xe6uaj97COAi4Bb+cdFAIUBFgZ8lnX1H0XB/PnzMzZo4gk45UCVKlVilAWck4iACIiACIiA
COQmAcU8yM3nlrO9xg9+1KhRcf1nFbtbt25x5YkW8OJNtoAlS5aU+UU70XsWUj1WPGfOnGnNpElT
5w2Ixmpm9erVDdH0D4tkbcim1cNc7XchfbfyfawoAgic6tyyUASw4QZEcEaCZxLQr6wKgvLgSNwB
lAT+zblElEefdE8REAEREAEREIH0EZDlQfrYquUAAmHmtmWNWv7KK69E/e0DbquiMhJAucOWa5Kr
/c41zupvMAEUB7gdtGrVKrACfw9xR/jyyy/NsmXLDG5dZHLAxYDvLoq58hYUG861wH2iLKBvKEAk
2U3ggQceMNOnTzf33nuvzcKS3b1V70RABERABLKdgH75s/0J5Vn/0uG2MGvWLCkO8ux7ouGIQD4Q
wOIgTHHA+AgCSPwQNoSUkHPmzDHvvPOOzVZC/BCyIpBOEaUCE/lUCxYRWBCgDAjaFKgweeKfffaZ
6dOnT/RCGOO+QTaa8847zyqHoifTvEMsmldffdXcfPPNUh6kmbWaFwEREIFCICDlQSE85SwaY6qV
B6tXrzZTpkzJohGqKyIgAiJQOgLECjnrHQhIAAAgAElEQVTooIPshovXhAkT7N+3yZMnG9IrMvnc
f//9TePGjRNWJDBxJc6AsyBAIYHlgEt7iIsBbUtSRwCLk/fee8/AmueFO927775rb3D33Xfbc23a
tEndDdWSCIiACIiACGSIgJQHGQKt2/wfgVQqD/ARHj9+fE76Cuv7IAIikP8E9txzT7N+/Xo7iUx2
tLvttps588wzDTFG3nrrLfPpp5+axYsX2+2ll16yFgmtW7e2sUaKm/zzdxL3CDYmtbhHoDzYcccd
7VazZk3bv+LaSLbvqv9/BFq2bGneeOMNe0DwywsuuMDG/LniiiusK4E4iYAIiIAIiECuEZDyINee
WI73N5WpGjEJ5sVcIgIiIALZSIAYAUzYp02bZgOJEkx0iy22MKz2E2Q0ETcEJvfnnHOO+fzzz42L
7UKA2AULFtgNc3isFZioJhqokMwpbKRZRYhdgDKB4I3cj62scWiy8XmUZ59q1KhhBgwYYJUHuDWE
CUFev/jiC4Piaaeddoqr9ssvvxiU8CiAUPjg6jJ79mxTv379UrkloExaunSpdZ2pU6dO3P1cAUqo
r7/+2gbNJdAndYNicpTUf9eePkVABERABHKTgJQHufnccrbXqbI84EXm448/DuTAC83JJ5+sl99A
OioUARHIFgJM4Pk7xiQehUBxmUr22GMP069fPxsPARP4f//91w7j+++/t6vbb7/9tlUgtG3b1k4s
kxkjQR0J3MiG4OqAyT3KBAI38rnlllsm06TqBhBwk+0mTZrEnYX9iSeeaKZOnRo9h+XJY489FvNb
RhkxDFBA4ALx3HPPRbPfHH/88eaZZ54pUYmEux9WEARSXLNmTfR+J5xwghkxYkScGwuWLsRw4Dqv
zJgxwzRr1swWJdp/7/XaFwEREAERyD0CUh7k3jPL6R6nSnmADyk50YPk0EMPjXnZCqqjMhEQAREo
bwKsHrdv395uuBWw4szk8ffffw/sGsqFjh07mn333ddOEtetWxethwKA2AgfffSROfzww80RRxyR
kGVDtAHPDspZ2mabO3euPcNqs8tesssuu1gLCs8l2k2AwKBBg2ytzp07x9TmeWM9Qgrchx9+2O4/
8sgj5sknnzS4r9xyyy0x9Tm46qqrbFDNW2+91Voo0PZrr71mrQGGDBkSV99bgDUMCiKu4buEtQDt
vfzyywYFBMp3J/SBII/EyECRccghhxhcMHCjwUIFKU3/Xfv6FAEREAERyC0CFSIvCUW51WX1NpcJ
vPjii3GrF4yne/fuhhfSRGXkyJFmxYoVcdV5mWH1RCICIiACuUqAv20oEbyrwv6xoIhllZhsM0GC
KwLuDhdddJFNF4kigEkfE8dUCGb4KBN23XVXa5lAUEbJ/xHg2TlXkhtvvNFadIwaNcrGrujZs6d5
9NFHDcExndx5553m2muvNffdd5+57LLLbDGvZriSYJHCc3NWKfxWYnmAlcLTTz8dtQj5+eef7bPA
jQFXBPd76upj3ULWjjAZNmyYoW9Yt9AfBAV9vXr1DNYtWLtg1RIkyfQ/6HqViYAIiIAI5A4BWR7k
zrPKi56mwvKAl6QgxQGAmjZtmhecNAgREIHCJcCE/KSTTrJR+idOnGh++umnOBjEJDjjjDNs2r/R
o0fHBY7FEuHxxx+3CoYbbrjB9O7d26aG5G8wSglM0N0WFosm7qaeAia0bCgv8L1HcUu/2Zj0KgCj
sVYgnTp1ilK77rrrzO233x49djsExERwASDLhhN+z8aNG2eVD7Vr13bF9rN///5RxQEFWAZ06NDB
oKCfN29eVHkQc1ExB1g4IMRUcMKzRXGAm0WY4oC6pem/u4c+RUAEREAEcouAlAe59bxyvrepUB64
IF9+GAQfY5VEIgIiIAL5QIC/Z0waiYswc+bMOAUBY8RFgcB6Q4cOtYH0/ONm9RiTdEzU77//fnPM
McfYNt1klBVurBHI6oDf+jfffBPqEuZv2x0Tf4Fr2XCb2GyzzaJWCSgTCOpYiHLwwQebBx54wMyf
P9+u6uMWgALBa3UAF4JhImHpG3ErcM/LVgz5x1kbUL8kwfUPlwTSgfLsUQT5heweyF577eU/FXOc
qv7HNKoDERABERCBrCQg5UFWPpb87VQqlAfuRcVPCZNMrXb5qehYBEQglwngftCqVSsbDZ9V6CC3
AyLzY1mATzqWWUHCZLFLly6ma9eu5qGHHrIWAtTD953YC2xukojpu1MG8MnqczJC/Abux4aQBcK5
OKBMSDQrRDL3zMa6BEjEeoCNeBSDBw+2gQeZtHuFYJQoXAh6GfQb5p6L95qgfff7SnyK4uTDDz80
Rx99tKkTyZhwyimnWKUFmYv8Ln9kBkGwYilOUtX/4u6hcyIgAiIgAtlBQMqD7HgOBdELfDfZ/MLL
Ky9OiQgvzt99911g1eL8OQMvUKEIiIAI5AgBrAsIZPf+++/bwIr+bjM5x18ef/qwv5Fcg4vDe++9
ZwYOHGguueSSwMkqK+Nkd2BDfvvtNxtUjxVttiAFhq0Y8g+m8FiMOasxUliiRKDPrJYnkrIypOmc
Kb7nnntspoynnnrKTty7desW7TvKAeIUoMApi+sdqRSRkizwyJyAUorYDDwLBPcYv6CUQubMmWOt
XvitDpJU9T+obZWJgAiIgAhkF4FNsqs76k0+E3CrIv4xJpNP3K1k+dvA35MAXhIREAERyFcCKFlZ
MQ4zbye9IhYI1atXLxYBlgVMIMlME2bJ5W2AyT2KBDI4EFTv7LPPNu3atTONGjUqlRUBygf88llp
ZxWedIOYz9MX+paPwm8UWRCYgJ9//vnWssONE6bILbfcYj8T+ccpClxdFEYENWQiTwaFMMHFZMGC
BTZegtd9wimEUBQ5OeCAA8zee+9tlVUEZwyT0vQ/rC2Vi4AIiIAIZDeBipEfq1uyu4vqXb4QYPXJ
pf3yjokX00RXW6ZNmxYYPIwVkjoRE0yJCIiACOQ7AYIToixdunSpYTLoFUzNCXCHn713Iuit4/aZ
gLISjnl98+bNXXGJnygxUFDUr1/f/u1u0KCBXTUnIwCT/yALs+IaJdUfPvdffvmlmT17trVQIDsE
CmdWyDGLzyUhoC+KAhQuuAU4qVu3rh0nq/ys5p9++ulWmbDPPvvYcb/++utm+vTpZrvttrNxJwhE
iCUJVnUohpCXXnrJLFy40Lzyyis2uCG/nygDUOhgFUKQTK+bg6uPlQltoLzgPrAmNSgxL4iXQQBG
3BOIkYFrCxYJuFCgPBg+fLi1WEHBgEvKO++8Y+666y4by4LvQDL9dyz0KQIiIAIikJsE5LaQm88t
J3tdVssDcmATzCtIeCmTiIAIiEChEOBv3vHHH28ndf5sCSgDmCwSIHHDhg0WCRZeQX+Dmbhfeuml
NmI+E17cI5IVAiKyobRAmUE2BybQbATj8ys4SmqfCSwbk2QEhQj9chvZHJKxWCvpfpk8z6R77Nix
Zvz48QZXhquvvtre/rXXXjN33HGHLeM8wrhRBLg0jbbwf/9grcHaj0urSJwDFAXHHXect1rgPsoC
gmhSn+wMhxxyiA10SVDNe++9197TWYBgnTJlyhRz5pln2u8T3yn6g2LE626SbP8DO6ZCERABERCB
rCdQIaJ1Lsr6XqqDeUGAVa6RI0fGjQW/V6//Z1yF/xXgE8qKiV9YmcIMlE+JCIiACBQSAYIZjho1
KibFnhs/q/dE+3dBFJl0M7EPE6wJhg0bZo466qiwKkmXO6UvigRWxoOi+ifdaOQCVsaxvmCj32wu
wF9p2suma/itQ9Gz++67xykOunfvbl599VVrnYFFAsoZrPqoGxaTIGxsXFupUqWoVQP1sEiAKdYP
fiGoItegOChOeVNc//1t6lgEREAERCC3CEh5kFvPK6d7i4mkywftHQhmj507d/YWBe5PmjTJmnb6
T5KfGjNLiQiIgAgUIgHMyVn5ZRLpF7IloEBwVgdMMjFPZ4IXJExAr732WmvGHrTiHXRNMmVYSdAn
F3yxuOCOybRLXXz4WYFnI/ggFhgoGcjukOzEOtl7Z6q+X3mQqfvqPiIgAiIgAiIAAS3V6nuQMQLu
5dV/w+JWMLx1edkMEiwXJCIgAiJQqASYIOPCwIq0Mzd3LMhmgD88vvC4D7CyTEC9c845x8Y7cPXc
J8aIZGIgtSAm7aVxY3BtBX1iHYDCmA3BbQJ3NP6+84m1RGmFsbP5gwmiBHGKBFbUUTK4DdN7lAuJ
/g6Vtm+6TgREQAREQATygYCUB/nwFHNkDGHKg0TSNHJt2EullAc58gVQN0VABNJGAAUC/u4E0vPH
QCArwkknnWReeOEFe38yHRAMj2PSOwa5MhDUj2j7tNeqVau09ZtgiF5lAn/rMY1HkcAnfcNSoixC
AEfcO9jCBB4oEPg98m+4xKGAYKOea49+ObP/dFhpBPUVZRBZL8hM4eJZBNXLlTKeP99PKW9y5Ymp
nyIgAoVOQG4Lhf4NyOD4ySn98ccfx92xRYsWpmXLlnHl3gJMbIPiHfDidsEFFwTmKvder30REAER
KAQCTLZxYSDWgF+IjUBKRCf77befDZpHwEQi6AcJE2mC5F100UVBp9NehrWE87VnbGz5MGlOO7gc
ugHWID169JACIYeemboqAiJQuASUqrFwn33GR/7VV18FrnCx6kTqseKEqNtBmRZ23XVXQ5pGiQiI
gAiIgLEm+AQPZGXaLwS6w6SfyTiyevVq88knn5g333zTRs7/8MMPbeo+73Wsso8ZM8a6FXTo0CEu
gJ+3bjr2iVWAiwHuE/xWkNEBpUft2rVtoD9WrnG18FtbpKMvajM9BLA2wXUk1S4y6emtWhUBERCB
wiYgt4XCfv4ZHX2Y20Ii5oqYrwZJSUqHoGtUJgIiIAL5TKBOnTrm8MMPt+kAvePE5P6MM84wd999
t3GBCrEII17CG2+8Ydq0aWNOPvlkq1TwXsf+U089ZVMnYtVA1obyFH4zUByzOXGuBIwLywSCSJLu
kc8///zTVdOnCIiACIiACIhAGQhIeVAGeLo0OQJhyoOSYh6wqoSpapBIeRBERWUiIAKFTmCfffax
Pv5z5syJQcFKPcES77vvvqhrw7hx48ypp55qAyRiiUBE/2nTpsVcxwGKhmbNmpnRo0ebpk2bxp0v
zwJiDriUjf5+/Pbbb1Flgguq6D45x35Z4yr476njxAngtkDcA4kIiIAIiED2E5DyIPufUd70MGz1
pyTLA4JcBfnvAqa8V8Dy5uFoICIgAnlHAEsCVuGXL18eMzaC7p144olm+PDh0XICI1555ZXmv//9
r/nggw9Mnz59zGOPPRY973ZWrFhhLRSGDRtmLRZceTZ/klGBbeeddw7tJr8xKLjdxrHbsGpwGzEY
+C3D9YPzBFOsVq1axt05QgeSYycUMDHHHpi6KwIiUPAEpDwo+K9A5gCU1vIgzOqAXN4lWS1kbnS6
kwiIgAhkFwHcFIhTMGLECGvC7+1d8+bNzdKlS601gSvHGgGXh969e5tBgwbZbAu9evWKM/tntR7r
hAEDBpjrrrvOXZ7TnwTfZcP3XiICIiACIiACIhBMYJPgYpWKQOoJlNbyYO3atYGdkdVBIBYVioAI
iECUAJZdHTt2DFwZ79atW9xqfN++fc3IkSPt9eeee66Nm1CjRo1oe24Hd7Lrr7/exlAI+9vu6upT
BERABERABEQgPwhIeZAfzzEnRhFmeVCS20KY5UHQC21OgFAnRUAERCCDBIgFcMQRR8TdEZN7Aiiy
4u4Es/zTTjvNzJo1yxYddNBBNsUuWQ6C5NlnnzVt27aNBmAMqqMyERABERABERCB/CAg5UF+PMec
GEXY6lRxrgcux3fQAGV5EERFZSIgAiIQT4CUtgRR9Avp8ci24BXcErp06WJclhvSIk6ZMsUce+yx
3mrR/UmTJpmWLVsGpoeMVtKOCIiACIiACIhAzhOQ8iDnH2FuDIDAUpi5+oUI2WxhQrAvAlX5BV9e
glRJREAEREAEEiNwyCGHBP7dbN26tfFbFqxatcoqFZzF2NZbb21I09ivX7/Am3355ZdWgUCwRYkI
iIAIiIAIiEB+EpDyID+fa9aNyr2A+jtWksvCunXr/JfY4ypVqhSrdAi8SIUiIAIiUMAEcFMggCKf
fiFVY+XKlWOKP/roI3PxxRdHyypUqGDuvPNOM2TIkBhXB1cBZe9RRx1lcGWQiIAIiIAIiIAI5B8B
KQ/y75lm5YhK47LAQEiHFST48EpEQAREQASSI4DiFQsEv6DIPfPMM/3FVlFA5gWvnHXWWebdd981
tOUX/tYTR+Hmm2/2n9KxCIiACIiACIhAjhOQ8iDHH2CudL+0lgdSHuTKE1Y/RUAEcoUAsQ/q168f
19169eoFKhb69Oljpk2bFlP/0EMPtWW77757TLk76N+/vw28GPa339XTpwiIgAiIgAiIQO4QkPIg
d55VTvc07AWyJLcFKQ9y+rGr8yIgAllK4MgjjzTEMfAL6Rt32GGHmGJi1pxwwgnGnzZ3jz32MLg2
HHzwwTH13cHw4cNNu3btlInBAdGnCIiACIiACOQ4gXjHxxwfkLqfnQRK47bw+++/G6J+B4mCJQZR
UZkIiIAIJEZgiy22MCgQXn/99bgLrrrqKnPdddfFlBNAsUePHmbcuHEx8WaqVq1qXRjOOeccg7LA
Ly4Tw5gxYwzKhkIRUl0OGDAgdLjEj+B3bNdddzVYfHTt2jVQmRPagE5kNYFevXpFs5XQ0e233966
AGV1p9U5ERABEUiAgJQHCUBSlbITKI3y4Lvvvgu88TbbbGNKslgIvFCFIiACIiACUQJ16tQxe++9
t1mwYEG0jB0sEk455RTz/PPPx5SPHz/e3HTTTeb222+PKefv8XPPPWddIXBX8AuZGFq1amWzNeDu
UAiyevVqM3LkyISHShwfMllcccUVCV+jitlJYO7cuebRRx+N6xwxRYLijcRVVIEIiIAIZDEBuS1k
8cPJp66Vxm0hTHnASpdEBERABESg7ATatGljUMj6hfK6dev6i80dd9xh3n777bhyCm699VbzzDPP
mM022yzu/Pfff29dGIYOHRp3TgXGkFnoyiuvNE888YRw5DiBJ598MnAEYeWBlf9XiAXmF198YVBI
SERABEQgGwhIeZANT6EA+lAaywNeNoNEyoMgKioTAREQgeQJYDWA+4JfiHOAlUHFihVjThUVFZnT
Tz/drFixIqbcHfTs2dO88847cXETOE+bZ599trnmmmsM7RSSwPnNN9+0biJPPfWUufbaa63Lgp8B
wSl/+eUXf7GOc4TAxo0bA9136P4rr7xifvzxx4RGgnUP1ihbbbWVdffheyERAREQgWwgIOVBNjyF
AuhDmOVB0AqVwxFmeaB4B46QPkVABESg7AR2220306hRo7iGfvrppzgXBSrxt/nkk082f//9d9w1
FBx22GE2kGJYJob//Oc/5vjjjze//vpr4PX5WIgSplOnTuaYY46xCpSBAwca3Dnatm0bM1xWmufP
nx9TpoPcIfDaa6+ZDRs22A5vueWWMR3n2fpdgWIqeA6++eab0FTVnmraFQEREIGME5DyIOPIC/OG
YZYHxcUuCLM8CMotXphUNWoREAERSA0BMib4Jzu0XKNGDTvp9d9l6tSp5oYbbvAXR49LysQwatQo
c9BBB5mvv/46ek2h7aA8v/HGG+OGvXDhwriyoAJcHd5//33z+OOP26CVa9asCaoWU8ZvMde5zf87
y71feOEFM2jQIOueEha0mHoEyMQUn6CYYQsEMTf3HKxcudIG33zsscesRcaSJUvMv//+66kRv0v2
JddvPn/++ef4Sr4SJuzuGpRhYYJVDEobxkT8jk8//dRayoTVDyvHqsTJpZdeakiL6pWSXBewXKC/
9Nsr9M+Ng88wxZ33Gu2LgAiIQDoISHmQDqpqM45AmPIgzPKAH05+RINEyoMgKioTAREQgdITQHEQ
lHKRCdpll10WaGJ/1113mbFjx4beFBez9957z+DKECT4cTdr1sxMmTIl6HRBlO24445x4/SnyvRX
IOYE8ShQ7GC5cOGFF5r27dubnXbayZq4k+khTHgeXOe2Aw880FZFiUNbe+21lw2WefHFF5uOHTva
TBCjR4+ONoe7ylFHHWXrnXbaaea8886zQQCbNGliirsvDTABxhyfzANkmaCdiy66yFpj1K9f38be
YMId5raBtYvrN58tWrSI9its59xzz41e8+CDD8ZVQ6Fw1lln2Xvvu+++hjHhlsN4CBx6+eWXJzxR
RwEyYcKE6D3IQML9vQKj2bNne4ti9rFMYGz+2CAo67xjnzdvXsx1OhABERCBTBGQ8iBTpAv8Pskq
D/yrIQ5f5cqVzaabKkmI46FPERABEUgVAVwXmNT5ZdGiRXYy4//bS9wCFAPffvut/5LoMQpigigy
aSQ9oV/Wrl1rjjjiCLuC7T9XCMdBLgr+1WrHAYU6k20m9cuWLXPFMZ8E1yPY5YgRI2LKizvgmubN
m1srBn89rBlOOukkw2SVvqJsIF2nXxYvXmxTeYatiDNhPuCAA6y1SpjfP4sGDz/8sM0AEnQP4mV4
BesHJtVhgvsAbgTIJptsYsh24BUsJlAYPP300yboHQVlx3333WcDff7www/eSwP3sTpwsTxQxGF9
gzLCb2HptU4IbEiFIiACIpDFBKQ8yOKHk09dCzNp9P+oujE7n0F37D5LWpFx9fQpAiIgAiKQPIHD
Dz88Lkgi5uRMngYMGBDXICbUp556aokm59ddd50NGEcAOL8wcWMFm4lx0CTOXz9fjhkr2Su8wmp8
WKwI+GPm74QVfOJHMEG+5JJLXLE1eccaIZGYEkyQSctZnMsDv9/33nuvOfbYYw3KnjD5/PPPzVtv
vRV3GuuVLl26WAWEO7nddtvZoJGvvvqqIb3nLrvs4k5ZV5bjjjvOLF26NFrGDnEyGLNXipuIs4rv
LBixzKhVq1b0Ur63Xbt2jXGbIR4FLhuDBw+2E39X+YMPPrBKDXcc9PnPP/9YJYQ75ywOsL6Bm1dw
jXD98paz36BBA3PGGWeYhg0bxpzCQoVytylwdAweHYiACGSQgJQHGYRdyLcKeyEMc1sIszzQD2Yh
f4s0dhEQgXQTYHLmTNm991q1apWdbHXo0MFbbPcx1SYAYEnC5G/y5MmB1g1cy8SYYIsEi8tnYcI+
fvx46ybwySefRIeKmbxfmeBOYh1w9913u0O7kk68g6uvvtow0X7ooYdM7969o+dZ3X/22Wejx2E7
xB6YOXOmnSwzEScYJuki/fEvsB756quvrJsJE2yUDUHKJBQIfrn++usN93FCalAsC/jO8J0g7gNW
AN7JPbEWcJ3wyhZbbGEDdXrLXnrppVA3hyFDhkSr4kLglX79+kUDG1IOQ9wzcI1AkYXCwLu4wXcz
zKqC63Elcd9bLCS7d+9OsRWnSHDHKOJQmgQJFgtYQvgzoGAVRLnbateuHXS5ykRABEQg7QSkPEg7
Yt0AAskqD2R5oO+NCIiACJQPAczLmQD5hdgETDBr1qzpP2VuueWWhGIXNG3a1Hz88cemdevWcW1Q
MG3aNGve/uGHHwaez9VCTPKJJ8AEmUkwk0MmzE4oI5UffIKE4JTe31FWyffff/+Yqv5JKoEUExFW
/VFE4BZATCHaadmyZdyl9I16LvYASgG/mwtKJq+QUeKRRx7xFtn7+OMVEMOBFJ5eIZ6GP6aG33WB
+Agvvvii9zK7P2fOnGgMBjI0Yfng5LPPPrOTcHfMJ2lJvW41fMfJjuGEcZFqM0y8gRB79OhhUyy6
ujxrxucVb31vufZFQAREINsJSHmQ7U8oT/ont4U8eZAahgiIQN4TILbBoYceGjdOzOAJCkc0enzI
vYLZNubvifiGY4KNtYJ/Ndi1t3r1aju5Jk6C8yF353L1k3Hgo88k1J9VoF27dmbBggUmyKrDjReF
i1eCno/f3YFJckn8sDDA1cC76s99/MoDFAzU23bbbb3diKvH98ArWDX4xxv23AlUWKlSJe/lZsaM
GTHHBNj0x4QIcl3wWh0Qd8Br5UifvFxQlBEg0S9+njyjIOH7OmbMmOgpvxIHpYRf6YFyDMWKRARE
QARyjUDsr3+u9V79zQkCvEz4XyjoOD+o/hcFyjENDEvBpJgHEJKIgAiIQHoJ1KlTx0ba99+FFV1W
oIlh4Bci9mPynYgwmWP19dFHH42Z2Llr+c1gtf3oo48u1s/e1c/lT37X6tWrFzoErBaWL18ec55V
cLIEeDfM/L1KHdwjcEMoTsjQ0Lhx47gqrNZ7hTrU9Yu/nv88ChO/+P353XniIPitWoKuZ8xewVoF
RYkTFiuIK+DEr6zwt1mxYkU7ufeyZJ/MFF4JCwyKS4dzadhvv/2s5Yz3OvYJ1sh9nKC88Co4XLk+
RUAERCDbCShsfbY/oTzon9fU0jucIMUB5/HV9K4KuGtYIcG0UyICIiACIpB+AocccoidtHqVv6wi
T5w40bopYD3gT7OI6T0+84kqEQiSyIQLH3HnM+4d2TvvvGMnt0y0yDKQq8Lvl0uvhz+9d3Uav/3O
nTvbFIFB4yPegX/1npgJiQgT3pIm+Im0U9o6/ok6cYu8sQT87WLhgBLKif96yrFQwMUB5YgTrA8I
6oiMGjXKuLhJQZYKZIbwCnWJJVCShCkPvJYPWOd44x142yRYqHdhhHsSLNKfxcR7jfZFQAREINsI
SHmQbU8kD/sTpjwIe4EIM3uV1UEefjk0JBEQgawlwEowwROnT58e00dWwZngEc0ec2//3+zLLrvM
pgvcc889Y64LO2jVqpUhcCApAVFM+IXgfPif9+rVy9x1110x/uT+utl6jKVd/fr1bff4RGHgTUd4
6aWXGpQ1u+22W9wQ/K4CVCDWgD/zQNyFkQICD5aneFfb6YdfCeLvm/980CJD9erVrbJl5MiR0cuH
DRtm7rzzTmvN6J3M+60OuMDPExokWz8AACAASURBVCuYMGuI6A0iOwR69AvfV5Q7Ttj3HrvyoE+U
EQRaJH6FRAREQARyhYDcFnLlSeVwP8OUB14fRO/w/C+i7pyUB46EPkVABEQgMwQInuifbHFnJk2s
EmNl4BcmrASNC4t146/PMSbxrKbjDuENXOetS+A9lBVBCgZvvVzYf/jhh2NW4LG469mzZ+DkGhcS
f4pLLDs+/fTTEjd/YMJMs/ErkAiGjBtGmBA/wCv+6905v+sCqRdff/11aylDUEcEZgR39AuBK72C
qwdxEEriiXuCX8oa+LCs1/v7o2MREAERSDcBKQ/STVjtx0SI9uIIUx6EZVpIZJXF2772RUAEREAE
ykYAk2rSx/mFyS7xDzDRDnJRmDt3blz0fH8b/mNWqQmSyGosq8tBQpA50jlecskl5qeffgqqkhNl
DRo0MFdddVVMX1GKeNMxupMoU0jV55VcyUYRNPl37hve8bCPyb/fNcA/bncNsTD8MRiwOMAVwFkv
dOvWLTBriF95sHHjxrjAjO4+xX3yfwA3HScoArDSKW7zW0IQhNI/Ztee95M+SkRABEQgGwhIeZAN
TyHP+5AqywMpD/L8i6LhiYAIZCUBos77o/HTUTIAYGVw//33x01uOf/AAw9YRQD7ychRRx1lV4GZ
IAYJMXGwQmBiivl/rgpWFv4UfqQMRCnjlyOOOCKmCCsN4kFku2D54F8oCFtt51n63xcOOuigwCGi
1MJSwyvwGDRoULTIn+HAnWjevLnZeuut3aH9vPbaa6NKh5gTxRzgtuOsKAh4yf1ou7jtiiuuiGmR
QItBFg3+953Zs2db5UrMxToQAREQgXIgIOVBOUAvtFv6Xwbc+P0vFK48zG3B/2Pq6utTBERABEQg
vQTwx/e7E/C3nUj3mIePGDEixgyf3jDJJ8o8MQuSFVaVWZV96KGHDMEGg4QAi8RJQNkQlkYv6Lps
KWNcDz74YEx3YEpqQf9KM0qF2rVrR+vClslzmPKELAtMbr1ZCKIXZ3CHPvfr1y/mjs8++2xMvAdO
EkMDqxOvnHDCCYEpQ10dv+sCFgfuu4bCKyidJdeSKnTgwIGuGfs5efJkc+qppwYG7YQ1irKhQ4fG
XONVgqA48P//iKn8vwMUXq1bt445hcUE9/CKPwYD3wtvjAdvXe2LgAiIQCYJSHmQSdoFeq9klAdE
Tw4L8EQuZokIiIAIiEDmCRCxf5999om7MZP29evX21gEBKzzy9q1a60CwT858tcLO8Y9gZX4Nm3a
hFWxE1FiIZC5Ad/3XBKyLHTp0iWmyzAlm4BXiDvx2GOPeYtsCkuUJwRgJOgeGRz4JHtFjRo17GQY
N4/yFiwsmMw7IRZG165drbvL448/bi6//HJD0MyvvvrKVbHuBliuFCe4NHBdkKBYKG4yz/eqZcuW
MZeiAMOdBGsHFDMoE3CRQZGFNQGKLCd8J2fNmmUPcbc5M6IkS1S8mTa4hmfkd0NhXP4sDGSZoB/0
/cUXX0z0dqonAiIgAiklIOVBSnGqsSACYcqDoGwLYVYHvDj5f0iD7qUyERABERCB9BBgshVkMeYC
GPbp08d06NAh7uZjx461LgxxJxIs2GOPPezkismk39zcNUE6SSbXTFJZwfamxHN1svWTcfmtK7BI
ePfdd2O6jBsHlgY1a9aMKV+yZIl58803DSvYfBJvwvn9x1QspwNSLPMd8FoCYFnByv2FF15o7rvv
vpgVf5RUuCD4xxnU/SDXBCbzZ5xxRlD1aBlBEkePHm1OOeWUaBk7LF5MnTrVkL0Byw0m9SjA/OK1
OuA7T/DQROXEE0+MC0LqzRBBO0ExMSjHAgKXnaAUlpyXiIAIiEC6CUh5kG7Caj804nbQSygBiIJE
LgtBVFQmAiIgApkjwAQ3KHr/ypUr7aoxK70ErGPV2y+spDOpLa0w2evdu7edNLFqHSYEUbzhhhts
ysPbbrvNhP2mhF1fHuVkU6DPXsFSg9Xz77//3ltsMOVn4sjqc3GTa3zwcX8ICzgY02gGDrCOmDBh
gnn00UcNffNbBXCMiwOKH1b0g75nQd3E8sKfiQI3lkQm83xPhw8fbi1XmjVrZlByBAnto/hg5R9B
8cF1TvyWBK487BMFGNlIvPLqq6/GpTzt37+/dWupWrWqt6rdD3p/iqukAhEQARFIA4EKkR+oWEer
NNxETRY2gQ8++CDwpREf2qZNm8bAIdf3lClTYso4YCXCHzAqrpIKREAEREAE0kqAFX4mTn4rMdzK
mKyy6ssqc8eOHeP8uJnI8jfeP9krTYffeOMNc9lllxlW3YsT+sXqNhuT9HwTlCOLFi2yKQq32247
m6Vi1113DVTgZNPYWeEnHsPy5cvtc+G7EWZVkql+Y62xbNkyq5zBtQJXHRQMWLOUp+UjfVm6dKn9
rqNEw0WnOMVRpnjpPiIgAoVJQMqDwnzuGR31uHHjAk3s2rZta/bee++YvhBBev78+TFlHOCDSL5x
iQiIgAiIQPkScGby/l6Q0tEphPv27WuzMPjrkNZx8ODB/uJSHeMSh3n/gAEDSrQwYNLVqVMn06tX
L9OuXTvDsUQEREAEREAERCA5Avr1TI6XapeCQFjMgyCzO/9qlrud3BYcCX2KgAiIQPkSwOw8KHXj
jBkzolkCCJ7ICqlfnnjiCfPKK6/4i0t1zG/IlVdeaQPOoRQobnWYVWWsFfBPZ2Ue5cb06dNLdV9d
JAIiIAIiIAKFSkDKg0J98hkcdzLKgzD/VGVayOAD061EQAREoAQCWBn4BfNqNyEnIO4LL7wQ6KKA
9QGp+VIlmJc//PDD5vPPP7cR/IMU0957keLx/vvvt9H269ata7M0vPbaa2bDhg3eatoXAREQAREQ
ARHwEZDywAdEh6knkKjyAF/asAjZUh6k/rmoRREQAREoLYHq1aubvfbaK+7yefPmReMhkNOeSbpf
sDAjyj1/81MpKAJwiSD13cUXX2yCMvr474ePO1kaunXrZn3ccY87//zzzaBBg8y0adMMARglIiAC
IiACIiAC/0dAMQ/0TUg7gWeffTZwRYfgWt4owrxQUtcvRPhmpUoiAiIgAiKQPQR+/fVX+zf7r7/+
iukUbg2dO3eOlpEhIMhVgQwDZERIl6xfv96mL0Q5gJKgtILyGlcHNpQmBIWkvb///ttss802pnHj
xqGR+kt7T10nAmUhgDUO2SG08FIWirpWBEQgiICUB0FUVJZSAuRD5iXTL+Rn3nbbbaPFRF0m77Jf
dtppJ0NeZIkIiIAIiEB2ESDOwUcffRTXKVbyXbo83AH222+/OFcFgha+99575vDDD4+7PpUFxDsY
M2aMId7CO++8Y8Ks4VJ5T7UlAuVNACUeaS+lQCjvJ6H7i0B+EZDbQn49z6wcTdiLmt8vNcw8lPRT
EhEQAREQgewjsP/++9vVd3/PJk2aFE3VuMMOO5jnn3/erth76zGpP/XUU826deu8xSnfR0lxzDHH
mNdff92sWbPGDBkyxLRv377YAIsp74QaFIEMEyAryrBhwzJ8V91OBEQg3wlIeZDvT7icx1dUVGT8
Jq2uS5UqVXK79lPBEmNw6EAEREAEsp4AGQ5atWoV18+1a9eaxYsXR8tJt3vLLbdEj93Ot99+a3r2
7BlVNLjydH2Sueess86yFggoLQiUSHyEhg0bpuuWalcEREAEREAE8oaAlAd58yizcyBhigNeOP15
tsMsD2Ryl53PVr0SAREQAQg0atTI1KhRIw7G1KlTbVwAd+K6664LdFEYO3asueuuu1y1jH2iSDju
uOPMI488YhYtWmTIwvDmm2+aAQMG2ACKDRo0SCjoYsY6rBuJQBIEcFsg7oFEBERABFJJYNNUNqa2
RMBPIFGXBa4LUx7IbcFPVcciIAIikD0EKlSoYNq0aWNX8b29+uWXX8ycOXPMgQceaItRGA8fPtw0
adIkzlWB4Imkf2zdurW3iYzu16xZ03Tq1Mlu7sZYz2FFsXLlSrNixQr7O/Xdd98Z3DII8rvFFlso
YKKDpc+sIaCAiVnzKNQREcg7AlIe5N0jza4BSXmQXc9DvREBERCBdBCoVauWIVXi0qVLY5qfOXOm
Tem41VZb2XIm6GTV6dixY4yrApkLTj75ZDN79uyYLDwxjZXDAYqRHXfc0W6kcXTSt29ft6tPERAB
ERABESgYAnJbKJhHXT4DTVR5QL2NGzfGdZIXN1JhSURABERABLKbANYH/M32Cn/bp0+f7i0yHTp0
MFdffXVMGQes7GNmzWq/RAREQAREQAREIPsISHmQfc8kr3qUqPLg559/Dhw3igN/bITAiioUAREQ
AREoVwJkVdhnn33i+jB//nxDukavEFcgyEXh7bffNnfccYe3qvZFQAREQAREQASyhICUB1nyIPK1
G4kqD5RpIV+/ARqXCIhAIRFo0aKF8afhxZJg8uTJMRgImjtixIhAF4WbbrrJjB8/Pqa+DkRABERA
BERABMqfgJQH5f8M8roHYdkW/C+XYcESt91227zmo8GJgAiIQD4RILaBC5DoHRexEAg66JVdd93V
5qH3uzr8888/pkePHmbVqlXe6toXAREQAREQAREoZwJSHpTzA8j32//xxx+BQ6xUqVJMeZjbgjIt
xGDSgQiIgAhkPYH99tsvMFYN1gf+eAZHH320ufbaa+PGRIaD7t27mzDrtbgLVCACIiACIiACIpB2
AlIepB1xYd8gUcsDKQ8K+3ui0YuACOQPAVwSguIZoBBYtGhR3ED79+9vDj/88Ljyjz76yPTp0yeu
XAUiIAIiIAIiIALlQ0DKg/LhXjB3DVs1kttCwXwFNFAREIECJNCwYUNTo0aNuJFPmzbNkJbRKxUr
VrTxD3bZZRdvsd1/7LHHzJNPPhlXng8FP/zwg5k7d6515/j333/zYUgagwiIgAiIQJ4TkPIgzx9w
eQ+vrJYHinlQ3k9Q9xcBERCB5AkQx+Dggw+Ou/CXX34xs2bNiitH0fDyyy8bv0sbFXv16mWmTp0a
d00uFnz66afm2GOPNdWqVTNkp8DFg9gPW265pdljjz1M+/btzQUXXGAmTZqUi8NTn0VABERABPKc
gJQHef6Ay3t4icQ8YBXq999/D+wqqRolIiACIiACuUcAS4J69erFdfyTTz4xv/76a1x5q1atzAMP
PBBXjgXb8ccfb1asWBF3LpcKevfubZo2bWpGjx5tvvvuu5iuM8YvvvjCvPvuu2bw4MFx2SliKutA
BERABERABMqJgJQH5QS+UG6biOVBWLwDFAeYs0pEQAREQARyk0CbNm3MJpvEvmrwu4D7QpBcdNFF
5uyzz447tWbNGtOlS5dApUNc5SwsQCny0EMPGb97wvbbb28OOOAAU6VKlYz3GqU9CgtcJyQiIAIi
IAIikAiB2F/0RK5QHRFIgkAiMQ+UpjEJoKoqAiIgAjlEgMnxvvvuG9fjzz77zKxbty6unIJHH33U
tGzZMu7cnDlzzMknn2xI5ZhLguLjyiuvjOnyEUccYaZMmWLWr19vZs6caS0RqDd06FCrJCHlZbrk
9ttvN9WrVzfcA1cJBaVMF2m1KwIiIAL5R0DKg/x7plk1okSUB2GWB4p3kFWPUp0RAREQgVIRaNGi
hdl8883jrg3z66fua6+9ZoICKL755pvm0ksvjWsrmwtmzJgREySSeBAvvPCCzUjhta4j7sOZZ55p
3RrSOaH/5ptvrNIim5mpbyIgAiIgAtlJQMqD7HwuedOrMOWBNyiWlAd587g1EBEQARGII7DFFluY
5s2bx5WvXLnSLFmyJK6cgpo1a5rXX3/dro77KwwaNMjcdddd/uKsPcZiwisoDPyuHN7zie7j/jF/
/nwzfPhw89xzzxmCMYa5CtLmxo0brbWHP8YQ12AF4jZ/NoxE+6N6IiACIiAC+U9AyoP8f8blOsKw
FxlvqkaibweJLA+CqKhMBERABHKPQOPGjU3lypXjOj558uRQN4T999/fToqDJtrXXHONPRfXYBYW
kFXBK0zOH3/8cW9RUvu4+p111lmGuEC4hJx22mnm9NNPN02aNDFbb721ufzyy2MsHVzjzz//vE2f
iWuEV8hkgdWD2+bNm+c9rX0REAEREAERiBKQ8iCKQjvpIBBmeeBVHsjyIB3k1aYIiIAIZA8BVtsJ
nuiXH374wa6Y+8vd8XHHHWfuu+8+dxj9LCoqshNorBOyXciw4Jcbb7zR3HzzzSbsN9Jf3x3j6oHC
4Omnnw68FoU9vNq1a2dgKxEBERABERCBVBKQ8iCVNNVWHIEwy4NE3BaUpjEOpwpEQAREIGcJ1K9f
39SqVSuu/9OnTw9N10tlUhz27ds37jpW8E888UQzYcKEuHPZVHDQQQeZww47LKZLKD/69+9vrQXe
fvvtmHNhB7gVdO3a1Xz99dfRKsccc4yNn0B6R4IfOvnggw/Mww8/7A7tZ4MGDcwZZ5xhGjZsGFO+
44472nLOsVWtWjXmvA5EQAREQAREwBGQ8sCR0GfKCfBixwuSX1iB8gaJktuCn5CORUAERCA/CRxy
yCFxA2P1/aOPPoor9xbcc889pnv37t4iu//HH3/Y7ASY3mezMLkPCgC5aNEi07FjR3P00UebpUuX
FjuEfv36mQ0bNkTrYJUxevRom4HivPPOMygMvIEpH3vssRj3hYMPPthaLBx55JHRNthp1KiRLcea
ga127dox53UgAiIgAiIgAo6AlAeOhD5TTiDMHNNrdfDbb78F+rtShyBbEhEQAREQgfwhUK1aNbP3
3nvHDYjAf6QtDBPiHhAYEHN8v6CA7tChg0196D+XLces+hPfwWsd4O3b2LFjzT777GPuvffewN9E
UlsysffKTTfdZMjc4IQgk506dXKHZtWqVYbsFBIREAEREAERSBUBKQ9SRVLtxBEIUx544x2EWR3I
ZSEOpwpEQAREIC8ItGrVynh/BxgUVmoTJ04sdnxcM3LkSJvi0F+R2Dms3k+ZMsV/KmuO69SpY8i8
cNVVV8VY37kOoky/8sorTbdu3WxmBFfO58yZM2Ms+Qg+SYBEv+y+++4xRQsWLIg51oEIiIAIiIAI
lIWAlAdloadriyUQFu/A+9Io5UGxCHVSBERABPKOwFZbbWWaNWsWNy5SN3755Zdx5d4CsgmMGTMm
cOKMAgELBMz3s1W23HJLm2aSOA/EQggSXBG6dOkSoyxYuHBhTFVc/84++2wbNJLMC2577733Yup9
++23Mcc6EAEREAEREIGyENi0LBfrWhEojkCY5YHXbUGZFoojqHMiIAIikJ8E9ttvP4Orwo8//hgz
QLIJsEK/6abhryfbb7+9YZLctm1bM3fu3JjrUUhjgfDyyy+bzp07x5zLpoMDDjjAujGMGDHCXHbZ
ZWbNmjUx3Xv33XfNSy+9ZE466SRbvnjx4pjz33//fZwbQ0yF/x1IeRBERWUiIAIiIAKlJSDLg9KS
03UlEghTHsjyoER0qiACIiACeU2AlfOg4IkolD/55JMSx07shPfffz/QAmHjxo2GYIJDhw4tsZ3y
rnDyyScbXAtat24d15UnnngiWrbttttG99nhd5SUjSVtcgGMwaYDERABERCBMhIIV+2XsWFdLgKJ
uC2EWR7ohUffHxEQARHIbwJ169Y1u+22m1m+fHnMQPHv33PPPc12220XU+4/IKUgCgQsEIgl4BWy
/WDWv2LFCkNgwWwWxkFmhMaNG8d0k0wMTvbaay+3az8JIAknrzI+poIOREAEREAERCANBGR5kAao
avL/CIRZHnjdFsJiHvhXWcRUBERABEQg/whgfcBE2Cv//PNPicETXX0m3hMmTDAEYQySm2++2Zx6
6qlxAQiD6pZnGRYEZGTwijfVsV95gHXFjBkzvNVLvU9bEhEQAREQARFIhEDsL3YiV6iOCCRIIMzy
IBHlgSwPEoSsaiIgAiKQwwR22GEHQ/wDvyxZssQsW7bMXxx4TAwEYgQEpXHkgueff966SGCFkK3y
77//mnXr1sV0zxtUsnnz5oZgkV659tprDdclK/DyyuzZs82vv/7qLdK+CIiACIiACAQSkPIgEIsK
U0EgzPLAa2YZ9sIi5UEqnoDaEAEREIHsJxA0MabXH374ocH9IBFhYv3mm2+a0047LbD6xx9/bJo2
bWreeeedwPPpLHz00UdN7969bRpJrzWBuye/g5dffrn54YcfXJH99FpT7LjjjmbgwIEx5ydPnmyt
Kr755puYcg64D2MOivvQsGHDmPr8VpMCUyICIiACIiACJRGoEPmBKSqpks6LQGkIEDV71qxZcZeS
nurAAw80v//+u/EGhHIVibJ98cUXu0N9ioAIiIAI5DkBsgkETexbtGhh2BIVXmluuOGGuIm2u75C
hQp2os5E3KvIdufT8YnrRP/+/W3TO++8sw3yWL9+fUPQRxQA/Fb+8ccfMbcmGwPlpHZ0gpUBv58f
ffSRK7KfpL7EeoM2cflYtWqVIbXj2rVrrcLE/zv8xRdfGNwg/IoZLB1Q5Bx88MHRLA8xN9KBCIiA
CIhAwRNQwMSC/wqkD0BJbgth8Q5kdZC+Z6KWRUAERCAbCbAaTupGJr5eISgg5/ym9t463n2UA7ff
frsNuHjeeefFxTpAuXDvvffaVI+symONkEnBSiDIUsDbh1133dWMHj06RnHAeWJDUN63b1/riuGu
+e2338zUqVPt5sqK+yS2wlVXXWXuuOOOmGpYKrCh1JCIgAiIgAiIQBABuS0EUVFZSgiEKQ/cao+U
BynBrEZEQAREIC8IHHbYYYHBEwmImKzgvoDbAxPxIJk7d65dZb/mmmvS7u9PUMctttgiqBsxZfT1
wQcfNFhh7LLLLjHn3EGNGjXM8OHDzbhx4wyWAmHtYo1w6KGHmtNPP91dGvOJJQT3om9+cb/R/nId
i4AIiIAIiIDcFvQdSBuBN954wxD0yi+dOnUyu+++u5k3b56Nku0/36hRI9O+fXt/sY5FQAREQATy
nMCUKVPMJ598EjdKfhP4bUhW1q9fb+MgBLlEuLaYqN91112mR48eBsuFdAjuBF999ZX57LPPzOrV
q218AxToxDIgXWWdOnWstYQ3oHAi/cCVgcCSuCng+oDVAAoGfmNxASxJuGbp0qX2txrLhiZNmpia
NWuWdJnOi4AIiIAIFCgBKQ8K9MFnYtivvfaazbHtv9dxxx1nateubaZNm2ZNJP3niYfQunVrf7GO
RUAEREAE8pwAFmvPPfec+fnnn2NGiu8/q+hhK+0xlX0HTLBxVSAWQlggXy5h4nzbbbeZzp07p02J
4OuaDkVABERABEQgpwjIbSGnHldudTbsJc2trIRlWvCno8qtUau3IiACIiACpSXA7wPuC34hwO7E
iRP9xQkds6KOj/+MGTNM48aNQ6/BlaFLly62DvEQuKdEBERABERABETg/xOQ8uD/s9BeigmUFPMg
THmggIkpfhBqTgREQARyiEDdunWt2b2/y4sWLTLLly/3Fyd8jGUBARgHDBhgNt9889DrCNx49tln
GzIj9OrVyyotlJgqFJdOiIAIlECAzCe4B7mNY4kI5CoBKQ9y9cnlQL9LsjxQwMQceIjqogiIgAiU
AwGC/QUF7nv//ffj0hom0z0sG66//nobe6Br167FXvrDDz+YRx991AYe3GmnnWzshCFDhpgFCxYY
XCEkIiACIpAIgUsuucTUq1cvul144YWJXKY6IpCVBEqOppOV3VancoFASZYHYcoDuS3kwtNVH0VA
BEQgfQT4HTj44IMNygKv8LsxefJkc+SRR3qLk97/f+y9CfxV0/7/v7gu95orGUKSJHMSISkkSaGM
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
O+64w0Y2ILqBv7355ptpXYBc8d57701LK/YJVghff/11WrHrr79+2rlOhEClIlB7QZErFUH1KxSB
Qi0PQgtTohAQAkJACAiBEATWXHNNS6D4+OOPZ1ydPn26WXXVVe1EOeNiLSYwmTn++OPN3XffbfxJ
/HrrrZcxAalJs5hsHXjggaFFEK9+6dKl9horulhnuPPQG5QoBOoYgaD7wWOPPRa7Rbg7nHjiibHz
55vx+++/T/stc79cE/JFUfnLFQEpD8r1ySW83VIeJPwBqXlCQAgIgQpBgFX0XXfdNSPcGhP1yZMn
mx49eph11lmnznp78sknm7Fjx9rJTP/+/a1C45VXXjEPPvhgQW3i3rffftv069cvdMLStWtXuzLr
F47LYCULihCedePGjc3OO+9cyV2tir598sknZsaMGQX3dc6cOQbrI3gISiFrr722/e1B0urkm2++
cYfaC4GKRkDKg4p+vHXXuSjlAealaGzDBN81iRAQAkJACAiBfBFo1aqV/ba8//77abfyLWLFEjPn
+vXrp12rjRNcCAgFt8kmm5iRI0ea5Zf/r7co57169SqoCZdccol54oknzOGHHx6qPIBMsm/fvgWV
Xa43ffzxx9b3/eyzz5byoFwfotduQi46K52ddtrJXHfddd7VzEOsezp16pRGxo3lAtEPSiG4TG2w
wQZpERiIDBEmKBi++uqrsEtKEwJliYA4D8rysSW/0VHKg1yEicnvmVooBISAEBACSUQAAsUNN9ww
o2mY6T/yyCN5kahlFFJgAsqCRo0aGfgOgj7SYUU+/fTTNgwlhG0QsAUnP926dTPPP/+8vZVwlUys
Ro0aFVZU3mmQGQ8YMMAqOiCi3G+//Wy7/YJee+01W+c999xjPvzwQ9OzZ09r1bH77runVooJlQcX
xVprrWVD64VxT+RbF24WKERw9cDShMmlE1xWnLIECw8wYYsah7j7tE8mAky277zzzlTjcPnZcccd
s27t27c33bt3T93DAbwHKBVKJc2aNUsrmpCSLqyku4DykPCSL7/8skvSXgiUPQJSHpT9I0xmB6I+
2igPRJiYzGemVgkBISAEyhkBfI7dpDXYDyarcALkw8IeLKPQcywMIFjbYYcdzLPPPhtZDBYKhIwj
LzHn69WrZwYOHJimHKAMZ0GBeX7btm2LwukAyXG7du0sLwNuDzDbP/fcc2aXXXYxKF+cEAoTt4kX
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
WR6U3zNLfIujlAdhYRrpjNwWEv9I1UAhIASEgBAQAkJACNQZAigInAQXnZiURrnGunvKcf/www+b
H374wTY92OfffvvN3HvvvWXVrc0339y0bt06tW2wwQZl1X419r8IyPJA/wlFR0DKg6JDqgKFgBAQ
AkJACAgBIVCVCDz//PNm3rx5tu9/+9vfzHXXXWcgSnRCJJRJkyaZbt26uaTQPYtYP/30U9q1hg0b
ps4XL15sXnjhBUtO2LRpUzvJbdCgQep6tgOUF++88455/fXXzTrrrGN22GGHGodj9BUmgwYNsn2k
Die4LpxwwgnuNNYejoj333/ffPXVV4b+svoPb0uTJk0s2WucQgotg/v8OQKLh4StzCa08bXXXrPP
pFWrVmbrrbc2ENMiPEt/YbJ+/foGcltfSvnM/Xqq6VjKg2p62rXUV//F4Ffp/8D9dFke+GjoWAgI
ASEgBISAEBACQsAh4Pv3E+YQssBzzz3XTn5dHibauZQHU6dONfvuu6+7xe5//vln89e//tWceeaZ
ZsyYMTZqisuw2mqrWUVFv379XFLGHreJCy64wFx55ZXm119/TbvepUsX47c97WKOk08//dRMnz49
levoo482jRo1Mqecckoqbc6cOeaNN94w2223XSot6uCLL74wl19+ucFKA6uFMGEi/9ZbbxkUJ2FS
0zI6deqUEW0B3MLkvffeMz179rTt8a8TaQLl0RFHHGGJammTE8glt9lmG3dq96V45mkVVOGJ3Baq
8KGXustRygN8t8JEyoMwVJQmBISAEBACQkAICIHqRoDV5QkTJqRAOOaYY+xkv2/fvqk0Dp588knz
zTffpKXFOWEiveeee5rrr78+TXHAvcuWLTNHHXWUefbZZ0OLwn//oIMOssqDoOKAG7CG2GqrrewE
P7SALIkoQ1yI83bt2pnmzZubww8/3Ky00kppd/nWCWkXvJOFCxcayrjpppsiFQdkpz9RY/hilOE1
Kesh7hpt2rTJUBxwE9YLPPs99tjD+IqDrAUGLtbkmQeKqspTWR5U5WMvbaejXjx//PFHaMVBP67Q
TEoUAkJACAgBISAEhIAQqCoExo8fn5rwsiK+++672/6zEn/VVVelsIBM8c477zSDBw9OpcU5wB1g
1qxZWbNSJqbzQRk2bJhhousLyoJDDjnETvyfeuop8+KLL5olS5b4WXIe4wJBX5ygMEFwoTjggAPM
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
LA8k1YEA3yCIdX1h0Qyls6T8EdBTLP9nmIgelKPlAWHQMCnGpJcJE767nTp1MqwMZhMGtI8//rhd
4Zs9e7bBVBffZCZFmNFedtllqdU2V85FF11kcFlwLPOPPvqoJUZz1++4447U6l8h5btytBcChSDA
ivLkyZNN1OAOIrw99tjDEK7PFybHTORee+01q0DzrwWPV199deuewO8MQq1qEFbG/dW2jTfeuOBu
4wpy6qmnpu7v3bu3ufvuuy2WP/74o9l6663N/PnzDTwT9957rzn66KNt3vPOO8/AsdCgQYPUvccc
c0wswsTbb7/dlsX/BnUgPMfhw4enWRikCs5ykE87nn322ZTigCIffPBB07Fjx1TpKGvjuMSkbtCB
EBACtYqAU176lfK7zVdQFl588cWp21B6osQMfotSGf53APEspK5OcLfadddd3Wli988995y59tpr
09rXv3//Gimd0wqrpRNc9SDm9eWII46Q8sAHpIyPpTwo44eXlKbHURzQ1jBNdF314dZbb7UvNlZJ
8aNt1qyZNYG97rrrDANXBshRggnwsGHD7GX6xGSIVT0m/cQ4h5WcFUCUCU64/uqrr7pTq0RwigQS
fd/AQspPFawDIZAnAgzO8EcPI0akqJ133tnssMMOaaWSl8kbvAZYLGQTBpHcz+Q214AvWznleI33
gC81sba4/vrrzaJFi1LFXXjhhSklDNYDEBWOGDHCXuf95pQHqRsKOMAFwhcIFFFY+O82/3qxjony
4QscD77wP0W0CokQEALJRCBMeRClnM7WAxZngu8heE+wfMom3377bdp92Yhcs5VT29euueYaw+KS
Lyhua2Kx5pelYyFQDASWL0YhKqO6EchlpuzQCTN3dtdqc8+EB/Mp2n3wwQfbMGRMhHhBY2ZFODEY
4pGwCRWmx3AXMOli0v/ee+9ZZQDWBQhKAd+8lzSUEnwE8fNGDj/8cHtOGhskak4KKd/dq70QiIsA
K+L8v+NbHvZ/jnkhk8Wg4gBFGH78hBLMpjiAVZvoCX379rUTvWpTHPAcgiaaWGpkEyxAsGZym79S
h1uIE94jRLrgHeY2P/LFvHnzXNYa7anHd2vAdQFF69lnnx1ppVKjCv93s/8+JAnug379+kWSeBaj
TpUhBIRA8RAIWyzy32c1qQmLAj/qS03KKva9fEtR8vIODyo9c9XFfVioBmXGjBmWGDeYrnMhUFcI
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
QAgIASEgBIRAmyAw88wzm2WWWaZqNGPGjKlKU4IQEALlQUDKgxr3ikmiLy+99JJ/2ifHU0wxhTnu
uOMsF8J0002X9uGss85Kjzv1wL9fjz/+uMHnv0jgkIAss6uie9FV5FROCAgBISAEhIAQaGcEhg4d
WjU8rHglQkAIlBcBKQ9q3DtHVOiyzTjjjO6w4b3vf54XarCRSom84PuU/etf/zJ5q+3NbruRfvZm
XiJjOCHc5k033eROq/bgNWjQIPPEE09UXWs0oZF70Wjdyi8EhIAQEAJCQAgIgbIhQNSFUB588MGa
CzthGZ0LASHQOghIeVBwLwgVA2miL7///e/904aOfSuBDz74IMNC21BFXmYmrU4IJzjZZJO508y+
J9rONNAiJ4SwnHzyydPeENYyZi1CVAYUDXfeeaeBx8CJ7wri0urd13sv6q1P+YSAEBACQkAICAEh
UFYEiLgw6aSTZroPsTXcBxIhIATKiYCUB5H7VqlUbHzaAQMGpCESycYLcODAgZES9SXNPffcaUba
uPDCC9Pz2MFDDz1kRo4caVghz5PzzjsvvbTAAgtkyBTTC8lBo237Zct0zD3ae++90y6//vrrZskl
lzSbbbaZOfnkk234Tf6ZzTnnnOb55583yy67bMYnz1ckpJUkB828F369OhYCQkAICAEhIASEQDsi
gNXrwgsvXDW0J598sipNCUJACJQDgR8Z98rR36b38s033zREVcCNgO3rr7+2GtFwws4LkMm+v4Lf
aGcWWWQRM/3006euBbvttpsNLbjKKqtY8kP88/v3759W+95779kQjZAjrrfeenalHCXAlFNOaW65
5RZz+eWXm4cfftjmp3/77bdfWjY8aLTtsHyZzrE2eOaZZ1KrEUI4cu9CZc1MM81kUL4QBtNJnvKg
mffCtaW9EBACQkAICAEhIATaGQEWtkKegxdeeKGdh6yxCYG2RqDjlQeYT1177bWFN3mGGWYwhx9+
uFljjTUK89W6ONFEE5kTTzzRbLDBBjYrygpWyd1K+cYbb2xiMXBxn4hNfv32Dj74YLPOOuv4SZnj
rradqaQkJygALrnkErPYYotZbCFFDIUoGueff76Bw4Jwl07ylAfuejPuhatLeyEgBISAEBACQkAI
tDMC88wzT9XwYu6kVZmUIASEQEsi0PHKg/CusII/zTTTmFlmmcUQZmbFFVc0m2++ufnVr34VZu3S
+bBhw8wvf/lLS3TIanaRYOqFDz9++c8991w0Kyb5xx57bMb0PpoxSWyk7bw6ypSOBcLWW29tCREJ
sUlUBe4prifzzTdfOhRCXzpBURSTZt+LWBtKEwJCQAgIASEgBIRAOyHQr1+/quG88cYbVWlKEAJC
oBwI/CTxva+Uoaunnnqq7eZOO+1Uhu7W7ON3331nMNtig6QPdwT88PNWviFYfPnllw0KB1wrCEk4
xxxzGEzvG5VG2260/jLl5/GfYIIJzPfff2+7fdVVV5m11167cAjNvBeFDXXjYrv9XroBhYoKASEg
BISAEBACfYQA3FOzzz57pnVceGstoGUK6EQICIGWQUCWB310K1ASELmh3ugN0047rWFrhjTadjPa
bNU6CMXpFAc//elPjR8xIa/PzbwXeW0oXQgIASEgBISAEBACZUeARS6sev21ShZhcBn92c9+Vvbh
qf9CoOMQULSFjrvlGrBDgH9ke+yxhzu1pJRYdEiEgBAQAkJACAgBISAEuo8ArrpTTDFFpiIIwlEg
SISAECgfArI8KN89U49rIIAryOjRow0ElHPNNVc0N/wH8En40SoOOuigaF4lCgEhIAS6gsDHH39s
Lr30UoN/L6tvEIfBnwKvDoLZ7lNPPWUWX3xxG0WnK22ojBAQAkKg1RHATeGTTz7JdPP99983eTxT
mYw6EQJCoKUQkPKgpW6HOtMMBJ5++mlz5JFH2g23kAUXXNASYDofO1h+b7/9dvPpp5+mzREBwydR
TC/oQAgIASHQBQQefPBBM3jwYEPY30UXXdQQMhbemj333NOMGDHC1ggZ7vDhw81tt91miAAjEQJC
QAi0IwK4ez777LOZoaFclQgBIVA+BKQ8KN89U49rIAA5j5MnnnjCRltw5+GeEJaE4dxll13CSzoX
AkJACHQZgS233NJgmvvWW2+lxLYcY/XkhMgvWEn179/fJWkvBISAEGg7BEK3BQboL+C03YA1ICHQ
xghIedDGN7dTh4YVwcQTT2zuueceM378eOtXBzEPAmkPZnKEDsLSYO+997bhGzsVK41bCAiB5iPw
zTffmOeff96ss846qeKAVggBzOaE49/+9rcGslYnKBx8YjGXzp73l5+XtC+//NL84x//sNF6fvGL
X5AkEQJCQAi0FAJSHrTU7VBnhEC3EPjxi6Vb1aiwEGgdBH73u98ZQnpeeeWV5t133zX/+c9/7Mc4
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
lrvuusu89957Zs011zStW7c27du3j5IftWnrhAkToqQAwrWITGL33XefGTRokHnyyScz+2pzLZ0j
BISAEBACQkAIVDcCIg+q+/nX293nIw9wLWZgQAc3SRRRoon19nhUsRBodATwIGjXrp2ZPHlyzra8
/vrrdrBNBhffllxySdO3b19z7733Wu0U/xjZWtBA2HnnnQ1EQ2MZxAdeEhAc6DwQrvX222+bY489
1qqKF6NdAwYMMF988UWNqshAkYuYqXGCdggBISAEhIAQEAJCIA8CClvIA5AO1w6BfOQBtboZQ0TR
Fl988RoXQgQNAkEmBIRAZSKwwQYb5PUO+OOPP8zUqVOjACy//PKWQIh5GOCmD4EASdlYNnjwYPP7
77+b+fPnGwQg33rrLTNv3jzTv3//gpsE4bD33ntHzwNHMtf4n2+++SZaVjuFgBAQAkJACAgBIVBb
BEQe1BY5nZcTgULIA0iE//u//4vWxwyiTAgIgcpEgEF/LHtCeLfvvvuu+fjjj8Pddpt3zU477WS9
mMICH374oSUQklLChuWLuU0mGbwmCLkgXMHZWmutZcgaERokyTvvvGM+/fTT8JBNWztx4kTz4osv
2nWI1dDw4go/YZnYNtedM2dONPTBlafM3LlzM9ksIERibaA8x7jvTz75xK67OrQUAkJACAgBISAE
yh8BkQfl/wxL8g7SkAcu40Iu8kC6ByX5eNUoIVA0BNq0aWMWWmihvPUleR9w4hprrGF23HFHQyhE
aB988IHVQGhosUDCKtq2bWvGjh1rXn311bBZWdtPPPGEWW211UyLFi3ssmvXrsYnTslMAXHwxhtv
ZAgCxCTrYjNmzDDbbbedWWGFFcx6661nVl55ZbP77rvXIBHw3oDcRaOCMrvuuqvVT4CocO9w2kG2
iwMPPNCsuuqqBk+I1VdfvVYeFnW5J50rBISAEBACQkAI1C8CNXta9Xs91V4lCKQhD1zYwrfffpso
HibyoEq+MLrNqkVg2WWXNeuss07e+8fzAA+EJGNGH32BGIHAuaNHj66hjZBUV7H2Dx061GaLwNPg
4osvjoZQkI4S4qN3797WAwARSGbujzrqqEwznnrqKdOqVSubopLwB2CU6qwAACAASURBVD4tW7bM
HK/NCgP/9ddf39x9993W2+G4446zwopjxozJVPfss8/asBBIELQaCL/YdNNNDW0MbcSIEebGG2+0
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
bjDvyrG86qqrbB3nnnuudY3HU6xTp07msssuyxTr27evJY07d+5s9thjD5tOsHnz5ua0007LlGFl
l112Maeccordd//992fadv7552eVe+uttwx6N82aNTM77bST6dmzpyWYu3fvbkjjG1qaNjKrD4FC
KMdee+1ltt9+e7P++uvbmfuwvobc/vXXX82DDz5ovv3226zLgjGkTmiQNNwLaRxjpD6YDRo0yPAs
Fl100fB0bQsBISAEhECVICDPgyp50KV4m5AH77zzTqqmxTIuMENFx2i55ZZLrCOJPPjss88M+a4X
X3zxxHN1QAgIASEgBIwVULzpppvMMcccY7PcMCh3nmDOqwBPgy222MJ6lJ1++umGATnn4Pq+4447
mtmzZxu8wUKbM2eOufHGG637O670/sD2pZdeMscdd5wdsK6yyirmySefNKeeeqo566yzzK677mra
tWtnq4NMgDS49dZbLQExePBgux+vAmf81jBrznsfooHwC7RvCHcYMWKErYt7cPflzmOZ1EZIbQgD
6rzmmmvsjDxeGZAojSk0yX1BHDiyx90L6RPxGvANAh7PDtIvQjiEhocgxMi6664bHmr07ddff93w
HcHThe8hbcTjg08uMeVCGs7zpH6+S3gyhsZ3A3IM0kgmBISAEKgGBEQeVMNTLtF7LMTzgFmRmNF5
y0UekDpq6aWXNrHz6RT4HdVY/donBISAEKh2BBg07b///nbgjit///79DYK0vh1//PGZQfS+++5r
DxF+QEjBU089ZWe08SQIjUHuySefbP7xj3+Eh2zImS9sy+B//PjxVvyPMAFHHiD8R1gF5AEDR9oa
GsQH4QXnnHOOOfHEEzOHaSOkxqWXXmpJhWuvvTZzzK0ktZGBK78tECWHHHKILU6bIEEayyDV8SAI
RQ7xHKCdvhHqgZAi2IW20EILWbIFQsgRRGGZxtrGMwJSiWfFBAADe9oLQUSfAG+X559/vijNe/TR
R83hhx9uNtlkE/Pcc8/VEJi85ZZbzIUXXpjlgVOUC6sSISAEhECJIlBzGqBEG6pmVR4CuKmmtZjn
AefGwhnCOpO8DyAPZEJACAgBIVA3BFDlZ5CFO3s4cGZwVT5cAAAgAElEQVTWGotlvmE/8fd4EsTM
Jw7ccQgEzGkcuP25ll999ZUdUFPfoYceWqPokUceaffddtttWcKCrmBSG9u2bWsH1szaP/HEE654
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
Rx5wjswIYf6AiSg3Dj74YBspGzcPvx177LFm5MiRiZQYUfUR9NC1xV+X/3/wePjhh1Oro8r1byP6
N9fe24mloD59+pibb745Vab3Cy4rYEjgL69B4tx2222pdtMm2latxj1FCsaoLAbcm/vuu68NMhgX
B679W2+9ZVUG3CNJjKCFkASoHBqtjFmSZBYxST3aVwgIgdwQQGUAaevilEAWQuAeeeSRec+8kltL
C3N037597QQECox8GATuhRdeaC644AKz995756PIRGWUuv5EjdXOQkAIFBQBkQcFhVeF5wOBuORB
ly5dAquLCprIAU2aNKkzWGc9xzHjn9R14ZRTTjHXXXedlUj279/fzuIzwM8048JsPzP8n332mR3I
M2DHRowYYWMkMLuLpJtZnTA755xzLHGwySab2Ej3DLDiGB08omLT4TvwwAMtEUM7Ro0aZQmF+++/
3w4SkXDmw1BR/OlPfwotitlup5JAip6NocYgxzgz29tss41VHDz++OP2ugwePNjsv//+lljwlk1n
F6UFA2Z+d8z+kF5z9uzZNl5EXMLDW2alfXfqDc45zIgbgHoDQiXO/UH0dQiDN998M5KMCKqPlIiQ
BbgBQaLxv0wICIHyRoAYAXvuuacZP358qqGo+VDVOYVcakOev6CSQs3EuzITwQhxjpsAkw+oqOKa
qwPFH+9br0HAT5kyxSrdHBnvj7WSpF7q+te//mWDLZ944ok2jhPPXX8GmKgyKQMCh2M4FlcSFm9s
J/Zh0oR13hgPcevH3YzjeWcH9XfitMGLo74LASFQngjkN/F2eZ6jWlXhCCBNzuS77JQHQafK4DHK
6DQEGQGWnAtC0PawdSgZGKQ6NwNm7BmAMmvtOhJBx/br188SB8RD4HjiE7AQgBHZPO0Jmy2nPHwk
qYP6wAPS4fLLLw+qqs46MGZ2ngE7/qGHH364Of300+1MkTsPskTky+jQ3XDDDYELnaO5c+faqpC+
QsRkY+eee67Fk3OCCBo+fLglclCbYE6d4S37L3/5ix3c4jc/bdo0O9NDmrFLL73UdnodoeM9ppq+
0/Hj9xNFHBB48JhjjjE777xzJHGAawrXEYUG2INnlIrBiyMdVxQ83bp1M6eeeqoleiCARBx4UdJ3
IVDeCHDPQs57DXc1Uq4WynDXY/BK3byLUZEFPXd4nx599NGWXMAFjXcg78w4RsBjVInUwScktfec
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
5pkff/yx0k5f7RUCQkAICAEhIASEgBAQAkJACBQNAZEHRYNaFeUbgaTKg4YNG5p11123TjO+++47
s3DhwjrrtUIICAEhIASEgBAQAkJACAgBISAEfkZA5IF+CRWLQFLygBMNUx/IdaFifwZquBAQAkJA
CAgBISAEhIAQEAJFQEDkQRFAVhWFQUDkQWFwValCQAgIASEgBISAEBACQkAICAE/AiIP/Ijo/4pB
IGnMA05MQRMr5vKqoUJACAgBISAEhIAQEAJCQAiUEQIiD8roYqgpyRDIRnnQqlWrwEpmzpwZuF4r
hYAQEAJCQAgIASEgBISAEBACQsCYVX5aaQJCCFQiAh9//LHZZJNNIpu+zjrrmGXLlqX2ITji2muv
bf7v//4vtc59+fTTT80GG2zg/tWnEBACQkAICAEhIASEgBAQAkJACPwPASkP9FOoWAQ22mgj8+tf
/zqy/V999ZX5+uuvU/usscYaZtttt0397/0i9YEXDX0XAkKgWhCAQF2yZIkp17mCL774wjz//PNm
2rRpZunSpdUCu85DCAgBISAEhEDVISDyoOouae2c0CqrrGI222yzjCf8wQcfpO0T5rrwj3/8I20/
/SMEhIAQKDYCixcvNpMmTTIoq/JlF110kcHNy6vCylfZQeXMnj3b3H333eb88883t9xyi3nxxRfN
jz/+GLSrefrpp81WW21l9t57b9OxY0dz6KGHBu6nlUJACAgBISAEhEDpERB5UPproBbkgEA+4x6I
PMjhQuhQISAE8oLAE088YQ488EDzyiuv5KW8YhbyzTffmFNOOcUGpv3Tn/5k/v73v5trr73WkgKd
O3c2fiKXtrEf7mL/+te/rEps2LBhxWyy6hICQkAICAEhIAQSICDyIAFY2rX8EPjd736XsVF0Sr22
0047ef9NfRd5kIJCX4SAEBACiRHo0qWLGT58uBk4cKB1P0BxgLsESgrcwnbZZZc09cN///tfM3/+
fNO2bVsbv6ZevXqmcePGievVAUJACAgBISAEhEBxEBB5UBycVUuBEIijPPDPdoWRB2+//bZh5kwm
BISAECgnBAjw6pX9f/TRR5HPKmIbvPPOO+bLL7/MeBpuX8r0G3VSd1CsBLfNHTN69GjzwgsvmPPO
O8+ce+65BrcyZ/vvv79BUYArxpVXXmlXUyYxaSjfBbENCmTrytCnEBACQkAICAEhUHoERB6U/hqo
BTkgEEd54CcPkMgGkQ50hmfNmpVDa3SoEBACQiD/CBDktUOHDpYQ2Hnnnc2mm25ql759+9apbOLE
iYZgsttss41Zf/31TY8ePUJJBBQBlMW+fO6xxx7mk08+SZU5efJkG5T2qKOOSq3jy/vvv2/WW289
c/HFF6fWDxo0yPzqV7+y5EFqpecL7aCeW2+91axYscKMGTPGNGjQwO5x++23m9VWW820aNHCc4S+
CgEhIASEgBAQAuWGgMiDcrsiak8iBIJIAH8BfrcFtoepD2bMmOE/XP8LASEgBEqOwIcffmiIG9Cu
XTszfvx4O9C/8cYbDYopZ7hede3a1cYYeO+998y7775rmjVrZh566CG3S+rz9ddfNwcddJDB1WDh
woUG5QAuBH369Entg2KAYItsGzJkiF2PYqBnz56mYcOG5oorrkjt+9ZbbxnI3LD0uSgRWrdubX74
4Qfzz3/+0+y1117m2WeftccTJPHVV181Dz74YKo8fRECQkAICAEhIATKD4HVyq9JapEQiI9AHPLA
rzygdDqx48aNq1ORyIM6kGiFEBACZYAAZMCdd95pTj75ZNsapP48wx5//HGb1YCV/fv3N7/5zW9s
poN1113X7se6zz//3DC77zVUA+w7ePBgs+aaa5omTZqYJ5980owYMcIMHTrUKgvYH4KA4I24I+y2
227mpZdeMi+//LKZPn26WX311W2Rn332mVU37Ljjjt4q6nzfcsst7TrIiu222860adPG/r/xxhub
XXfdtc7+WiEEhIAQEAJCQAiUFwIiD8rreqg1CRGI47YQpDyAPAiyN954I2i11gkBISAESooAA3dH
HNAQ9+xbvnx5ql0M7Hm2OeLAbcCdwG/M9KMSuPnmm1ObcFnAfQuiArcEbNVVVzWjRo2yai1cDz79
9FNz2WWX2YwK7sA11ljDfv3+++/dqsDPb7/91q5fa621ArdrpRAQAkJACAgBIVDeCMhtobyvj1qX
AQFmrPCVjTKCcrF4LYw8QLabqQPsLUffhYAQEALFQMBPAHgDElL/d999Z+MVEOcgk7EvwRT5JK6B
W77++mvTqVMnG8TQWwYxFMEHNWMAACAASURBVI455hibapGB/wUXXODdbJULm2++uY2FkLbB98/i
xYvtGmIfyISAEBACQkAICIHKQ0DkQeVdM7XYgwCzYptttplnTfBXv/oAdwc6xH4jdZiCJvpR0f9C
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
MzwCA5588slmwoQJMefcgmOOOcaQzeGhhx4ye+yxh1sc84mS4fDDD7dBG3F9kIiACIiACIiACIiA
CBQfASkPiu+ZF+WIpTwoysdeFIPu1KmTee2110zVqlVjxkvQvvPPP99mYog5+b8ClBDnnnuu+eST
T6wlA/EOwoRsJffcc4+pWbOmIXBjouwlYderTAREQAREQAREQAREIL8JSHmQ389PvU+RgJQHKYJS
tbwkgFXAggULzKGHHhra/8GDB5vevXsbov7HEwIjYsmwdOlSc9ppp8WrZn744Qdz4YUXmiOPPNJa
LcStqBMiIAIiIAIiIAIiIAIFRUDKg4J6nBpMPAK77LKL2W677eKdtuWKeZAQj07mOIFq1arZGAYt
WrQI7emYMWOshQHWCIkERduTTz5p5s6daw488MC4Vd99913TsGFD0717d/P999/HracTIiACIiAC
IiACIiAChUFAyoPCeI4aRQoEklkfSHmQAkRVyWkCFStWNLNnzzbnnHNOaD8nTZpkyLKQKE2je+Hx
xx9v3n//fXPrrbca2g0TLBnuv/9+m5WB9I///vtvWDWViYAIiIAIiIAIiIAIFAABKQ8K4CFqCKkR
kPIgNU6qld8EtthiCzNx4kQzcODA0IHMmDHDnHrqqeb3338PPe8vpK3+/fub5cuXm86dOxviI4TJ
hg0bzCWXXGKOOOII88Ybb4RVUZkIlJjAqFGjTJ06dbwtXhaREt8gzQu//fZb89FHH3nbxo0b02xB
1UVABERABEQgPwlsnp/dVq9FIH0C++67b8KLiE5PJPnKlSsnrKeTIpAPBG6++Waz8847m0GDBsV0
l8kXmRhmzZpliHWQTHbbbTfz8MMP21gHKAnipW2knLSOWD5wf66TpEcAy5H58+eHXrT11ltbprvv
vrs55JBDzF577RVar9AKv/76a/PBBx94w/rxxx+9/fLYGTlypLnjjju8Wz/yyCPmjDPO8I5zfQeX
o5deeskqBQmUinLw119/te8T7xRb9erV7WejRo3M3nvvnetDUv9EQAREQATKiICUB2UEWrcpfwLJ
LA/o4erVq6U8KP9HpR5kiMDll19uKlWqZFMsBrMjzJs3z5x44onm2WefTRoPxO0OqR0XLlxo/vOf
/5hrr73WYHEQFFwZsHyYOXOmcQM1YsEgSY0AsSb8E9N4V2266aamTZs2NshlotgU8a5XefERINjp
FVdcYV2NwoKnEiyVzS9YfVx22WX+Iu2LgAiIgAgUMQG5LRTxwy+2oSezPICH4h4U21tR+OMlMwJW
A5tvHqsrJsUjCgSsblKVzTbbzFx88cV2tZI0kPFcGTDlHjBggDU1f/7551NtXvVSJIAyiMCWp5xy
SlrPL8Xmi7La33//bT777DPz6quvmg8//LCgGEybNs3GJrnvvvuisq6ghCL9Kn8HcDsiuHC873RB
AQkMBqtDYrw89dRTSkMbYKNDERABEfATkPLAT0P7BU1AyoOCfrwaXAICZ599tsG0OswC4PXXXzcn
nHBC2hPQKlWqGCYib775piFVZDxZtmyZadmypTn99NPNqlWr4lVTeRwC11xzjfWthzMBL7H+8MvK
lSvN6NGj/UXaLwGBKVOmmK222spgoda0aVPDcTy5/vrrzXfffedtiVKbxmujLMs//fRT06VLF5tm
1b0vFkm8Tz///LNVBGKB9M4775i1a9caYjo89NBDplOnTmaHHXZwLynYzwMOOMDstNNOpm7dujYe
TLKMNAULQgMTAREQgRQISHmQAiRVKQwC+HCyappIZHmQiI7O5TOBdu3amccee8xsueWWMcMgyOFJ
J51k/Z5jTiYpaNCggXn77bfNuHHj7A/weNUJ1HjQQQeZq6++ukT3idduoZcTNwJuRx11lEEJ9Mor
r5gmTZpEDZsVU0npCJCBJMyUP6xV0v6iPHM3lA65LBdddJH5448/vC4efPDBNm4J79O2227rlbs7
WB+ce+65ZurUqTYVq1teqJ9+NoU6Ro1LBERABDJFINaONVMtqx0RyDECrLoSCAqz1Hgi5UE8Miov
BAJkWcDUvW3btubPP/+MGhIuDARRfOaZZ0InFFGVAweYPvfo0cO0b9/esFKOIiEYY4FLuOeIESPM
gw8+aG688caEGRwCt9Dh/wigACUgJab1rrCyHCYEFkRp4/qyk2EDRQQxErA2iRcHhud02223eU2y
KsvzZUV2wYIFhrgMKJwIpFe/fn070QybhBLokBVsVzCPR4nlF1a+x4wZ4xURDLJr167ecTo7/G0n
4CSBO7/55huzbt06GzR0zz33NMcdd5y1fgkzyeddJIigXwhaSTlSu3Zt07p1a+/0Cy+8YFfp3QIs
D+LFnSjpM6DtePfBzejFF180BD7Fsod79+zZ0/bT7ZP7OXnyZNuOe8wnvEsbBLE043r00UejrJBw
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
559/3owaNcqcffbZNk4KCgeJCIiACIiACIiACBQjAf0KKsanrjFbArVq1UpIQpYHCfHopAhEESB7
yf3332+6desWY2nAZHy77bYzw4cPj7om1w9ITXncccfZze0r8QqWLl1qYxew6sj22Wef2c81a9aU
Ohijex99ioAI5D4B3BaIeyARAREQgWIhIOVBsTxpjTOGgJQHMUhUIAKlItClSxezceNGa/YfbOiG
G26wmQgGDRoUPJVXxwQ+xKWBLUyI/bBu3Tpv++GHH6xCAaUDwRmJEUHQRgIl5mrAxLBxqUwERCCa
gAImRvPQkQiIQHEQUMDE4njOGmUIASwLSK0WT/hh8P3338c7rXIREIE4BEaMGGGuvvrq0LOjR482
vXv3Dj2nQhEQAREQAREQAREQgdwlIOVB7j4b9SzLBEhHRrrGRDnfWSHE3FoiAiKQHoErr7zS3HTT
TTEXbbLJJmb8+PHm/PPPjzmnAhEQAREQAREQAREQgdwloICJufts1LMsEyB93P7775/wLop7kBCP
TopAXAI33nijufjii2PORyIR06NHDzN58uSYcyoQAREQAREQAREQARHIXQJSHuTus1HPyoCA4h6U
AWTdomgJ3HXXXTaAYhAAVj/ERyAtokQEREAEREAEREAERCA/CEh5kB/PSb3MEoEDDjggYctEUZeI
gAiUjAAuCvfdd58544wzYhr4999/bfrDmTNnxpxTgQiIgAiIgAiIgAiIQO4RkPIg956JelSGBJJZ
Hkh5UIYPQ7cqSAK4B02aNMm0adMmZnx///236dixo3n66adjzqlABERABERABERABEQgtwhIeZBb
z0O9KWMCySwPFPOgjB+IbleQBDbffHMzbdo0c+KJJ8aM76+//jLt2rUzs2fPjjmnAhEQAREQAREQ
AREQgdwhIOVB7jwL9aQcCMjyoByg65ZFSWDLLbc0TzzxhDnuuONixo8C4fTTT5cCIYaMCkRABERA
BERABEQgdwhIeZA7z0I9KQcC22+/valatWrcO8vyIC4anRCBtAlsvfXWhhgHzZo1i7n2zz//tAqE
Z599NuacCkRABERABERABERABMqfgJQH5f8M1INyJnDggQfG7cGPP/5o2CQiIAKZIbDtttvaGAeN
GzeOadBVIMyaNSvmnApEQAREQAREQAREQATKl4CUB+XLX3fPAQLJ4h4oaGIOPCR1oaAIVKhQwWBh
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
CEh5UFakdZ+8I0DKtblz58b0+5tvvokpU4EIiIAIBAlstdVWZt9997Vb8JyORUAEREAEREAERCDf
CCjmQb49MfW3zAgcd9xxoff69ddfzd9//x16ToUiIAIiIAIiIAIiIAIiIAIiUIgEpDwoxKeqMWWE
QOPGjeO2o6CJcdHohAiIgAiIgAiIgAiIgAiIQAESkPKgAB+qhpQZAptuuqnZdtttQxubM2dOaLkK
RUAEREAEREAEREAEREAERKAQCUh5UIhPVWPKGIHdd989tK358+eHlqtQBERABERABERABERABERA
BAqRgJQHhfhUNaaMEahVq1ZoW6Rik4iACIiACIiACIiACIiACIhAsRCQ8qBYnrTGWSICDRo0CL1u
3bp1ZsOGDaHnVCgCIiACIiACIiACIiACIiAChUZAyoNCe6IaT0YJ1KlTJ257CxYsiHtOJ0RABERA
BERABERABERABESgkAhIeVBIT1NjyTgBcrTHE2VciEdG5SIgAiIgAiIgAiIgAiIgAoVGQMqDQnui
Gk9GCdSoUSNue6+//nrcczohAiIgAiIgAiIgAiIgAiIgAoVEYJOII4U0II1FBDJNYJdddjHff/99
TLNbb721+fnnn83mm28ec04FIiACIiACIiACIiACIiACIlBIBGR5UEhPU2PJCoF4GRf++OMPs2jR
oqzcU42KgAiIgAiIgAiIgAiIgAiIQC4RkPIgl56G+pKTBPbbb7+4/XrttdfintMJERABERABERAB
ERABERABESgUAlIeFMqT1DiyRiBR0MRXXnkla/dVwyIgAiIgAiIgAiIgAiIgAiKQKwSkPMiVJ6F+
5CyBRMqDV1991fz3v//N2b6n27GNGzeaxYsXmy+//NIoHEq69FRfBERABERABERABERABAqXgJQH
hftsNbIMEUjktvDTTz/ZyXZpbvXrr7+aDz74wMybN8+sWLHC/PXXX6HNDRs2zGy77bZ2O+ecc0Lr
hBWiBLjzzju9bf369THVli1bZpo0aWIqVapk6tWrZ/baay97H+4pEQEREAEREAEREAEREAEREAGF
idc7IAJJCCSyPODSF1980Rx22GFJWok9/cUXX5hrr73WTJo0Kcp6YdNNNzV77LGH6dmzp7n66qu9
C//++2/z+++/2+N4Cgavsm8Hy4i+fft6Jccff7ypXLmyd0ybrVq1stYGFG611VamevXq5pNPPjHr
1q3z6mlHBERABERABERABERABESgeAlIeVC8z14jT5EAE+0dd9zRbNiwIfQKlAcDBw4MPRevkEl5
o0aNvAk79bbbbjtrdYBi4KuvvjKrVq2Kd3lGyydOnOj1Y/fddzdvv/22qVatmlUcBMdMasrNNtvM
WiVktBNqTAREQAREQAREQAREQAREIKcJyG0hpx+POpcrBBJZH5Bx4c8//0yrq9dcc03UhJ02mKhj
BbB8+XJz6623mjp16qTVZrzKTPYXLFjgbfvss09U1aVLl3rHjRs3tooDCnbeeWez//7723Mnnnii
2WGHHUzFihXNnDlzvPraEQEREAEREAEREAEREAERKA4CsjwojuesUZaSAHEPFi5cGNrKb7/9Zl5/
/XXTokWL0PNhhfPnz/eKe/fuba0Q3IKaNWua/v37u4cpff7zzz9m883jf50bNGgQt501a9Z45w44
4ABv379DLAbiO6Qjf/zxh9l6663TuUR1RUAEREAEREAEREAEREAEcpSALA9y9MGoW7lFIJHlAT19
7rnn0uowQRJdwSqgpPLggw8aYhjg8lClShVzxRVXxARcJOZB/fr1ve2zzz6zt8PagfIXXnjBu/19
993n1ZswYYIN4Egd3ChcwUWDsg4dOrhF9pPAjJMnTzZHH320tVLYZpttzPbbb28OOeQQ07p166i4
DlEX6kAEREAEREAEREAEREAERCDnCcRfqsz5rquDIlB2BBJlXKAXs2fPNqNGjUq5Qw0bNvRiGsya
NcucffbZNhsCrgKpym233WYGDBjgVcd1YuTIkXa1f8iQIV45k3q/1YQbdPHHH3+MKueCr7/+2m7u
PnX911K+cuVKPswvv/xiP91/UFzcfPPN7qHZcsstDUqSjz76yG5K/eih0Y4IiIAIiIAIiIAIiIAI
5B0BWR7k3SNTh8uDQDLlARNkd0U/lf4NHjzYrsq7dadMmWJwV7j99tsNLgjJ5OWXX7aKA1b1L7vs
Mpta0b3m7rvvdncTfjZt2tQsWrTING/e3Kt34YUX2jLKL7jgAhvzgH0CKLpCPAbKnnjiCbfIxmvw
K09mzpxpCK5IWsi5c+ea4cOHG7JISERABERABERABERABERABPKTgH7N5+dzU6/LmEAy5QHdeeqp
p1LuFYEI582bZ3bddVfvGgImEuvgyCOPtJNz70TIzvfff2+6du1qlixZYi0exo4d69Xi3MaNG73j
eDsEP6xXr551MXDrkG2BMjb6husB+6RvdIWAi5QdeOCBbpFZvXq1cS0LiHNAjAUsDwiyiFsFKSc3
2WQTr752REAEREAEREAEREAEREAE8ouAlAf59bzU23IisNtuu9m4Aolu/+STTyY6HXPuiCOOsOb8
5557btS59957zxxzzDGG1ft4wrXjx4/3TtetW9fbZ4dghWUp3H+vvfayt+TeHI8ePdrgGiERAREQ
AREQAREQAREQARHIfwJSHuT/M9QIyohAsqCJBCBk1T8d2WmnncxDDz1kszWwmu8KE/COHTvGdYVg
9d+fXYFV/vIUrAquuuoqz7rg22+/NZdeeql1d+jTp4/57rvvyrN7urcIiIAIiIAIiIAIiIAIiEAp
CUh5UEqAurx4CCRzXfj333/N448/XiIgWBq88847dsLtNvDXX3+ZcePGuYc5/0m8BDI3HHXUUV5f
CZh41113mdq1a1sXC++EdkRABPKOAPFYli9fbl20iGWyatWqlGK0ZHKguEfxd8XdCBSbbcmFcWd7
jGpfBERABERABFIhIOVBKpRURwQcAsmUB0CaOnVqiVltttlmNltCpUqVvDY+/fRTbz8fdgi++Oab
b9rt5JNP9rq8du3aqMwQ3gntiIAI5AUBssJg8XTAAQeYU0891bRq1cpgjbXtttuaOXPmlGoMBFfF
XYstmavTihUrrAsZ6WnZLrnkkrTvzT3GjBnjbS+99FLcNrI57rg31QkREAEREAERyFECStWYow9G
3co9AqkoD3BdIOsCP7JLIlgvbLHFFt6le++9t7dfnjv+gImpKDSwPiCAJK4LxD5AyEghEQERKBmB
a6+9NmqSTlYVYp+Uhbz44oumTZs2obf6+++/SxRjhdX8CRMmmBtvvNEGXPU3TqBV/vbxd/SRRx6x
wVf950u7jxtV7969vWa6d+9ujj32WO/Y3cnGuN229SkCIiACIiAC+UhAlgf5+NTU53IhkIryAJPa
Bx98MGn/zj77bHPfffdFxUjgB+11111n1q1b513frFkzb788d/xjnz59uvn666+juvP2229b94Rv
vvkmqvz333/3jkkrKREBESgZgZUrV1rXJtyb2FLJqFKyO8VeRTpYV7CQuvnmm80PP/xgY7XcdNNN
XrBUt06yT1yySBWLq9NqJ1NLULAMWLx4sSEILcqJ8pJMj7u8xqH7ioAIiIAIiECmCMjyIFMk1U7B
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
iIAIiIAIiECREZDyoMgeuIabWQL4q3722WcxjS5cuNAcfvjhMeUqEIFMEMAfnywNo0ePNp9++mnS
JjfbbDPTrl07c/nll+u9TEpLFURABERABERABERABMIIbBpWqDIREIHUCNSqVSu04vLly0PLVSgC
mSCw3Xbbmd69exvesxkzZpimTZsmbBZ/ewIwHnHEEaZFixZmzpw5CevrpAiIgAiIgAiIgAiIgAgE
CUh5ECSiYxFIg4CUB2nAUtWME9h0001NmzZtzMsvv2ywdjnzzDPN5ptvnvA+8+bNMyeccIKpW7eu
mTJlivnnn38S1tdJERABERABERABERABEYCAlAd6D0SgFATiKQ8++eSTUrSqS0UgfQK4yaAMWLly
pY1xkCzmxvv/j72zALOiev/4i4J0N0h3l6R0SUhJqaCUhIiKlImUSqigpIABktIlJSXd3d3dHQr/
/Z7/71znzp27e3f33t25937f55mdmTNnzpzzmVnY8543du2SZs2aSY4cOVQchfv374f/obyDBEiA
BEiABEiABEggaAhQeRA0r5oD9QUBd8oDui34gjbb9IRAxowZZfDgwXLmzBkZMGCAIPtHaHLy5Enl
ApEpUybp16+fXL9+PbTqvEYCJEACJEACJEACJBCkBBgwMUhfPIftHQJnz56VDBkyuDSGKPfIBx8j
RgyXaywggagk8PjxY5k4caJ89913cuDAgTAfjW+3bdu20qVLF8tvO8wGWIEESIAESIAESIAESCAg
CVB5EJCvlYOKSgIIXnfv3j2XR2Ll98UXX3QpZwEJRAeBZ8+eyYIFC2TgwIGybt26MLsQK1YsefPN
N1WGhrx584ZZnxVIgARIgARIgARIgAQCmwDdFgL7/XJ0UUDAnevCwYMHo+DpfAQJeEYAVjB16tSR
tWvXqq1u3bqhWsY8efJExo8fL/nz51dBGT1ROHjWE9YKFgJQWEGxqrdHjx7ZcujR1c9r167J+vXr
ZebMmSrg6c2bN23Jh50iARIgARIgAU2AygNNgnsSiCABd8oDxj2IIFDe5nMCL7/8ssydO1f27t0r
LVq0EFgZuBNMrObNmydly5ZV2/z58wVlFP8lgEnq8OHDHdvKlSt9MpgjR44ILLP01qlTJ588x6rR
p0+fyqlTp2TDhg2CuB6hZRXxVj+XLl3qYAq+VhZp6CuUBq1atZIUKVIIfhcbNWokxYsXl6RJk0r5
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
EiABEiABEiABIwEqD4w0eEwCXiJA5YGXQLIZEiABEiABEiABEiABEiABWxCg8sAWr4GdCDQC+fPn
txwSLQ8ssbCQBEiABEiABEiABEiABEjA5gQYMNHmL4jd808CyLiQIEEC+ffff10GcP36dUmaNKlL
OQtIgARIgARIgARIgARIgARIwK4EaHlg1zfDfvk1gThx4ki2bNksx0DrA0ssLCQBEiABEiABEiAB
EiABErAxASoPbPxy2DX/JsC4B/79/th7EiABEiABEiABEiABEiCB/whQefAfCx6RgFcJuIt7wHSN
XsXMxkiABEiABEiABEiABEiABKKAAJUHUQCZjwhOAu6UB3v27AlOIBw1CZAACZAACZAACZAACZCA
3xKg8sBvXx07bncC7pQHtDyw+5tj/0iABEiABEiABEiABEiABMwEmG3BTITnJOAlAv/884/Ejx9f
Hj9+7NLihQsXJE2aNC7lLCABEiABEiABEiABEiABEiABOxKg5YEd3wr7FBAEYsaMKbly5bIcC60P
LLGwkARIgARIgARIgARIgARIwKYEqDyw6YthtwKDAF0XAuM9chQkQAIkQAIkQAIkQAIkEOwEqDwI
9i+A4/cpgQIFCli2z6CJllhYSAIkQAIkQAIkQAIkQAIkYFMCVB7Y9MWwW4FBwJ3lAZUHgfF+OQoS
IAESIAESIAESIAESCBYCDJgYLG+a44wWAqdOnZLMmTO7PDtevHhy584dee456u9c4LCABEiABEiA
BEiABEiABEjAdgQ4c7HdK2GHAolApkyZJFGiRC5Dun//vhw7dsylnAUkQAIkQAIkQAIkQAIkQAIk
YEcCVB7Y8a2wTwFFgK4LAfU6ORgSIAESIAESIAESIAESCEoCVB4E5WvnoKOSAIMmRiVtPosESIAE
SIAESIAESIAESMAXBKg88AVVtkkCBgJUHhhg8JAESIAESIAESIAESIAESMAvCVB54JevjZ32JwIF
Cxa07O6uXbssy1lIAiRAAiRAAiRAAiRAAiRAAnYjwGwLdnsj7E/AEbh586YkTZrUZVzItHD79m2J
Hz++yzUWkAAJkAAJkAAJkAAJkAAJkICdCNDywE5vg30JSAJJkiSRjBkzuozt6dOnsnfvXpdyFpAA
CZAACZAACZAACZAACZCA3QhQeWC3N8L+BCSBQoUKWY6LrguWWFhIAiRAAiRAAiRAAiRAAiRgMwJU
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
E9KHH36YHxeBjuOOOy4NGjQoHXXUUY3VBc8hQIAAAQIESkzAyoMSmzDdJUCAAIGmL9C9e/cUpzDU
VL7++us0ZcqUmm412rVp06alJ554Iv3888/p+++/T/fee2/q0qVLOuecc9L69esbrR8eRIAAAQIE
CJSOgOBB6cyVnhIgQIBACQn06tUr9enTp8Yez5o1K69M2LJlS433G+vis88+m/uxfPnydPXVV+e8
DO+9915jPd5zCBAgQIAAgRISEDwoocnSVQIECBAoLYFTTz01nXLKKTV2OrY2xBf1TZs21Xi/sS9G
X6Pss88+2z36yy+/TH379k3t2rVLPXv23G47xvDhw9Oll166Xf148+abb6Zob+3atfnejtqICi+/
/HKK7RxLly5N119/fTr44INTrI6IsmDBghTPOfLII9NBBx2UTj/99Hy98j+PPvpo6tatWzrggAPy
qRe///575dteEyBAgAABAvUgIHhQD4iaIECAAAECtQnEl93aAgjz5s3LX7TXrVtX28cb7foLL7yQ
j5o866yztj3zq6++Sv37989f3MeMGZP/Rm6E6HeUE088Mb3++utp7ty52z4TL55++ul06KGHpn33
3TftrI2oH1/2Z86cma677rrc1h133JEOO+ywuJVGjBiRE00++eST6cUXX8y5GfKN//1zzz33pAce
eCANGzYsRZ0ff/wxnX/++ZWreE2AAAECBAjUg8Be9dCGJggQIECAAIEdCEQAoVWrVil+ga9alixZ
ksaOHZuPeezYsWPV2w36/q233sqBgIkTJ+Zf/aMfbdu23fbMu+66KwcBXn311XxtwIAB+df9559/
Pj388MPp4osvTrfcckt65ZVX0siRI3Od+fPn55wO48aNy+931sa2h/37IlY3jB8/ftul2NYRfbzx
xhvzioK4cdFFF227HysVYtXBzTffnO6+++58vWXLlumqq67KQYuTTz55W10vCBAgQIAAgboJCB7U
zc+nCRAgQIBAIYFYxt+6desakyWuXr06vfbaaym+nB9//PGF2quPSvGrfmybiJUP8SW98i/28cX9
s88+y9sEom8V5ZBDDkmzZ8/Ob2ObwHnnnZciuFARPBg9enSKIMjgwYNTkTYq2o2/jz32WOW3KQIB
Z599dl5REEGN2267LR144IHb6sTWhn/++Sf95z//yX5xY9myZfl+9FHwYBuVFwQIECBAoM4Cggd1
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
KQoAAAAASUVORK5CYII=

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Dictionary.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
eAHsnQncTGX7xy9ZQ2UJIdkjlWRJllSyVBJZSouSVu37vqdUb9Li1V7WNlSSJSGEUJRkDRFRUtbI
1vnfv+v/3tOZmTPzzMwz+/zuz2ecM/e51++Zp851rq2AY4qwkAAJkAAJkAAJkAAJkAAJkECOETgo
x/bL7ZIACZAACZAACZAACZAACZCAEqAwxB8CCZAACZAACZAACZAACZBAThKgMJSTt52bJgESIAES
IAESIAESIAESoDDE3wAJkAAJkAAJkAAJkAAJkEBOEqAwlJO3nZsmARIgARIgARIgARIgARKgMMTf
AAmQAAmQAAmQAAmQAAmQQE4SoDCUk7edmyYBEiABEiABEiABEiABEqAwxN8ACZAACZAACZAACZAA
CZBAThKgMJSTt52bJgESIAESIAESIAESIAESoDDE3wAJkAAJkAAJkAAJkAAJkEBOEqAwlJO3nZsm
ARIgARIgARIgARIgARKgMMTfAAmQAAmQAAmQAAmQAAmQQE4SoDCUk7edmyYBEiABEiABEiABEiAB
EqAwxN8ACZAACZAACZAACZAACZBAThKgMJSTt52bJgESIAESIAESIAESIAESoDDE3wAJkAAJkAAJ
kAAJkAAJkEBOEqAwlJO3nZsmARIgARIgARIgARIgARKgMMTfAAmQAAmQAAmQAAmQAAmQQE4SoDCU
k7edmyYBEiABEiABEiABEiABEqAwxN8ACZAACZAACZAACZAACZBAThKgMJSTt52bJgESIAESIAES
IAESIAESoDDE3wAJkAAJkAAJkAAJkAAJkEBOEqAwlJO3nZsmARIgARIgARIgARIgARKgMMTfAAmQ
AAmQAAmQAAmQAAmQQE4SoDCUk7edmyYBEiABEiABEiABEiABEqAwxN8ACZAACZAACZAACZAACZBA
ThKgMJSTt52bJgESIAESIAESIAESIAESoDDE3wAJkAAJkAAJkAAJkAAJkEBOEqAwlJO3nZsmARIg
ARIgARIgARIgARKgMMTfAAmQAAmQAAmQAAmQAAmQQE4SoDCUk7edmyYBEiABEiABEiABEiABEqAw
xN8ACZAACZAACZAACZAACZBAThKgMJSTt52bJgESIAESIAESIAESIAESoDDE3wAJkAAJkAAJkAAJ
kAAJkEBOEqAwlJO3nZsmARIgARIgARIgARIgARKgMMTfAAmQAAmQAAmQAAmQAAmQQE4SoDCUk7ed
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
BJJJwLx5YyEBEiABEiCBlBD4+OOPHSNQOOb/e0GfSpUqOSbvjvPLL7/41mbyCmk71IcrJo+RY4Ih
OCYggW/cUqVKOSZ/kLN27Vpf13feecc57LDDtI0RmByTCNYxkeWcKVOmOCaZqtabvEa+9sa3xzFh
vX1jmiANvmv2JNK50d5oxXQskxPJdueRBEiABEggiQSYdDWZkifnIgESIAES8CQAbRA0NIjuBlO0
KlWqSI0aNaRgwYKe7SOtRE4haF/smF79du3aJQitXbVqVQ1vbdv88ccfgghxiC4XGMYb4blhZgfN
kNUa2X72GMncrVq1EiRc/eGHH2w3HkmABEiABJJIgMJQEmFzKhIgARIgARKwBCAEQUgzWi7p16+f
reaRBEiABEggiQQYQCGJsDkVCZAACZAACVgC48eP15xHDKltifBIAiRAAsknQM1Q8plzRhIgARIg
ARKQ/fv36we5jVhIgARIgARSQ4DCUGq4c1YSIAESIAESIAESIAESIIEUE6CZXIpvAKcnARIgARIg
ARIgARIgARJIDQEKQ6nhzllJgARIgARIgARIgARIgARSTIBJV1N8Azg9CZAACZAACaSCwG+//abh
wRHRzuR0SvgSFi5cKCZ1iJxwwgl+ocpD1Sd8QZyABEiABAwB+gzxZ0ACJEACJJBSAjt37tQcQ4sX
L5ZVq1bJEUccIbVq1dIcPtWqVROT/DSl64v35Js3b1YhpEyZMlK5cuWg4e11kyRW8y0FNjCJX+Xn
n3/Wvhjj999/l19//VXKlSun7ALbh/r+5JNPikkoq6G9TfLXUM3C1tu1FC1aVI4++uiwbYsUKSL7
9u0T5F8qXry4r22oel8DnpAACZBAAgnQTC6BcDk0CZAACZBAaAL//POPPP/881KhQgVp2rSp9O7d
W5544gm58cYb5ayzztKH64MPPljGjBkTepAMvDJ79mypX7++XHDBBZ6rv++++/R6t27dPK/3799f
r9tEra+//rp+f+655zzbJ7LygQce0Lnr1asnGzZsSORUHJsESIAEEkKAwlBCsHJQEiABEiCBcASg
DWrVqpXceuutajIFLcUXX3yhGhOYTY0aNUquvfZaNd/6+++/ww2V1GuLFi0S5AfatWtXzPOeeuqp
UrBgQZk3b56AQ2D58ssvterbb7+V3bt3B16WCRMmyKGHHirNmzfXa2XLlpU6depoAtfAxvFYb+CY
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
pFChQvqAj7w9JUqUkJIlS2rIalwvVqyYBlpAsAU84Ac+KNvvoY724RzX7TmOgeeB360wYdvao7ve
69zWuY/hzgOv4XtgHdbOQgIkQAIkQAIkkH0EqBnKvnualTtC7p9QgtCoUaOka9euWblvbooESIAE
SIAESIAESCBxBBhAIXFsOXIcCYwYMcJztAYNGlAQ8iTDShIgARIgARIgARIggbwIUBjKixCvp5zA
X3/9JWPHjvVcx4033uhZz0oSIAESIAESIAESIAESyIsAhaG8CPF6yglMmjRJHbMDFwIflvPPPz+w
mt9JgARIgARIgARIgARIICICFIYiwsRGqSQwbtw4z+k7dOigjv6eF1lJAiRAAiRAAiRAAiRAAnkQ
oDCUByBeTj0BBE/wKl26dPGqZh0JkAAJkAAJkAAJkAAJRESAobUjwsRGqSKwePFiOe6444KmRyjo
TZs2SenSpYOusYIESIAESIAESIAESIAEIiFAzVAklNgmZQSmTJniOXfTpk0pCHmSYSUJkAAJkAAJ
kAAJkECkBCgMRUqK7VJCYOrUqZ7znnHGGZ71rCQBEiABEiABEiABEiCBSAlQGIqUFNulhMCsWbM8
523durVnPStJgARIgARIgARIgARIIFIC9BmKlBTbJZ3AsmXL5Jhjjgmat2jRorJt2zbBkYUESIAE
SIAESIAESIAEYiVAzVCs5Ngv4QRCaYUaNWpEQSjh9DkBCZAACZAACZAACWQ/AQpD2X+PM3aHc+fO
9Vx7y5YtPetZSQIkQAIkQAIkQAIkQALREKAwFA0ttk0qgXnz5nnO16xZM896VpIACZAACZAACZAA
CZBANAToMxQNLbZNGoFdu3bJoYceKgcOHAia85dffpFKlSoF1bOCBEiABEiABEiABEiABKIhQM1Q
NLTYNmkEvv32W09BCEIQBaGk3QZORAIkQAIkQAIkQAJZTYDCUFbf3szdHIQhr3LSSSd5VbOOBEiA
BEiABEiABEiABKImQGEoamTskAwCoYShhg0bJmN6zkECJEACJEACJEACJJADBCgM5cBNzsQthhKG
TjzxxEzcDtdMAiRAAiRAAiRAAiSQhgQYQCENb0quL2nfvn1SsmRJ2bt3bxCK9evXS+XKlYPqWUEC
JEACJEACJEACJEAC0RKgZihaYmyfcALLly/3FIQOP/xwCkIJp88MyekAACAASURBVM8JSIAESIAE
SIAESCB3CFAYyp17nTE7XbRokeda69ev71nPShIgARIgARIgARIgARKIhQCFoViosU9CCXz//fee
4x9//PGe9awkARIgARIgARIgARIggVgIUBiKhRr7JJRAKM0QhaGEYufgJEACJEACJEACJJBzBCgM
5dwtT/8NL1682HORFIY8sbCSBEiABEiABEiABEggRgKMJhcjOHZLDIFdu3ZpJDnHcfwmKFCggGzf
vl2v+V3gFxIgARIgARIgARIgARKIkQA1QzGCY7fEEFi6dKkECkKYqUqVKhSEEoOco5IACZAACZAA
CZBAzhKgMJSztz49N75kyRLPhdWrV8+znpUkQAIkQAIkQAIkQAIkECsBCkOxkmO/hBCAZsirUBjy
osI6EiABEiABEiABEiCB/BCgMJQfeuwbdwLLli3zHJPCkCcWVpIACZAACZAACZAACeSDAIWhfMBj
1/gTWL58ueegderU8axnJQmQAAmQAAmQAAmQAAnESoDR5GIlx35xJ3DgwAEpXry47N27N2jsTZs2
Sbly5YLqWUECJEACJEACJEACJEACsRKgZihWcuwXdwI//fSTpyBUpkwZCkJxp80BSYAESIAESIAE
SIAEKAzxN5A2BFasWOG5FprIeWJhJQmQAAmQAAmQAAmQQD4JUBjKJ0B2jx8BCkPxY8mRSIAESIAE
SIAESIAE8iZAYShvRmyRJAIrV670nKl27dqe9awkARIgARIgARIgARIggfwQoDCUH3rsG1cCP/74
o+d4tWrV8qxnJQmQAAmQAAmQAAmQAAnkhwCFofzQY9+4EgglDFEzFFfMHIwESIAESIAESIAESOB/
BBhamz+FtCCAcNoIq43w2oFlx44dUrJkycBqficBEiABEiABEiABEiCBfBGgZihf+Ng5XgQQVttL
EDriiCMoCMULMschARIgARIgARIgARLwI0BhyA8Hv6SKwOrVqz2nrlmzpmc9K0mABEiABEiABEiA
BEggvwQoDOWXIPvHhcCqVas8x6Ew5ImFlSRAAiRAAiRAAiRAAnEgQGEoDhA5RP4JUBjKP0OOQAIk
QAIkQAIkQAIkEB0BCkPR8WLrBBEIJQzVqFEjQTNyWBIggWwk8Pbbb2swlo4dO0a1vVj7RTUJG5MA
CZAACaQdAQpDaXdLcnNBoYQhmsnl5u+Bu849Ar1795ZKlSpJ48aNxXGcmAHs379fdu/eLXv27Ilq
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
gQRIgARIIKcEqAzlFHfpnCzZ5AlUhkrnO8GVugkgdggxRIglQkyRS0aOHGkOOugg89FHH7l2F3xb
nTp1TI0aNSKvmjVrmsaNG5tOnTqZ8ePHm/L25oZSilcybr8FfzG4ABIgARIoMQJUhkrsgudquckq
Q/Xq1cvVlHgeEshrAsgyh2xzYTFCS5YsMQceeKAZNWpUXq8jnckhbvDbb7812267rdl1113Nlltu
qYrfc889Z0499VTTrVu3dIblMSRAAiRAAiSQkACVoYSI2CEdAskqQ/vtt186w/MYEihKAkiagHpE
qEvkkvXr15uzzz7bnHXWWebXX391dSnotsGDB5t58+aZ5cuXa2KJf/3rX7qeJ5980kydOrWg18bJ
kwAJkAAJ5CcBKkP5eV0KflbJKkN169Yt+LVyASSQSQJbbbWVGT58uBkxYoTGqbjGHjNmjNl///3N
/PnzXbuLoq1KlSpmyJAhainCgubOnVsU6+IiSIAESIAE8osAlaH8uh5FM5uffvop4Vp22GEHZpJL
SIkdSpUALECwkoQ9MEC2uVatWpnbb7+9aGNZKlSooHFE+A4gZsclL7zwgrrS7bXXXupGeMUVV5h1
69a5upoLL7xQ+3788cfmu+++M7feeqs57LDDDCzUcMV77733nMeFNcJ1sX///uaII44wiHuqXbu2
Fs5F/Fc8Wbx4sYHV69BDDzW77767KrZwkxw3blzMYamsL+ZgNpAACZAACSQmgDpDFBLINAG5kUP9
qrivgw8+ONOn5XgkUHQExB3O6969e9zfktxUeytWrCjYtUuskK7vxRdfjFrDH3/84VWqVEn3jR07
NmofPvTt29cThcmrVq2ad+yxx3oSg6h98S7W6Zj+u+22m+5/6aWXvCZNmuj25ptvru/4eyUZ4zxR
PkKPe+utt6L2YbxNNtnEE0XIO/rooz3JDhgZ66mnnorqaz/cdtttntRg037bb7+9J6nV9XiMIwqS
7abvqa4v6mB+IAESIAESSIoAsvRQSCDjBI4//vjITUGYUgSFiUICJJAcgdGjR0cUA9dvCgrFI488
ktxgedbLpQz9+eefnsRO6d+RWrVqefjsFyg04NCiRQtv7dq1kV1i/dH2G2+8MdJmN6wytMcee6gS
8uqrr+q433zzjde+fXs9Tqw73oYNG+wh+m6PCypDAwcO9CS+KdL377//9uyDoNatW0fa7ca0adP0
HJj3pZdeGnUeiQfzVq5cabt66awvcjA3SIAESIAEkiZAZShpVOyYCgHcoLhu2PxtAwYMSGVI9iWB
kiewbNky74ADDoj72zrqqKO8zz//vKBYWWXooosu8u644w4P75JVTtcpbmTe0qVLY9YjWfd0v9Rp
itonWem0XQo6R7Xjg1VqzjzzTO+vv/6K2v/999971ko0YcKEqH32uKAyFNXpvx9mzJih599ll11i
dovLo+6DNSiRpLO+RGNyPwmQAAmQQCwBxgzJ3Tkl8wSSSaAAH3sKCZBA8gSQbe7tt982ffr0MeJW
5TwQWdfq169vkJmt0OriIGEC1ob3r7/+2pxwwgmaYhtFT/2yevVqs2jRIoOYIsTpIP7HvtCGAqko
/LxmzRr/YZHtXr16GXFVi3zGhihPpmXLltpWlnpO4rKnYwRjnDAXO+5ll12mfcL+Kev6wsZlOwmQ
AAmQQCwB9/+msf3YQgIpEaAylBIudiaBpAngJh5JE2bOnKnB964DkYIbiQSaN29eUFnYkNAAytzV
V1+ty3rttdeM62+JWMh0vzzfM3vuuaeRWJ2o12+//ab7v/rqKxee0DYUfoWIZU3fk/kHStmVV15p
JGZIC8UimYJLkLTBSqKSAtlanz0/30mABEiABP5HoOL/NrlFApkhIH7zRnz44w6Gp7d777133D7c
SQIkEE4Amcg++OADvRFHKm6XoIgrrB09evRQBcpaLVx986EN6cIldkezs4lLmpk9e7YRlzYjsT1R
ljBxcdPpbrPNNuaqq64KnTrSc6ci+LsEkaQNCQ+D1a1nz55m5MiRRhIhaGa/008/3Wy66abmmmuu
iTnezhk7YLmKJ7ZvptcX75zcRwIkQAKlSoDKUKle+SyuG2m18cQ2nqDKPOqpUEiABNInULlyZfOf
//zHIC0zXL/gWhYU/BYfe+wxM378eHVBg8Uo3397cAGEkiEZ38wbb7xhJI7ISGa1yNJsunFYwJAu
O1NK3qpVq/QccL1LJHfddZfO8fDDDzdIf22ZQkF1KUN+a9Cnn35qatWqFXqKbK0v9ITcQQIkQAIl
TIBuciV88bO19GRqDKEmCIUESCAzBCSttPnwww+NJB6IsqD4R0ftneuvv94g/gYK1MaNG/27824b
MYWSZEXndfPNN0cVmN1pp52MZITTfYlq+iS7MEk3MVmIAAAgAElEQVTjbd59913t3rRp04SHSRpw
7YP4H6sIxTsIMUl2ziiaG0+ysb545+M+EiABEihlAlSGSvnqZ2ntLh//4KnoIhckws8kUDYCkpHN
PPjggwbuZY0bNw4dDHE05513nipFsL7ArTVfRdJPm0MOOUQVt65duxqpuRSZqqS11m0oeJJtLtLu
3wizUEsK8qixcMxDDz1kkLhAMmEayfbmH8a5bQu7grcVuM49++yz+vGXX36JKf6KWC/I448/bp5+
+mnd9v/jT/hQlvX5x+Q2CZAACZBAfAJUhuLz4d40CNAylAY0HkICGSKAGKF33nlHFaMddtghdNTP
PvtMY4ngvjVs2DBjkw6EHlAOO+AuN2LECIPYGbiW+bOwnXLKKeass85SBQbudBdccIGuAy51J554
opHU1pHsbcGpT5kyxUjqanW9w/hQDpEEAee5++67g92dnzt06KDtgwYN0qx3OB5jQqmSdOCaya9f
v35GahhFjkdM0cknn6z7unTpYo477jiDPlJUV93msN9KWdZnx+A7CZAACZBAEgTkyRmFBDJKQFxw
tJaGfP1C3+WpaEbPycFIgARiCUh6ae/iiy/2KlasGPpbtL9TSTbgXXfddZ7EHcUOlOUWW2dIXM+c
Z3rggQci85fYp6g+o0aNitQksmsRNzNPYnli1mLrBb388stet27dorigBtDChQujxrYf7HH+OkMo
Aot6RfackuXPE2XG+/nnn72nnnrKk0QKuk8SPNhh9F2sR54oXB5422NF6fPEWu7ddNNNUX3xIZX1
xRzMBhIgARIggYQEKqCH/EGmkEDGCNx5550aqB1vQLnpMMn45ccbg/tIgASSI4BUzajfM2nSpIQH
IBuaFG5Vq1HHjh2NFCJNeEw+dIB77ieffKJ1h5Bq2yWw2MBNEK5trVq1MqgFtHjxYo3lSTcJgxR5
NV9++aVp2LBhVJY4JGMQxcggGYLNUhec04oVKwws6egDq1Q8SWZ98Y7nPhIgARIgATcBKkNuLmwt
AwHUCEnkagLf+O22264MZ+GhJEACqRKA+xySESD7WTKC1NRw6+rUqZNp166d2WKLLZI5LG/7BJWh
vJ0oJ0YCJEACJJAzAowZyhnq0jlRopghxDFQESqd7wNXmj8EmjVrZp5//nktxHrMMccknBgsG0g2
gNgWZDhDHMvDDz+ssTh0KkiIjx1IgARIgAQKgEDFApgjp1hgBBIpQ8nU8CiwJXO6JFBQBA466CCD
1NBwERs8eLAZO3asQWrpeIJMbhMmTNAX+kE5gqsZkhfUr1/fNGjQwOyzzz5G4pPiDcN9JEACJEAC
JJBXBOgml1eXozgm07p1azNr1qzQxXTu3DlyQxXaiTtIgARyRkASLWgWNBRn/fzzz9M+L+KNEHtT
o0YNfUFhQkY4xMZs2LDBVKpUSTOubbnllmmfoywHIrMb6ishpqjQXf6S4QD+kuSBlvhkYLEPCZBA
yRKgMlSylz57C0cwcFjdD5wVMUWo3k4hARLILwJwfXvttdcM6g+hmOn69evza4KcTcoE9txzT4OE
NXRNThkdDyABEigRAowZKpELnctl0k0ul7R5LhLIHAFkPZOU1EbSORtkQ4NbHCwLSKRAKUwCqCc1
ZsyYwpw8Z00CJEACOSBA5+4cQC6lU+DJMoKu40mtWrXi7eY+EiCBPCAAlza4tOL1999/q+vrq6++
at58800ze/bsvCzSmgfYOAUSIAESIIECI0A3uQK7YPk+XaTMjlf1HvNfsmSJqVevXr4vhfMjARII
IYC4G7hevf/++5qEAb9pvGBNouQXAbrJ5df14GxIgATyjwCVofy7JgU9o+XLlxuppB53DchKlajA
YNwBuJMESCAvCfz1118GRUhXrlypr7Vr15rVq1drkVNsI3FCo0aN9D0vF1Bkk2IChSK7oFwOCZBA
VghQGcoK1tIddN68eaZ58+ahAPCfMzJXUUiABEiABEiABEiABEigvAkwgUJ5X4EiO3+i5Al77LFH
ka2YyyEBEiABEiABEiABEihUAlSGCvXK5em8qQzl6YXhtEiABEiABEiABEiABGIIUBmKQcKGshBI
lElu9913L8vwPJYESIAESIAESIAESIAEMkaAylDGUHIgEEhkGaIyxO8JCZAACZAACZAACZBAvhCg
MpQvV6JI5kFlqEguJJdBAiRAAiRAAiRAAiVAgMpQCVzkXC6RbnK5pM1zkQAJkAAJkAAJkAAJlIUA
laGy0OOxMQRoGYpBwgYSIAESIAESIAESIIE8JUBlKE8vTKFOK54ytPnmm5tq1aoV6tI4bxIgARIg
ARIgARIggSIjULHI1sPllDOBeMrQrrvuaipUqFDOM/z/01933XVm1apVUXPZZpttTK1atUzLli1N
q1atovblw4f+/fubzz77zJxxxhmmXbt2OZ3SBx98YO69915TqVIl88ADD+T03DwZCZAACZAACZAA
CWSLAJWhbJEt0XHjxQxBGcoXeeaZZ8wnn3wSOp0jjzzSTJo0yUBByhd5/vnnzbx580yzZs1yrgx9
/fXXZuTIkWbHHXekMpQvXwjOgwRIgARIgARIoMwE6CZXZoQcwBLYuHGj+eWXX+zHmPfddtstpq28
G6688kpVihYuXGgmTpxoOnTooFOaPn26ufzyyzMyveeee8707dvX4L0sctJJJ5kLLrjANGjQoCzD
pHUsUqLj3D169EjreB5EAiRAAiRAAiRAAvlIoIInko8T45wKj8D3339vdt5559CJX3vtteaOO+4I
3Z/LHXXq1FEl6NZbbzXXX3991KlPPvlkA8vR9ttvb1avXh21L50PHTt2NFOmTDE33HCDgasbhQRI
gARIgARIgARIID8I0E0uP65DUcwinoscFphPbnLxgEN5gTK0Zs0aLSIL1zCXwM0Obmu///67uq41
btzYbLLJ/4yt69evNx9//LFZu3atHv7tt98aWKAg2223ndlrr710G9a0Tz/91FSsWNE0atRI2775
5hszdepU07RpU32hEWNhTFjYqlatqv2C//z6669mwYIFZvHixaZ27dqmefPmZqeddop0W7dunSqB
m266qcF8w+Sjjz7Sde27777qKuiaoz3WNS/ENr366quqUCK+CYplPFm2bJmZP3++wbOZFi1amL33
3tt89913BhwQpwTllUICJEACJEACJEACGScAyxCFBDJB4K233oKVMfQ1efLkTJwmI2Pss88+Ok+x
DMWMd/fdd+u+LbbYwvv7779j9oti4InLWsw6jzvuOE8UqEj/t99+O6aP5YO+Vl588UXtJ0qXJ66G
3gknnBA5DnOxctBBB2m7JDCwTVHvElPkidIRORbnEkXCk9inSD9RWD2sC/sWLVoUafdvSGIJb7PN
NvO23XZbT5Qr3eWfo78vtv3zktgir0mTJlFzqFGjhidKYPAw/Yz5gIXlYt/PPfdc75ZbbtH21q1b
O49lIwmQAAmQAAmQAAmUlcD/HmPLXQiFBMpCIJFlqGbNmmUZPifHIu5p/Pjxeq5jjjkmytKDRuw/
5JBDNL6oW7duBrFFL7zwgmnbtq2+d+/ePTLPPfbYQ90C69atq23oAzdBvMJibxCn9Oyzz5qDDz7Y
IONdw4YNI+PF2xg3bpzGO4miY/7zn/8YUUzNPffcY0SZM4g1shapHXbYwcDyBRk1apRzSCRK2LBh
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
TXA8zBg8+XVJjRo1XM1ptU2ePNl5XIcOHQyeSFNIgARiCdSvX99MnDjR6UZ62223mZEjR8YexBYS
IAESIAESKEECVIZK8KJnaslhNUh22223jJwCsQhTp051joX4BwoJkEA4AcT1oJCqS5AlLixDo6s/
20iABEiABEigWAlQGSrWK5uDdYXVHYFrTCYEMQ6//PJLzFBwvznqqKNi2tlAAiQQTQBB5/369Ytu
lE940IAEJMuWLYvZxwYSIAESIAESKCUCVIZK6WpncK24mQrLFIWiq5mQF154wTlM27ZtzTbbbOPc
x0YSIIFoAjfffLMzExeKqqI2UViK/OhR+IkESIAESIAEipMAlaHivK5ZX9UXX3wReo6ypu61A4cp
Q8cff7ztwncSIIEkCMBdrk2bNjE9P/30U7UQhbm8xhzABhIgARIgARIoMgJUhorsguZqOWEV7VH8
MROyYsUKg3olLsHTbAoJkEDyBFCPCwkV9t5775iD3njjDXPuuefGtLOBBEiABEiABEqBAJWhUrjK
WVjj119/7Rw1UxneXn75Zef4DRo0MLvvvrtzHxtJgATCCey4444G1tYddtghptOYMWPMv//975j2
Qmj4559/CmGanCMJkAAJkECeEqAylKcXJt+n9c033ziniOQGmZCwLHLHHHNMJobnGCRQkgTq1Kmj
FiLXQwskWnj88cfznsu8efPM5Zdfbo488kiDmkqweqF2Uvv27c1FF11kBg0aZN55552crOO6667T
QrZz5sxxng8PjXr27GnOOeccE2ZNdx7IRhIgARIggZwRoDKUM9TFdaJVq1Y5F5SJxAZIzjBz5kzn
+EcffbSznY0kQALJETjssMPMI4884uyMG/dXX33Vua+8G//880/Tp08fc/DBB5v77rvPzJgxw2yy
ySamRYsWBtYh/M0YOnSoufLKK82wYcNyMt1nnnlGazYtX7485ny///67QQmAxx57zFSrVs1kKrFM
zInYQAIkQAIkUCYCFct0NA8uWQLff/+9c+2VKlVytqfSOHv2bLNu3bqYQ6BotW7dOqadDSRAAqkR
OPvssw2SJ6AAq1+QSAEpt9966y2Dwq35Ikjjf+ihh5q5c+eaChUqqFLUu3dvs9NOO0WmiCLQUORe
eumlqPZIhxQ3nnvuOQOLD5Stjh07pni0UYsRLFRI+DJgwICUj+cBJEACJEACuSFAZSg3nIvuLGHp
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
bWosxx13XEkd2q255pqpenZgCBgChoAh0B0ISE6gkvu+xA3p5IQ4IZL40tT5eeedNxKPgUKTf/31
1yNhk0u155kisUeRuOQV6qPdK4miE0nupkhSUJTM0z93ma9QlTd9Km+//Xa07LLL5o6D8Sy66KJN
H4ddwBAoh4BZhuQ/0aT1CBSxDDGqFVZYITg4VvOSeSSClazQEDAEDAFDoOMQgNgAN+mkUEasz0IL
LeTOPPPM5Cn32muvFSZDmHvuuR3xRllqbmKHdtttN7fNNtsoI2LqAh10ABEFNOXEU+EWSF4m4qbI
NwZ740033eR23XVXJTGC0bFW+frrr91jjz1W1mUd688CCyzgnnjiCQfxES6Nb775ppJkQIpxyimn
qJtiL8VtwXJ49913K5tmrdhbuyYgUE5TsnOGQLMQePfdd4MrReIekbqk3CQjod0N1pW4oVRdOzAE
DAFDwBDoDgSeeuqpaJxxxknd+0877bR4cltuuWXqnLweRZdeeml8vtKOKFbR0KFDS/qgH0nzEInL
dqUu2vK8uAPqnGaeeeYIK1g5+emnn8qdLnvuggsu0OtkvTl8I2GNjXieg+fBBx8cYa3KEyFPyjvV
deXTTjutYvL+++933dw6eUJmGWqCgmldVkZgpplmcmLCL6lIQsdPPvkkLv/Vr37lll566fg4ucPK
kokhYAgYAoZA9yGw1FJLOXnRTk3siCOOiMkOzjvvPJf1MMB6JApAqk3eATGpJ5xwguYcyhL1vPrq
q05ct9zll1+e17wty9955x0nCqOODasLVrBykkdLTvJlEtuSvDZELjFmzJg47xNxSaNHj9YPSZq9
HHTQQY7nORY+mACz5BW+HltILrwQy0R/2fxQ/ry/lj/2W18uL+RaxLjJJ8UYEJJHU8ePkeuIwq30
7Foh8afS/H3V7DWxcGGFAzti3ZKCFY76ngkXCvls+2R9228xAp2sydnYOxsBuUnqCon85FPbBx98
MDUxyUKeOu/rr7POOql6dmAIGAKGgCHQPQjIC2008cQTp+7/SUsElo+s54AoAIXjhzxSWIFo558t
yS0WKHmR9lXbenv44YfrHOabb75I3MirHqskSY6ErCKFgygxkTDxpfqS/E+pOh4vrFIIHh2ibGod
cctLta10IIqWtptyyilLqjI+f63sSVk41XOi/ESSsD22KopbmlYVd0E9f8ABB0QPPfRQJMl39Xij
jTaKuyo6f9/AX5N4NeKbk7/FqaeeOhLyCl81EsUyHrufg99Kouq4nu30DQJmGZJfo0nfIJBd1fOj
SNJrU5YXN4S/ssUNedRsawgYAoZAdyFAniCYx5KCtYaYHwTLRzY3Ec+P3XffPdmk4v6cc86pfW6x
xRYlda+66ionbnOuEzwRhKxAx483hbgYlsylUsFOO+3kTj75ZI2ngvnt/PPPd0I24YYNG+auu+66
uPlhhx2msVUUwPgKWx2fgQMHah0sHlhe/HndadGfwYMHq3WG2C8hkXCiVKWuPGrUKKVvZ17EU222
2Wbx+aLzjxv8b+ePf/yjE0XU9e/fX9nysCpimdpll13iqvyGwMjnWIRVz+OGB4xJHyPQNzqYXdUQ
iCJ5yAVXSiS4MwUPfs15rDgvvPBCqq4dGAKGgCFgCHQPAqzWwxYnr0rxZ4kllkhZPrAWJc+zX038
UBKtiy++OLXC7/slfmmfffaJhKAgWb2t9oUiXHHASlGtSIJbtaYQa5QUISvSPoUIIVkclYsZuvPO
O7UNrH/VWqjqtQxJUvdIXOxSY+XAW4b4Polhykq186e9twzBzCeU5XGXogzGv0dxI4zL2bGYoRQc
bXNgliH5zzDpGwTy/JmTuYYYGX7NefmG8M81MQQMAUPAEOhOBMYdd1wnVNupyZE758orr4zLSL46
zzzzxMfsED+U9TJIVcg52H777Z28GDtxNUvVkLc2HYcoZpqrJ3WyTQ5gjEOwqFUr5HBijtmkt+IS
58T9S5noSHheRPw4pphiiposVEWukVfnlltucTPOOGPeabf66qtrDFO2Qj3zv/rqq5Utz/cpCmVs
ASL+yKT9ETBlqP2/o64dYZ4yFHqAYX4OSSe4LoTGbWWGgCFgCBgCxRBYaaWVnMR2pCrjugWNNMLL
+g033KBbX4mA9U022aQmCmOeTShEJHvNBv4LC5i6kQ0aNEjpqv312mHrlYCPPvqo7HCgJh8yZEiK
FtsnriUxreQFij8rrrhi3Felfn1FPw5hlIsJA/y5Zm+h8i4nKLkhF8J65i95D0su+Zvf/KakzAra
FwFThtr3u+n6keGzG/KV/fzzz112NSV5Q04CQ9yQZ2dJltu+IWAIGAKGQPcgQCyLuF3FE8L6IO5g
8TEKDBaipMAsh4WoFoHhTJKDa/zJLLPMUtIFOXSINTr99NOduPKVnO+LAp6piKSuKHt5xk48TdIL
47PPPtM2KJZY45IfrEPE7vo4oLKdy0k/Dp7Neaxwlfpo9flGzr/VY7fr1Y+AKUP1Y2g91IgAitBs
s80WbJ21DnEzDq20QOspcUPBPqzQEDAEDAFDoDsQIB0D1oykQB+NpcYLVNwEzicF96d6KLJJYEqi
zH333bfESgRtM+UoYjfffHPysn2yP8ccc+h1hS2taouYV2D23ntvJYvA6yL7yboi5k2S78rTZZPk
tROkkfPvhPnaGNMImDKUxsOOWoxAUVc5FKflllsuOLqHH344WG6FhoAhYAgYAt2DALlrJAA9npCQ
6zihSo6P2YFdLvtcgV0uu8CWalThAGsJlpSnn37aLbTQQiW1ye8DkxqxrY8//njJ+VYV7LDDDm7C
CSfUXH1YrKoR2M4QcuRUI3wHWSGH01577aXFWO++/PLLbJXcY+/CxkJn1uvjoosuym1X74la51/r
dUO41dqXtasfAVOG6sfQeqgDgaL02lwCv/GQsApmYggYAoaAIdDdCOAdIDlvUpPE8pBUQPLihyAG
KEoAkLpA4mDxxRfXWKKzzjrLSf6jxJn/7pLEE0sSMa6SL6/kfLMLpplmGidMaXoZEp1CjV1UcCec
fPLJNfaqiELkSRpwVQ8J9NvUIfnoqquu6qC0Dglu8VBMe4F0ARe9H3/8MaXAXnvttW7PPff01Rq+
rXb+tQ6gEm619mvt6kSgbXjtbCA9iYDc4GIKSvkpx/sDBgwowQMa7WQdvw99p9w4S+pbgSFgCBgC
hkB3IQBVczbp58ILL1xC4Qy1tn9G+C0JVBslJIQVi1MkL+4l1/HXE+Upkvw8moS0Udet1A/PQsmX
FI9JFhGVVvqOO+6Ibrzxxkhy4kTyQq7nhZEv1R3PY+iiSbQqVialJxc3w4h0FyRJf+211+L6Qo4Q
iXKq/QhRRURyVZ/g1FcigTpU1+AhFqto6623jsTCFknMUkQydRKeQkv9+9//3jfR7SqrrKJtoKEG
Y6jVoTY/99xztZz+ssK4KScBakg8tTZJV/OkmvnTR7lrTjfddDqe9957L3U5cfXU8hlmmCGSXEOR
uFemzttB3yBQ+ovqm3HYVXsUgVdeeSW+ufkHCFtZ4SpBRII3o0knnTRYn4zSJoaAIWAIGALdj4DP
fZN8ZoTyCoXyD5Efp5Hy5ptvRuutt17wueTHN/XUU2tuG4lvauSly/aF8iNxMMFxoWSsvPLKkViy
Svp48cUXI0kaqgqRH78kCo2EYa4kf8/1118fiYUsvoZYo0r6Exe5aKuttgrmCkTpEquRKlLJhkIA
EYnbWtwvytIVV1wRkXPKjylZn/1yignniyhD1Ktm/uWumacMiaUsEnrveB4o0yZ9j8A4DEF+XCaG
QJ8ggN8srg8hlpqvv/465ur3g9twww3drbfe6g/jLb7kxx57bHxsO4aAIWAIGALdi8Dmm2/uxOoS
T5BYorfffjtFtAO9tiRodWLRiOvBSIc7Wyj2J65Uw44oaE4Sibv7778/tzXxMEsvvbRSfhNjlIx/
ym1U5wlib0Rhc2KhcGKN0HiqkItf9jK4FNIOty7a5QkYQ0uNe6IoLeriFqorFj0dA7FbxALRJyx9
k002Wai6oz6udbjM0W+rpej8ax0XNOUwIjI33BNN+hYBU4b6Fn+7uiAw++yzB/2Jn3jiiZJkq1Cn
hvyGYZt77rnnDE9DwBAwBAyBHkAAymaorYkt8UKcCgpJUnhRF0tHnJOIc7yEiwWgZLEt2a7WfdhN
xQrhyNdTbq2Z/EXEIIlLuH5QkjwDW63XtnaGgCFQGwKmDNWGm7VqIAIbbLCBu+2220p6FHcGt9NO
O6XKebDxAMwKDxZyE4kbXfaUHRsChoAhYAh0IQKHHHJIyiNgggkmUOvQ9NNPn5otwfcSR5MqE9c2
9TLw7GWpkw04IIfPeeedp7TekAhUEsZOwlCJzdEt7Gb9+vVzEnPjYGczMQQMgeYhYMpQ87C1ngsi
cOihh+pKWrb6PvvsowntsuVktw5lwibPA250JoaAIWAIGALdj8D333+vueokmD+erJAkOCEGiI/9
Dh4F2aSs0D4PGzbMV2nKFjcylDFooZ999tmy1qLQAFCEcKfDXQ2XMeZKklcotMkrlExEG2pvZZ2N
AO6EQ4cOdRJ31tkTafPRmzLU5l9QLwyPbNiDBg0qmaoEeLoHHnigpHz77bd3EixbUi6MN07YZkrK
rcAQMAQMAUOgOxG4+OKL3Y477hhPDksPLtO4xiVl7Nixmqsu6U6NokGMT17ahmT7Rux/+OGHThjd
lL46OY5G9G19dC8C5FjMozDv3lm3dmamDLUWb7taAAFhlFPXgOwpVsPGjBmTLXZ5yhOBiCS/MzEE
DAFDwBDoDQQItBdqbcdzxEveyyPKCHWTSUCnnHJKjR8qRxLg+23kFgsPOfJIGs6WGCgTQyCEwG9/
+1vN1xQ6Z2WNQcCUocbgaL3UgUC1jHKS38GRXC4UnIoy1BfMM3VM35oaAoaAIWAI1IEAygSeBEkh
GavksUkW6T6WoDXWWEPZyvxJCHhI3NqXBAaffPKJKnQvv/yybmHG+/jjjzUWNvSs82O3bfcjsN9+
+7lTTjml+yfahzM0ZagPwbdL/x8C+D5z889KiFGOOtCi8tDIyjnnnON22223bLEdGwKGgCFgCHQx
Auuss44bMWJEPEMWxaBxlqSecZnfkXw4Dua5pOB+jctduwmLhXhIfPXVV+6HH35QKxbHkvtHmVjb
bbw2nsYigMVyySWXbGyn1lsJAqYMlUBiBX2BQDWMcozvwAMPdJK9uWSo66+/fjAPUUlFKzAEDAFD
wBDoGgTIiTPffPNpDhs/qZNPPtkNGTLEH8ZbLC08KyQxaVzGzvDhw90ee+yRKrMDQ8AQ6H4EftH9
U7QZdgIC88wzT3CYyWR5yQqrrbZa8jDex/+ahG4mhoAhYAgYAr2DACkXINFJChagZHyQPwfJAoxz
5LhLyuDBg93IkSOTRbZvCBgCPYCAKUM98CV3whTzlKHXX389OPxllllGM15nT3777beaXTxbbseG
gCFgCBgC3Y3AH/7wh1Qi1W+++cZRFhKC0slvN9FEE8WnWUgbOHCgGz16dFxmO4aAIdD9CJgy1P3f
cUfMcN555w2OM88yRKBr//79g23uvffeYLkVGgKGgCFgCHQvApNPPrkjb11SSHxKAtSQzDXXXO6q
q65yycSrWJKIP2JhzcQQMAR6AwFThnrje277WUKgQEK5rMAcF3JzoN7qq6+era7H99xzT7DcCg0B
Q8AQMAS6G4G99torxSiKtWf//ffPnfS6667rcKdLCsQLm2yyiblcJ0GxfUOgixEwZaiLv9xOmhqM
P7PNNltwyHnWIehRQ0K+iWRG8lAdKzMEDAFDwBDoPgR4lmTJde6++25Nrpo324MPPthtvvnmqdP3
3XefkSmkELEDQ6B7ETBlqHu/246bWbVxQ7POOmtqBdBPGKYgc5XzaNjWEDAEDIHeQmDDDTd0K6yw
QmrS5Gr597//nSpLHlxyySUlFMYXXHCBO+aYY5LVbN8QMAS6EAFThrrwS+3UKVUbN8Q886xDd911
V6fCYOM2BAwBQ8AQqBOBU0891f3iF//3igMZz/nnn5/b6/jjj6+ECjPNNFOqDjFIF110UarMDgwB
Q6C7ELA8Q931fXb0bMgYvvHGG5fMYfnll3ePPvpoSTkFuD+stdZaJedgCvriiy/cr371q5JzVmAI
GAKGgCHQ/QiQSPXSSy+NJzrFFFO4UaNGpRjn4pP/24FsAbbSr7/+Oj71y1/+0vF8IjdRp8h3332n
SWdRAmHHm3baadUVHY+KGWec0TGnZglu6p9//nncPdcC+ymnnDJFVhFX6MMd3PDxJmExNkmk0YdD
skv3AQKmDPUB6HbJMAIkzYPdJyuTTTZZLokCGblhEGKbFXIOrbjiitliOzYEDAFDwBDoAQQ+/fRT
zSX0/fffx7Pdd999HVajcvLEE0+4VVddNfVcwXJ05513upVXXrlc0z4/95///MedccYZ7pBDDkmN
Pzkw4qpQ7mDNa4YMHTrUnXTSSSVdszgJrljbllxyyZLzfVEAFv/617/cP/7xj2C6jr4Yk12z9Qj8
nw259de2KxoCKQRYseLGlJWvvvrK8VALyQQTTOBWWmml0ClnrnJBWKzQEDAEDIGeQGCaaaZxBx10
UGquw4cPd2+99VaqLHuw7LLLuuuvvz5lPfnxxx/deuutl+ulkO2jL45R+vCkID4KF0HinR555BF9
fkIshAJEYlpw+ec//1nzELGaPfbYY+7FF18s2wcWttNPP90dddRRbqeddtKcTjyXUYjefffdsm1b
dRImWz5Jl8pWXduu00YIiHnQxBBoGwTmn3/+SP49Sj73339/7hjPOeeckvr0ITe43DZ2whAwBAwB
Q6D7ERCvgUjigFLPiDXXXLPQxIVUIdWO58qEE04YieWoUPtWVzrwwAN1vDPPPHMk7nFlL//TTz+V
PV/upBBL6HW23XbbYLUDDjhAz4vilTr/2WefReKup+dESU2dswNDoC8RMMtQGymmNhTn5ptvviAM
f/7zn4PlFIZihihn9Q//cBNDwBAwBAyB3kQA97asyxaxpkXy0W233XbqcpZEDusLOe5GjhyZLO7z
/XfeeceddtppOo5TTjnFzT333GXHFPLCoAGxtmCDBYc8f1kZM2ZMHA9EXBLxSHzw4KgkxAx50iPc
4r34PuRlWIu47o033liS+BY2wFdffVWtdn/605/Uvc33wRZrF33leZJQh76pI8ogh/H4/bW1MPPn
gw8+UBdJWGqZf0gYG/1SNyR+jqFzlL399ttK4IH17tlnn40xzqtv5Q1GoC81Mbu2IZBF4LjjjtNV
I/mZp7byUMpWTR3nWZROPvnkVD07MAQMAUPAEOg9BIRqO/VMwXNg7NixhYAQZSrVlueTuGhHojQU
at+KSocffriOURYUI4kbqvqSEjcTSXLa1DzFdSw6/vjjU30ttthiqTr+WY1VykueZYjz22yzjbbf
cccdffVIYom07Ntvv42EFj0SIgM9lkXQuI4oPxEWL389tsxV3O3iOqIERULWEAlZQ/C7FYUlEvKI
aKKJJopEkdN2/toSMxT343dEYYsWXXTR1DW57oABA6KPPvrIV9OtKElaTxS+VDkHYOvHnT2J5XKD
DTaIz/t64u6YrWrHTUTALEPyyzNpHwRqoddm9HmBoHfccUf7TM5GYggYAoaAIdAnCBC7kowLwXMA
ooEiIkqCO/bYY1NVIe0hhujmm29OlffVAZYFZOmll66JFY2YHlk81HieESNGKA05cbzDhg1z1113
XTytww47zIlCo8fEBJGfic/AgQPjOnk7YOaZYRdaaKGSaoMHD9YYJ/qH5AJLEgLD31JLLeWwyonS
p/FK4qKn5WuvvbaDNAL53e9+p1Y7rFvMISsk0v3www81wa64O2ZPp46xtC288MLupZdeUjKKp556
Sq+79957u4ceesgxfq5Trxx55JHu1ltvdauttpomBn7mmWfceeedVwjPeq9t7RMINFHRsq4NgaoR
eP/990tWSOTnGv3617+OWNXJEzErB9uxSvTll1/mNbNyQ8AQMAQMgR5BYJdddkk9JyQFQyQ00IVn
j6cBz6PkB+sJcat9LYsssoiOC++KauX5559XawyWl6Q8+eST2ucCCyyQLI5qiRnCaoPVB+x+//vf
R998803cp7fOiDITiZtZXO53ROHRdpdddpkv0u0qq6yi5aJMxOU33HCDlomiGpf5HX995uvFXztr
GZIFVu0nhKcobXpu55139t1EtVqGhKxD+2rXOLR4gl2+Y5Yh+c80aR8EyH8gJuySAeEL/N5775WU
+wIx3euqkD/2W/x4oUM1MQQMAUPAEOhtBI4++mg36aSTxiCIW5aDBrqoDBkyxInik7K8YJXYfffd
1YIi74tFu2p4PR8nM9VUU1XdtygZmmsnm+eP56osRDqY6KCerlYeeOABt9FGGzn6EUXL3XLLLZrj
iHigiSeeuKQ7fz55wlt5iHHCEpeU/v376yFWGy/rrruufsfEhSVzHRErhKfIggsu6MT1zVcPbmUB
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
mYuACNQAAQlDNXATNITyCeC8HJIsxnshRwtRnWafffZ4tbZFQASKIEBEOgKUjBo1yuc3wvdo8uTJ
RZypJqUSGDBggA/HXep5ai8CIiACIlAZAnpSrAxH9dJGBPBTwPwmHlKXoYSEiUTAUhEBESiNACZq
aFdDXh3OJiobAhL5ejBp4/XGG2/4/7XSeldrERABERABEagdAtIM1c690EjKJEAeEHwfkoU8RPHE
isnj2hcBEWgZASLWTZo0yQtFH374oQ9h/dFHH2XeyfGDP5BKOgGZyaVzUa0IiIAItCYBaYZak7au
VRUCRJRLE4aef/55CUNVIa5OReD/E5h11lkdyVnzJWgllPeMGTO85hbt7VdffZXZxhSP108//eS+
/fZb7ztDniRMXBVAQZ8wERABERCB1iIgYai1SOs6VSOAMJRWnnvuubRq1YmACLQSgVlmmcXNP//8
/kWobRUREAEREAERqDUCMpOrtTui8ZRMYOrUqW7xxRfPOY8HMXKp4FOkIgIiIAIiIAIiIAIiIAJJ
ArMmK7QvAvVGoGPHjm6FFVbIGTYmOoQIVhEBERABERABERABERCBNAIShtKoqK7uCPTs2TN1zDKV
S8WiShEQAREQAREQAREQASMgYUgfg3ZBoFevXqnzkDCUikWVIiACIiACIiACIiACRkDCkD4G7YJA
Ps0QEeUwl1MRAREQAREQAREQAREQgSQBBVBIEtF+XRL45ZdffMQqQvUmC4khu3TpkqzWvgiIgAiI
gAiIgAiIQIMTkGaowT8A7WX6c8wxh+vevXvqdEaPHp1ar0oREAEREAEREAEREIHGJiBhqLHvf7ua
/YYbbpg6nzFjxqTWq1IEREAEREAEREAERKCxCUgYauz7365mn08YkmaoXd1mTUYEREAEREAEREAE
KkZAPkMVQ6mO2prAZ5995jp16pQzDJKvfvnll26hhRbKOaYKERABERABERABERCBxiUgzVDj3vt2
N/PFF1/cde7cOWdeRJNTiO0cLKoQAREQAREQAREQgYYnIGGo4T8C7QtAPlO5UaNG1dVEJ0+e7Pbb
bz931VVXVWXc/fr18/1PmTKlKv2rUxEQAREQAREQARGoBwIShurhLmmMRRPYaKONUtuOHDkytb4a
lfvvv7/bcccd3a+//prT/fHHH++22WYb98orr+Qcu/fee/2xqVOnuq+//trdddddrlpC3LPPPuv7
/+abb3LGoQoREAEREAEREAERaBQCEoYa5U43yDzzCUMvvPCCIxdRaxSu88QTT7gXX3wx63LkQLrx
xhvd008/7V9ZB21n4MCB7p133nEdO3ZMHtK+CIiACIiACIiACIhAFQhIGKoCVHXZdgTWXHNNt+CC
C+YM4IcffsgRTnIaVahiyy239D0988wzWT2OHTvW/fTTT74uqfGhfvjw4a53795Z52hHBERABERA
BERABESgegQkDFWPrXpuAwJEjsvnN9RapnL5hCFM0+aaay73u9/9ziXDfY8YMcJ9//33brvttstL
7ZNPPnHMYcaMGXnbcGD69OnevO7VV18tWxuGz9KwYcPcp59+WvBaOigCIiACIiACIiAC9UxAwlA9
3z2NPZXAJptsklrfWsLQKqus4pZaaikvuARNEANCGOrRo4fbYIMNvJDx/vvvZ8Y5ePBgN/vss7ut
ttoqUxc2Jk2a5NZdd1239NJLO+a24oorpmq58DXaZZddvGZs4403dmuvvbabb775XN++fd1vv/0W
uiv4jsCFqeEyyyzjEOqWWGIJd+ihh2Y0WgVP1kEREAEREAEREAERqDMCEobq7IZpuM0TQBBIKwhD
hNlujYIggWleCOlNMAW0QQgzwa8pbiqHMNSrVy83//zzZw3vww8/dJtttplbeOGF3XXXXeeOOeYY
9/nnn+dEmUPoQiM2ZMgQd8UVV7i3337bjRs3zu2xxx7ujDPOcKeeempWv2k7jJexffDBB77/CRMm
uCOOOMLdcsst7qKLLko7RXUiIAIiIAIiIAIiUNcEJAzV9e3T4NMIrL/++m7OOefMOUTi1YkTJ+bU
V6MiaSpH9DgityEMBTO+YCqHwPPGG2+kmsiNGTPGCzQEXTjqqKPctdde6zU/Dz74YJYJHALQe++9
5/r06eNOPvlkt/LKK7vu3bu7O++8062zzjru6quvdm+++WbBqRJum7H8+c9/dscdd5w/7/rrr3eL
LbaYGzBgQGp0vIId6qAIiIAIiIAIiIAI1DgBCUM1foM0vNIJIAghEKWV//znP2nVFa/bYostfJ9D
hw7175jIzTbbbF4Q6tmzp5t11lkzYbPRClHS/IU23XRTr+nxDf73Z7XVVvOC1XfffZepDn2QmyhZ
9t13Xzdz5szUCHbxtkTAo8AOoYjXRx995Lp16+amTZvmMKFTEQEREAEREAEREIH2REDCUHu6m5pL
hgBCRFohUEFrlOWWW8779hDSG6EFIQwNDT48CyywgFtjjTW8lopgB4MGDfLhtBE6kmXJJZd0BIWI
F3yLkgWzOAq+Psmy7LLL+qrQJnk87IfjmBkuv/zymdeTTz7pmxBUQUUEREAEREAEREAE2hOB3Keq
9jQ7zaVhCSAMXXjhhTnzby3NEBdGO0ReIa6JvxIamlDwzSHaGxojQnDvuuuuOUJPaFvMO1onSlqg
hJD8NbTJ19/cc8/tOnTo4IUzNFfJsvrqqyertC8CIiACIiACIiACdU0g94mnrqejwYvA/yeAX07a
wz+hooMGpNqsgt/QP//5T/fZZ595f6FwzeA3dMkll/hQ2WkmcqFtMe9EsKNg1pYsBESghDZ+J+UP
ws7PP//sFlpoIbf55pvnvNLyN6V0oyoREAEREAEREAERqBsCEobq5lZpoKUQwByNcNRppbW0Q8Fv
6JFHHvHDiIf8DhHl0AxhBrftttumDbXout122823vfXWW7POQStEHX5UzSV0Peigg/y55557blYf
2hEBERABERABERCB9kpAwlB7vbOal9dspGEgmWhrlE6dOrlgWtalSxcflS1ct3Pnzm7xxRf3uwht
RGxrSfnjH//o8wpdfPHF7m9/+5sbO3asw9dnhx128JowIsRxzUJl77339nmKEN623357xzs+Tzfc
cIM7/PDDm41GV6hvHRMBERABERABERCBWiQgYagW74rGVBEC5OdJK60lDHHtYCoX1wqFMQXtUEtN
5OiPoApomfbff3/vK0VyVzRB48eP9/mJ/v73v4fLFnwnZDdtCemNHxMJYk888UT30ksvpZodFuxM
B0VABERABERABESgxgnMYkkoWycLZY2D0PDaHwHy+pCsNAQQiM+QvD5oa9pj+eWXX9xbb73l5040
unILvkYkc11ppZUkCJULUeeJgAiIgAiIgAjUNAFphmr69mhwLSEw//zz5/UbIoJbey1zzDGHW3PN
NV1LBCHYEF571VVXlSDUXj8ompcIiIAIiIAIiICTMKQPQbsmEIIYJCfZmqZyyWtrXwREQAREQARE
QAREoDYISBiqjfugUVSJQD5haPjw4U4WolWCrm5FQAREQAREQAREoE4ISBiqkxulYZZHgMAFmI0l
yxdffOFefvnlZLX2RUAE2gGBH3/8sR3MQlMQAREQARFoDQKzt8ZFdA0RaCsC8847r4+INnLkyJwh
PPXUU26dddbJqVeFCIhAfREgqfF5553nxo0b5wiOMmPGDLfEEkv44B8EANlzzz19mPnWmhW5zIqN
4MiYzjjjjEzkyXLH+N133/l5zpw5011//fVuhRVWKLcrnScCIiACDUVAmqGGut2NOdkQ3jo5e4Qh
FREQgfomcO+997o11ljDXXPNNW7BBRd0J5xwguvfv7/bb7/93Kyzzupuu+02N2TIkKpOEgGEVygk
Uuba8deHH37onn76aUeUxng925Uo99xzjxs8eLC/xk033VSJLtWHCIiACDQEAYXWbojb3NiTJP/O
pptumgNhrrnmcl999ZXjXUUERKD+CLz22mteuzv33HO7W265xf3+97/PmcT06dPdp59+6iMj5hys
QMWpp57q+vXr5/N8bbjhhnl7vOSSS9xf/vIXrzE666yz8rYr90DPnj19suXffvvNLbXUUg7ha7bZ
Ziu3O50nAiIgAg1DoDJLUg2DSxOtRwI8JPzud7/LGTp+BWnmczkNG7wCc59tttnGffzxxw1OQtOv
NQInnXSSzyN2zjnnpApCjHeBBRZIFYR++OEHN3r0aG9a9/333xec2ttvv+2FnUmTJmVpgL7++ms3
bdo0hwCC0PXll1866lpa6I9rjhgxwmEC2Fx59dVX3fPPP+8OPPBAnz/tk08+8VqitPO+/fZbP06u
QWHMLBhRyMnGPm0oBJl58cUX3X//+1+/H/+DhouonLzHy88//5zVR/wY23zvcg3yoamIgAiIQC0Q
kDBUC3dBY6gqAQIopGmGuGgjmMq11JmcQBOY9zT3wFjVm6jORSBB4J133nHkC1tkkUXcsccemzia
fxdzuvXWW8+Rh2yjjTZy66+/vs+plZZ77NJLL3WrrLKKF6b4DuncubO77LLLMp3Tz8CBA/3+Djvs
4BZddFHXvXv3zPFyNu6880632GKL+WtuvvnmrlOnTn6M+ELlK/gIUY466ih35JFH+u0bb7zRvyf/
HHLIIX6c9LfXXnu5jh07un333dc3o4450Ac8uDZzfOKJJ/xxNGy77rqrr8cnCRNk3uknCFeTJ0/2
44drWjniiCP8+Z9//nnaYdWJgAiIQKsTkDDU6sh1wbYgsO2226Zettq+BKkXbaXKqVOnOgJI7LLL
Li26Ig9VU6ZM8c7oLepIJ4tABQmgOaF07drVzTPPPEX3/O6777rdd9/da4XZvvjiix0P5kmBCq3M
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
D2qv5gigDUX7c8cdd7hnnnnGERCh1ELeLPLBbL755q5Xr15eEMLsra0L+asQzIrNa9PW49X1RUAE
REAE2paAAii0LX9dvY0JbLnllm6JJZZwmAcly8033+wuu+yyZHVD72NamLbSTzjlp59+WnljavjT
gcBDAATya2EK98MPP5Q0Wu47wg+LB1tttZXr2rVrVgLfkjqrcGOCniDYTZw40ZHQl7F27tzZJ/Ul
se/555+f+rmt8DDUnQiIgAiIQB0SkGaoDm+ahlxZAn/5y1/cJZdcktPpoosu6kgMySpzo5epU6e6
FVZYwW200Ub+gTrJ4+uvv3YISjjD4yeiUjsEXnvtNTdw4EB3++23lxwEAS3fTjvt5CMvsnAw99xz
187EbCTkoTnyyCMdecOWWmop17t3b7f22mv7SHfvvPOOF9AJwDBt2jSHJktFBERABERABJIEpBlK
EtF+wxE45JBDUoUhHrQwJdp7771bxGT69OmOB9L555/fdenSxc0xxxw5/ZHvCPMeHthmnXVW9913
37kJEyY4HM7RXOUrnENySwQ2/DOSfaMNQFDBfIkIXVEUufHjx/s+l1xyyUy3aAm4Hv2svvrqbp55
5skc+/nnn/1D5/fff+9wqP/yyy/9MfoLZlFEgOLa+UyTymHAtcaNG+cT4OKAn68w9hdeeME74+OU
r4de57766it31113ObSbMCylrLLKKm7PPff0SYnx/6nlcvzxx3tBaIcddvDCXtq95/9j3nnnreVp
aGwiIAIiIAJtScAejlREoOEJmMYjsv/DnNdmm21WNhtzTI923nnnrD5NeIguuuiiyISUrH4txLdv
9/rrr0eHHnpoZIJF5rw99tgjspwuWe3ZueaaayIzB8q069ixY2R+O1ntzO/JH99nn32ioUOHRrRh
njfccINvd/XVV0fdu3ePTJjJ9GPaHd82dHTbbbdljsUZmblVaBKF8b/55puZOjbKYUAf5513XmTC
Vua6hx12WFa/7Lz99tuR5YqKTFuRaQePRi18pswMLuJe8zmL36vmts2kLDrzzDMjExzqBt+IESP8
HPlM2+JByeO2RYLIAkZElj8pMoE/9Xz+72xRJPP/aosWkeVYikzblNXeFiV8u7T/UxqawO6P57tO
VmfaEQEREAERaFUCrBSriEDDEzAzorwPjzwslVrMZCwyrU5kmpbIwnT7B3dboY/23Xdff52TTjop
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
LM6pdBkzZoxPXksYb0zvmitYnWMeRyFEP/MqphDe/sADD3SVMrst5ppqIwIiIAIi8P8JSBjSJ0EE
iiBAYtILL7ywiJZqIgIiIAKlEyBfEX5nEohKZ6czREAERKAlBGRT0RJ6OrdhCBBMwXKTNMx8NVER
EIHWJYCvEWa5KiIgAiIgAq1LQMJQ6/LW1eqYAALRnXfe6fA1UREBERABERABERABEah/AjKTq/97
qBm0MgHC6xI694UXXnCE81WpTwIEyOjQoQO51pzlWPIvgidUq1gCXWe5g1ynTp28QM1nJ7y4fnw7
7IdxcSxtO9SFd2VKqNbdq36/MpOrPmNdQQREQATSCEgYSqOiOhEQgYYkgDA0adIkN27cOB/ZbfTo
0d6PgxDblSy9evVylpjT5xNafPHFK9Y140cwigtPQVBKqw/t0t7jdWyHF9dIblOXfNEG4YwXx+Lv
oZ53StgP27wTQIGIjW0ZQIFxtEZRAIXWoKxriIAIiEA6AQlD6VxUKwIiIAKeAA/jw4YNc4MGDXKP
PvqozzdUKTREaevdu7c75JBDfPQxNFUqIiACIiACIiACrUdAwlDrsdaVREAE6pwAGowRI0a4W2+9
1d1///1uxowZFZsR2oGDDz7YHXnkkT4PUcU6VkciIAIiIAIiIAJ5CUgYyotGB0RABEQgPwE0RgMH
DnRXXHGFe+edd/I3LOPIlltu6Y477ji36667+vw+ZXShU0RABERABERABIogIGGoCEhqIgIiIAL5
COAP89hjj7m+ffs6knQWKgRtKMX/aOmll3Z//OMf3VFHHeXQHKmIgAiIgAiIgAhUloCEocryVG8i
IAINTACh6KyzzvKO/4UwrL322m7atGlu8uTJhZpljs0111zugAMOcCeffLJbY401MvXaEAEREAER
EAERaBkB5RlqGT+dLQIiIAIZAjvttJObMGGCz0e1zDLLZOqTG6+88oqPyHbxxRd7IQdhp1AhstqN
N97o1lxzTR9wYciQIYWat+tjr732mttmm2280NkeJtre5tMe7onmIAIi0FgEJAw11v3WbEVABKpM
YJZZZvFhs9988013xhln+FxGaZckX9Xpp5/uyD/0/vvvuyuvvNKtttpqaU2z6p588km33XbbubXW
WsvdfPPN7ueff8463t53vv76a/f00097obPe5opQmyz1PJ/kXLQvAiIgAvVIQMJQPd41jVkERKDm
CcwzzzzuwgsvdK+++qrbaqutUsdLdLp+/fq5bbfd1mt8Xn/9dTd06FC3++67Nxs4AY3CYYcd5pZf
fnl30UUXua+++ir1GqpsewJTp0518847rw+f3vaj0QhEQAREQATiBCQMxWloWwREQAQqTGCVVVbx
mowbbrjBzT///Km9I9isv/767o477nBEknvwwQe9tui0005zCy20UOo5oRIN05lnnumWXXZZ71P0
4YcfhkMN806C1y+//NJ9++23mTl/8sknbuTIkc2GP3/77bfds88+65Ptkpg2rfz0008+CS8mkPkC
YHBtxkBADQrb9Ivm7osvvvDJYzmXel70Wagk++NcAnS89dZbhU7TMREQAREQgRIJSBgqEZiai4AI
iEA5BI444gg3ceJE7++Sdj4PvwRJOPbYY/0DN8INPkUff/yxu/rqqx1CVaHC+WiZVlxxRW+mN27c
uELN29WxN954w0fbI0fTpEmT3LrrruuIxLfJJpt4Hi+++GLOfC+99FLPdNVVV3Wbbrqp69y5s7vs
ssty2l177bVuwQUXdD179sz0i5CTLCTOJeIfY9lrr71cx44d/X249957M0Evhg8f7tvQjvpCJfRH
2Pa///3vbuGFF3Ybbrih69Klizv88MMLnapjIiACIiACJRCQMFQCLDUVAREQgZYQ4AGd4AfkJppz
zjlTu+Lhe4sttnCfffaZP455FQISPkiPPPKI22yzzVLPC5VoSe6++26vadp8883do48+6jDHa4SC
Vgw+CA7XXXedO+aYY9znn3/urrrqqqzpkzgXrdtyyy3nxo4d6zBPvPPOO73wFG/IvYA9+Z6ee+45
n1fqd7/7nSNQxvTp0+NNM9t/+tOfHJo+BBjuM/eSJL2UddZZx98P7gkawGLKX//6VzdgwACfjJc5
rbTSSu6mm25yH3zwQTGnq40IiIAIiEBzBOxHUkUEREAERKCVCVhEuci0Ekgpqa+llloqsgf11FFR
v88++0SzzTZb6rnJPk2rFJl2Kfruu+9S+6unStPK+DnvsMMOmWGbX1aGw0knnZSpZ8O0OpGZJ0Zm
rpapN+HIt7/++uszdcmNb775JjINTmQBLiIzUcscDudefvnlmTo2fv/73/s+LeJfZIJS1rH//ve/
/phFwcuqZydtPtSH/kzDFJlpHFW+mIDl+zKtYajSuwiIgAiIQAsISDPUnLSo4yIgAiJQBQJEg8OU
bb/99kvtHZ8XzLfuv//+nOPrrbeeu+uuu9x7773n7OHfoa0oVPCLOe6447zp2F/+8hf30UcfFWpe
t8fghTYmXojQZ4KNM0EwU000PgpaF8zVgp9PpoFtoDHC1wfNDvcCrRMvzOkoBMZIK2ht8vmGpbVv
ro77HDeRXH311f0pJmA1d6qOi4AIiIAIFEFAwlARkNREBERABKpBACGGoAn4BM0xxxw5l/jhhx+8
/8kFF1yQc4wKzLwIyY1wQ+S6JZZYIrVdqCTi3CWXXOIf6PfYYw/3zDPPhEPt4n3JJZd0hDaPl9ln
nz2+67fxq8J0DiFp7733dvgN3X777VntECApCKNE7Asv00j5+nwJcyspCHEh0xD664U/afMJx/Qu
AiIgAiJQOgEJQ6Uz0xkiIAIiUFEC+KUQUnvxxRfP6dc0/z7BKA71+SKZEXGOnEb4kaCZIDlroYJf
0b///W8f8htNA4EXGi00N5qyl19+2R188MGe24EHHujQmoUy99xz+02CFQwbNiznhVCpIgIiIAIi
UP8EJAzV/z3UDERABNoBASKfYTZHJLS0MnDgQJ9sNZ/jPud06NDBHXrood6Ea/DgwT5/UVpf8Tqi
n5188skOrQoCAdoiBLBGKAQjuOWWWzx3BEoCJqCNowRzNAIwEIgi+SIYQqmlUbiWykXtRUAERKAt
CUgYakv6urYIiIAIxAgQbY6wzSRdTSsIKghN+Uy04uf07t3bR67Dt4Ww3nPNNVf8cM72jz/+6E3F
SBCLSVifPn18KPCchu2womvXrj763owZM3woc6bYrVs3h1/X448/7oWllkwbQYuogESZk0DUEpI6
VwREQAQqT0DCUOWZqkcREAERKJvAPPPM4x544IEsk614Zwg3vXr1KlpQwWSOhK/kK8L3CIGruRJ8
kDh37bXX9mGiCT/dXsq5557rc/U8/PDDbvz48e4f//iHT4yLNmjllVf208Q3h1DWvG+99da+zejR
o92gQYPcOeec484777yicSCIEp77008/daeffroj7xGJV1VEQAREQATanoCEoba/BxqBCIiACGQR
IAhA37593Y033ugfxrMO2g6aoY033tj95z//SR7Ku0+izzPPPNP7xyBsFZvnBuGLqGtrrLGGT/j5
f//3f47koTNnzsx7rVo/QOCJUaNGOYJIdO/e3f35z3/2+YnI/xMPwIDQieBCRDr8iTbaaCNHAAX8
stCklVK4Blo3BC+iAZZy70q5jtqKgAiIgAiURmAWU9k3hnF4aVzUWgREQARqgsCTTz7p9txzT4cJ
V7KgcSBZaD6zumT75L7lr/FaI/yRCCNdSrH8Pd6Phgd8XggM9Va+/fZb9+6773p/KcvnU3D4hOam
7bLLLusweyu3EBL7p59+8pEAZ51V65HlctR5IiACIlApAhKGKkVS/YiACIhAlQi89NJLXiMxZcqU
nCvwQH3NNde4o48+OudYsRWWkNQ98sgjPpjAkCFDytL6LLbYYq5nz57ehI93Agy0RGgoduxqJwIi
IAIiIAItISBhqCX0dK4IiIAItBIBEn6SLPTNN99MvSI+LGeffXbqsVIqP/vsM5+IlGSfY8aMKeXU
nLb4JxGcAK0Rkdt4keOHyHVEvlMRAREQAREQgbYmIGGore+Ari8CIiACRRLA6X7nnXfOK6SQO6d/
//6uUuZXBFLAv4gXgtFvv/1W5Eibb7bIIot4oQhfpgUWWMC/SFiK5Tbme5iSEYGNAA7NRcJr/mqN
1wKuhEqHrYoIiIAIiEB+AhKG8rPREREQARGoOQLff/+922uvvXzI57TB7bPPPu7WW291c8wxR9rh
suvIt0MkNYIM4Mf0zTfflN2XTmwdAp07d/bR8iQQtQ5vXUUERKA+CUgYqs/7plGLgAg0MAEiuR15
5JHexycNw7bbbusefPBBr1lJO97SOq5PgtihQ4f6JK1ojUKy0pb2rfMrS2DAgAHu+OOPr2yn6k0E
REAE2hEBCUPt6GZqKiIgAo1F4LTTTnOXXnpp6qQ32GADrz3CHK3a5ZdffnEvv/yye+655/yLgA+Y
utVz+O1qM2ut/iUMtRZpXUcERKBeCUgYqtc7p3GLgAiIgBG47LLLfJ6ctCwJBC7ApK2YRKuVhonP
D4laJ06c6N555x0flprQ1CR/nTp1qvv1118rfUn1lyAgM7kEEO2KgAiIQAoBCUMpUFQlAiIgAvVE
gDxBRxxxRKomZplllvECUZcuXWpmSghCRK379NNP3VdffeWmT5/uX+RSwhfphRde8HmV5p57bgVQ
KPOuKYBCmeB0mgiIQMMRkDDUcLdcExYBEWiPBAhsQGCFH5ZxS68AAA3hSURBVH/8MWd6mMo9/vjj
DtM5FREQAREQAREQgSYCSn/dxEJbIiACIlC3BAi5jUlcWuQwQnJvtdVWPhpc3U5QAxcBERABERCB
KhCQMFQFqOpSBERABNqCwCabbOJGjBjhOnXqlHP57777zu2yyy4+7HbOQVWIgAiIgAiIQIMSkDDU
oDde0xYBEWifBLp27epGjRrlVlpppZwJEt3t4IMPdn379s05pgoREAEREAERaEQC8hlqxLuuOYuA
CLR7AgQo2GGHHXzSzbTJHnfcca5///5u1lm1JpbGR3UiIAIiIAKNQUDCUGPcZ81SBESgAQkQnW33
3Xf3yVHTpr/bbru5O++80xG1TUUEREAEREAEGpGAlgQb8a5rziIgAg1BYL755nNPPPGE22effVLn
+9BDD7ktttjC5/1JbaBKERABERABEWjnBCQMtfMbrOmJgAg0NoEOHTp47c8pp5ySCuL55593PXv2
9AlSUxuoUgREQAREQATaMQEJQ+345mpqIiACIgCBWWaZxV1++eX+xXayTJo0yfXq1csNGTIkeUj7
VSAwefJkt99++7mrrrqqCr2rSxEQAREQgVIIyGeoFFpqKwIiIAJ1TuD+++93Bx54YGpy1tlmm81d
ccUV7oQTTqirWZ5++unuxRdfTB3zvPPO6zAHrKXy2muvubXWWsubL9511121NDSNRQREQAQajoA0
Qw13yzVhERCBRiaw5557+oAKiy66aA6GX3/91Z144onusMMOcz/99FPO8VqtGD9+vHv66afdN998
46PjESEvvNI0YbU6D41LBERABESg9QnM3vqX1BVFQAREQATaksCGG27onnvuObfTTju5N998M2co
N998s5s4caJ78MEH3VJLLZVzvFYr+vXr5/2fanV8GpcIiIAIiEDtEZBmqPbuiUYkAiIgAlUnsOKK
K7oxY8a4bbbZJvVaL7zwguvWrZt78sknU4/XcyVaL4RBBMEoihwasS+//NJ9++23WdOaPn26r8+q
tB3Op/2PP/6YPOT3f/jhBzd69Gg3btw49/3336e2UaUIiIAIiEBtEJAwVBv3QaMQAREQgVYnsOCC
C/rQ28cee2zqtT///HO33XbbubPPPtsLDKmN6qxywIABbv755/cBI1ZbbTW3yiqrODRhmA2SiDZe
evfu7eu/++67eLW7++67fX0yAMI111zj1ltvPd//Rhtt5NZff323/PLLu2eeeSbrfO2IgAiIgAjU
DgEJQ7VzLzQSERABEWh1ArPPPru7+uqr3Y033ujmnHPOnOujOTn//PPdJpts4t5///2c4/VUcf31
13ufKHIrofl69dVX3cEHH+zrKjGPd9991ye5HTlypGP74osvdgiU+YTNSlxTfYiACIiACLSMgHyG
WsZPZ4uACIhAuyBw+OGHuzXXXNP9/ve/d5988knOnDCp69q1q8MvhwALtVgYe1Kge+eddxxR8jBt
O++88xzasH//+99u7rnn9lNgzmhztt9++xZPifDl8XLaaac5BLC3337bYToXrhlvo20REAEREIG2
JSBhqG356+oiIAIiUDMENthgAzdhwgR3wAEHpPoK4VOD0HTvvff6h/xll122ZsbOQDBN69SpU9aY
QjQ5NEEIefvvv3+OUJIWWS+rkxbswOi9995zmNpJGGoBSJ0qAiIgAlUiIGGoSmDVrQiIgAjUI4HF
FlvMDRo0yF144YXu3HPPTfUVIjkrGpULLrjAm4CheamFcuqpp+aNJkdiWcrSSy9dtaHOnDnT5zS6
/fbbvZncp59+6r766quqXU8di4AIiIAItJyAfIZazlA9iIAIiEC7IkCOnrPOOsv95z//cZ07d06d
24wZM7yvTffu3X3ktNRGNVT59ddf+9HgI1WNgiBEDqe9997bLbzwwg4TOSLKoW1TEQEREAERqF0C
EoZq995oZCIgAiLQpgTIR/TSSy+5Qw89NO84Xn75Zbfxxhu7Qw45xH388cd527X1gWDSV84Yf/nl
l6zhY/aWLI899ph7+OGHXZ8+fdxNN93kDjroIB+pbq655ko21b4IiIAIiEANEZAwVEM3Q0MRAREQ
gVojMN988/mH+8cffzyviRkR5wYOHOhWXnlld8opp/gIarU2j3XXXdcHUnj00UfdN998kxke+YIw
r0sryy23nK9+7bXXMofvuusubx6YqfjfBpHpKHH/o99++82hQaMo35DHoD8iIAIiUHMEqmMvUHPT
1IBEQAREQARaQmCHHXZwEydO9OZfN9xwg+NBP1mI2HbllVf6MN3k7DnxxBPdkksumWxWtf077rjD
EdY6WXbaaSfXpUsXHxgCoQ1NFiG1J0+e7O677z636aabJk/x+/vss48PFnHyySf7c4cNG+aGDx/u
gzDcdtttWeeQoJbSt29fL3R16NDBwSn4Kt1zzz2OfuaYY46s87QjAiIgAiLQxgRsRU9FBERABERA
BIomYJHZIgtHHdnPV8GXPfhHBx54YDR+/Pii+y6n4TbbbFNwHJYk1Xdr2pnIIuVF5hPl2y+00EKR
+UZFY8eO9ftm2pZ1+R9//DHacsstM32bQBUNHTo0uuWWW3zdpZdemtXeQndHJvz5YwsssEB0xRVX
RGaWF1mSV19neYd8e9Mi+X0TtrLO144IiIAIiEDrE5iFS7axPKbLi4AIiIAI1BkBNEMkaj3zzDMd
pmbNFczU8KPZd999XceOHZtrXtXjhAj/8MMPvbaISHjjxo1z66+/vh8fmqNk+eCDDxxBJYLfUfJ4
fP/XX3915DbCZDBE2cNEDi0UdSHUd/wcbYuACIiACLQdAQlDbcdeVxYBERCBuicwffp0d9lllznT
gjiEjOYK0dxM2+KTnJLodNVVV23ulKofb04YqvoAdAEREAEREIE2IyBhqM3Q68IiIAIi0H4IfP75
5+6iiy5y1157rTPzsqIntsIKKzii1pnZnSNMd9euXZ2ZlRV9fiUaShiqBEX1IQIiIAL1SUDCUH3e
N41aBERABGqSAELRNddc419Tp04ta4zmy+OI5MaLnD0kLv3iiy8cWiXqll9++bL6zXfStGnTnPkC
+b579OiRr1mr1zPfTTbZxG222Watfm1dUAREQAQahYCEoUa505qnCIiACLQiASLL3X777e66665z
FqCgFa/c/i7Vv39/d8IJJ7S/iWlGIiACIlADBCQM1cBN0BBEQAREoD0TeOutt9ytt97qCH1N4AKV
0ggsssgiXjNW2llqLQIiIAIiUAwBCUPFUFIbERABERCBFhMgeOlLL73kBg8e7AYNGuTGjBnjZs6c
2eJ+23sHEoba+x3W/ERABNqSgIShtqSva4uACIhAAxOYMWOGD2v94osv+vcJEyY4wlj//PPPDUwl
d+oyk8tlohoREAERqBQBCUOVIql+REAEREAEWkwA7dGUKVO8OR25eQjX/fLLL7s33njD/fLLLz7X
T6UDKLR40FXqQAEUqgRW3YqACIhAjICEoRgMbYqACIiACIiACIiACIiACDQOgVkbZ6qaqQiIgAiI
gAiIgAiIgAiIgAg0EZAw1MRCWyIgAiIgAiIgAiIgAiIgAg1EQMJQA91sTVUEREAEREAEREAEREAE
RKCJgIShJhbaEgEREAEREAEREAEREAERaCACEoYa6GZrqiIgAiIgAiIgAiIgAiIgAk0EJAw1sdCW
CIiACIiACIiACIiACIhAAxGQMNRAN1tTFQEREAEREAEREAEREAERaCIgYaiJhbZEQAREQAREQARE
QAREQAQaiICEoQa62ZqqCIiACIiACIiACIiACIhAEwEJQ00stCUCIiACIiACIiACIiACItBABCQM
NdDN1lRFQAREQAREQAREQAREQASaCEgYamKhLREQAREQAREQAREQAREQgQYiIGGogW62pioCIiAC
IiACIiACIiACItBEQMJQEwttiYAIiIAIiIAIiIAIiIAINBABCUMNdLM1VREQAREQAREQAREQAREQ
gSYCEoaaWGhLBERABERABERABERABESggQhIGGqgm62pioAIiIAIiIAIiIAIiIAINBGQMNTEQlsi
IAIiIAIiIAIiIAIiIAINREDCUAPdbE1VBERABERABERABERABESgiYCEoSYW2hIBERABERABERAB
ERABEWggAhKGGuhma6oiIAIiIAIiIAIiIAIiIAJNBCQMNbHQlgiIgAiIgAiIgAiIgAiIQAMRkDDU
QDdbUxUBERABERABERABERABEWgiIGGoiYW2REAEREAEREAEREAEREAEGoiAhKEGutmaqgiIgAiI
gAiIgAiIgAiIQBMBCUNNLLQlAiIgAiIgAiIgAiIgAiLQQAQkDDXQzdZURUAEREAEREAEREAEREAE
mghIGGpioS0REAEREAEREAEREAEREIEGIiBhqIFutqYqAiIgAiIgAiIgAiIgAiLQREDCUBMLbYmA
CIiACIiACIiACIiACDQQAQlDDXSzNVUREAEREAEREAEREAEREIEmAhKGmlhoSwREQAREQAREQARE
QAREoIEISBhqoJutqYqACIiACIiACIiACIiACDQRkDDUxEJbIiACIiACIiACIiACIiACDURAwlAD
3WxNVQREQAREQAREQAREQAREoImAhKEmFtoSAREQAREQAREQAREQARFoIAIShhroZmuqIiACIiAC
IiACIiACIiACTQQkDDWx0JYIiIAIiIAIiIAIiIAIiEADEZAw1EA3W1MVAREQAREQAREQAREQARFo
IvD/AA/hvs2gRPYEAAAAAElFTkSuQmCC

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/BloomFilter.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/ValArray.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAApMAAAQnCAYAAACnneekAAAKmGlDQ1BJQ0MgUHJvZmlsZQAASImV
lgdQU+kWx7970xstEDqE3nsH6TX03kQlJKETYiA0sSGLK7CiqIigIuiiCIKrUmQtiCi2RbGABd0g
i4q6LhZEReVd4BHee/N23rx/5uT+5syZf875cr+ZAwD5EJPHS4clAMjgZvNDvd3o0TGxdNwIgIE0
IAJLYMlkZfFcg4P9wd/q4xCA5p53jOa8/r7uv0qSzcliAQAFI5zAzmJlIHwKiXIWj58NAMoFyWvm
ZvPmmI2wNB9pEOG8OU5a4PI5TljgA/M14aHuCCM+eDKTyU8CgNSD5Ok5rCTEhyRE2JTLTuECQEYm
B06sZCbiTZ7rwTAjI3OOCxHWTfgXn6R/80wQeTKZSSJemGVeeI+ULF46M///PI7/rYx0weJvqCBB
zkoL85ubGTmzPBbTM2yRkzkM/0XmZbuFLnJKNiNcVCPwiVhkQVqE6yKnZfqJ6rkJgUEi/yz32EUu
SA6PWmQ2x8NzkfmZoaL6rJwwz6V698BFTmX6Bi8ykz8/yzxz0r1Dl3oOFvXJTQ8UzZLI9xLVcLKW
5s1ODvcRMfICiOpTvBiiefk+S/7pwSJPviBUdA4cboTIk830EJ0t8ACewB/50EEEMAc2wAyYZXPy
suead8/k5fNTkpKz6a7IDeAY0hlclrEh3dzUzBzM3aeFv+v9/fl7AtHwS7laTQC8CpDkH0s5m0oA
Wm4CQGtdymkiT3InAN21LAE/ZyGHnvvCILdUHOlQHnkbNIAuMEJ6swYOwAXp1hcEgXAQA1YCFkgG
GYAPckEh2AhKQBnYBnaBGlAHDoIj4Bg4ATrBGXABXAbXwS1wDzwCQjAOXoFJ8BHMQBCEgygQFZKH
VCEtyAAyh2whJ8gT8odCoRgoHkqCuJAAKoQ2QWVQJVQD1UNN0C/QaegCdBUahB5Ao9AE9A76AqNg
MiwNK8PasAlsC7vCfnA4vAJOglfDBXAxvBWuhhvgFrgDvgBfh+/BQvgVPIUCKBKKhlJDGaFsUe6o
IFQsKhHFR61DlaKqUA2oVlQ3qh91ByVEvUZ9RmPRVDQdbYR2QPugI9As9Gr0OnQ5ugZ9BN2B7kPf
QY+iJ9HfMRSMEsYAY49hYKIxSZhcTAmmCtOIacdcwtzDjGM+YrFYGlYHa4P1wcZgU7FrsOXYfdg2
bA92EDuGncLhcPI4A5wjLgjHxGXjSnB7cC2487jbuHHcJzwJr4o3x3vhY/FcfBG+Cn8Ufw5/G/8c
P0OQIGgR7AlBBDYhn1BBOEToJtwkjBNmiJJEHaIjMZyYStxIrCa2Ei8RR4jvSSSSOsmOFEJKIW0g
VZOOk66QRkmfyVJkfbI7OY4sIG8lHyb3kB+Q31MoFG2KCyWWkk3ZSmmiXKQ8oXwSo4oZizHE2GLr
xWrFOsRui70RJ4hribuKrxQvEK8SPyl+U/y1BEFCW8JdgimxTqJW4rTEsMSUJFXSTDJIMkOyXPKo
5FXJF1I4KW0pTym2VLHUQamLUmNUFFWD6k5lUTdRD1EvUcelsdI60gzpVOky6WPSA9KTMlIyljKR
MnkytTJnZYQ0FE2bxqCl0ypoJ2hDtC+yyrKushzZLbKtsrdlp+UU5VzkOHKlcm1y9+S+yNPlPeXT
5LfLd8o/VkAr6CuEKOQq7Fe4pPBaUVrRQZGlWKp4QvGhEqykrxSqtEbpoNINpSllFWVvZZ7yHuWL
yq9VaCouKqkqO1XOqUyoUlWdVFNUd6qeV31Jl6G70tPp1fQ++qSakpqPmkCtXm1AbUZdRz1CvUi9
Tf2xBlHDViNRY6dGr8akpqpmgGahZrPmQy2Clq1WstZurX6taW0d7Sjtzdqd2i905HQYOgU6zToj
uhRdZ93Vug26d/WwerZ6aXr79G7pw/pW+sn6tfo3DWADa4MUg30Gg4YYQztDrmGD4bAR2cjVKMeo
2WjUmGbsb1xk3Gn8xkTTJNZku0m/yXdTK9N000Omj8ykzHzNisy6zd6Z65uzzGvN71pQLLws1lt0
Wby1NLDkWO63vG9FtQqw2mzVa/XN2saab91qPWGjaRNvs9dm2FbaNti23PaKHcbOzW693Rm7z/bW
9tn2J+z/cjBySHM46vBimc4yzrJDy8Yc1R2ZjvWOQie6U7zTASehs5oz07nB+amLhgvbpdHluaue
a6pri+sbN1M3vlu727S7vfta9x4PlIe3R6nHgKeUZ4RnjecTL3WvJK9mr0lvK+813j0+GB8/n+0+
wwxlBovRxJj0tfFd69vnR/YL86vxe+qv78/37w6AA3wDdgSMBGoFcgM7g0AQI2hH0ONgneDVwb+G
YEOCQ2pDnoWahRaG9odRw1aFHQ37GO4WXhH+KEI3QhDRGykeGRfZFDkd5RFVGSWMNoleG309RiEm
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
1NI04/uaRET0FFu5cqUwNDTUujCn5icgIECcOnVK52tMmjRJ6OvrCycnJ2Fvby9eeeUV9UIUIe4v
eHFxcREmJibCwcFBeHl5qev+vADnQW2vX78u+vbtKwAICwsL4eDgIO7evSuEEGLdunWiTZs2olOn
Tur2YWFh4p///KdGrBUVFcLa2lro6+sLLy8v4eLiImbPni0qKyuFEEJUV1eLRYsWCblcLtq1ayes
rKzE/PnzhRDSBTh1tRVCiKNHjwpbW1thbGwsTE1NRUhIiLpu6NChwszMTMydO1ddtnnzZqFQKIRc
LhceHh6iXbt2YujQoeLixYtCiPuLrF544QVhZmYmTExMRI8ePURaWprGZzlkyBDh7u6ujuf48eMa
95+dnS0MDAzEwoUL6/xOqeXhPpNERNRsTp8+jfHjx6tnxmrz4osvYurUqQgKCkLr1q3rdY3y8nKk
paXB1dUVcrlca5u8vDw8++yzDzV2XW1v3LgBfX19tGnTRhJDWVkZFAoFAGDEiBGYNm0aAgMDJWMo
lUoUFhbCy8tL6/VVKhVycnJgZ2cHAwODOmN9UNvr16/D2tpacgxjYWEhTExMYGxsrFGenZ2NkpIS
eHp6Qk9PTzJeUVERDAwMJPdfs2fnxx9/jNzcXNja2kr6p6enw8vLC+np6erH3/R4YDJJRETN6s6d
O5g9ezbCw8O1vlv4Z8bGxujduzcGDx6Mbt264bnnnpMkLi1dVVUVnn/+eZw6dUqSrD2pHmYD+Fmz
ZiEzM1O9gTs9PphMEhFRi/DLL79g+vTpOHv2bL36mZmZobKyEnp6epDJZLC3t6/37CU1ruLiYhgZ
GdX5vRQVFeGZZ56pdfa4hp6eHmxsbPDRRx/Bx8enoUMlHTCZJCKiFkOlUuHLL7/EkiVL1FvOEGlj
ZmaGlJQU9Qpyaj5czU1ERC2GgYEBQkJCcPnyZXz55Zfw9PRs7pCohbp16xaOHj3a3GEQmEwSEVEL
ZGRkhEmTJiElJQW//vorpk2bpl68QlRD26lK1PT4mJuIiB4L1dXVSExMxPHjxxEfH4+UlBSkpaWh
qqqquUOjZjB9+nSsXbu2ucMgMJkkIqLHWFVVFZRKJRISEpCXlwczM7NaT12hJ0PNAhwXF5fmDqp7
VEYAAAFNSURBVIX+h8kkEREREemM70wSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIR
ERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhER
EZHOmEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERER
kc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGR
zphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzphMEhEREZHO
mEwSERERkc6YTBIRERGRzphMEhEREZHOmEwSERERkc6YTBIRERGRzgwBxDR3EERERET0ePo/YjWB
h5xRiA8AAAAASUVORK5CYII=

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/StreamBuffer.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAA+4AAAKTCAYAAACHL1IVAAAKeGlDQ1BJQ0MgUHJvZmlsZQAAeAHV
lmdUU0kbx+fe9EYLhA6h995Beg1dqiAqIYFQYwxFwIbI4gqsKCIiYAFdqoKrUmRREVEsLAIKWNAF
WRTUdbEAKih7gQPrOe+7394v75Mzk1/+88xzJzN3zvkDQG5n8njxsBAACdwkvp+rA31dSCgdNwwg
gAFUQAMCTFYiz97X1xP8a8wMItlI3NdZrPWvaf99QJgdmcgCAPJFhiPYiawEhC8iPM/i8ZMAgM8h
3Ls1iYcwKgNhUT6yQIQLF5mzzNWLHLHMbUs5AX6OSE4vAHgyk8nnAEAaRnR6CouD1CHNI6zPZcdw
ASBrI2zDimayEV5cu3ZCwuZFLkZYPeK7OpzvmMmMWK3JZHJWefm/IDORBzvFJPLimWlLP/6XXUJ8
MrJfSyGC9GRuvPfi2YgibYLNdPJYYV780pkt6ZHcQP8VnRvh7bPCUXwXvxXmJTl8x74BK3p6tKP3
CkcmOq/WiWW6L57ZUn1+sl/gCiem+DuvcHp0QPAKsyOdVvWoGBfGih6TxFh9Vtxmj9U1ACfgDDyR
Dx0EAkNgBgyAQVJkahIyDzhu5qXxYzjRSXR75I2L1KYzuCxdbbqhvoHh4vD/TSzeteXFfni4dIcg
Gv4frVQZAJd05D788Y9mVgDAmXsA0Or/0ZSRGuRmAFpLWcn8lOV66MUvDCACQeSEJIEcUALqQAfZ
R1NgBeyQnXUHPiAAhICNgAWiQQLgg61gO9gNskEuOAAOgxJwApwC1eAsOA+aQRu4Bm6Cu6AXDIAn
YASMg9dgCsyAOQiCcBAFokKSkDykAmlBhpA5ZAM5Q56QHxQChUMciAslQ9uhPVAuVACVQOVQDfQL
dAm6Bt2G+qBH0Cg0Cb2HvsAomAyLwrKwKqwHm8P2sAccAG+AOfAWOB3OgvfDxXAFfAZugq/Bd+EB
eAR+DU+jAIqEoqEUUDooc5QjygcViopC8VE7UTmoIlQFqh7ViupC3UeNoN6gPqOxaCqajtZBW6Hd
0IFoFnoLeic6D12CrkY3oTvR99Gj6Cn0NwwFI4PRwlhiGJh1GA5mKyYbU4SpxDRibmAGMOOYGSwW
S8OqYc2wbtgQbCx2GzYPewzbgG3H9mHHsNM4HE4Sp4WzxvngmLgkXDbuKO4M7iquHzeO+4Qn4eXx
hngXfCiei8/EF+Fr8Vfw/fiX+DmCEEGFYEnwIbAJaYR8wmlCK+EeYZwwRxQmqhGtiQHEWOJuYjGx
nniDOEz8QCKRFEkWpLWkGFIGqZh0jnSLNEr6TBYha5IdyWHkZPJ+chW5nfyI/IFCoahS7CihlCTK
fkoN5TrlGeWTAFVAV4AhwBbYJVAq0CTQL/BWkCCoImgvuFEwXbBI8ILgPcE3QgQhVSFHIabQTqFS
oUtCQ0LTwlRhA2Ef4QThPOFa4dvCEyI4EVURZxG2SJbIKZHrImNUFFWJ6khlUfdQT1NvUMdFsaJq
ogzRWNFc0bOiPaJTYiJixmJBYqlipWKXxUZoKJoqjUGLp+XTztMGaV/EZcXtxSPF94nXi/eLz0pI
S9hJRErkSDRIDEh8kaRLOkvGSR6UbJZ8KoWW0pRaK7VV6rjUDak30qLSVtIs6Rzp89KPZWAZTRk/
mW0yp2S6ZaZl5WRdZXmyR2Wvy76Ro8nZycXKFcpdkZuUp8rbyMfIF8pflX9FF6Pb0+PpxfRO+pSC
jIKbQrJCuUKPwpyimmKgYqZig+JTJaKSuVKUUqFSh9KUsryyl/J25TrlxyoEFXOVaJUjKl0qs6pq
qsGqe1WbVSfUJNQYaulqdWrD6hR1W/Ut6hXqDzSwGuYacRrHNHo1YU0TzWjNUs17WrCWqVaM1jGt
Pm2MtoU2V7tCe0iHrGOvk6JTpzOqS9P11M3UbdZ9q6esF6p3UK9L75u+iX68/mn9JwYiBu4GmQat
Bu8NNQ1ZhqWGD4woRi5Gu4xajN4ZaxlHGh83fmhCNfEy2WvSYfLV1MyUb1pvOmmmbBZuVmY2ZC5q
7mueZ37LAmPhYLHLos3is6WpZZLlecu/rHSs4qxqrSbWqK2JXHN6zZi1ojXTutx6xIZuE25z0mbE
VsGWaVth+9xOyY5tV2n30l7DPtb+jP1bB30HvkOjw6yjpeMOx3YnlJOrU45Tj7OIc6BzifMzF0UX
jkudy5Sries213Y3jJuH20G3IYYsg8WoYUy5m7nvcO/0IHv4e5R4PPfU9OR7tnrBXu5eh7yGvVW8
ud7NPsCH4XPI56mvmu8W31/XYtf6ri1d+8LPwG+7X5c/1X+Tf63/TIBDQH7Ak0D1wOTAjiDBoLCg
mqDZYKfgguCRdXrrdqy7GyIVEhPSEooLDQqtDJ1e77z+8PrxMJOw7LDBDWobUjfc3ii1MX7j5U2C
m5ibLoRjwoPDa8PnmT7MCuZ0BCOiLGKK5cg6wnrNtmMXsicjrSMLIl9GWUcVRE1wrDmHOJPRttFF
0W9iHGNKYt7FusWeiJ2N84mriluID45vSMAnhCdc4opw47idm+U2p27u42nxsnkjWyy3HN4yxffg
VyZCiRsSW5JEEVPTnaye/EPyaIpNSmnKp61BWy+kCqdyU7vTNNP2pb1Md0n/eRt6G2tbx3aF7bu3
j+6w31G+E9oZsbNjl9KurF3jGa4Z1buJu+N2/5apn1mQ+XFP8J7WLNmsjKyxH1x/qMsWyOZnD+21
2nviR/SPMT/27DPad3Tftxx2zp1c/dyi3Pk8Vt6dnwx+Kv5pYX/U/p580/zjB7AHuAcGD9oerC4Q
LkgvGDvkdaipkF6YU/jx8KbDt4uMi04cIR5JPjJS7FncclT56IGj8yXRJQOlDqUNZTJl+8pmj7GP
9R+3O15/QvZE7okvJ2NOPix3LW+qUK0oOoU9lXLqxemg010/m/9cUylVmVv5tYpbNVLtV91ZY1ZT
UytTm18H1yXXTZ4JO9N71ulsS71OfXkDrSH3HDiXfO7VL+G/DJ73ON9xwfxC/UWVi2WN1MacJqgp
rWmqObp5pCWkpe+S+6WOVqvWxl91f61qU2grvSx2Of8K8UrWlYWr6Ven23ntb65xro11bOp4cn3d
9Qedazt7bnjcuHXT5eb1Lvuuq7esb7Xdtrx96Y75nea7pnebuk26G38z+a2xx7Sn6Z7ZvZZei97W
vjV9V/pt+6/dd7p/8wHjwd0B74G+wcDBh0NhQyMP2Q8nHsU/evc45fHck4xhzHDOU6GnRc9knlX8
rvF7w4jpyOVRp9Hu5/7Pn4yxxl7/kfjH/HjWC8qLopfyL2smDCfaJl0me1+tfzX+mvd67k32n8J/
lr1Vf3vxL7u/uqfWTY2/479beJ/3QfJD1Ufjjx3TvtPPZhJm5mZzPkl+qv5s/rnrS/CXl3Nb53Hz
xV81vrZ+8/g2vJCwsMBj8plLXgCF9HBUFADvqwCghABARXwxUWDZCy9lQMv+HeFFH7/k5f+Tl/3y
Ur4pAGczAGIgADBqB+AcwqoIU5DmawdAgB2AjYxWG6IuRmKU0bI5g0iIV8EULSx8QLwhTgOAr0ML
C3PNCwtfKxHP/hiA9pllD744S+gMACcD9c2CPW/pvChfVL6PvwFpZeiJt1YJfQAAIABJREFUeAHs
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
69bNKFhds2bNYulcQKASBPR+6j31Mtdcc5n333/fdOnSxSdxhAAEIACBMhDA4l4GyDQBAQhAAAIQ
SBJ45plnMpR2lTnrrLNQ2pOwuK4YgQ022MCsvfbaYfv//POPue6668JrTiAAAQhAoDwEsLiXhzOt
QAACEIAABGIEtE5YyntUVlttNfPmm2+iuEehcF5xAvfcc4/Zf//9w360bdvWfPHFF6Z169ZhGicQ
gAAEIFBaAijupeVL7RCAAAQgAIEMAuPHjzfrrLNORvrDDz9sdt1114x0EiBQSQJ//vmn6dy5s/n6
66/Dbtx4443miCOOCK85gUAlCMyaNSvclaNr166p36vV2q+xY8eaGTNmuO7ttttuZp555qlEV2mz
hgiguNfQw6KrEIAABCDQOAjsscce5qGHHooNZsUVVzSTJ082WkOMQKDaCJxxxhnm3HPPDbulWAzv
vPNOeF2pk6+++sp9brQLg9z4tY3dIossYqTEKbge0rgJvP7662bdddd1gzzyyCOrZhlHPv3q06eP
eeqpp1zfZ86c6d7dxv20GF1DCfDroKEEuR8CEIAABCBQAAFtsfXoo49m3DFgwACU9gwqJFQLgX/9
61+mefPmYXcmTZpknnvuufC6nCdTp041vXv3NgsvvLDp2LGj2WqrrczRRx9tjjnmGLPvvvuabbbZ
xmhLReVrSYosm0huAmussYZb+iBmv/32W9bCc+bMcQqmlkm0adPGaOIkl2y66aau3sMPPzwstssu
u7g01SGLeTXLYYcdFvZ1r732quau0rcmQADFvQk8ZIYIAQhAAALVQ+Dqq6+O7Yutni2++OJO4aie
XtITCMQJLLHEEmannXaKJZY7SJ32k7/44ovN6quv7tyjv//+e9cfuRivueaaZqWVVjKtWrUK+6h8
xZGQJwuSm8B6661nfv31VyNmL730UtbCEyZMcMq2ys6ePTtnWSnlL774oqtXCryXP/74w6WpjiAI
fHLVHX/44Qdz3333hX3VhOs333xTdf2kQ02HAIp703nWjBQCEIAABCpM4KeffjK33357Ri/69evH
vu0ZVEioNgJHHXVUrEtDhgxxQepiiSW6kKV3k002MSeddJKR4qftEk888US3deIvv/xipFC+++67
Tpn87LPPzJ133ml23313o0B6tS5//fWXefnll52nzogRI0oynC222CKsNxk0M8ywJy+88EL0MnVn
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
P5qw+uqrr8K2f/75Z9OrVy8zc+ZMl7baaquZjh07mnfffdd5poQFG+HJDz/8YO68886MkR155JE1
qbR//vnn7rtNkw76HtBE3tJLL23WWGMN05i9JjIeIAkQgAAEIACBWiKgNe61IPYHhdbiB0cffXQt
dJc+NgICetf0zundq1Xp27evG4PGkevfY489VqtDrKl+b7fddjmfg56RVZyCAw88MPjpp5/KMraD
Dz447JNdKhJr88svvwz0T3LWWWeF5S688MJYuW+//Tawy0piaY3p4qKLLgrH7j9H888/f/Djjz/W
1DD1LA844IDATtBkjEfjmnfeeYNdd9214mPaeOONg/nmmy/2r3Xr1oGdKApsANFAn6Nzzz03+Oab
byre17QO2KUkYd//+9//phXJO62YdeXdKAUhAAEIQKAqCdSMxV3rjyVa045AoBwE9K5de+21bu17
Odordhty673llltctXKLlyvz5ptvbqzCYd577z0zYcIE8/DDDxu5P9clf/75J5a4uiAVmL/pppua
pZZaylil1y3LkPu5/SthxPquu+4yX3/9tXniiSdi68sLbCKv4i+++KIrp0CMe+21V+yexRZbLLx+
6aWXwvNkFHXtY65/jVH0PK655pqMoWkLuAUWWCAjvVoTtPRH3kTeY8Iqwi42gTwtPvjgA/feaX96
fS9UWhRj4ddff83ohpb52MkH5z305JNPmvPPP9/YSSRz7LHHZpStZIKWJfn+R72c6tOnYtZVn/a5
BwIQgAAEqodAzSju+vEkUSA6BALlIODfNf/ulaPNYrWhH+DHH3+8q06K+vPPP+8Ca/n6FXBsm222
ccq83GWtpc1nxY4rr7yyUypVx2effRbL46JhBLRuPKooK/6Antmjjz7qKlb0ckUrl+t8qURKgVzl
JXLPn2uu7DuE+m3Q9K4ocGNTEQWslNIbFbmXH3PMMdGkqj7XhNA+++wTKu3HHXecsR4UYeDNv/76
y4wbN84MHjy4ZIq7vj8U+FCKt4L5yT0/H7njjjvcMhIp7ZrMmjhxogsiquUL/nturbXWMtZKn091
ZSnTqlUro+9OiZaTpEm+PPKpK61+0iAAAQhAoPERqBnF3aNney5PgmOpCdTyuybrrX7USqxbaUxp
T3JTRPBsMmXKFJclxR0pLQFNpjzwwAPOKqp145JXX321pIq7dfV2lla1lW3yRnkS65bsjnWVc4Ua
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
U/n08mfvJEACJEACGUwgG1PCZTBODi2FBJARYdKkSXLXXXeF7PX111+Xjh07yp49e0LW400SIAES
IIH0EqDinl7+7J0ESIAESCCDCVBxz+CXw6GFJZA3b15BdoH77rsvZN2JEydK8+bN5a+//gpZjzdJ
gARIgATSR4CKe/rYs2cSIAESIIEMJ0DFPcNfEIcXEYGBAwfKNddcE7Lu/PnzpUWLFpJNwRdDTog3
SYAESCDHCFBxz7EXyumQAAmQAAkkjgAV98SxZEvpJTBs2DCpU6eOYxDYkbfLggULpFWrVrJ37157
Mc9JgARIgAQygIDzN3YGDIhDIAESIAESIIFMIeCWDu7PP//MlOFxHCQQMYFChQrpaPNFixa1njl6
9Kj4L05h571z584hI9JbDfCEBEiABEggZQSouKcMNTsiARIgARLINgL+Sg3GT1PibHuLHK8hULVq
VXn++efNpT5iIapmzZqOsmnTpslNN93kKOMFCZAACZBAeglQcU8vf/ZOAiRAAiSQwQTcFHfuuGfw
C+PQwhKAQt60aVNHvV27dsm5557rKHv33XflqaeecpTxggRIgARIIH0EqLinjz17JgESIAESyHAC
VNwz/AVxeFETyJMnjyAFXIECBaxnN23aJG3atJFTTz3VKsPJQw89JOPHj3eU8YIESIAESCA9BKi4
p4c7eyUBEiABEsgCAlTcs+AlcYhRE6hevbrcfvvtjudeeukl+eCDD6RUqVJWuc/nk+7du8tPP/1k
lfGEBEiABEggPQSouKeHO3slARIgARLIAgJU3LPgJXGIMRHAbvrxxx9vPQtz+dGjR8snn3wi+fPn
t8qR2/3yyy+XgwcPWmU8IQESIAESSD0BKu6pZ84eSYAESIAEsoQAFfcseVEcZtQE8Nnu37+/47mX
X35ZzjjjDHnuuecc5d9//73069fPUcYLEiABEiCB1BLIo8ygfKntkr2RAAmQAAmQQPYQgC/w4cOH
HQM+cOCAIL0WhQSymcD+/fsFkea3bt1qTeP++++Xp59+Wq644gqdPs66oU7Gjh0rHTt2tBfxnARI
gARIIEUEqLinCDS7IQESIAESyE4CZcqUkd9++80xeCg6J554oqOMFySQjQTg2963b19r6MWKFZON
GzcKgtgh0rzdv7106dKyZMkSKVeunFWfJyRAAiRAAqkhQFP51HBmLyRAAiRAAllKgObyWfriOOyI
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
mkqVKuVseSlY6QTcrvKluwq5EQinAF3lw/ncqTUCCCCAAAIIIIAAAggggECeCNDinicPimIigAAC
CCCAAAIIIIAAAgiEU4DAPZzPnVojgAACCCCAAAIIIIAAAgjkiQCBe548KIqJAAIIIIAAAggggAAC
CCAQTgEC93A+d2qNAAIIIIAAAggggAACCCCQJwIE7nnyoCgmAggggAACCCCAAAIIIIBAOAUI3MP5
3Kk1AggggAACCCCAAAIIIIBAnggQuOfJg6KYCCCAAAIIIIAAAggggAAC4RQgcA/nc6fWCCCAAAII
IIAAAggggAACeSJA4J4nD4piIoAAAggggAACCCCAAAIIhFOAwD2cz51aI4AAAggggAACCCCAAAII
5IkAgXuePCiKiQACCCCAAAIIIIAAAgggEE4BAvdwPndqjQACCCCAAAIIIIAAAgggkCcCBO558qAo
JgIIIIAAAggggAACCCCAQDgFCNzD+dypNQIIIIAAAggggAACCCCAQJ4IELjnyYOimAgggAACCCCA
AAIIIIAAAuEUIHAP53On1ggggAACCCCAAAIIIIAAAnkiQOCeJw+KYiKAAAIIIIAAAggggAACCIRT
gMA9nM+dWiOAAAIIIIAAAggggAACCOSJAIF7njwoiokAAggggAACCCCAAAIIIBBOAQL3cD53ao0A
AggggAACCCCAAAIIIJAnAgTuefKgKCYCCCCAAAIIIIAAAggggEA4BQjcw/ncqTUCCCCAAAIIIIAA
AggggECeCBC458mDopgIIIAAAggggAACCCCAAALhFCBwD+dzp9YIIIAAAggggAACCCCAAAJ5IkDg
nicPimIigAACCCCAAAIIIIAAAgiEU4DAPZzPnVojgAACCCCAAAIIIIAAAgjkiQCBe548KIqJAAII
IIAAAggggAACCCAQTgEC93A+d2qNAAIIIIAAAggggAACCCCQJwIE7nnyoCgmAggggAACCCCAAAII
IIBAOAUI3MP53Kk1AggggAACCCCAAAIIIIBAnggQuOfJg6KYCCCAAAIIIIAAAggggAAC4RQgcA/n
c6fWCCCAAAIIIIAAAggggAACeSJA4J4nD4piIoAAAggggAACCCCAAAIIhFOAwD2cz51aI4AAAggg
gAACCCCAAAII5IkAgXuePCiKiQACCCCAAAIIIIAAAgggEE4BAvdwPndqjQACCCCAAAIIIIAAAggg
kCcCBO558qAoJgIIIIAAAggggAACCCCAQDgFCNzD+dypNQIIIIAAAggggAACCCCAQJ4IELjnyYOi
mAgggAACCCCAAAIIIIAAAuEUIHAP53On1ggggAACCCCAAAIIIIAAAnki8P+3yUZYzX5mVgAAAABJ
RU5ErkJggg==

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/Circular.png
Content-Transfer-Encoding: base64
Content-Type: image/png

iVBORw0KGgoAAAANSUhEUgAAAr4AAAGqCAYAAADtKEdlAAAKeGlDQ1BJQ0MgUHJvZmlsZQAAeAHV
lmdUU0kbx+fe9EYLhA6h995Beg1dqiAqIYFQYwxFwIbI4gqsKCIiYAFdqoKrUmRREVEsLAIKWNAF
WRTUdbEAKih7gQPrOe+7394v75Mzk1/+88xzJzN3zvkDQG5n8njxsBAACdwkvp+rA31dSCgdNwwg
gAFUQAMCTFYiz97X1xP8a8wMItlI3NdZrPWvaf99QJgdmcgCAPJFhiPYiawEhC8iPM/i8ZMAgM8h
3Ls1iYcwKgNhUT6yQIQLF5mzzNWLHLHMbUs5AX6OSE4vAHgyk8nnAEAaRnR6CouD1CHNI6zPZcdw
ASBrI2zDimayEV5cu3ZCwuZFLkZYPeK7OpzvmMmMWK3JZHJWefm/IDORBzvFJPLimWlLP/6XXUJ8
MrJfSyGC9GRuvPfi2YgibYLNdPJYYV780pkt6ZHcQP8VnRvh7bPCUXwXvxXmJTl8x74BK3p6tKP3
CkcmOq/WiWW6L57ZUn1+sl/gCiem+DuvcHp0QPAKsyOdVvWoGBfGih6TxFh9Vtxmj9U1ACfgDDyR
Dx0EAkNgBgyAQVJkahIyDzhu5qXxYzjRSXR75I2L1KYzuCxdbbqhvoHh4vD/TSzeteXFfni4dIcg
Gv4frVQZAJd05D788Y9mVgDAmXsA0Or/0ZSRGuRmAFpLWcn8lOV66MUvDCACQeSEJIEcUALqQAfZ
R1NgBeyQnXUHPiAAhICNgAWiQQLgg61gO9gNskEuOAAOgxJwApwC1eAsOA+aQRu4Bm6Cu6AXDIAn
YASMg9dgCsyAOQiCcBAFokKSkDykAmlBhpA5ZAM5Q56QHxQChUMciAslQ9uhPVAuVACVQOVQDfQL
dAm6Bt2G+qBH0Cg0Cb2HvsAomAyLwrKwKqwHm8P2sAccAG+AOfAWOB3OgvfDxXAFfAZugq/Bd+EB
eAR+DU+jAIqEoqEUUDooc5QjygcViopC8VE7UTmoIlQFqh7ViupC3UeNoN6gPqOxaCqajtZBW6Hd
0IFoFnoLeic6D12CrkY3oTvR99Gj6Cn0NwwFI4PRwlhiGJh1GA5mKyYbU4SpxDRibmAGMOOYGSwW
S8OqYc2wbtgQbCx2GzYPewzbgG3H9mHHsNM4HE4Sp4WzxvngmLgkXDbuKO4M7iquHzeO+4Qn4eXx
hngXfCiei8/EF+Fr8Vfw/fiX+DmCEEGFYEnwIbAJaYR8wmlCK+EeYZwwRxQmqhGtiQHEWOJuYjGx
nniDOEz8QCKRFEkWpLWkGFIGqZh0jnSLNEr6TBYha5IdyWHkZPJ+chW5nfyI/IFCoahS7CihlCTK
fkoN5TrlGeWTAFVAV4AhwBbYJVAq0CTQL/BWkCCoImgvuFEwXbBI8ILgPcE3QgQhVSFHIabQTqFS
oUtCQ0LTwlRhA2Ef4QThPOFa4dvCEyI4EVURZxG2SJbIKZHrImNUFFWJ6khlUfdQT1NvUMdFsaJq
ogzRWNFc0bOiPaJTYiJixmJBYqlipWKXxUZoKJoqjUGLp+XTztMGaV/EZcXtxSPF94nXi/eLz0pI
S9hJRErkSDRIDEh8kaRLOkvGSR6UbJZ8KoWW0pRaK7VV6rjUDak30qLSVtIs6Rzp89KPZWAZTRk/
mW0yp2S6ZaZl5WRdZXmyR2Wvy76Ro8nZycXKFcpdkZuUp8rbyMfIF8pflX9FF6Pb0+PpxfRO+pSC
jIKbQrJCuUKPwpyimmKgYqZig+JTJaKSuVKUUqFSh9KUsryyl/J25TrlxyoEFXOVaJUjKl0qs6pq
qsGqe1WbVSfUJNQYaulqdWrD6hR1W/Ut6hXqDzSwGuYacRrHNHo1YU0TzWjNUs17WrCWqVaM1jGt
Pm2MtoU2V7tCe0iHrGOvk6JTpzOqS9P11M3UbdZ9q6esF6p3UK9L75u+iX68/mn9JwYiBu4GmQat
Bu8NNQ1ZhqWGD4woRi5Gu4xajN4ZaxlHGh83fmhCNfEy2WvSYfLV1MyUb1pvOmmmbBZuVmY2ZC5q
7mueZ37LAmPhYLHLos3is6WpZZLlecu/rHSs4qxqrSbWqK2JXHN6zZi1ojXTutx6xIZuE25z0mbE
VsGWaVth+9xOyY5tV2n30l7DPtb+jP1bB30HvkOjw6yjpeMOx3YnlJOrU45Tj7OIc6BzifMzF0UX
jkudy5Sries213Y3jJuH20G3IYYsg8WoYUy5m7nvcO/0IHv4e5R4PPfU9OR7tnrBXu5eh7yGvVW8
ud7NPsCH4XPI56mvmu8W31/XYtf6ri1d+8LPwG+7X5c/1X+Tf63/TIBDQH7Ak0D1wOTAjiDBoLCg
mqDZYKfgguCRdXrrdqy7GyIVEhPSEooLDQqtDJ1e77z+8PrxMJOw7LDBDWobUjfc3ii1MX7j5U2C
m5ibLoRjwoPDa8PnmT7MCuZ0BCOiLGKK5cg6wnrNtmMXsicjrSMLIl9GWUcVRE1wrDmHOJPRttFF
0W9iHGNKYt7FusWeiJ2N84mriluID45vSMAnhCdc4opw47idm+U2p27u42nxsnkjWyy3HN4yxffg
VyZCiRsSW5JEEVPTnaye/EPyaIpNSmnKp61BWy+kCqdyU7vTNNP2pb1Md0n/eRt6G2tbx3aF7bu3
j+6w31G+E9oZsbNjl9KurF3jGa4Z1buJu+N2/5apn1mQ+XFP8J7WLNmsjKyxH1x/qMsWyOZnD+21
2nviR/SPMT/27DPad3Tftxx2zp1c/dyi3Pk8Vt6dnwx+Kv5pYX/U/p580/zjB7AHuAcGD9oerC4Q
LkgvGDvkdaipkF6YU/jx8KbDt4uMi04cIR5JPjJS7FncclT56IGj8yXRJQOlDqUNZTJl+8pmj7GP
9R+3O15/QvZE7okvJ2NOPix3LW+qUK0oOoU9lXLqxemg010/m/9cUylVmVv5tYpbNVLtV91ZY1ZT
UytTm18H1yXXTZ4JO9N71ulsS71OfXkDrSH3HDiXfO7VL+G/DJ73ON9xwfxC/UWVi2WN1MacJqgp
rWmqObp5pCWkpe+S+6WOVqvWxl91f61qU2grvSx2Of8K8UrWlYWr6Ven23ntb65xro11bOp4cn3d
9Qedazt7bnjcuHXT5eb1Lvuuq7esb7Xdtrx96Y75nea7pnebuk26G38z+a2xx7Sn6Z7ZvZZei97W
vjV9V/pt+6/dd7p/8wHjwd0B74G+wcDBh0NhQyMP2Q8nHsU/evc45fHck4xhzHDOU6GnRc9knlX8
rvF7w4jpyOVRp9Hu5/7Pn4yxxl7/kfjH/HjWC8qLopfyL2smDCfaJl0me1+tfzX+mvd67k32n8J/
lr1Vf3vxL7u/uqfWTY2/479beJ/3QfJD1Ufjjx3TvtPPZhJm5mZzPkl+qv5s/rnrS/CXl3Nb53Hz
xV81vrZ+8/g2vJCwsMBj8plLXgCF9HBUFADvqwCghABARXwxUWDZCy9lQMv+HeFFH7/k5f+Tl/3y
Ur4pAGczAGIgADBqB+AcwqoIU5DmawdAgB2AjYxWG6IuRmKU0bI5g0iIV8EULSx8QLwhTgOAr0ML
C3PNCwtfKxHP/hiA9pllD744S+gMACcD9c2CPW/pvChfVL6PvwFpZeiJt1YJfQAAIABJREFUeAHs
nQe41NT2t7ftYsNyVQRFRUHF3gtWFGyIDcVeUMGKoiIoKhZEsVcQRVGsWFCxiyDYCyoq9notWFHs
XW++/e773/kymUw9M3Om/NbzzJlkZ2dn582cmZWVVWYLgmCKMaazfUlEQAREQAREQAREQAREoG4J
zF63Z6YTEwEREAEREAEREAEREIEIASm+ERhaFAEREAEREAEREAERqF8CUnzr99rqzERABERABERA
BERABCIEpPhGYGhRBERABERABERABESgfglI8a3fa6szEwEREAEREAEREAERiBCQ4huBoUUREAER
EAEREAEREIH6JSDFt36vrc5MBERABERABERABEQgQkCKbwSGFkVABERABERABERABOqXgBTf+r22
OjMREAEREAEREAEREIEIASm+ERhaFAEREAEREAEREAERqF8CUnzr99rqzERABERABERABERABCIE
pPhGYGhRBERABERABERABESgfglI8a3fa6szEwEREAEREAEREAERiBCQ4huBoUUREAEREAEREAER
EIH6JSDFt36vrc5MBERABERABERABEQgQkCKbwSGFkVABERABERABERABOqXgBTf+r22OjMREAER
EAEREAEREIEIASm+ERhaFAEREAEREAEREAERqF8CUnzr99rqzERABERABERABERABCIEpPhGYGhR
BERABERABERABESgfglI8a3fa6szEwEREAEREAEREAERiBCQ4huBoUUREAEREAEREAEREIH6JSDF
t36vrc5MBERABERABERABEQgQkCKbwSGFkVABERABERABERABOqXgBTf+r22OjMREAEREAEREAER
EIEIASm+ERhaFAEREAEREAEREAERqF8CUnzr99rqzERABERABERABERABCIEpPhGYGhRBERABERA
BERABESgfglI8a3fa6szEwEREAEREAEREAERiBCQ4huBoUUREAEREAEREAEREIH6JSDFt36vrc5M
BERABERABERABEQgQkCKbwSGFkVABERABERABERABOqXgBTf+r22OjMREAEREAEREAEREIEIASm+
ERhaFAEREAEREAEREAERqF8CUnzr99rqzERABERABERABERABCIEpPhGYGhRBERABERABERABESg
fglI8a3fa6szEwEREAEREAEREAERiBCQ4huBoUUREAEREAEREAEREIH6JSDFt36vrc5MBERABERA
BERABEQgQkCKbwSGFkVABERABERABERABOqXgBTf+r22OjMREAEREAEREAEREIEIASm+ERhaFAER
EAEREAEREAERqF8CUnzr99rqzERABERABERABERABCIEpPhGYGhRBERABERABHIR6N69u9lqq63M
yy+/nKtryvbbb7/d7XfsscemtGtFBESgcgTmrNyhdCQREAEREAERqDyBqVOnmpEjR7oDDxo0yKyw
wgpNmsSUKVPMr7/+ambNmlXQOB9//LGZNGmS+f333wvaT51FQARKR0CKb+lYaiQREAEREIEqJHDh
hRcarK3IwgsvbC666KIqnKWmJAIiUAkCcnWoBGUdQwREQAREoFkIzJw504wfPz489o033mj+/PPP
cF0LIiACjUVAim9jXW+drQiIgAg0FIHrr7/eKbpLLrmkO+9vvvkmRRFuKBg6WREQASPFVx8CERAB
ERCBuiVw9dVXu3PDvWH55Zd3y9dcc01e5/vzzz+byZMnO//gJ554wvn15rWj7fTee+8ZrMtjx441
H3zwQb67qZ8IiECZCcjHt8yANbwIiIAIiEDzEHj88cfNu+++a1q1amV22WUX89FHH5kTTjjBBZix
3K5du4wTu+eee8w+++xjfvnll7BPmzZtzG233RauJy389NNPZs899zQPPvhgyubevXubpZdeOqVN
KyIgApUnIItv5ZnriCIgAiIgAhUgMGrUKHeUAw44wMw111zGvwdBYK699tqMM7jjjjtMjx49zG+/
/WZOPPFEM3HiRIPLxLrrrmu23HJL1560899//20222wzp/Suueaabh/2HTJkiHOvGDp0aNJuahMB
EagggdnsF8AUe7zOFTymDiUCIiACIiACZSVAqrEllljC/PHHH87q690cdtttN3PnnXeatm3bOgvw
HHPMkTIPlNeOHTs694TLL7/c9O3bN2X7rbfeavbdd1/zzz//OMtxly5dwu1jxowxBx54oFl22WXN
K6+8YhZYYIFw29dff+0swaRC22STTcyTTz4ZbtOCCIhA5QjI4ls51jqSCIiACIhAhQjccMMNTunt
3Llz6NvLofv06eNmMGPGDDNhwoS02dx1111O6V1ooYXMwQcfnLYdN4YWLVqktdNw3nnnuXaOEVV6
acTdYrvttnPb9UcERKD5CEjxbT72OrIIiIAIiECZCPigtkMOOSTlCFRcW2aZZVxbUpDbq6++6rat
scYaZp555knZN9sKluW3337bdenUqVO2rtomAiLQjAQU3NaM8HVoERABERCB0hN4+umnzZtvvmlw
Y8BP9+abb045yEorrWSoonb//febr776yiy++OLh9v/85z9uuXXr1mFbPguMh+8wUui++YyvPiIg
AqUhIMW3NBw1igiIgAiIQJUQ8NZe/HCT3BX8NP/66y8XgDZw4EDfZL777ju3HPf9DTtkWPD7sbnQ
fTMMqWYREIEyEJDiWwaoGlIEREAERKB5CHz//fdheeILLrggzdfWz+q6664zzz77rBk9erSJKr4+
5diXX37pu+b17vejM/v6YLq8dlYnERCBihGQ4lsx1DqQCIiACIhAuQng1oB7w0YbbWT69++f8XCL
LbaYy+1Lnl+KU5CGDGnfvr17f/755w05eVu2bOnW/R+yMeDPGxfcG+add15X5GLSpElm0003TenC
PhxHIgIi0LwEFNzWvPx1dBEQAREQgRIS8Ll740Ft8UN079499MWNBrlRtIKsDRSuoNiF99slzRnW
4e233z5si44522yzmYMOOsg1XXHFFeb1118PN3/66aema9eu5tFHHw3btCACItA8BKT4Ng93HVUE
REAERKDEBKZOnWqmT59uFlxwQdOzZ8+so88555ymV69ers+4cePMDz/84JaXXHJJ069fP7c8cuRI
ZwHeZpttzKKLLupSoV155ZVm7rnndtvjfyh2sfDCC5tvvvnGrLfeembzzTc3ZIfADQIr9IABA+K7
aF0ERKDCBKT4Vhi4DicCIiACIlAeAt7aS4EJ3A5yCWWEsdSilN5yyy1h93PPPdcMGzbMpTMjy8Mj
jzxi/v3vf5vhw4ebvffeO+wXX0BpfuGFF8w666xjfv/9d+fagCvF1ltv7TJIzD///PFdtC4CIlBh
AqrcVmHgOpwIiIAIiEBtEMC9gbRo8803X+j7m+/MZ86c6QphFJoPON/x1U8ERKA4AlJ8i+OmvURA
BERABERABERABGqMgFwdauyCaboiIAIiIAIiIAIiIALFEZDiWxw37SUCIiACIiACIiACIlBjBJTH
t8YumKYrAiIgAo1I4L///a8hUOydd94x48ePNzNmzHAYKD9M4Fk9yTzzzGN23XVX06FDh3o6LZ2L
CFQFAfn4VsVl0CREQAREQATiBEgLhpLL66mnngpTjsX71eM6yu9jjz1m1l9//Xo8PZ2TCDQbASm+
zYZeBxYBERABEUgiMG3aNHPxxRe70sN//vlnUpeGaMPqS45hiQiIQOkIyNWhdCw1kgiIgAiIQBMI
4MYwaNAgc/fddzdhFO0qAiIgApkJSPHNzEZbREAEREAEKkDgjz/+MEOHDjXnnXeeaWQLbxQ1rg4D
Bw6MNmlZBESgBASk+JYAooYQAREQAREojsAbb7zhqqFRajiXtGzZ0qy11lpm9tlnN3/99ZcrHbzy
yisruC0XOG0XAREICUjxDVFoQQREQAREoJIEKBNM2WBKBmeSRRZZxOy3335m9913d4Fec8wxR6au
ahcBERCBnASk+OZEpA4iIAIiIAKlJBAEgTnxxBOda0Omcdu0aWMGDx5sevXqZXjsLxEBERCBUhCQ
4lsKihpDBERABEQgLwK4KBx44IHm5ptvTuw/55xzmgEDBphTTjnFzDvvvIl91CgCIiACxRKQ4lss
Oe0nAiIgAiJQEAEC10jRdf/99yfut+KKK5pbb73VrLnmmonb1SgCIiACTSWgksVNJaj9RUAEREAE
chLIpfTuueee5qWXXpLSm5OkOoiACDSFgBTfptDTviIgAiIgAjkJUG6YALVMlt4zzjjDjB071sw3
33w5x1IHERABEWgKAbk6NIWe9hUBERABEchJ4KijjnJV2OIdSUt25ZVXmj59+sQ3aV0EREAEykJA
im9ZsGpQERABERABCFx44YXmiiuuSIOB0nvDDTeYffbZJ22bGkRABESgXATk6lAushpXBERABBqc
wH333ZdYfWy22WYz1157bUWVXtwtcgmW6a222srcc889ubpquwiIQI0SkMW3Ri+cpi0CIiAC1Uzg
3XffNfvuu69JUjgvuOACc8ABB5R1+i+++KJLmfbmm28aqsN98cUXpm3btqZDhw7u1b59e9O5c2dX
FMNPZOrUqYbXTjvt5Jv0LgIiUGcEpPjW2QXV6YiACIhAcxP45ZdfTI8ePcyPP/6YNpVjjjnGHHfc
cWntpWr4448/zOmnn27OP/98888//7hhUXg7depkZsyYYR577DEzefJk137wwQenKL6lmoPGEQER
qF4CUnyr99poZiIgAiJQkwQOO+wwZ2WNT75bt27O5zfeXqp1FN3NN9/cPP/88wZ3ikGDBjkle9FF
Fw0P8fvvv5spU6aYBx54wCy22GJhuxZEQAQag4AU38a4zjpLERABEagIAQLWbrrpprRjUZyClGUE
tZVLRo0aFSq9d999d6LLwtxzz22222479yrXPDSuCIhA9RKQ4lu910YzEwEREIGaIvD++++bI488
Mm3O5Oe98847zQILLJC2rVQNs2bNMoMHD3bD7bLLLolKbymO9d577zk/4N9++82ss846Zo011siq
zH/yySfmlVdeMZ9++qlB6eYGYJNNNkmcyjvvvGNwE1lqqaWcNfrvv/82Tz31lMFP+YgjjkjcR40i
IAKFEZDiWxgv9RYBERABEUgggJvB/vvvb37++ee0rVdddZVZZZVV0tpL2YDrwrfffuuGPPXUU0s5
tBvrp59+Mr169TJ33XVXytjbb7+9C6JbcMEFU9pff/11F8A3bdq0lHZWNtpoI/Pwww+bli1bpmyD
H8F1l19+ueOFAv/DDz+Y+eefX4pvCimtiEDxBMr3zKn4OWlPERABERCBGiNAMNmzzz6bNmuUuUrk
6sUSi6AkYoUtpWB53XTTTZ3Sy7lMnDjR+QhvueWW7j0pQwUWXqy9BPLdeuutLqDupJNOcsruM888
Y84+++yMUyQjxq677mr+9a9/md69e5vDDz88Y19tEAERKIyALL6F8VJvERABERCBGAEexZ922mmx
VuPSho0YMSKtvRwNKItIu3bt3Hsp/1Bd7tVXX3V+wVH/ZRTfZZZZxtx7770GC++qq64aHharLlkk
WrRoEbZtscUWZubMmebqq682TzzxRNgeXxg+fLjZfffdnSV5jjnmiG/WugiIQBMIyOLbBHjaVQRE
QAQanQB5erFK/vnnnykoCGK7/vrrnQU2ZUOZVj788EM38tJLL13yI5x33nluzEMOOSRlbHx2t9lm
GxMEgbP8Rjfi+hBVev22Ll26uEWU4kyywQYbmDFjxhgpvZkIqV0Eiicgi2/x7LSnCIiACDQ8ASy6
SS4Oxx9/vPNlrRSgRRZZxB2KILdSCrmIcVtAXn75ZVcIIzo+hTEQ3BqyCb7P9P34449dt6TCHn5/
3ClQqiUiIAKlJyDFt/RMNaIIiIAINAQBlD38VuPSsWNHM2TIkHhzWdepyIaQWaKUEh0v2zl9/vnn
aYfFPWLkyJHm9ttvN999913adjWIgAhUnoAU38oz1xFFQAREoC4I9O3bNy2LA4Uj8GFNesxfzpNe
fvnl3fDffPONs6y2adOmJIeLZl4go8PCCy+cOG60SAYd7rvvPheghrsCgWqkMOP1wgsvmIMOOihx
DDWKgAiUn4AU3/Iz1hFEQAREoO4I3H///U65i58YVdsy5amN9y3l+oYbbhgOd9ZZZxkCxEohyy23
nFPiKYU811xzmc6dO+cclr577LGH+euvv8w999yTUizDB+HlHEQdREAEykJg9rKMqkFFQAREQATq
lgBlf/v165d2fksuuaQ555xz0tor0bD++uubnj17ukNRwY0sC6UQLLZkaEAIOMtHyMVLgQusxdtu
u20+u6iPCIhAhQhI8a0QaB1GBERABOqFwLnnnmt8FoXoOV188cVlrc4WPVbSMrmECQrD0rrxxhu7
EslJ/aiORlGNfJX0Sy65xMw555yu+hw+u0kSLdyBuwdC0YspU6aE3b/++mtDSWfkyy+/dMpxuFEL
IiACFSEgxbcimHUQERABEagPAmQlSFIYu3btGlpcm+tMyak7fvx4g+WZbAx77723K2ZBxTXmfMwx
xxgqrbEdlwzyD+cjq6++utsf6y+lg3HlIKiPMXfbbTfTtm1bE011RinjZZdd1g3drVs35/aAn+8K
K6zg/I/xB6YoBsUtosFz+cxFfURABJpGQD6+TeOnvUVABESgoQiccMIJBleHqOD7SpndahDy6uLm
gFJ5xx13mOnTp7tXdG6LLbaYc9WIKqvR7UnL/fv3N506dTJHHnmkS9/29NNPu24E8a200kqG3Lte
5plnHlflDcX7rbfeclkdFlhgAad4Dx482GV6wFWEwhiwu+yyy/yuehcBESgzgdls4m2ew3Qu83E0
vAiIgAiIQI0ToNQuLgRxGThwoMH9odqEwhKkXMOyi2sBlt6lllrKVZRD4SxWcJV44403XHEOrLi4
QSTJP//8Y9555x1DsBtW42hBCnID4wpB6jeKfUhEQAQqQ0CKb2U46ygiIAIiUPMECPKKF6to3bq1
IVNBNO1XzZ+oTkAERKBuCeg2s24vrU5MBERABEpHYNy4cWlKL6MPHTpUSm/pMGskERCBMhOQxbfM
gDW8CIiACNQ6AQKxVlllFWfZjZ4Lj+8p46tH9VEqWhYBEahmAsmOSdU8Y81NBERABESgogSuvfba
NKWXCZx33nllV3op9YuPLtkkHn74YUNpYNKFEVD273//u6IcqvFgBNKRMcKXbK7GOWpOIlBNBGTx
raarobmIgAiIQJURIIND+/btncIZnVqXLl3MpEmTok0lWZ41a5ahKtzEiRPNk08+6RTekgxcx4Og
/D722GOGIh4SERCB7ARk8c3OR1tFQAREoKEJXHHFFWlKLxbXpFy+xYL673//68ofjx492jz00EMu
x22xYzXiflSJw/qOH7ZEBEQgOwEpvtn5aKsIiIAINCwBqpENGzYs7fx5tL7uuuumtRfaQIU13Cio
uPbBBx8Uurv6i4AIiEDBBKT4FoxMO4iACIhAYxCgsMI333yTcrLkoh0yZEhKWzErFJcYNGiQFN5i
4MX2wdWBXMoSERCB3ASk+OZmpB4iIAIi0HAEKK5w4YUXpp33Pvvs4wLL0jbk2UCJXsoFP/roo3nt
gaJNkQhev/76q+GxPtXSVl55ZQW3WYIKbsvrY6ROIhASkOIbotCCCIiACIiAJ3DppZcaAs2iQoWy
0047LdpU0PLw4cMNJY9RYLNJ27ZtXaaCbt26uUpx8803X7bu2iYCIiACeROQ4ps3KnUUAREQgcYg
gLX34osvTjvZAw44wCy33HJp7bkaUKB79erlAtiy9d1mm21Mv379DO/KDZyNlLaJgAgUS0CKb7Hk
tJ8IiIAI1CmByy+/PM3aO9dcc5lTTjml4DN+9dVXzU477ZQ1LdlWW23lskSsvfbaBY+vHURABESg
EAIqWVwILfUVAREQgTonQCaHiy66KO0ssfa2a9curT1bw1133WU22mijjEov4913333mkUceMVJ6
s5HUNhEQgVIRkOJbKpIaRwREQATqgMCVV15pvv3225Qzwbf3pJNOSmnLtUJGiJ49e2b05z388MPN
66+/brp3755rKG0XAREQgZIRkKtDyVBqIBEQARGobQJkTLjgggvSTmK//fYzyy67bFp7pobBgweb
oUOHJm6mzPD1118vhTeRjhpFQATKTUCKb7kJa3wREAERqBEC11xzjfnqq69SZks6sUKsvccdd1xi
YByDrrHGGuaee+4xyyyzTMoxtCICIiAClSIgV4dKkdZxREAERKCKCVBFjQpqcdljjz1Mhw4d4s2J
6/3798+o9O64447m6aefltKbSE6NIiAClSIgxbdSpHUcERABEahiAjfeeKP59NNPU2Y422yzmZNP
PjmlLdMKVuGkoDj6H3rooYZAN+XjzURP7SIgApUiIMW3UqR1HBEQARGoUgL//e9/zbnnnps2u513
3tlVSEvbEGugwtuwYcNirf9bpWAFAXO4TEhEQAREoLkJSPFt7iug44uACIhAMxO48847zbvvvps2
i3x8e7EUDxgwIG1fGk499VSXnzdxY4UbgyCo8BF1uGwEXnjhBUP+5l133TVbt7JsO+qoo9yx8TeP
SnPOKToPLZeXgILbystXo4uACIhA1RNIstZuvfXWZt11180698cee8z07t3bJCmVgwYNMmeccUbW
/cu58Y8//nCWZpSZN954w7zzzjuGtGzt27d3Psv+fd999zVzzz13OadSFWMTdPjdd9+567Xxxhun
zQk+55xzjms/66yzzBJLLJHW55lnnjFXX321q6y35557mtdee825t8w///yGoieFyDfffGMmTZpk
FllkkUJ2S+w7depUM3LkSLeNz90KK6yQ2M830p8XhVWiUso5RcfVcnURkOJbXddDsxEBERCBihKY
MGGCefnll9OOmcva+9Zbb5lddtnF/Pnnn2n7Hnnkkebss89Oa69UA0rNgQceaN588013SBTbVVdd
1RDA9+GHH5pXXnklnMq2225r2rZtG67X6wLnjYVz3nnnNUmK70MPPWTGjBnjTh9L7N57752G4oYb
bnB9fO7lGTNmuHWU10IV37TBm9CAq83tt9/uRlh44YUz+po34RDatY4IyNWhji6mTkUEREAECiWQ
ZO3dcMMNzeabb55xKApcbL/99ub7779P64MlkOIVzSUod1SLQ+ldfvnlXSaJn376yWD5ReH94Ycf
zHvvvWcuueQS97i7Wn2PZ86c6fymjz76aIMPdlNlyy23dENMnjw5cagnnngibCf7RpI8/PDDzmre
tWtXt3nppZc2hx12mLvJiPe/9957XRo83sspcBo/fnx4CFxvkm7Gwg51tlDqz0md4Uk+HfuIaop9
SURABERABBqMwHPPPYfja9rLKo8ZSfz9999Bly5d0vZhnE033TT4/fffM+5b7g2//vprYHMEu7lZ
xT2wSm65D1m28V966aWQMcybKtYtIRzvs88+SxtuscUWC7evueaaadvtjYTbbq3FaduSGnbYYQfX
/5RTTknaHDz44INuu7UWJ27Pt9Gm4HPjLLnkku6dz+Ftt92Wdff111/f9bVW6pR+pZpTyqBlXin1
56TM062K4eXqkHw/oFYREAERqHsC3qczeqKrrLKKsUpLtCll+fjjjzePPvpoShsr+FVieWvRokXa
tko1kIf4448/NqRhu/TSS80CCyxQ0KF//PFH8/777zur5uqrr+72tUqiwR1krbXWcq/ogD///LN5
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
/xPWGTYsAao4FvoZJ60ZJdi9kMd37NixGZVfFGW2S0RABESgkQnUjOJLXkgieqdPn26uvPLKRr5m
DXHuRHVzzRHSN0lEoJ4JzD777K5EcKHniH9wtJiFV3579OiRNhQpzih7rOIDaWjUIAIi0EAEakbx
JSVOv3793KU5+uijXSR0A12nhjpVyh9j4X///fedtfe6665rqPPXyTYmgZ49expSnBUilAwmJVpU
UH5xe0gKeEP53Xvvvc0999wT3UXLIiACItAwBGpG8eWKXHjhhWaTTTZxCd/32Wcfs+OOO5oHH3zQ
oChJapsA+TpJcH/uueeajh07mieeeMJgBZs4caKZe+65a/vkNHsRyINAsVbfSZMmGUogRwWf39tu
u81079492uyW8Z3ffffd3Xdn2kY1iIAIiECdE5jN+stOsefYuZbOE384atLL17eWrlphcyWvJ9Wp
kkqzFjaSeotA7RAgEI0CDe+8805BkyYtGvvwHhVuKLH8Pvzww9Fmt0xQHX70W2+9ddo2NYiACIhA
vRKoKYuvvwjUon/rrbdM165dzfzzz29Igi6pfQI8oiWJ/ZlnnukS+kvprf1rqjMojABWX1KVFSo8
9Tr++OPTdkO5vfvuu913ZXyjV4onT54c36R1ERABEahbAjVp8a3bq6ETEwERaHgCuCK0b9/efPrp
pwWzePzxx81mm22Wth++wN26dTNsj8u8887r3B4233zz+Cati4AIiEDdEahJi2/dXQWdkAiIgAj8
HwH8c5Ost3FA9IvLEUccYVCc44JyS3njjTfeOL7JoBRvv/325sknn0zbpgYREAERqDcCUnzr7Yrq
fERABGqeQO/evc1iiy2W9TySFFwK/FxyySWJ++EWRjDwBhtskLb9l19+cRbhp556Km2bGkRABESg
nghI8a2nq6lzEQERqAsCWGgpZZxLFl544bQuQ4YMMZ999llaOw2khZwwYYJZd91107ZTHny77bYz
Un7T0KhBBESgjghI8a2ji6lTEQERqB8CuC1QtTCbfPfddy7tX7QPCuxxxx0XbUpZXnDBBc0jjzxi
1l577ZR2VrzyK7eHNDRqEAERqBMCCm6rkwup0xABEag/AhSnGDVqVNYTIxDugw8+SOtDft8uXbqk
tfuGWbNmue2vvPKKbwrf55tvPucT3Llz57CtFhYGDRpkvvzyy3CqZMkgxVubNm2col8NAXzPPfec
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
gARiIEDDNwZobEICJEACJEACJEACJBA+AjR8w/fOOGMSIAESIAESIAESIIEYCNDwjQEam5AACZAA
CZAACZAACYSPAA3f8L0zzpgESIAESIAESIAESCAGAjR8Y4DGJiRAAiRAAiRAAiRAAuEjQMM3fO+M
MyYBEiABEiABEiABEoiBAA3fGKCxCQmQAAmQAAmQAAmQQPgI0PAN3zvjjEmABEiABEiABEiABGIg
QMM3BmhsQgIkQAIkQAIkQAIkED4CNHzD9844YxIgARIgARIgARIggRgI0PCNARqbkAAJkAAJkAAJ
kAAJhI8ADd/wvTPOmARIgARIgARIgARIIAYCNHxjgMYmJEACJEACJEACJEAC4SNAwzd874wzJgES
IAESIAESIAESiIEADd8YoLEJCZAACZAACZAACZBA+AjQ8A3fO+OMSYAESIAESIAESIAEYiBAwzcG
aGxCAiRAAiRAAiRAAiQQPgI0fMP3zjhjEiABEiABEiABEiCBGAjQ8I0BGpuQAAmQAAmQAAmQAAmE
jwAN3/C9M86YBEiABEiABEiABEggBgI0fGOAxiYkQAIkQAIkQAIkQALhI0DDN3zvjDMmARIgARIg
ARIgARKIgQAN3xigsQkJkAAJkAAJkAAJkED4CNDwDd8744xJgARIgARIgARIgARiIEDDNwZobEIC
JEACJEACJEACJBA+AjR8w/fOOGMSIAESIAESIAESIIEYCNDwjQEam5AACZAACZAACZAACYSPAA3f
8L0zzpgESIAESIAESIAESCAGAjR8Y4DGJiRAAiRAAiRAAiRAAuEjQMM3fO+MMyYBEiABEiABEiAB
EoiBAA3fGKCxCQmQAAmQAAmQAAmQQPgI0PAN3zvjjEmABEiABEiABEiABGIgQMM3BmhsQgIkQAIk
QAIkQAIkED4CNHzD9844YxIgARIgARIgARIggRgI0PCNARqbkAAJkAAJkAAJkAAJhI8ADd/wvTPO
mARIgARIgARIgARIIAYCNHxjgMYmJEACJEACJEACJEAC4SNAwzd874wzJgESIAESIAESIAESiIHA
/wFNSWHhEPb9AAAAAABJRU5ErkJggg==

------=_Part_6A83C3BB_548A619B.15017666E41
Content-Location: http://www.cs.virginia.edu/~lcc-win32/ccl/ListContainerSourceFiles.png
Content-Transfer-Encoding: base64
Content-Type: image/png

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
u+FK4XHhzRG4iNCIqojJ1e6rD6weXmO5Jm9N31rdtRlrb69TWpe47vJ6yfWs9eciMZFhkTWRX1n+
rErWZBQzqjxqgu3KPsh+zWFw9nPGuA7cIu5ItEN0UfRojEPMvpixWKfY4tjxONe40ri38V7xR+On
EvwTTibMJIYlNiThkyKTLvJkeAm89g2qGzI29PAN+Xl8UbJd8oHkCYGPoCoFSlmb0pwqiywunUI9
4Q/CwTTHtLK0T+mh6ecypDN4GZ2ZBpk7M0eyPLJ+3ojeyN7Ylq2evS17cJPzporN0OaozW1bNLfk
bhne6rn11DbitoRtv+WY5hTlfNgetr0lVyV3a+7QD54/1OZJ5Any+nfY7zj6I/rHuB+7dlrsPLTz
ez4n/06BaUFxwddCduGdn8x+KvlpZlf0rq7dVruP7MHu4e3p2+u091SRdFFW0dA+v32N++n78/d/
OLD+wO3iZcVHDxIPCg+KSnxLmg9pHdpz6GtpbOnDMpeyhnLl8p3lU4c5h3uPMI7UH1U5WnD0y7G4
Y48qPCsaK3Uqi49jj6cdf3ki9ETHzzY/V1cpVRVUfTvJOyk6FXiqvdq6urpGuWZ3LVwrrB2rW1PX
fdrtdHO9cX1FA62h4Aw4Izzz6pfIX/rO+pxtO2dzrv689vnyC9QL+Y1QY2bjRFNsk6g5vLnnovfF
thb7lgu/mvx68pL6pbLLcpd3XyFeyb0yczXr6mQrv3X8Wsy1obb1bU+vr7r+oH1le9cNnxu3bnrc
vN7h3HH1lsOtS7ftbl+8Y3On6a7V3cZOy84Lv1n+dqHLqqvxnvW95m7b7pae5T1Xep16r913u3/z
AfPB3YcrHvb0hfQ96l/TL3rEeTT6OPHx2ydpT6afbh3ADOQ/k3pW/Fz5eeXv+r83iKxElwfdBjtf
BL14OsQeev1Hyh9fh3NfUl4Wj6iNVI+aj14a8xjrfrX61fBr/uvp8bw/pf8sf6P35vxfjL86J1ZN
DL8VvJ15V/he8f3JD8s+tE0GTD7/mPRxeir/k+KnU59tPnd8CfsyMp3+Ffe15Jv+t5bvPt8HZpJm
ZvgsAWtuFUAhAUdHA/DuJACUcACo3QAQJeb33TlB8zv6HIG/4/mdeE5WAJzeCsDsKmfRCsAZhHUQ
piARwAAgmAFgCwtx/FMp0Rbm814kZFfBFM/MvEd2RJw+AN/6Z2amm2ZmvlUhzT4BoPXj/J49K6k6
AI6FmFqH+d4yflkB/kP/AGqz9Q9MUp2oAAAgAElEQVR4nOzdeVxN+f8H8Ff7ohKRkFLZsmQrmWyN
JGTJMhnLMAwzdsb6HRNj7GP4DlnKNsToi7I01rE01iSkJFvRSFKjTdq0nd8fPbo/V7e9u1Sv5+Ph
8eB8PudzXqd7b+5938/5HCVBEAQQERERERERESkoZXkHICIiIiIiIiIqCYsXRERERERERKTQWLwg
IiIiIiIiIoXG4gURERERERERKTQWL4iIiIiIiIhIobF4QUREREREREQKjcULIiIiIiIiIlJoLF4Q
ERERERERkUJj8YKIiIiIiIiIFBqLF0RERERERESk0Fi8ICIiIiIiIiKFxuIFERERERERESk0Fi+I
iIiIiIiISKGxeEFERERERERECo3FCyIiIiIiIiJSaCxeEBEREREREZFCY/GCiIiIiIiIiBQaixdE
REREREREpNBYvCAiIiIiIiIihcbiBREREREREREpNBYviIiIiIiIiEihsXhBRERERERERAqNxQsi
IiIiIiIiUmgsXhARERERERGRQmPxgoiIiIiIiIgUGosXRERERERERKTQWLwgIiIiIiIiIoXG4gUR
ERERERERKTQWL4iIiIiIiIhIobF4QUREREREREQKjcULIiIiIiIiIlJoLF4QERERERERkUJj8YKI
iIiIiIiIFBqLF0RERERERESk0Fi8ICIiIiIiIiKFxuIFERERERERESk0Fi+IiIiIiIiISKGxeEFE
RERERERECo3FCyIiIiIiIiJSaCxeEBEREREREZFCY/GCiIiIiIiIiBSaqrwDEBERERGVxZs3bxAc
HIzExERkZ2dDEAR5RyKiKqKkpAQNDQ0YGBiga9euaNSokbwjkYJREvhbn4iIiIgU2Lt37/Dnn38i
JSVF3lGISEbq1asHFxcX6OjoyDsKKQgWL4iIiIhIYcXExMDPzw/5+flQVlaGhYUFmjVrBm1tbSgp
Kck7HhFVEUEQkJ6ejlevXuH58+cQBAHKysoYOXIkjIyM5B2PFACLF0RERESkkNLT07F//37k5+fD
0NAQAwYMQN26deUdi4ikLDk5GefPn0dCQgJUVFQwefJkaGpqyjsWyRmLF3Lyzz//IC4uDunp6fKO
QiRTqqqq0NfXR8uWLaGtrS3vOEREpMB8fHwQFxcHAwMDjBo1Curq6vKOREQy8uHDB/j4+CA5ORnG
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
CyIiIiIiIiJSaCxeEBEREREREZFCY/GCiIiIiIiIiBQaixdEREREREREpNBYvCAiIiIiIiIihcbi
BREREREREREpNBYviIiIiIiIiEihsXhBRERERERERAqNxQsiIiIiIiIiUmgsXhARERERERGRQmPx
goiIiIiIiIgUGosXRERERERERKTQWLwgIiIiIiIiIoXG4gURERERERERKTQWL4iIiIiIiIhIobF4
QUREREREREQKjcULIiIiIiIiIlJoLF4QERERERERkUJj8YKIiIiIiIiIFBqLF0RERERERESk0Fi8
ICIiIiIiIiKFxuIFERERERERESk0Fi+IiIiIiIiISKGxeEFERERE1Urr1q2hra2NW7duyTsKERHJ
CIsXRERERFStZGZmIjMzE/n5+WLbDx8+jKZNm+LLL7+UUzIiIpIWFi+IiIiIqEbIyMhAbGwsEhMT
5R2FiIiqGIsXRERERFQjDBkyBIGBgdi6dWulxhkzZgyMjIzg5+dXRcmIiKiyVOUdgIiIiIioKjRs
2BANGzas9DgRERGIj48vclkKERHJD2deEBEREVGN8Pfff8PV1RWrV68u0pabm4s9e/bA3t4epqam
aNOmDRwdHeHp6Snq8/DhQ7i6uuLFixcAgI0bN8LV1RWurq64du1amXPk5ubC3d0do0aNQtu2bWFh
YYG+ffti8uTJSEtLq/yJEhHVQixeEBEREVGNEBUVBR8fH1y9erVI26xZszB16lQEBQXBzMwMenp6
uHnzJq5fvy7qk5ycDH9/f7x//x4AEBYWBn9/f/j7++PNmzdlyhAREQEbGxvMnTsXJ06cAAA0adIE
9+/fx759+5CRkVEFZ0pEVPvwshEiIiIiqtESEhKwc+dOqKmp4enTp2jWrBkAIC8vD0lJSaJ+vXr1
QkJCAqytrXHv3j14eXlh+PDhZT6OIAiYNGkSQkJC0KxZM5w4cQJdu3YVtUdHR6N+/fpVd2JERLUI
ixdEREREVKO9ffsWAKCnpye2JoaKikqVrJFRyMfHBzdv3gQA7N+/X6xwAQAmJiZVdiwiotqGl40Q
ERERUY1maWmJtm3bIjExEY6OjggNDZXKcQICAgAAHTp0QN++faVyDCKi2orFCyIiIiKq8bZv346m
TZvixo0b6NSpExwdHUXFhqry9OlTAECbNm2qdFwiImLxgoiIiIhqAXt7ezx8+BBTp06FhoYGLl26
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
SURBVMXF4YMPPsD333/fqn179eqF4OBgBAcHIyAgAP3792+nKOUpLy8PixYtQkREBLy8vNC7d2/c
vHkT8fHxiI2NhVKpxNWrV+Hh4WHuUPV01rjbU05ODv72t79h586dqKqqarKdj48PDhw48NR91js7
fuafPExeEBERET2lHj58iM8++wzr16/HnTt3jDqGk5MTPD09oVar0bdvXygUCty9exc2NjZwd3eX
7WPjxrp8+TKioqIMTpvp7OyMpUuXdkgdiNbqrHG3laWlJby9vdGrVy/cvXsXFy5cQFpaGpKSkpqc
UUNHoVBg+fLlWL9+fYuLOtbW1kKr1UrLo/+uq6vT+1n377q6OgghpHVCCGkB/jerS1FRESorK9Gr
V69WTXH6NLpw4QKWLl1q8DPfp08frFq16omvEfGo3r17w9XV1dxhGI3JCyIiIqKn3E8//YSYmBh8
+umnKC0tNXc4RCanVCoNDmKbYmlpCQcHB1hbW+slHwwtugRFa45PZC7Lli3Dxo0bzR2GUZi8ICIi
IiIAwIMHDxAXF4e//vWvuHbtmrnDISKidpCamooJEyaYO4xWa31JUyIiIiJ6InXt2hWLFy9Gbm4u
vvzyS7z66qtmmVGCiIjaT0FBgblDMAqfvCAiIiKiJpWXl+PIkSNITEzE6dOnUVNTY+6QiIjISHZ2
drh69Sr69Olj7lBajckLIiIiImqRyspKnDp1CqmpqcjMzMTly5ebnFqS6GlkYWEBlUoFCwuLxy5K
pRJKpVL6WaFQSOsUCoW0AJAK4ZaUlECr1cLS0hLPPfccnnnmGTNfMXUmTk5O+PDDD+Hr62vuUIzC
5AURERERGeXhw4f49ttvkZubi8LCQly7dg3nz5/H3bt3IYRAz5494ebmBgsLC3OHSk+hBw8e4N69
e1Cr1Zg9ezaee+65RokB3aJLGjRcdEmFliQiVCoVlEq+kU/Unpi8ICIiIiIiIiJZY3qQiIiIiIiI
iGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIi
kjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI
1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZ
Y/KCiIiIiIiIiGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSN
yQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIikjUm
L4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8
ICIiIiIiIiJZY/KCiIiIiIiIiGSNyQsiIiIiIiIikjUmL4iIiIiIiIhI1pi8ICIiIiIiIiJZY/KC
iIiIiIiIiGSNyQsiIiIiIiIikjUVgGRzB0FERERERERE1JT/B7j/hHnRIvxSAAAAAElFTkSuQmCC

------=_Part_6A83C3BB_548A619B.15017666E41--
